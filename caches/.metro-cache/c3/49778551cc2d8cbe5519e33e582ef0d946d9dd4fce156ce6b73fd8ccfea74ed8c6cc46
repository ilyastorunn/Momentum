{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":87,"index":87}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"./integrations/userInteraction","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":88},"end":{"line":2,"column":74,"index":162}}],"key":"8dewHsfUZNeqbY/6RcUvFbG/QmM=","exportNames":["*"]}},{"name":"./ops","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":163},"end":{"line":3,"column":34,"index":197}}],"key":"M+FxSKzQuWtbrcOdJKtw4JTTrj4=","exportNames":["*"]}},{"name":"./origin","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":198},"end":{"line":4,"column":56,"index":254}}],"key":"gjqB2ZMKB4umzeBLbntsA0M0Xog=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GESTURE_POSTFIX_LENGTH = exports.DEFAULT_BREADCRUMB_TYPE = exports.DEFAULT_BREADCRUMB_CATEGORY = exports.ACTION_GESTURE_FALLBACK = void 0;\n  exports.sentryTraceGesture = sentryTraceGesture;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _userInteraction = require(_dependencyMap[1], \"./integrations/userInteraction\");\n  var _ops = require(_dependencyMap[2], \"./ops\");\n  var _origin = require(_dependencyMap[3], \"./origin\");\n  const DEFAULT_BREADCRUMB_CATEGORY = exports.DEFAULT_BREADCRUMB_CATEGORY = 'gesture';\n  const DEFAULT_BREADCRUMB_TYPE = exports.DEFAULT_BREADCRUMB_TYPE = 'user';\n  const GESTURE_POSTFIX_LENGTH = exports.GESTURE_POSTFIX_LENGTH = 'GestureHandler'.length;\n  const ACTION_GESTURE_FALLBACK = exports.ACTION_GESTURE_FALLBACK = 'gesture';\n  /**\n   * Patches React Native Gesture Handler v2 Gesture to start a transaction on gesture begin with the appropriate label.\n   * Example: ShoppingCartScreen.dismissGesture\n   */\n  function sentryTraceGesture(\n  /**\n   * Label of the gesture to be used in transaction name.\n   * Example: dismissGesture\n   */\n  label, gesture) {\n    const gestureCandidate = gesture;\n    if (!gestureCandidate) {\n      _core.logger.warn('[GestureTracing] Gesture can not be undefined');\n      return gesture;\n    }\n    if (!gestureCandidate.handlers) {\n      _core.logger.warn('[GestureTracing] Can not wrap gesture without handlers. If you want to wrap a gesture composition wrap individual gestures.');\n      return gesture;\n    }\n    if (!label) {\n      _core.logger.warn('[GestureTracing] Can not wrap gesture without name.');\n      return gesture;\n    }\n    const name = gestureCandidate.handlerName.length > GESTURE_POSTFIX_LENGTH ? gestureCandidate.handlerName.substring(0, gestureCandidate.handlerName.length - GESTURE_POSTFIX_LENGTH).toLowerCase() : ACTION_GESTURE_FALLBACK;\n    const originalOnBegin = gestureCandidate.handlers.onBegin;\n    gesture.handlers.onBegin = event => {\n      const span = (0, _userInteraction.startUserInteractionSpan)({\n        elementId: label,\n        op: `${_ops.UI_ACTION}.${name}`\n      });\n      if (span) {\n        span.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, _origin.SPAN_ORIGIN_AUTO_INTERACTION);\n      }\n      addGestureBreadcrumb(`Gesture ${label} begin.`, {\n        event,\n        name\n      });\n      if (originalOnBegin) {\n        originalOnBegin(event);\n      }\n    };\n    const originalOnEnd = gestureCandidate.handlers.onEnd;\n    gesture.handlers.onEnd = event => {\n      addGestureBreadcrumb(`Gesture ${label} end.`, {\n        event,\n        name\n      });\n      if (originalOnEnd) {\n        originalOnEnd(event);\n      }\n    };\n    return gesture;\n  }\n  function addGestureBreadcrumb(message, options) {\n    const {\n      event,\n      name\n    } = options;\n    const crumb = {\n      message,\n      level: 'info',\n      type: DEFAULT_BREADCRUMB_TYPE,\n      category: DEFAULT_BREADCRUMB_CATEGORY\n    };\n    if (event) {\n      const data = {\n        gesture: name\n      };\n      for (const key of Object.keys(GestureEventKeys)) {\n        const eventKey = GestureEventKeys[key];\n        if (eventKey in event) {\n          data[eventKey] = event[eventKey];\n        }\n      }\n      crumb.data = data;\n    }\n    (0, _core.addBreadcrumb)(crumb);\n    _core.logger.log(`[GestureTracing] ${crumb.message}`);\n  }\n  /**\n   * Selected keys from RNGH 2 Gesture Event API.\n   * We only want to send relevant data to save on payload size.\n   * @hidden\n   */\n  const GestureEventKeys = {\n    NUMBER_OF_POINTERS: 'numberOfPointers',\n    NUMBER_OF_TOUCHES: 'numberOfTouches',\n    FORCE: 'force',\n    FORCE_CHANGE: 'forceChange',\n    ROTATION: 'rotation',\n    ROTATION_CHANGE: 'rotationChange',\n    SCALE: 'scale',\n    SCALE_CHANGE: 'scaleChange',\n    DURATION: 'duration',\n    VELOCITY: 'velocity',\n    VELOCITY_X: 'velocityX',\n    VELOCITY_Y: 'velocityY'\n  };\n});","lineCount":113,"map":[[7,2,1,0],[7,6,1,0,"_core"],[7,11,1,0],[7,14,1,0,"require"],[7,21,1,0],[7,22,1,0,"_dependencyMap"],[7,36,1,0],[8,2,2,0],[8,6,2,0,"_userInteraction"],[8,22,2,0],[8,25,2,0,"require"],[8,32,2,0],[8,33,2,0,"_dependencyMap"],[8,47,2,0],[9,2,3,0],[9,6,3,0,"_ops"],[9,10,3,0],[9,13,3,0,"require"],[9,20,3,0],[9,21,3,0,"_dependencyMap"],[9,35,3,0],[10,2,4,0],[10,6,4,0,"_origin"],[10,13,4,0],[10,16,4,0,"require"],[10,23,4,0],[10,24,4,0,"_dependencyMap"],[10,38,4,0],[11,2,5,7],[11,8,5,13,"DEFAULT_BREADCRUMB_CATEGORY"],[11,35,5,40],[11,38,5,40,"exports"],[11,45,5,40],[11,46,5,40,"DEFAULT_BREADCRUMB_CATEGORY"],[11,73,5,40],[11,76,5,43],[11,85,5,52],[12,2,6,7],[12,8,6,13,"DEFAULT_BREADCRUMB_TYPE"],[12,31,6,36],[12,34,6,36,"exports"],[12,41,6,36],[12,42,6,36,"DEFAULT_BREADCRUMB_TYPE"],[12,65,6,36],[12,68,6,39],[12,74,6,45],[13,2,7,7],[13,8,7,13,"GESTURE_POSTFIX_LENGTH"],[13,30,7,35],[13,33,7,35,"exports"],[13,40,7,35],[13,41,7,35,"GESTURE_POSTFIX_LENGTH"],[13,63,7,35],[13,66,7,38],[13,82,7,54],[13,83,7,55,"length"],[13,89,7,61],[14,2,8,7],[14,8,8,13,"ACTION_GESTURE_FALLBACK"],[14,31,8,36],[14,34,8,36,"exports"],[14,41,8,36],[14,42,8,36,"ACTION_GESTURE_FALLBACK"],[14,65,8,36],[14,68,8,39],[14,77,8,48],[15,2,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,2,13,7],[19,11,13,16,"sentryTraceGesture"],[19,29,13,34,"sentryTraceGesture"],[20,2,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,2,18,0,"label"],[24,7,18,5],[24,9,18,7,"gesture"],[24,16,18,14],[24,18,18,16],[25,4,19,4],[25,10,19,10,"gestureCandidate"],[25,26,19,26],[25,29,19,29,"gesture"],[25,36,19,36],[26,4,20,4],[26,8,20,8],[26,9,20,9,"gestureCandidate"],[26,25,20,25],[26,27,20,27],[27,6,21,8,"logger"],[27,18,21,14],[27,19,21,15,"warn"],[27,23,21,19],[27,24,21,20],[27,71,21,67],[27,72,21,68],[28,6,22,8],[28,13,22,15,"gesture"],[28,20,22,22],[29,4,23,4],[30,4,24,4],[30,8,24,8],[30,9,24,9,"gestureCandidate"],[30,25,24,25],[30,26,24,26,"handlers"],[30,34,24,34],[30,36,24,36],[31,6,25,8,"logger"],[31,18,25,14],[31,19,25,15,"warn"],[31,23,25,19],[31,24,25,20],[31,149,25,145],[31,150,25,146],[32,6,26,8],[32,13,26,15,"gesture"],[32,20,26,22],[33,4,27,4],[34,4,28,4],[34,8,28,8],[34,9,28,9,"label"],[34,14,28,14],[34,16,28,16],[35,6,29,8,"logger"],[35,18,29,14],[35,19,29,15,"warn"],[35,23,29,19],[35,24,29,20],[35,77,29,73],[35,78,29,74],[36,6,30,8],[36,13,30,15,"gesture"],[36,20,30,22],[37,4,31,4],[38,4,32,4],[38,10,32,10,"name"],[38,14,32,14],[38,17,32,17,"gestureCandidate"],[38,33,32,33],[38,34,32,34,"handlerName"],[38,45,32,45],[38,46,32,46,"length"],[38,52,32,52],[38,55,32,55,"GESTURE_POSTFIX_LENGTH"],[38,77,32,77],[38,80,33,10,"gestureCandidate"],[38,96,33,26],[38,97,33,27,"handlerName"],[38,108,33,38],[38,109,34,13,"substring"],[38,118,34,22],[38,119,34,23],[38,120,34,24],[38,122,34,26,"gestureCandidate"],[38,138,34,42],[38,139,34,43,"handlerName"],[38,150,34,54],[38,151,34,55,"length"],[38,157,34,61],[38,160,34,64,"GESTURE_POSTFIX_LENGTH"],[38,182,34,86],[38,183,34,87],[38,184,35,13,"toLowerCase"],[38,195,35,24],[38,196,35,25],[38,197,35,26],[38,200,36,10,"ACTION_GESTURE_FALLBACK"],[38,223,36,33],[39,4,37,4],[39,10,37,10,"originalOnBegin"],[39,25,37,25],[39,28,37,28,"gestureCandidate"],[39,44,37,44],[39,45,37,45,"handlers"],[39,53,37,53],[39,54,37,54,"onBegin"],[39,61,37,61],[40,4,38,4,"gesture"],[40,11,38,11],[40,12,38,12,"handlers"],[40,20,38,20],[40,21,38,21,"onBegin"],[40,28,38,28],[40,31,38,32,"event"],[40,36,38,37],[40,40,38,42],[41,6,39,8],[41,12,39,14,"span"],[41,16,39,18],[41,19,39,21],[41,23,39,21,"startUserInteractionSpan"],[41,64,39,45],[41,66,39,46],[42,8,39,48,"elementId"],[42,17,39,57],[42,19,39,59,"label"],[42,24,39,64],[43,8,39,66,"op"],[43,10,39,68],[43,12,39,70],[43,15,39,73,"UI_ACTION"],[43,29,39,82],[43,33,39,86,"name"],[43,37,39,90],[44,6,39,93],[44,7,39,94],[44,8,39,95],[45,6,40,8],[45,10,40,12,"span"],[45,14,40,16],[45,16,40,18],[46,8,41,12,"span"],[46,12,41,16],[46,13,41,17,"setAttribute"],[46,25,41,29],[46,26,41,30,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[46,64,41,62],[46,66,41,64,"SPAN_ORIGIN_AUTO_INTERACTION"],[46,102,41,92],[46,103,41,93],[47,6,42,8],[48,6,43,8,"addGestureBreadcrumb"],[48,26,43,28],[48,27,43,29],[48,38,43,40,"label"],[48,43,43,45],[48,52,43,54],[48,54,43,56],[49,8,43,58,"event"],[49,13,43,63],[50,8,43,65,"name"],[51,6,43,70],[51,7,43,71],[51,8,43,72],[52,6,44,8],[52,10,44,12,"originalOnBegin"],[52,25,44,27],[52,27,44,29],[53,8,45,12,"originalOnBegin"],[53,23,45,27],[53,24,45,28,"event"],[53,29,45,33],[53,30,45,34],[54,6,46,8],[55,4,47,4],[55,5,47,5],[56,4,48,4],[56,10,48,10,"originalOnEnd"],[56,23,48,23],[56,26,48,26,"gestureCandidate"],[56,42,48,42],[56,43,48,43,"handlers"],[56,51,48,51],[56,52,48,52,"onEnd"],[56,57,48,57],[57,4,49,4,"gesture"],[57,11,49,11],[57,12,49,12,"handlers"],[57,20,49,20],[57,21,49,21,"onEnd"],[57,26,49,26],[57,29,49,30,"event"],[57,34,49,35],[57,38,49,40],[58,6,50,8,"addGestureBreadcrumb"],[58,26,50,28],[58,27,50,29],[58,38,50,40,"label"],[58,43,50,45],[58,50,50,52],[58,52,50,54],[59,8,50,56,"event"],[59,13,50,61],[60,8,50,63,"name"],[61,6,50,68],[61,7,50,69],[61,8,50,70],[62,6,51,8],[62,10,51,12,"originalOnEnd"],[62,23,51,25],[62,25,51,27],[63,8,52,12,"originalOnEnd"],[63,21,52,25],[63,22,52,26,"event"],[63,27,52,31],[63,28,52,32],[64,6,53,8],[65,4,54,4],[65,5,54,5],[66,4,55,4],[66,11,55,11,"gesture"],[66,18,55,18],[67,2,56,0],[68,2,57,0],[68,11,57,9,"addGestureBreadcrumb"],[68,31,57,29,"addGestureBreadcrumb"],[68,32,57,30,"message"],[68,39,57,37],[68,41,57,39,"options"],[68,48,57,46],[68,50,57,48],[69,4,58,4],[69,10,58,10],[70,6,58,12,"event"],[70,11,58,17],[71,6,58,19,"name"],[72,4,58,24],[72,5,58,25],[72,8,58,28,"options"],[72,15,58,35],[73,4,59,4],[73,10,59,10,"crumb"],[73,15,59,15],[73,18,59,18],[74,6,60,8,"message"],[74,13,60,15],[75,6,61,8,"level"],[75,11,61,13],[75,13,61,15],[75,19,61,21],[76,6,62,8,"type"],[76,10,62,12],[76,12,62,14,"DEFAULT_BREADCRUMB_TYPE"],[76,35,62,37],[77,6,63,8,"category"],[77,14,63,16],[77,16,63,18,"DEFAULT_BREADCRUMB_CATEGORY"],[78,4,64,4],[78,5,64,5],[79,4,65,4],[79,8,65,8,"event"],[79,13,65,13],[79,15,65,15],[80,6,66,8],[80,12,66,14,"data"],[80,16,66,18],[80,19,66,21],[81,8,67,12,"gesture"],[81,15,67,19],[81,17,67,21,"name"],[82,6,68,8],[82,7,68,9],[83,6,69,8],[83,11,69,13],[83,17,69,19,"key"],[83,20,69,22],[83,24,69,26,"Object"],[83,30,69,32],[83,31,69,33,"keys"],[83,35,69,37],[83,36,69,38,"GestureEventKeys"],[83,52,69,54],[83,53,69,55],[83,55,69,57],[84,8,70,12],[84,14,70,18,"eventKey"],[84,22,70,26],[84,25,70,29,"GestureEventKeys"],[84,41,70,45],[84,42,70,46,"key"],[84,45,70,49],[84,46,70,50],[85,8,71,12],[85,12,71,16,"eventKey"],[85,20,71,24],[85,24,71,28,"event"],[85,29,71,33],[85,31,71,35],[86,10,72,16,"data"],[86,14,72,20],[86,15,72,21,"eventKey"],[86,23,72,29],[86,24,72,30],[86,27,72,33,"event"],[86,32,72,38],[86,33,72,39,"eventKey"],[86,41,72,47],[86,42,72,48],[87,8,73,12],[88,6,74,8],[89,6,75,8,"crumb"],[89,11,75,13],[89,12,75,14,"data"],[89,16,75,18],[89,19,75,21,"data"],[89,23,75,25],[90,4,76,4],[91,4,77,4],[91,8,77,4,"addBreadcrumb"],[91,27,77,17],[91,29,77,18,"crumb"],[91,34,77,23],[91,35,77,24],[92,4,78,4,"logger"],[92,16,78,10],[92,17,78,11,"log"],[92,20,78,14],[92,21,78,15],[92,41,78,35,"crumb"],[92,46,78,40],[92,47,78,41,"message"],[92,54,78,48],[92,56,78,50],[92,57,78,51],[93,2,79,0],[94,2,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,2,85,0],[99,8,85,6,"GestureEventKeys"],[99,24,85,22],[99,27,85,25],[100,4,86,4,"NUMBER_OF_POINTERS"],[100,22,86,22],[100,24,86,24],[100,42,86,42],[101,4,87,4,"NUMBER_OF_TOUCHES"],[101,21,87,21],[101,23,87,23],[101,40,87,40],[102,4,88,4,"FORCE"],[102,9,88,9],[102,11,88,11],[102,18,88,18],[103,4,89,4,"FORCE_CHANGE"],[103,16,89,16],[103,18,89,18],[103,31,89,31],[104,4,90,4,"ROTATION"],[104,12,90,12],[104,14,90,14],[104,24,90,24],[105,4,91,4,"ROTATION_CHANGE"],[105,19,91,19],[105,21,91,21],[105,37,91,37],[106,4,92,4,"SCALE"],[106,9,92,9],[106,11,92,11],[106,18,92,18],[107,4,93,4,"SCALE_CHANGE"],[107,16,93,16],[107,18,93,18],[107,31,93,31],[108,4,94,4,"DURATION"],[108,12,94,12],[108,14,94,14],[108,24,94,24],[109,4,95,4,"VELOCITY"],[109,12,95,12],[109,14,95,14],[109,24,95,24],[110,4,96,4,"VELOCITY_X"],[110,14,96,14],[110,16,96,16],[110,27,96,27],[111,4,97,4,"VELOCITY_Y"],[111,14,97,14],[111,16,97,16],[112,2,98,0],[112,3,98,1],[113,0,98,2],[113,3]],"functionMap":{"names":["<global>","sentryTraceGesture","gesture.handlers.onBegin","gesture.handlers.onEnd","addGestureBreadcrumb"],"mappings":"AAA;OCY;+BCyB;KDS;6BEE;KFK;CDE;AIC;CJsB"}},"type":"js/module"}]}