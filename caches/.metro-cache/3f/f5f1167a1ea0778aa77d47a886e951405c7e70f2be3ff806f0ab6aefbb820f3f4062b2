{"dependencies":[{"name":"./currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"K7iI+PRtR1yDAq2Cd5P/ht8ORfQ=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":47,"index":95}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":96},"end":{"line":3,"column":49,"index":145}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.profiler = void 0;\n  var _currentScopes = require(_dependencyMap[0], \"./currentScopes.js\");\n  var _debugBuild = require(_dependencyMap[1], \"./debug-build.js\");\n  var _logger = require(_dependencyMap[2], \"./utils-hoist/logger.js\");\n  function isProfilingIntegrationWithProfiler(integration) {\n    return !!integration && typeof integration['_profiler'] !== 'undefined' && typeof integration['_profiler']['start'] === 'function' && typeof integration['_profiler']['stop'] === 'function';\n  }\n  /**\n   * Starts the Sentry continuous profiler.\n   * This mode is exclusive with the transaction profiler and will only work if the profilesSampleRate is set to a falsy value.\n   * In continuous profiling mode, the profiler will keep reporting profile chunks to Sentry until it is stopped, which allows for continuous profiling of the application.\n   */\n  function startProfiler() {\n    const client = (0, _currentScopes.getClient)();\n    if (!client) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('No Sentry client available, profiling is not started');\n      return;\n    }\n    const integration = client.getIntegrationByName('ProfilingIntegration');\n    if (!integration) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('ProfilingIntegration is not available');\n      return;\n    }\n    if (!isProfilingIntegrationWithProfiler(integration)) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('Profiler is not available on profiling integration.');\n      return;\n    }\n    integration._profiler.start();\n  }\n\n  /**\n   * Stops the Sentry continuous profiler.\n   * Calls to stop will stop the profiler and flush the currently collected profile data to Sentry.\n   */\n  function stopProfiler() {\n    const client = (0, _currentScopes.getClient)();\n    if (!client) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('No Sentry client available, profiling is not started');\n      return;\n    }\n    const integration = client.getIntegrationByName('ProfilingIntegration');\n    if (!integration) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('ProfilingIntegration is not available');\n      return;\n    }\n    if (!isProfilingIntegrationWithProfiler(integration)) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.warn('Profiler is not available on profiling integration.');\n      return;\n    }\n    integration._profiler.stop();\n  }\n  const profiler = exports.profiler = {\n    startProfiler,\n    stopProfiler\n  };\n});","lineCount":60,"map":[[6,2,1,0],[6,6,1,0,"_currentScopes"],[6,20,1,0],[6,23,1,0,"require"],[6,30,1,0],[6,31,1,0,"_dependencyMap"],[6,45,1,0],[7,2,2,0],[7,6,2,0,"_debugBuild"],[7,17,2,0],[7,20,2,0,"require"],[7,27,2,0],[7,28,2,0,"_dependencyMap"],[7,42,2,0],[8,2,3,0],[8,6,3,0,"_logger"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,5,0],[9,11,5,9,"isProfilingIntegrationWithProfiler"],[9,45,5,43,"isProfilingIntegrationWithProfiler"],[9,46,6,2,"integration"],[9,57,6,13],[9,59,7,2],[10,4,8,2],[10,11,9,4],[10,12,9,5],[10,13,9,6,"integration"],[10,24,9,17],[10,28,10,4],[10,35,10,11,"integration"],[10,46,10,22],[10,47,10,23],[10,58,10,34],[10,59,10,35],[10,64,10,40],[10,75,10,51],[10,79,11,4],[10,86,11,11,"integration"],[10,97,11,22],[10,98,11,23],[10,109,11,34],[10,110,11,35],[10,111,11,36],[10,118,11,43],[10,119,11,44],[10,124,11,49],[10,134,11,59],[10,138,12,4],[10,145,12,11,"integration"],[10,156,12,22],[10,157,12,23],[10,168,12,34],[10,169,12,35],[10,170,12,36],[10,176,12,42],[10,177,12,43],[10,182,12,48],[10,192,12,58],[11,2,14,0],[12,2,15,0],[13,0,16,0],[14,0,17,0],[15,0,18,0],[16,0,19,0],[17,2,20,0],[17,11,20,9,"startProfiler"],[17,24,20,22,"startProfiler"],[17,25,20,22],[17,27,20,25],[18,4,21,2],[18,10,21,8,"client"],[18,16,21,14],[18,19,21,17],[18,23,21,17,"getClient"],[18,47,21,26],[18,49,21,27],[18,50,21,28],[19,4,22,2],[19,8,22,6],[19,9,22,7,"client"],[19,15,22,13],[19,17,22,15],[20,6,23,4,"DEBUG_BUILD"],[20,29,23,15],[20,33,23,19,"logger"],[20,47,23,25],[20,48,23,26,"warn"],[20,52,23,30],[20,53,23,31],[20,107,23,85],[20,108,23,86],[21,6,24,4],[22,4,25,2],[23,4,27,2],[23,10,27,8,"integration"],[23,21,27,19],[23,24,27,22,"client"],[23,30,27,28],[23,31,27,29,"getIntegrationByName"],[23,51,27,49],[23,52,27,50],[23,74,27,72],[23,75,27,73],[24,4,29,2],[24,8,29,6],[24,9,29,7,"integration"],[24,20,29,18],[24,22,29,20],[25,6,30,4,"DEBUG_BUILD"],[25,29,30,15],[25,33,30,19,"logger"],[25,47,30,25],[25,48,30,26,"warn"],[25,52,30,30],[25,53,30,31],[25,92,30,70],[25,93,30,71],[26,6,31,4],[27,4,32,2],[28,4,34,2],[28,8,34,6],[28,9,34,7,"isProfilingIntegrationWithProfiler"],[28,43,34,41],[28,44,34,42,"integration"],[28,55,34,53],[28,56,34,54],[28,58,34,56],[29,6,35,4,"DEBUG_BUILD"],[29,29,35,15],[29,33,35,19,"logger"],[29,47,35,25],[29,48,35,26,"warn"],[29,52,35,30],[29,53,35,31],[29,106,35,84],[29,107,35,85],[30,6,36,4],[31,4,37,2],[32,4,39,2,"integration"],[32,15,39,13],[32,16,39,14,"_profiler"],[32,25,39,23],[32,26,39,24,"start"],[32,31,39,29],[32,32,39,30],[32,33,39,31],[33,2,40,0],[35,2,42,0],[36,0,43,0],[37,0,44,0],[38,0,45,0],[39,2,46,0],[39,11,46,9,"stopProfiler"],[39,23,46,21,"stopProfiler"],[39,24,46,21],[39,26,46,24],[40,4,47,2],[40,10,47,8,"client"],[40,16,47,14],[40,19,47,17],[40,23,47,17,"getClient"],[40,47,47,26],[40,49,47,27],[40,50,47,28],[41,4,48,2],[41,8,48,6],[41,9,48,7,"client"],[41,15,48,13],[41,17,48,15],[42,6,49,4,"DEBUG_BUILD"],[42,29,49,15],[42,33,49,19,"logger"],[42,47,49,25],[42,48,49,26,"warn"],[42,52,49,30],[42,53,49,31],[42,107,49,85],[42,108,49,86],[43,6,50,4],[44,4,51,2],[45,4,53,2],[45,10,53,8,"integration"],[45,21,53,19],[45,24,53,22,"client"],[45,30,53,28],[45,31,53,29,"getIntegrationByName"],[45,51,53,49],[45,52,53,50],[45,74,53,72],[45,75,53,73],[46,4,54,2],[46,8,54,6],[46,9,54,7,"integration"],[46,20,54,18],[46,22,54,20],[47,6,55,4,"DEBUG_BUILD"],[47,29,55,15],[47,33,55,19,"logger"],[47,47,55,25],[47,48,55,26,"warn"],[47,52,55,30],[47,53,55,31],[47,92,55,70],[47,93,55,71],[48,6,56,4],[49,4,57,2],[50,4,59,2],[50,8,59,6],[50,9,59,7,"isProfilingIntegrationWithProfiler"],[50,43,59,41],[50,44,59,42,"integration"],[50,55,59,53],[50,56,59,54],[50,58,59,56],[51,6,60,4,"DEBUG_BUILD"],[51,29,60,15],[51,33,60,19,"logger"],[51,47,60,25],[51,48,60,26,"warn"],[51,52,60,30],[51,53,60,31],[51,106,60,84],[51,107,60,85],[52,6,61,4],[53,4,62,2],[54,4,64,2,"integration"],[54,15,64,13],[54,16,64,14,"_profiler"],[54,25,64,23],[54,26,64,24,"stop"],[54,30,64,28],[54,31,64,29],[54,32,64,30],[55,2,65,0],[56,2,67,0],[56,8,67,6,"profiler"],[56,16,67,14],[56,19,67,14,"exports"],[56,26,67,14],[56,27,67,14,"profiler"],[56,35,67,14],[56,38,67,17],[57,4,68,2,"startProfiler"],[57,17,68,15],[58,4,69,2,"stopProfiler"],[59,2,70,0],[59,3,70,1],[60,0,70,2],[60,3]],"functionMap":{"names":["<global>","isProfilingIntegrationWithProfiler","startProfiler","stopProfiler"],"mappings":"AAA;ACI;CDS;AEM;CFoB;AGM;CHmB"}},"type":"js/module"}]}