{"dependencies":[{"name":"@sentry-internal/browser-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":100,"index":100}}],"key":"NhwjGxy6N7nYR3SR4JfgASTvmbA=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":101},"end":{"line":2,"column":68,"index":169}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.makeFetchTransport = makeFetchTransport;\n  var _browserUtils = require(_dependencyMap[0], \"@sentry-internal/browser-utils\");\n  var _core = require(_dependencyMap[1], \"@sentry/core\");\n  /**\n   * Creates a Transport that uses the Fetch API to send events to Sentry.\n   */\n  function makeFetchTransport(options, nativeFetch = (0, _browserUtils.getNativeImplementation)('fetch')) {\n    let pendingBodySize = 0;\n    let pendingCount = 0;\n    function makeRequest(request) {\n      const requestSize = request.body.length;\n      pendingBodySize += requestSize;\n      pendingCount++;\n      const requestOptions = {\n        body: request.body,\n        method: 'POST',\n        referrerPolicy: 'origin',\n        headers: options.headers,\n        // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n        // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n        // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n        // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n        // Gotchas:\n        // - `keepalive` isn't supported by Firefox\n        // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n        //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n        //   We will therefore only activate the flag when we're below that limit.\n        // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n        // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n        keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n        ...options.fetchOptions\n      };\n      if (!nativeFetch) {\n        (0, _browserUtils.clearCachedImplementation)('fetch');\n        return (0, _core.rejectedSyncPromise)('No fetch implementation available');\n      }\n      try {\n        // TODO: This may need a `suppressTracing` call in the future when we switch the browser SDK to OTEL\n        return nativeFetch(options.url, requestOptions).then(response => {\n          pendingBodySize -= requestSize;\n          pendingCount--;\n          return {\n            statusCode: response.status,\n            headers: {\n              'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n              'retry-after': response.headers.get('Retry-After')\n            }\n          };\n        });\n      } catch (e) {\n        (0, _browserUtils.clearCachedImplementation)('fetch');\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return (0, _core.rejectedSyncPromise)(e);\n      }\n    }\n    return (0, _core.createTransport)(options, makeRequest);\n  }\n});","lineCount":63,"map":[[6,2,1,0],[6,6,1,0,"_browserUtils"],[6,19,1,0],[6,22,1,0,"require"],[6,29,1,0],[6,30,1,0,"_dependencyMap"],[6,44,1,0],[7,2,2,0],[7,6,2,0,"_core"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,2,7,0],[11,11,7,9,"makeFetchTransport"],[11,29,7,27,"makeFetchTransport"],[11,30,8,2,"options"],[11,37,8,9],[11,39,9,2,"nativeFetch"],[11,50,9,13],[11,53,9,16],[11,57,9,16,"getNativeImplementation"],[11,94,9,39],[11,96,9,40],[11,103,9,47],[11,104,9,48],[11,106,10,2],[12,4,11,2],[12,8,11,6,"pendingBodySize"],[12,23,11,21],[12,26,11,24],[12,27,11,25],[13,4,12,2],[13,8,12,6,"pendingCount"],[13,20,12,18],[13,23,12,21],[13,24,12,22],[14,4,14,2],[14,13,14,11,"makeRequest"],[14,24,14,22,"makeRequest"],[14,25,14,23,"request"],[14,32,14,30],[14,34,14,32],[15,6,15,4],[15,12,15,10,"requestSize"],[15,23,15,21],[15,26,15,24,"request"],[15,33,15,31],[15,34,15,32,"body"],[15,38,15,36],[15,39,15,37,"length"],[15,45,15,43],[16,6,16,4,"pendingBodySize"],[16,21,16,19],[16,25,16,23,"requestSize"],[16,36,16,34],[17,6,17,4,"pendingCount"],[17,18,17,16],[17,20,17,18],[18,6,19,4],[18,12,19,10,"requestOptions"],[18,26,19,24],[18,29,19,27],[19,8,20,6,"body"],[19,12,20,10],[19,14,20,12,"request"],[19,21,20,19],[19,22,20,20,"body"],[19,26,20,24],[20,8,21,6,"method"],[20,14,21,12],[20,16,21,14],[20,22,21,20],[21,8,22,6,"referrerPolicy"],[21,22,22,20],[21,24,22,22],[21,32,22,30],[22,8,23,6,"headers"],[22,15,23,13],[22,17,23,15,"options"],[22,24,23,22],[22,25,23,23,"headers"],[22,32,23,30],[23,8,24,6],[24,8,25,6],[25,8,26,6],[26,8,27,6],[27,8,28,6],[28,8,29,6],[29,8,30,6],[30,8,31,6],[31,8,32,6],[32,8,33,6],[33,8,34,6],[34,8,35,6,"keepalive"],[34,17,35,15],[34,19,35,17,"pendingBodySize"],[34,34,35,32],[34,38,35,36],[34,43,35,41],[34,47,35,45,"pendingCount"],[34,59,35,57],[34,62,35,60],[34,64,35,62],[35,8,36,6],[35,11,36,9,"options"],[35,18,36,16],[35,19,36,17,"fetchOptions"],[36,6,37,4],[36,7,37,5],[37,6,39,4],[37,10,39,8],[37,11,39,9,"nativeFetch"],[37,22,39,20],[37,24,39,22],[38,8,40,6],[38,12,40,6,"clearCachedImplementation"],[38,51,40,31],[38,53,40,32],[38,60,40,39],[38,61,40,40],[39,8,41,6],[39,15,41,13],[39,19,41,13,"rejectedSyncPromise"],[39,44,41,32],[39,46,41,33],[39,81,41,68],[39,82,41,69],[40,6,42,4],[41,6,44,4],[41,10,44,8],[42,8,45,6],[43,8,46,6],[43,15,46,13,"nativeFetch"],[43,26,46,24],[43,27,46,25,"options"],[43,34,46,32],[43,35,46,33,"url"],[43,38,46,36],[43,40,46,38,"requestOptions"],[43,54,46,52],[43,55,46,53],[43,56,46,54,"then"],[43,60,46,58],[43,61,46,59,"response"],[43,69,46,67],[43,73,46,71],[44,10,47,8,"pendingBodySize"],[44,25,47,23],[44,29,47,27,"requestSize"],[44,40,47,38],[45,10,48,8,"pendingCount"],[45,22,48,20],[45,24,48,22],[46,10,49,8],[46,17,49,15],[47,12,50,10,"statusCode"],[47,22,50,20],[47,24,50,22,"response"],[47,32,50,30],[47,33,50,31,"status"],[47,39,50,37],[48,12,51,10,"headers"],[48,19,51,17],[48,21,51,19],[49,14,52,12],[49,36,52,34],[49,38,52,36,"response"],[49,46,52,44],[49,47,52,45,"headers"],[49,54,52,52],[49,55,52,53,"get"],[49,58,52,56],[49,59,52,57],[49,81,52,79],[49,82,52,80],[50,14,53,12],[50,27,53,25],[50,29,53,27,"response"],[50,37,53,35],[50,38,53,36,"headers"],[50,45,53,43],[50,46,53,44,"get"],[50,49,53,47],[50,50,53,48],[50,63,53,61],[51,12,54,10],[52,10,55,8],[52,11,55,9],[53,8,56,6],[53,9,56,7],[53,10,56,8],[54,6,57,4],[54,7,57,5],[54,8,57,6],[54,15,57,13,"e"],[54,16,57,14],[54,18,57,16],[55,8,58,6],[55,12,58,6,"clearCachedImplementation"],[55,51,58,31],[55,53,58,32],[55,60,58,39],[55,61,58,40],[56,8,59,6,"pendingBodySize"],[56,23,59,21],[56,27,59,25,"requestSize"],[56,38,59,36],[57,8,60,6,"pendingCount"],[57,20,60,18],[57,22,60,20],[58,8,61,6],[58,15,61,13],[58,19,61,13,"rejectedSyncPromise"],[58,44,61,32],[58,46,61,33,"e"],[58,47,61,34],[58,48,61,35],[59,6,62,4],[60,4,63,2],[61,4,65,2],[61,11,65,9],[61,15,65,9,"createTransport"],[61,36,65,24],[61,38,65,25,"options"],[61,45,65,32],[61,47,65,34,"makeRequest"],[61,58,65,45],[61,59,65,46],[62,2,66,0],[63,0,66,1],[63,3]],"functionMap":{"names":["<global>","makeFetchTransport","makeRequest","nativeFetch.then$argument_0"],"mappings":"AAA;ACM;ECO;2DCgC;ODU;GDO;CDG"}},"type":"js/module"}]}