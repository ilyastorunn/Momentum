{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":115,"index":115}}],"key":"46QfplZMuoT7/1B4GqMDknw8q/g=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":116},"end":{"line":2,"column":40,"index":156}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SetMetric = exports.METRIC_MAP = exports.GaugeMetric = exports.DistributionMetric = exports.CounterMetric = void 0;\n  var _constants = require(_dependencyMap[0], \"./constants.js\");\n  var _utils = require(_dependencyMap[1], \"./utils.js\");\n  /**\n   * A metric instance representing a counter.\n   */\n  class CounterMetric {\n    constructor(_value) {\n      this._value = _value;\n    }\n\n    /** @inheritDoc */\n    get weight() {\n      return 1;\n    }\n\n    /** @inheritdoc */\n    add(value) {\n      this._value += value;\n    }\n\n    /** @inheritdoc */\n    toString() {\n      return `${this._value}`;\n    }\n  }\n\n  /**\n   * A metric instance representing a gauge.\n   */\n  exports.CounterMetric = CounterMetric;\n  class GaugeMetric {\n    constructor(value) {\n      this._last = value;\n      this._min = value;\n      this._max = value;\n      this._sum = value;\n      this._count = 1;\n    }\n\n    /** @inheritDoc */\n    get weight() {\n      return 5;\n    }\n\n    /** @inheritdoc */\n    add(value) {\n      this._last = value;\n      if (value < this._min) {\n        this._min = value;\n      }\n      if (value > this._max) {\n        this._max = value;\n      }\n      this._sum += value;\n      this._count++;\n    }\n\n    /** @inheritdoc */\n    toString() {\n      return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n    }\n  }\n\n  /**\n   * A metric instance representing a distribution.\n   */\n  exports.GaugeMetric = GaugeMetric;\n  class DistributionMetric {\n    constructor(first) {\n      this._value = [first];\n    }\n\n    /** @inheritDoc */\n    get weight() {\n      return this._value.length;\n    }\n\n    /** @inheritdoc */\n    add(value) {\n      this._value.push(value);\n    }\n\n    /** @inheritdoc */\n    toString() {\n      return this._value.join(':');\n    }\n  }\n\n  /**\n   * A metric instance representing a set.\n   */\n  exports.DistributionMetric = DistributionMetric;\n  class SetMetric {\n    constructor(first) {\n      this.first = first;\n      this._value = new Set([first]);\n    }\n\n    /** @inheritDoc */\n    get weight() {\n      return this._value.size;\n    }\n\n    /** @inheritdoc */\n    add(value) {\n      this._value.add(value);\n    }\n\n    /** @inheritdoc */\n    toString() {\n      return Array.from(this._value).map(val => typeof val === 'string' ? (0, _utils.simpleHash)(val) : val).join(':');\n    }\n  }\n  exports.SetMetric = SetMetric;\n  const METRIC_MAP = exports.METRIC_MAP = {\n    [_constants.COUNTER_METRIC_TYPE]: CounterMetric,\n    [_constants.GAUGE_METRIC_TYPE]: GaugeMetric,\n    [_constants.DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n    [_constants.SET_METRIC_TYPE]: SetMetric\n  };\n});","lineCount":126,"map":[[6,2,1,0],[6,6,1,0,"_constants"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_utils"],[7,12,2,0],[7,15,2,0,"require"],[7,22,2,0],[7,23,2,0,"_dependencyMap"],[7,37,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,2,7,0],[11,8,7,6,"CounterMetric"],[11,21,7,19],[11,22,7,21],[12,4,8,3,"constructor"],[12,15,8,14,"constructor"],[12,16,8,16,"_value"],[12,22,8,22],[12,24,8,24],[13,6,8,25],[13,10,8,29],[13,11,8,30,"_value"],[13,17,8,36],[13,20,8,39,"_value"],[13,26,8,45],[14,4,8,46],[16,4,10,2],[17,4,11,3],[17,8,11,7,"weight"],[17,14,11,13,"weight"],[17,15,11,13],[17,17,11,16],[18,6,12,4],[18,13,12,11],[18,14,12,12],[19,4,13,2],[21,4,15,2],[22,4,16,3,"add"],[22,7,16,6,"add"],[22,8,16,7,"value"],[22,13,16,12],[22,15,16,14],[23,6,17,4],[23,10,17,8],[23,11,17,9,"_value"],[23,17,17,15],[23,21,17,19,"value"],[23,26,17,24],[24,4,18,2],[26,4,20,2],[27,4,21,3,"toString"],[27,12,21,11,"toString"],[27,13,21,11],[27,15,21,14],[28,6,22,4],[28,13,22,11],[28,16,22,14],[28,20,22,18],[28,21,22,19,"_value"],[28,27,22,25],[28,29,22,27],[29,4,23,2],[30,2,24,0],[32,2,26,0],[33,0,27,0],[34,0,28,0],[35,2,26,0,"exports"],[35,9,26,0],[35,10,26,0,"CounterMetric"],[35,23,26,0],[35,26,26,0,"CounterMetric"],[35,39,26,0],[36,2,29,0],[36,8,29,6,"GaugeMetric"],[36,19,29,17],[36,20,29,19],[37,4,31,3,"constructor"],[37,15,31,14,"constructor"],[37,16,31,15,"value"],[37,21,31,20],[37,23,31,22],[38,6,32,4],[38,10,32,8],[38,11,32,9,"_last"],[38,16,32,14],[38,19,32,17,"value"],[38,24,32,22],[39,6,33,4],[39,10,33,8],[39,11,33,9,"_min"],[39,15,33,13],[39,18,33,16,"value"],[39,23,33,21],[40,6,34,4],[40,10,34,8],[40,11,34,9,"_max"],[40,15,34,13],[40,18,34,16,"value"],[40,23,34,21],[41,6,35,4],[41,10,35,8],[41,11,35,9,"_sum"],[41,15,35,13],[41,18,35,16,"value"],[41,23,35,21],[42,6,36,4],[42,10,36,8],[42,11,36,9,"_count"],[42,17,36,15],[42,20,36,18],[42,21,36,19],[43,4,37,2],[45,4,39,2],[46,4,40,3],[46,8,40,7,"weight"],[46,14,40,13,"weight"],[46,15,40,13],[46,17,40,16],[47,6,41,4],[47,13,41,11],[47,14,41,12],[48,4,42,2],[50,4,44,2],[51,4,45,3,"add"],[51,7,45,6,"add"],[51,8,45,7,"value"],[51,13,45,12],[51,15,45,14],[52,6,46,4],[52,10,46,8],[52,11,46,9,"_last"],[52,16,46,14],[52,19,46,17,"value"],[52,24,46,22],[53,6,47,4],[53,10,47,8,"value"],[53,15,47,13],[53,18,47,16],[53,22,47,20],[53,23,47,21,"_min"],[53,27,47,25],[53,29,47,27],[54,8,48,6],[54,12,48,10],[54,13,48,11,"_min"],[54,17,48,15],[54,20,48,18,"value"],[54,25,48,23],[55,6,49,4],[56,6,50,4],[56,10,50,8,"value"],[56,15,50,13],[56,18,50,16],[56,22,50,20],[56,23,50,21,"_max"],[56,27,50,25],[56,29,50,27],[57,8,51,6],[57,12,51,10],[57,13,51,11,"_max"],[57,17,51,15],[57,20,51,18,"value"],[57,25,51,23],[58,6,52,4],[59,6,53,4],[59,10,53,8],[59,11,53,9,"_sum"],[59,15,53,13],[59,19,53,17,"value"],[59,24,53,22],[60,6,54,4],[60,10,54,8],[60,11,54,9,"_count"],[60,17,54,15],[60,19,54,17],[61,4,55,2],[63,4,57,2],[64,4,58,3,"toString"],[64,12,58,11,"toString"],[64,13,58,11],[64,15,58,14],[65,6,59,4],[65,13,59,11],[65,16,59,14],[65,20,59,18],[65,21,59,19,"_last"],[65,26,59,24],[65,30,59,28],[65,34,59,32],[65,35,59,33,"_min"],[65,39,59,37],[65,43,59,41],[65,47,59,45],[65,48,59,46,"_max"],[65,52,59,50],[65,56,59,54],[65,60,59,58],[65,61,59,59,"_sum"],[65,65,59,63],[65,69,59,67],[65,73,59,71],[65,74,59,72,"_count"],[65,80,59,78],[65,82,59,80],[66,4,60,2],[67,2,61,0],[69,2,63,0],[70,0,64,0],[71,0,65,0],[72,2,63,0,"exports"],[72,9,63,0],[72,10,63,0,"GaugeMetric"],[72,21,63,0],[72,24,63,0,"GaugeMetric"],[72,35,63,0],[73,2,66,0],[73,8,66,6,"DistributionMetric"],[73,26,66,24],[73,27,66,26],[74,4,68,3,"constructor"],[74,15,68,14,"constructor"],[74,16,68,15,"first"],[74,21,68,20],[74,23,68,22],[75,6,69,4],[75,10,69,8],[75,11,69,9,"_value"],[75,17,69,15],[75,20,69,18],[75,21,69,19,"first"],[75,26,69,24],[75,27,69,25],[76,4,70,2],[78,4,72,2],[79,4,73,3],[79,8,73,7,"weight"],[79,14,73,13,"weight"],[79,15,73,13],[79,17,73,16],[80,6,74,4],[80,13,74,11],[80,17,74,15],[80,18,74,16,"_value"],[80,24,74,22],[80,25,74,23,"length"],[80,31,74,29],[81,4,75,2],[83,4,77,2],[84,4,78,3,"add"],[84,7,78,6,"add"],[84,8,78,7,"value"],[84,13,78,12],[84,15,78,14],[85,6,79,4],[85,10,79,8],[85,11,79,9,"_value"],[85,17,79,15],[85,18,79,16,"push"],[85,22,79,20],[85,23,79,21,"value"],[85,28,79,26],[85,29,79,27],[86,4,80,2],[88,4,82,2],[89,4,83,3,"toString"],[89,12,83,11,"toString"],[89,13,83,11],[89,15,83,14],[90,6,84,4],[90,13,84,11],[90,17,84,15],[90,18,84,16,"_value"],[90,24,84,22],[90,25,84,23,"join"],[90,29,84,27],[90,30,84,28],[90,33,84,31],[90,34,84,32],[91,4,85,2],[92,2,86,0],[94,2,88,0],[95,0,89,0],[96,0,90,0],[97,2,88,0,"exports"],[97,9,88,0],[97,10,88,0,"DistributionMetric"],[97,28,88,0],[97,31,88,0,"DistributionMetric"],[97,49,88,0],[98,2,91,0],[98,8,91,6,"SetMetric"],[98,17,91,15],[98,18,91,17],[99,4,93,3,"constructor"],[99,15,93,14,"constructor"],[99,16,93,16,"first"],[99,21,93,21],[99,23,93,23],[100,6,93,24],[100,10,93,28],[100,11,93,29,"first"],[100,16,93,34],[100,19,93,37,"first"],[100,24,93,42],[101,6,94,4],[101,10,94,8],[101,11,94,9,"_value"],[101,17,94,15],[101,20,94,18],[101,24,94,22,"Set"],[101,27,94,25],[101,28,94,26],[101,29,94,27,"first"],[101,34,94,32],[101,35,94,33],[101,36,94,34],[102,4,95,2],[104,4,97,2],[105,4,98,3],[105,8,98,7,"weight"],[105,14,98,13,"weight"],[105,15,98,13],[105,17,98,16],[106,6,99,4],[106,13,99,11],[106,17,99,15],[106,18,99,16,"_value"],[106,24,99,22],[106,25,99,23,"size"],[106,29,99,27],[107,4,100,2],[109,4,102,2],[110,4,103,3,"add"],[110,7,103,6,"add"],[110,8,103,7,"value"],[110,13,103,12],[110,15,103,14],[111,6,104,4],[111,10,104,8],[111,11,104,9,"_value"],[111,17,104,15],[111,18,104,16,"add"],[111,21,104,19],[111,22,104,20,"value"],[111,27,104,25],[111,28,104,26],[112,4,105,2],[114,4,107,2],[115,4,108,3,"toString"],[115,12,108,11,"toString"],[115,13,108,11],[115,15,108,14],[116,6,109,4],[116,13,109,11,"Array"],[116,18,109,16],[116,19,109,17,"from"],[116,23,109,21],[116,24,109,22],[116,28,109,26],[116,29,109,27,"_value"],[116,35,109,33],[116,36,109,34],[116,37,110,7,"map"],[116,40,110,10],[116,41,110,11,"val"],[116,44,110,14],[116,48,110,19],[116,55,110,26,"val"],[116,58,110,29],[116,63,110,34],[116,71,110,42],[116,74,110,45],[116,78,110,45,"simpleHash"],[116,95,110,55],[116,97,110,56,"val"],[116,100,110,59],[116,101,110,60],[116,104,110,63,"val"],[116,107,110,67],[116,108,110,68],[116,109,111,7,"join"],[116,113,111,11],[116,114,111,12],[116,117,111,15],[116,118,111,16],[117,4,112,2],[118,2,113,0],[119,2,113,1,"exports"],[119,9,113,1],[119,10,113,1,"SetMetric"],[119,19,113,1],[119,22,113,1,"SetMetric"],[119,31,113,1],[120,2,115,0],[120,8,115,6,"METRIC_MAP"],[120,18,115,16],[120,21,115,16,"exports"],[120,28,115,16],[120,29,115,16,"METRIC_MAP"],[120,39,115,16],[120,42,115,19],[121,4,116,2],[121,5,116,3,"COUNTER_METRIC_TYPE"],[121,35,116,22],[121,38,116,25,"CounterMetric"],[121,51,116,38],[122,4,117,2],[122,5,117,3,"GAUGE_METRIC_TYPE"],[122,33,117,20],[122,36,117,23,"GaugeMetric"],[122,47,117,34],[123,4,118,2],[123,5,118,3,"DISTRIBUTION_METRIC_TYPE"],[123,40,118,27],[123,43,118,30,"DistributionMetric"],[123,61,118,48],[124,4,119,2],[124,5,119,3,"SET_METRIC_TYPE"],[124,31,119,18],[124,34,119,21,"SetMetric"],[125,2,120,0],[125,3,120,1],[126,0,120,2],[126,3]],"functionMap":{"names":["<global>","CounterMetric","CounterMetric#constructor","CounterMetric#get__weight","CounterMetric#add","CounterMetric#toString","GaugeMetric","GaugeMetric#constructor","GaugeMetric#get__weight","GaugeMetric#add","GaugeMetric#toString","DistributionMetric","DistributionMetric#constructor","DistributionMetric#get__weight","DistributionMetric#add","DistributionMetric#toString","SetMetric","SetMetric#constructor","SetMetric#get__weight","SetMetric#add","SetMetric#toString","Array.from.map$argument_0"],"mappings":"AAA;ACM;GCC,4CD;GEG;GFE;GGG;GHE;GIG;GJE;CDC;AMK;GCE;GDM;GEG;GFE;GGG;GHU;GIG;GJE;CNC;AWK;GCE;GDE;GEG;GFE;GGG;GHE;GIG;GJE;CXC;AgBK;GCE;GDE;GEG;GFE;GGG;GHE;GIG;WCE,wDD;GJE;ChBC"}},"type":"js/module"}]}