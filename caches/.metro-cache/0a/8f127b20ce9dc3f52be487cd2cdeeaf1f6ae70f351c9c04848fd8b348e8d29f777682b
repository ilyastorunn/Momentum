{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":47,"index":104}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":36,"index":141}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.clearCachedImplementation = clearCachedImplementation;\n  exports.fetch = fetch;\n  exports.getNativeImplementation = getNativeImplementation;\n  exports.setTimeout = setTimeout;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _debugBuild = require(_dependencyMap[1], \"./debug-build.js\");\n  var _types = require(_dependencyMap[2], \"./types.js\");\n  /**\n   * We generally want to use window.fetch / window.setTimeout.\n   * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n   * so we try to get an unpatched version of this from a sandboxed iframe.\n   */\n\n  const cachedImplementations = {};\n\n  /**\n   * Get the native implementation of a browser function.\n   *\n   * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n   *\n   * The following methods can be retrieved:\n   * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n   * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n   */\n  function getNativeImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n      return cached;\n    }\n    let impl = _types.WINDOW[name];\n\n    // Fast path to avoid DOM I/O\n    if ((0, _core.isNativeFunction)(impl)) {\n      return cachedImplementations[name] = impl.bind(_types.WINDOW);\n    }\n    const document = _types.WINDOW.document;\n    // eslint-disable-next-line deprecation/deprecation\n    if (document && typeof document.createElement === 'function') {\n      try {\n        const sandbox = document.createElement('iframe');\n        sandbox.hidden = true;\n        document.head.appendChild(sandbox);\n        const contentWindow = sandbox.contentWindow;\n        if (contentWindow && contentWindow[name]) {\n          impl = contentWindow[name];\n        }\n        document.head.removeChild(sandbox);\n      } catch (e) {\n        // Could not create sandbox iframe, just use window.xxx\n        _debugBuild.DEBUG_BUILD && _core.logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n      }\n    }\n\n    // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n    // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n    if (!impl) {\n      return impl;\n    }\n    return cachedImplementations[name] = impl.bind(_types.WINDOW);\n  }\n\n  /** Clear a cached implementation. */\n  function clearCachedImplementation(name) {\n    cachedImplementations[name] = undefined;\n  }\n\n  /**\n   * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n   * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n   * this chain becomes orphaned and there is no possible way to capture it's rejections\n   * other than allowing it bubble up to this very handler. eg.\n   *\n   * const f = window.fetch;\n   * window.fetch = function () {\n   *   const p = f.apply(this, arguments);\n   *\n   *   p.then(function() {\n   *     console.log('hi.');\n   *   });\n   *\n   *   return p;\n   * }\n   *\n   * `p.then(function () { ... })` is producing a completely separate promise chain,\n   * however, what's returned is `p` - the result of original `fetch` call.\n   *\n   * This mean, that whenever we use the Fetch API to send our own requests, _and_\n   * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n   * effectively causing another event to be captured.\n   * This makes a whole process become an infinite loop, which we need to somehow\n   * deal with, and break it in one way or another.\n   *\n   * To deal with this issue, we are making sure that we _always_ use the real\n   * browser Fetch API, instead of relying on what `window.fetch` exposes.\n   * The only downside to this would be missing our own requests as breadcrumbs,\n   * but because we are already not doing this, it should be just fine.\n   *\n   * Possible failed fetch error messages per-browser:\n   *\n   * Chrome:  Failed to fetch\n   * Edge:    Failed to Fetch\n   * Firefox: NetworkError when attempting to fetch resource\n   * Safari:  resource blocked by content blocker\n   */\n  function fetch(...rest) {\n    return getNativeImplementation('fetch')(...rest);\n  }\n\n  /**\n   * Get an unwrapped `setTimeout` method.\n   * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n   * avoiding triggering change detection.\n   */\n  function setTimeout(...rest) {\n    return getNativeImplementation('setTimeout')(...rest);\n  }\n});","lineCount":121,"map":[[9,2,1,0],[9,6,1,0,"_core"],[9,11,1,0],[9,14,1,0,"require"],[9,21,1,0],[9,22,1,0,"_dependencyMap"],[9,36,1,0],[10,2,2,0],[10,6,2,0,"_debugBuild"],[10,17,2,0],[10,20,2,0,"require"],[10,27,2,0],[10,28,2,0,"_dependencyMap"],[10,42,2,0],[11,2,3,0],[11,6,3,0,"_types"],[11,12,3,0],[11,15,3,0,"require"],[11,22,3,0],[11,23,3,0,"_dependencyMap"],[11,37,3,0],[12,2,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[18,2,11,0],[18,8,11,6,"cachedImplementations"],[18,29,11,27],[18,32,11,30],[18,33,11,31],[18,34,11,32],[20,2,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,2,22,0],[29,11,22,9,"getNativeImplementation"],[29,34,22,32,"getNativeImplementation"],[29,35,23,2,"name"],[29,39,23,6],[29,41,24,2],[30,4,25,2],[30,10,25,8,"cached"],[30,16,25,14],[30,19,25,17,"cachedImplementations"],[30,40,25,38],[30,41,25,39,"name"],[30,45,25,43],[30,46,25,44],[31,4,26,2],[31,8,26,6,"cached"],[31,14,26,12],[31,16,26,14],[32,6,27,4],[32,13,27,11,"cached"],[32,19,27,17],[33,4,28,2],[34,4,30,2],[34,8,30,6,"impl"],[34,12,30,10],[34,15,30,13,"WINDOW"],[34,28,30,19],[34,29,30,20,"name"],[34,33,30,24],[34,34,30,25],[36,4,32,2],[37,4,33,2],[37,8,33,6],[37,12,33,6,"isNativeFunction"],[37,34,33,22],[37,36,33,23,"impl"],[37,40,33,27],[37,41,33,28],[37,43,33,30],[38,6,34,4],[38,13,34,12,"cachedImplementations"],[38,34,34,33],[38,35,34,34,"name"],[38,39,34,38],[38,40,34,39],[38,43,34,42,"impl"],[38,47,34,46],[38,48,34,47,"bind"],[38,52,34,51],[38,53,34,52,"WINDOW"],[38,66,34,58],[38,67,34,59],[39,4,35,2],[40,4,37,2],[40,10,37,8,"document"],[40,18,37,16],[40,21,37,19,"WINDOW"],[40,34,37,25],[40,35,37,26,"document"],[40,43,37,34],[41,4,38,2],[42,4,39,2],[42,8,39,6,"document"],[42,16,39,14],[42,20,39,18],[42,27,39,25,"document"],[42,35,39,33],[42,36,39,34,"createElement"],[42,49,39,47],[42,54,39,52],[42,64,39,62],[42,66,39,64],[43,6,40,4],[43,10,40,8],[44,8,41,6],[44,14,41,12,"sandbox"],[44,21,41,19],[44,24,41,22,"document"],[44,32,41,30],[44,33,41,31,"createElement"],[44,46,41,44],[44,47,41,45],[44,55,41,53],[44,56,41,54],[45,8,42,6,"sandbox"],[45,15,42,13],[45,16,42,14,"hidden"],[45,22,42,20],[45,25,42,23],[45,29,42,27],[46,8,43,6,"document"],[46,16,43,14],[46,17,43,15,"head"],[46,21,43,19],[46,22,43,20,"appendChild"],[46,33,43,31],[46,34,43,32,"sandbox"],[46,41,43,39],[46,42,43,40],[47,8,44,6],[47,14,44,12,"contentWindow"],[47,27,44,25],[47,30,44,28,"sandbox"],[47,37,44,35],[47,38,44,36,"contentWindow"],[47,51,44,49],[48,8,45,6],[48,12,45,10,"contentWindow"],[48,25,45,23],[48,29,45,27,"contentWindow"],[48,42,45,40],[48,43,45,41,"name"],[48,47,45,45],[48,48,45,46],[48,50,45,48],[49,10,46,8,"impl"],[49,14,46,12],[49,17,46,15,"contentWindow"],[49,30,46,28],[49,31,46,29,"name"],[49,35,46,33],[49,36,46,34],[50,8,47,6],[51,8,48,6,"document"],[51,16,48,14],[51,17,48,15,"head"],[51,21,48,19],[51,22,48,20,"removeChild"],[51,33,48,31],[51,34,48,32,"sandbox"],[51,41,48,39],[51,42,48,40],[52,6,49,4],[52,7,49,5],[52,8,49,6],[52,15,49,13,"e"],[52,16,49,14],[52,18,49,16],[53,8,50,6],[54,8,51,6,"DEBUG_BUILD"],[54,31,51,17],[54,35,51,21,"logger"],[54,47,51,27],[54,48,51,28,"warn"],[54,52,51,32],[54,53,51,33],[54,92,51,72,"name"],[54,96,51,76],[54,125,51,105,"name"],[54,129,51,109],[54,133,51,113],[54,135,51,115,"e"],[54,136,51,116],[54,137,51,117],[55,6,52,4],[56,4,53,2],[58,4,55,2],[59,4,56,2],[60,4,57,2],[60,8,57,6],[60,9,57,7,"impl"],[60,13,57,11],[60,15,57,13],[61,6,58,4],[61,13,58,11,"impl"],[61,17,58,15],[62,4,59,2],[63,4,61,2],[63,11,61,10,"cachedImplementations"],[63,32,61,31],[63,33,61,32,"name"],[63,37,61,36],[63,38,61,37],[63,41,61,40,"impl"],[63,45,61,44],[63,46,61,45,"bind"],[63,50,61,49],[63,51,61,50,"WINDOW"],[63,64,61,56],[63,65,61,57],[64,2,62,0],[66,2,64,0],[67,2,65,0],[67,11,65,9,"clearCachedImplementation"],[67,36,65,34,"clearCachedImplementation"],[67,37,65,35,"name"],[67,41,65,39],[67,43,65,41],[68,4,66,2,"cachedImplementations"],[68,25,66,23],[68,26,66,24,"name"],[68,30,66,28],[68,31,66,29],[68,34,66,32,"undefined"],[68,43,66,41],[69,2,67,0],[71,2,69,0],[72,0,70,0],[73,0,71,0],[74,0,72,0],[75,0,73,0],[76,0,74,0],[77,0,75,0],[78,0,76,0],[79,0,77,0],[80,0,78,0],[81,0,79,0],[82,0,80,0],[83,0,81,0],[84,0,82,0],[85,0,83,0],[86,0,84,0],[87,0,85,0],[88,0,86,0],[89,0,87,0],[90,0,88,0],[91,0,89,0],[92,0,90,0],[93,0,91,0],[94,0,92,0],[95,0,93,0],[96,0,94,0],[97,0,95,0],[98,0,96,0],[99,0,97,0],[100,0,98,0],[101,0,99,0],[102,0,100,0],[103,0,101,0],[104,0,102,0],[105,0,103,0],[106,0,104,0],[107,0,105,0],[108,0,106,0],[109,2,107,0],[109,11,107,9,"fetch"],[109,16,107,14,"fetch"],[109,17,107,15],[109,20,107,18,"rest"],[109,24,107,22],[109,26,107,24],[110,4,108,2],[110,11,108,9,"getNativeImplementation"],[110,34,108,32],[110,35,108,33],[110,42,108,40],[110,43,108,41],[110,44,108,42],[110,47,108,45,"rest"],[110,51,108,49],[110,52,108,50],[111,2,109,0],[113,2,111,0],[114,0,112,0],[115,0,113,0],[116,0,114,0],[117,0,115,0],[118,2,116,0],[118,11,116,9,"setTimeout"],[118,21,116,19,"setTimeout"],[118,22,116,20],[118,25,116,23,"rest"],[118,29,116,27],[118,31,116,29],[119,4,117,2],[119,11,117,9,"getNativeImplementation"],[119,34,117,32],[119,35,117,33],[119,47,117,45],[119,48,117,46],[119,49,117,47],[119,52,117,50,"rest"],[119,56,117,54],[119,57,117,55],[120,2,118,0],[121,0,118,1],[121,3]],"functionMap":{"names":["<global>","getNativeImplementation","clearCachedImplementation","fetch","setTimeout"],"mappings":"AAA;ACqB;CDwC;AEG;CFE;AGwC;CHE;AIO;CJE"}},"type":"js/module"}]}