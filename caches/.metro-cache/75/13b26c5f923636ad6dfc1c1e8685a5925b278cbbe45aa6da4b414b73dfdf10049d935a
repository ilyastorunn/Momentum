{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":342,"index":342}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"./instrument.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":343},"end":{"line":2,"column":127,"index":470}}],"key":"/faGONMhKrqQj2KSLxxwco89Hvc=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":471},"end":{"line":3,"column":92,"index":563}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.registerInpInteractionListener = registerInpInteractionListener;\n  exports.startTrackingINP = startTrackingINP;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _instrument = require(_dependencyMap[1], \"./instrument.js\");\n  var _utils = require(_dependencyMap[2], \"./utils.js\");\n  const LAST_INTERACTIONS = [];\n  const INTERACTIONS_SPAN_MAP = new Map();\n\n  /**\n   * Start tracking INP webvital events.\n   */\n  function startTrackingINP() {\n    const performance = (0, _utils.getBrowserPerformanceAPI)();\n    if (performance && _core.browserPerformanceTimeOrigin) {\n      const inpCallback = _trackINP();\n      return () => {\n        inpCallback();\n      };\n    }\n    return () => undefined;\n  }\n  const INP_ENTRY_MAP = {\n    click: 'click',\n    pointerdown: 'click',\n    pointerup: 'click',\n    mousedown: 'click',\n    mouseup: 'click',\n    touchstart: 'click',\n    touchend: 'click',\n    mouseover: 'hover',\n    mouseout: 'hover',\n    mouseenter: 'hover',\n    mouseleave: 'hover',\n    pointerover: 'hover',\n    pointerout: 'hover',\n    pointerenter: 'hover',\n    pointerleave: 'hover',\n    dragstart: 'drag',\n    dragend: 'drag',\n    drag: 'drag',\n    dragenter: 'drag',\n    dragleave: 'drag',\n    dragover: 'drag',\n    drop: 'drag',\n    keydown: 'press',\n    keyup: 'press',\n    keypress: 'press',\n    input: 'press'\n  };\n\n  /** Starts tracking the Interaction to Next Paint on the current page. */\n  function _trackINP() {\n    return (0, _instrument.addInpInstrumentationHandler)(({\n      metric\n    }) => {\n      if (metric.value == undefined) {\n        return;\n      }\n      const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n      if (!entry) {\n        return;\n      }\n      const {\n        interactionId\n      } = entry;\n      const interactionType = INP_ENTRY_MAP[entry.name];\n\n      /** Build the INP span, create an envelope from the span, and then send the envelope */\n      const startTime = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin + entry.startTime);\n      const duration = (0, _utils.msToSec)(metric.value);\n      const activeSpan = (0, _core.getActiveSpan)();\n      const rootSpan = activeSpan ? (0, _core.getRootSpan)(activeSpan) : undefined;\n\n      // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n      // where we cache the route per interactionId\n      const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n      const spanToUse = cachedSpan || rootSpan;\n\n      // Else, we try to use the active span.\n      // Finally, we fall back to look at the transactionName on the scope\n      const routeName = spanToUse ? (0, _core.spanToJSON)(spanToUse).description : (0, _core.getCurrentScope)().getScopeData().transactionName;\n      const name = (0, _core.htmlTreeAsString)(entry.target);\n      const attributes = (0, _core.dropUndefinedKeys)({\n        [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n        [_core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${interactionType}`,\n        [_core.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry.duration\n      });\n      const span = (0, _utils.startStandaloneWebVitalSpan)({\n        name,\n        transaction: routeName,\n        attributes,\n        startTime\n      });\n      if (span) {\n        span.addEvent('inp', {\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value\n        });\n        span.end(startTime + duration);\n      }\n    });\n  }\n\n  /**\n   * Register a listener to cache route information for INP interactions.\n   * TODO(v9): `latestRoute` no longer needs to be passed in and will be removed in v9.\n   */\n  function registerInpInteractionListener(_latestRoute) {\n    const handleEntries = ({\n      entries\n    }) => {\n      const activeSpan = (0, _core.getActiveSpan)();\n      const activeRootSpan = activeSpan && (0, _core.getRootSpan)(activeSpan);\n      entries.forEach(entry => {\n        if (!(0, _instrument.isPerformanceEventTiming)(entry) || !activeRootSpan) {\n          return;\n        }\n        const interactionId = entry.interactionId;\n        if (interactionId == null) {\n          return;\n        }\n\n        // If the interaction was already recorded before, nothing more to do\n        if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n          return;\n        }\n\n        // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n        if (LAST_INTERACTIONS.length > 10) {\n          const last = LAST_INTERACTIONS.shift();\n          INTERACTIONS_SPAN_MAP.delete(last);\n        }\n\n        // We add the interaction to the list of recorded interactions\n        // and store the span for this interaction\n        LAST_INTERACTIONS.push(interactionId);\n        INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n      });\n    };\n    (0, _instrument.addPerformanceInstrumentationHandler)('event', handleEntries);\n    (0, _instrument.addPerformanceInstrumentationHandler)('first-input', handleEntries);\n  }\n});","lineCount":147,"map":[[7,2,1,0],[7,6,1,0,"_core"],[7,11,1,0],[7,14,1,0,"require"],[7,21,1,0],[7,22,1,0,"_dependencyMap"],[7,36,1,0],[8,2,2,0],[8,6,2,0,"_instrument"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_utils"],[9,12,3,0],[9,15,3,0,"require"],[9,22,3,0],[9,23,3,0,"_dependencyMap"],[9,37,3,0],[10,2,5,0],[10,8,5,6,"LAST_INTERACTIONS"],[10,25,5,23],[10,28,5,26],[10,30,5,28],[11,2,6,0],[11,8,6,6,"INTERACTIONS_SPAN_MAP"],[11,29,6,27],[11,32,6,30],[11,36,6,34,"Map"],[11,39,6,37],[11,40,6,38],[11,41,6,39],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,2,11,0],[16,11,11,9,"startTrackingINP"],[16,27,11,25,"startTrackingINP"],[16,28,11,25],[16,30,11,28],[17,4,12,2],[17,10,12,8,"performance"],[17,21,12,19],[17,24,12,22],[17,28,12,22,"getBrowserPerformanceAPI"],[17,59,12,46],[17,61,12,47],[17,62,12,48],[18,4,13,2],[18,8,13,6,"performance"],[18,19,13,17],[18,23,13,21,"browserPerformanceTimeOrigin"],[18,57,13,49],[18,59,13,51],[19,6,14,4],[19,12,14,10,"inpCallback"],[19,23,14,21],[19,26,14,24,"_trackINP"],[19,35,14,33],[19,36,14,34],[19,37,14,35],[20,6,16,4],[20,13,16,11],[20,19,16,17],[21,8,17,6,"inpCallback"],[21,19,17,17],[21,20,17,18],[21,21,17,19],[22,6,18,4],[22,7,18,5],[23,4,19,2],[24,4,21,2],[24,11,21,9],[24,17,21,15,"undefined"],[24,26,21,24],[25,2,22,0],[26,2,24,0],[26,8,24,6,"INP_ENTRY_MAP"],[26,21,24,19],[26,24,24,22],[27,4,25,2,"click"],[27,9,25,7],[27,11,25,9],[27,18,25,16],[28,4,26,2,"pointerdown"],[28,15,26,13],[28,17,26,15],[28,24,26,22],[29,4,27,2,"pointerup"],[29,13,27,11],[29,15,27,13],[29,22,27,20],[30,4,28,2,"mousedown"],[30,13,28,11],[30,15,28,13],[30,22,28,20],[31,4,29,2,"mouseup"],[31,11,29,9],[31,13,29,11],[31,20,29,18],[32,4,30,2,"touchstart"],[32,14,30,12],[32,16,30,14],[32,23,30,21],[33,4,31,2,"touchend"],[33,12,31,10],[33,14,31,12],[33,21,31,19],[34,4,32,2,"mouseover"],[34,13,32,11],[34,15,32,13],[34,22,32,20],[35,4,33,2,"mouseout"],[35,12,33,10],[35,14,33,12],[35,21,33,19],[36,4,34,2,"mouseenter"],[36,14,34,12],[36,16,34,14],[36,23,34,21],[37,4,35,2,"mouseleave"],[37,14,35,12],[37,16,35,14],[37,23,35,21],[38,4,36,2,"pointerover"],[38,15,36,13],[38,17,36,15],[38,24,36,22],[39,4,37,2,"pointerout"],[39,14,37,12],[39,16,37,14],[39,23,37,21],[40,4,38,2,"pointerenter"],[40,16,38,14],[40,18,38,16],[40,25,38,23],[41,4,39,2,"pointerleave"],[41,16,39,14],[41,18,39,16],[41,25,39,23],[42,4,40,2,"dragstart"],[42,13,40,11],[42,15,40,13],[42,21,40,19],[43,4,41,2,"dragend"],[43,11,41,9],[43,13,41,11],[43,19,41,17],[44,4,42,2,"drag"],[44,8,42,6],[44,10,42,8],[44,16,42,14],[45,4,43,2,"dragenter"],[45,13,43,11],[45,15,43,13],[45,21,43,19],[46,4,44,2,"dragleave"],[46,13,44,11],[46,15,44,13],[46,21,44,19],[47,4,45,2,"dragover"],[47,12,45,10],[47,14,45,12],[47,20,45,18],[48,4,46,2,"drop"],[48,8,46,6],[48,10,46,8],[48,16,46,14],[49,4,47,2,"keydown"],[49,11,47,9],[49,13,47,11],[49,20,47,18],[50,4,48,2,"keyup"],[50,9,48,7],[50,11,48,9],[50,18,48,16],[51,4,49,2,"keypress"],[51,12,49,10],[51,14,49,12],[51,21,49,19],[52,4,50,2,"input"],[52,9,50,7],[52,11,50,9],[53,2,51,0],[53,3,51,1],[55,2,53,0],[56,2,54,0],[56,11,54,9,"_trackINP"],[56,20,54,18,"_trackINP"],[56,21,54,18],[56,23,54,21],[57,4,55,2],[57,11,55,9],[57,15,55,9,"addInpInstrumentationHandler"],[57,55,55,37],[57,57,55,38],[57,58,55,39],[58,6,55,41,"metric"],[59,4,55,48],[59,5,55,49],[59,10,55,54],[60,6,56,4],[60,10,56,8,"metric"],[60,16,56,14],[60,17,56,15,"value"],[60,22,56,20],[60,26,56,24,"undefined"],[60,35,56,33],[60,37,56,35],[61,8,57,6],[62,6,58,4],[63,6,60,4],[63,12,60,10,"entry"],[63,17,60,15],[63,20,60,18,"metric"],[63,26,60,24],[63,27,60,25,"entries"],[63,34,60,32],[63,35,60,33,"find"],[63,39,60,37],[63,40,60,38,"entry"],[63,45,60,43],[63,49,60,47,"entry"],[63,54,60,52],[63,55,60,53,"duration"],[63,63,60,61],[63,68,60,66,"metric"],[63,74,60,72],[63,75,60,73,"value"],[63,80,60,78],[63,84,60,82,"INP_ENTRY_MAP"],[63,97,60,95],[63,98,60,96,"entry"],[63,103,60,101],[63,104,60,102,"name"],[63,108,60,106],[63,109,60,107],[63,110,60,108],[64,6,62,4],[64,10,62,8],[64,11,62,9,"entry"],[64,16,62,14],[64,18,62,16],[65,8,63,6],[66,6,64,4],[67,6,66,4],[67,12,66,10],[68,8,66,12,"interactionId"],[69,6,66,26],[69,7,66,27],[69,10,66,30,"entry"],[69,15,66,35],[70,6,67,4],[70,12,67,10,"interactionType"],[70,27,67,25],[70,30,67,28,"INP_ENTRY_MAP"],[70,43,67,41],[70,44,67,42,"entry"],[70,49,67,47],[70,50,67,48,"name"],[70,54,67,52],[70,55,67,53],[72,6,69,4],[73,6,70,4],[73,12,70,10,"startTime"],[73,21,70,19],[73,24,70,22],[73,28,70,22,"msToSec"],[73,42,70,29],[73,44,70,31,"browserPerformanceTimeOrigin"],[73,78,70,59],[73,81,70,64,"entry"],[73,86,70,69],[73,87,70,70,"startTime"],[73,96,70,79],[73,97,70,80],[74,6,71,4],[74,12,71,10,"duration"],[74,20,71,18],[74,23,71,21],[74,27,71,21,"msToSec"],[74,41,71,28],[74,43,71,29,"metric"],[74,49,71,35],[74,50,71,36,"value"],[74,55,71,41],[74,56,71,42],[75,6,72,4],[75,12,72,10,"activeSpan"],[75,22,72,20],[75,25,72,23],[75,29,72,23,"getActiveSpan"],[75,48,72,36],[75,50,72,37],[75,51,72,38],[76,6,73,4],[76,12,73,10,"rootSpan"],[76,20,73,18],[76,23,73,21,"activeSpan"],[76,33,73,31],[76,36,73,34],[76,40,73,34,"getRootSpan"],[76,57,73,45],[76,59,73,46,"activeSpan"],[76,69,73,56],[76,70,73,57],[76,73,73,60,"undefined"],[76,82,73,69],[78,6,75,4],[79,6,76,4],[80,6,77,4],[80,12,77,10,"cachedSpan"],[80,22,77,20],[80,25,77,23,"interactionId"],[80,38,77,36],[80,42,77,40],[80,46,77,44],[80,49,77,47,"INTERACTIONS_SPAN_MAP"],[80,70,77,68],[80,71,77,69,"get"],[80,74,77,72],[80,75,77,73,"interactionId"],[80,88,77,86],[80,89,77,87],[80,92,77,90,"undefined"],[80,101,77,99],[81,6,79,4],[81,12,79,10,"spanToUse"],[81,21,79,19],[81,24,79,22,"cachedSpan"],[81,34,79,32],[81,38,79,36,"rootSpan"],[81,46,79,44],[83,6,81,4],[84,6,82,4],[85,6,83,4],[85,12,83,10,"routeName"],[85,21,83,19],[85,24,83,22,"spanToUse"],[85,33,83,31],[85,36,83,34],[85,40,83,34,"spanToJSON"],[85,56,83,44],[85,58,83,45,"spanToUse"],[85,67,83,54],[85,68,83,55],[85,69,83,56,"description"],[85,80,83,67],[85,83,83,70],[85,87,83,70,"getCurrentScope"],[85,108,83,85],[85,110,83,86],[85,111,83,87],[85,112,83,88,"getScopeData"],[85,124,83,100],[85,125,83,101],[85,126,83,102],[85,127,83,103,"transactionName"],[85,142,83,118],[86,6,85,4],[86,12,85,10,"name"],[86,16,85,14],[86,19,85,17],[86,23,85,17,"htmlTreeAsString"],[86,45,85,33],[86,47,85,34,"entry"],[86,52,85,39],[86,53,85,40,"target"],[86,59,85,46],[86,60,85,47],[87,6,86,4],[87,12,86,10,"attributes"],[87,22,86,20],[87,25,86,23],[87,29,86,23,"dropUndefinedKeys"],[87,52,86,40],[87,54,86,41],[88,8,87,6],[88,9,87,7,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[88,47,87,39],[88,50,87,42],[88,73,87,65],[89,8,88,6],[89,9,88,7,"SEMANTIC_ATTRIBUTE_SENTRY_OP"],[89,43,88,35],[89,46,88,38],[89,64,88,56,"interactionType"],[89,79,88,71],[89,81,88,73],[90,8,89,6],[90,9,89,7,"SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME"],[90,48,89,40],[90,51,89,43,"entry"],[90,56,89,48],[90,57,89,49,"duration"],[91,6,90,4],[91,7,90,5],[91,8,90,6],[92,6,92,4],[92,12,92,10,"span"],[92,16,92,14],[92,19,92,17],[92,23,92,17,"startStandaloneWebVitalSpan"],[92,57,92,44],[92,59,92,45],[93,8,93,6,"name"],[93,12,93,10],[94,8,94,6,"transaction"],[94,19,94,17],[94,21,94,19,"routeName"],[94,30,94,28],[95,8,95,6,"attributes"],[95,18,95,16],[96,8,96,6,"startTime"],[97,6,97,4],[97,7,97,5],[97,8,97,6],[98,6,99,4],[98,10,99,8,"span"],[98,14,99,12],[98,16,99,14],[99,8,100,6,"span"],[99,12,100,10],[99,13,100,11,"addEvent"],[99,21,100,19],[99,22,100,20],[99,27,100,25],[99,29,100,27],[100,10,101,8],[100,11,101,9,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT"],[100,59,101,51],[100,62,101,54],[100,75,101,67],[101,10,102,8],[101,11,102,9,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE"],[101,60,102,52],[101,63,102,55,"metric"],[101,69,102,61],[101,70,102,62,"value"],[102,8,103,6],[102,9,103,7],[102,10,103,8],[103,8,105,6,"span"],[103,12,105,10],[103,13,105,11,"end"],[103,16,105,14],[103,17,105,15,"startTime"],[103,26,105,24],[103,29,105,27,"duration"],[103,37,105,35],[103,38,105,36],[104,6,106,4],[105,4,107,2],[105,5,107,3],[105,6,107,4],[106,2,108,0],[108,2,110,0],[109,0,111,0],[110,0,112,0],[111,0,113,0],[112,2,114,0],[112,11,114,9,"registerInpInteractionListener"],[112,41,114,39,"registerInpInteractionListener"],[112,42,114,40,"_latestRoute"],[112,54,114,52],[112,56,114,54],[113,4,115,2],[113,10,115,8,"handleEntries"],[113,23,115,21],[113,26,115,24,"handleEntries"],[113,27,115,25],[114,6,115,27,"entries"],[115,4,115,35],[115,5,115,36],[115,10,115,41],[116,6,116,4],[116,12,116,10,"activeSpan"],[116,22,116,20],[116,25,116,23],[116,29,116,23,"getActiveSpan"],[116,48,116,36],[116,50,116,37],[116,51,116,38],[117,6,117,4],[117,12,117,10,"activeRootSpan"],[117,26,117,24],[117,29,117,27,"activeSpan"],[117,39,117,37],[117,43,117,41],[117,47,117,41,"getRootSpan"],[117,64,117,52],[117,66,117,53,"activeSpan"],[117,76,117,63],[117,77,117,64],[118,6,119,4,"entries"],[118,13,119,11],[118,14,119,12,"forEach"],[118,21,119,19],[118,22,119,20,"entry"],[118,27,119,25],[118,31,119,29],[119,8,120,6],[119,12,120,10],[119,13,120,11],[119,17,120,11,"isPerformanceEventTiming"],[119,53,120,35],[119,55,120,36,"entry"],[119,60,120,41],[119,61,120,42],[119,65,120,46],[119,66,120,47,"activeRootSpan"],[119,80,120,61],[119,82,120,63],[120,10,121,8],[121,8,122,6],[122,8,124,6],[122,14,124,12,"interactionId"],[122,27,124,25],[122,30,124,28,"entry"],[122,35,124,33],[122,36,124,34,"interactionId"],[122,49,124,47],[123,8,125,6],[123,12,125,10,"interactionId"],[123,25,125,23],[123,29,125,27],[123,33,125,31],[123,35,125,33],[124,10,126,8],[125,8,127,6],[127,8,129,6],[128,8,130,6],[128,12,130,10,"INTERACTIONS_SPAN_MAP"],[128,33,130,31],[128,34,130,32,"has"],[128,37,130,35],[128,38,130,36,"interactionId"],[128,51,130,49],[128,52,130,50],[128,54,130,52],[129,10,131,8],[130,8,132,6],[132,8,134,6],[133,8,135,6],[133,12,135,10,"LAST_INTERACTIONS"],[133,29,135,27],[133,30,135,28,"length"],[133,36,135,34],[133,39,135,37],[133,41,135,39],[133,43,135,41],[134,10,136,8],[134,16,136,14,"last"],[134,20,136,18],[134,23,136,21,"LAST_INTERACTIONS"],[134,40,136,38],[134,41,136,39,"shift"],[134,46,136,44],[134,47,136,45],[134,48,136,46],[135,10,137,8,"INTERACTIONS_SPAN_MAP"],[135,31,137,29],[135,32,137,30,"delete"],[135,38,137,36],[135,39,137,37,"last"],[135,43,137,41],[135,44,137,42],[136,8,138,6],[138,8,140,6],[139,8,141,6],[140,8,142,6,"LAST_INTERACTIONS"],[140,25,142,23],[140,26,142,24,"push"],[140,30,142,28],[140,31,142,29,"interactionId"],[140,44,142,42],[140,45,142,43],[141,8,143,6,"INTERACTIONS_SPAN_MAP"],[141,29,143,27],[141,30,143,28,"set"],[141,33,143,31],[141,34,143,32,"interactionId"],[141,47,143,45],[141,49,143,47,"activeRootSpan"],[141,63,143,61],[141,64,143,62],[142,6,144,4],[142,7,144,5],[142,8,144,6],[143,4,145,2],[143,5,145,3],[144,4,147,2],[144,8,147,2,"addPerformanceInstrumentationHandler"],[144,56,147,38],[144,58,147,39],[144,65,147,46],[144,67,147,48,"handleEntries"],[144,80,147,61],[144,81,147,62],[145,4,148,2],[145,8,148,2,"addPerformanceInstrumentationHandler"],[145,56,148,38],[145,58,148,39],[145,71,148,52],[145,73,148,54,"handleEntries"],[145,86,148,67],[145,87,148,68],[146,2,149,0],[147,0,149,1],[147,3]],"functionMap":{"names":["<global>","startTrackingINP","<anonymous>","_trackINP","addInpInstrumentationHandler$argument_0","metric.entries.find$argument_0","registerInpInteractionListener","handleEntries","entries.forEach$argument_0"],"mappings":"AAA;ACU;WCK;KDE;SCG,eD;CDC;AGgC;sCCC;sCCK,qED;GD+C;CHC;AMM;wBCC;oBCI;KDyB;GDC;CNI"}},"type":"js/module"}]}