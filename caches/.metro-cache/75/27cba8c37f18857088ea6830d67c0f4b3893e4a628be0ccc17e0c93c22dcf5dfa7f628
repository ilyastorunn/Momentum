{"dependencies":[{"name":"./Host","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":602},"end":{"line":4,"column":40,"index":642}}],"key":"BQhWeBRDaUSxZaA5iU6wGzQsFFs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.JsiSkRSXform = void 0;\n  var _Host = require(_dependencyMap[0], \"./Host\");\n  function _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n      value: t,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[r] = t, e;\n  }\n  function _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n  }\n  function _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n      var i = e.call(t, r || \"default\");\n      if (\"object\" != typeof i) return i;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n  }\n  class JsiSkRSXform extends _Host.BaseHostObject {\n    static fromValue(rsxform) {\n      if (rsxform instanceof JsiSkRSXform) {\n        return rsxform.ref;\n      }\n      return Float32Array.of(rsxform.scos, rsxform.ssin, rsxform.tx, rsxform.ty);\n    }\n    constructor(CanvasKit, ref) {\n      super(CanvasKit, ref, \"RSXform\");\n      _defineProperty(this, \"dispose\", () => {\n        // nothing to do here, RSXform is a Float32Array\n      });\n    }\n    set(scos, ssin, tx, ty) {\n      this.ref[0] = scos;\n      this.ref[1] = ssin;\n      this.ref[2] = tx;\n      this.ref[3] = ty;\n    }\n    get scos() {\n      return this.ref[0];\n    }\n    get ssin() {\n      return this.ref[1];\n    }\n    get tx() {\n      return this.ref[2];\n    }\n    get ty() {\n      return this.ref[3];\n    }\n  }\n  exports.JsiSkRSXform = JsiSkRSXform;\n});","lineCount":62,"map":[[6,2,4,0],[6,6,4,0,"_Host"],[6,11,4,0],[6,14,4,0,"require"],[6,21,4,0],[6,22,4,0,"_dependencyMap"],[6,36,4,0],[7,2,1,0],[7,11,1,9,"_defineProperty"],[7,26,1,24,"_defineProperty"],[7,27,1,25,"e"],[7,28,1,26],[7,30,1,28,"r"],[7,31,1,29],[7,33,1,31,"t"],[7,34,1,32],[7,36,1,34],[8,4,1,36],[8,11,1,43],[8,12,1,44,"r"],[8,13,1,45],[8,16,1,48,"_toPropertyKey"],[8,30,1,62],[8,31,1,63,"r"],[8,32,1,64],[8,33,1,65],[8,38,1,70,"e"],[8,39,1,71],[8,42,1,74,"Object"],[8,48,1,80],[8,49,1,81,"defineProperty"],[8,63,1,95],[8,64,1,96,"e"],[8,65,1,97],[8,67,1,99,"r"],[8,68,1,100],[8,70,1,102],[9,6,1,104,"value"],[9,11,1,109],[9,13,1,111,"t"],[9,14,1,112],[10,6,1,114,"enumerable"],[10,16,1,124],[10,18,1,126],[10,19,1,127],[10,20,1,128],[11,6,1,130,"configurable"],[11,18,1,142],[11,20,1,144],[11,21,1,145],[11,22,1,146],[12,6,1,148,"writable"],[12,14,1,156],[12,16,1,158],[12,17,1,159],[13,4,1,161],[13,5,1,162],[13,6,1,163],[13,9,1,166,"e"],[13,10,1,167],[13,11,1,168,"r"],[13,12,1,169],[13,13,1,170],[13,16,1,173,"t"],[13,17,1,174],[13,19,1,176,"e"],[13,20,1,177],[14,2,1,179],[15,2,2,0],[15,11,2,9,"_toPropertyKey"],[15,25,2,23,"_toPropertyKey"],[15,26,2,24,"t"],[15,27,2,25],[15,29,2,27],[16,4,2,29],[16,8,2,33,"i"],[16,9,2,34],[16,12,2,37,"_toPrimitive"],[16,24,2,49],[16,25,2,50,"t"],[16,26,2,51],[16,28,2,53],[16,36,2,61],[16,37,2,62],[17,4,2,64],[17,11,2,71],[17,19,2,79],[17,23,2,83],[17,30,2,90,"i"],[17,31,2,91],[17,34,2,94,"i"],[17,35,2,95],[17,38,2,98,"i"],[17,39,2,99],[17,42,2,102],[17,44,2,104],[18,2,2,106],[19,2,3,0],[19,11,3,9,"_toPrimitive"],[19,23,3,21,"_toPrimitive"],[19,24,3,22,"t"],[19,25,3,23],[19,27,3,25,"r"],[19,28,3,26],[19,30,3,28],[20,4,3,30],[20,8,3,34],[20,16,3,42],[20,20,3,46],[20,27,3,53,"t"],[20,28,3,54],[20,32,3,58],[20,33,3,59,"t"],[20,34,3,60],[20,36,3,62],[20,43,3,69,"t"],[20,44,3,70],[21,4,3,72],[21,8,3,76,"e"],[21,9,3,77],[21,12,3,80,"t"],[21,13,3,81],[21,14,3,82,"Symbol"],[21,20,3,88],[21,21,3,89,"toPrimitive"],[21,32,3,100],[21,33,3,101],[22,4,3,103],[22,8,3,107],[22,13,3,112],[22,14,3,113],[22,19,3,118,"e"],[22,20,3,119],[22,22,3,121],[23,6,3,123],[23,10,3,127,"i"],[23,11,3,128],[23,14,3,131,"e"],[23,15,3,132],[23,16,3,133,"call"],[23,20,3,137],[23,21,3,138,"t"],[23,22,3,139],[23,24,3,141,"r"],[23,25,3,142],[23,29,3,146],[23,38,3,155],[23,39,3,156],[24,6,3,158],[24,10,3,162],[24,18,3,170],[24,22,3,174],[24,29,3,181,"i"],[24,30,3,182],[24,32,3,184],[24,39,3,191,"i"],[24,40,3,192],[25,6,3,194],[25,12,3,200],[25,16,3,204,"TypeError"],[25,25,3,213],[25,26,3,214],[25,72,3,260],[25,73,3,261],[26,4,3,263],[27,4,3,265],[27,11,3,272],[27,12,3,273],[27,20,3,281],[27,25,3,286,"r"],[27,26,3,287],[27,29,3,290,"String"],[27,35,3,296],[27,38,3,299,"Number"],[27,44,3,305],[27,46,3,307,"t"],[27,47,3,308],[27,48,3,309],[28,2,3,311],[29,2,5,7],[29,8,5,13,"JsiSkRSXform"],[29,20,5,25],[29,29,5,34,"BaseHostObject"],[29,49,5,48],[29,50,5,49],[30,4,6,2],[30,11,6,9,"fromValue"],[30,20,6,18,"fromValue"],[30,21,6,19,"rsxform"],[30,28,6,26],[30,30,6,28],[31,6,7,4],[31,10,7,8,"rsxform"],[31,17,7,15],[31,29,7,27,"JsiSkRSXform"],[31,41,7,39],[31,43,7,41],[32,8,8,6],[32,15,8,13,"rsxform"],[32,22,8,20],[32,23,8,21,"ref"],[32,26,8,24],[33,6,9,4],[34,6,10,4],[34,13,10,11,"Float32Array"],[34,25,10,23],[34,26,10,24,"of"],[34,28,10,26],[34,29,10,27,"rsxform"],[34,36,10,34],[34,37,10,35,"scos"],[34,41,10,39],[34,43,10,41,"rsxform"],[34,50,10,48],[34,51,10,49,"ssin"],[34,55,10,53],[34,57,10,55,"rsxform"],[34,64,10,62],[34,65,10,63,"tx"],[34,67,10,65],[34,69,10,67,"rsxform"],[34,76,10,74],[34,77,10,75,"ty"],[34,79,10,77],[34,80,10,78],[35,4,11,2],[36,4,12,2,"constructor"],[36,15,12,13,"constructor"],[36,16,12,14,"CanvasKit"],[36,25,12,23],[36,27,12,25,"ref"],[36,30,12,28],[36,32,12,30],[37,6,13,4],[37,11,13,9],[37,12,13,10,"CanvasKit"],[37,21,13,19],[37,23,13,21,"ref"],[37,26,13,24],[37,28,13,26],[37,37,13,35],[37,38,13,36],[38,6,14,4,"_defineProperty"],[38,21,14,19],[38,22,14,20],[38,26,14,24],[38,28,14,26],[38,37,14,35],[38,39,14,37],[38,45,14,43],[39,8,15,6],[40,6,15,6],[40,7,16,5],[40,8,16,6],[41,4,17,2],[42,4,18,2,"set"],[42,7,18,5,"set"],[42,8,18,6,"scos"],[42,12,18,10],[42,14,18,12,"ssin"],[42,18,18,16],[42,20,18,18,"tx"],[42,22,18,20],[42,24,18,22,"ty"],[42,26,18,24],[42,28,18,26],[43,6,19,4],[43,10,19,8],[43,11,19,9,"ref"],[43,14,19,12],[43,15,19,13],[43,16,19,14],[43,17,19,15],[43,20,19,18,"scos"],[43,24,19,22],[44,6,20,4],[44,10,20,8],[44,11,20,9,"ref"],[44,14,20,12],[44,15,20,13],[44,16,20,14],[44,17,20,15],[44,20,20,18,"ssin"],[44,24,20,22],[45,6,21,4],[45,10,21,8],[45,11,21,9,"ref"],[45,14,21,12],[45,15,21,13],[45,16,21,14],[45,17,21,15],[45,20,21,18,"tx"],[45,22,21,20],[46,6,22,4],[46,10,22,8],[46,11,22,9,"ref"],[46,14,22,12],[46,15,22,13],[46,16,22,14],[46,17,22,15],[46,20,22,18,"ty"],[46,22,22,20],[47,4,23,2],[48,4,24,2],[48,8,24,6,"scos"],[48,12,24,10,"scos"],[48,13,24,10],[48,15,24,13],[49,6,25,4],[49,13,25,11],[49,17,25,15],[49,18,25,16,"ref"],[49,21,25,19],[49,22,25,20],[49,23,25,21],[49,24,25,22],[50,4,26,2],[51,4,27,2],[51,8,27,6,"ssin"],[51,12,27,10,"ssin"],[51,13,27,10],[51,15,27,13],[52,6,28,4],[52,13,28,11],[52,17,28,15],[52,18,28,16,"ref"],[52,21,28,19],[52,22,28,20],[52,23,28,21],[52,24,28,22],[53,4,29,2],[54,4,30,2],[54,8,30,6,"tx"],[54,10,30,8,"tx"],[54,11,30,8],[54,13,30,11],[55,6,31,4],[55,13,31,11],[55,17,31,15],[55,18,31,16,"ref"],[55,21,31,19],[55,22,31,20],[55,23,31,21],[55,24,31,22],[56,4,32,2],[57,4,33,2],[57,8,33,6,"ty"],[57,10,33,8,"ty"],[57,11,33,8],[57,13,33,11],[58,6,34,4],[58,13,34,11],[58,17,34,15],[58,18,34,16,"ref"],[58,21,34,19],[58,22,34,20],[58,23,34,21],[58,24,34,22],[59,4,35,2],[60,2,36,0],[61,2,36,1,"exports"],[61,9,36,1],[61,10,36,1,"JsiSkRSXform"],[61,22,36,1],[61,25,36,1,"JsiSkRSXform"],[61,37,36,1],[62,0,36,1],[62,3]],"functionMap":{"names":["_defineProperty","<global>","_toPropertyKey","_toPrimitive","JsiSkRSXform","fromValue","constructor","_defineProperty$argument_2","set","get__scos","get__ssin","get__tx","get__ty"],"mappings":"AAA,oLC;ACC,2GD;AEC,wTF;OGE;ECC;GDK;EEC;qCCE;KDE;GFC;EIC;GJK;EKC;GLE;EMC;GNE;EOC;GPE;EQC;GRE;CHC"}},"type":"js/module"}]}