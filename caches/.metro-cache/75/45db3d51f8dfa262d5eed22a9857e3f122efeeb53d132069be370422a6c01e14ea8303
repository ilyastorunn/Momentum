{"dependencies":[{"name":"../utils/worldwide","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"/9Zkbo5cHZuI/WH8RoGGgsefOs8=","exportNames":["*"]}},{"name":"../vendor","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":40,"index":92}}],"key":"O7lZyf6ADhzcj8VBr1NVa41wjeg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getBodySize = getBodySize;\n  exports.parseContentLengthHeader = parseContentLengthHeader;\n  var _worldwide = require(_dependencyMap[0], \"../utils/worldwide\");\n  var _vendor = require(_dependencyMap[1], \"../vendor\");\n  /** Convert a Content-Length header to number/undefined. */\n  function parseContentLengthHeader(header) {\n    if (!header) {\n      return undefined;\n    }\n    const size = parseInt(header, 10);\n    return isNaN(size) ? undefined : size;\n  }\n  /** Get the size of a body. */\n  function getBodySize(body) {\n    if (!body) {\n      return undefined;\n    }\n    try {\n      if (typeof body === 'string') {\n        return _encode(body).length;\n      }\n      if (body instanceof URLSearchParams) {\n        return _encode(body.toString()).length;\n      }\n      if (body instanceof FormData) {\n        const formDataStr = _serializeFormData(body);\n        return _encode(formDataStr).length;\n      }\n      if (body instanceof Blob) {\n        return body.size;\n      }\n      if (body instanceof ArrayBuffer) {\n        return body.byteLength;\n      }\n      // Currently unhandled types: ArrayBufferView, ReadableStream\n    } catch (_a) {\n      // just return undefined\n    }\n    return undefined;\n  }\n  function _encode(input) {\n    if (_worldwide.RN_GLOBAL_OBJ.TextEncoder) {\n      return new _worldwide.RN_GLOBAL_OBJ.TextEncoder().encode(input);\n    }\n    return (0, _vendor.utf8ToBytes)(input);\n  }\n  function _serializeFormData(formData) {\n    // This is a bit simplified, but gives us a decent estimate\n    // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n    // @ts-expect-error passing FormData to URLSearchParams won't correctly serialize `File` entries, which is fine for this use-case. See https://github.com/microsoft/TypeScript/issues/30584\n    return new URLSearchParams(formData).toString();\n  }\n});","lineCount":57,"map":[[7,2,1,0],[7,6,1,0,"_worldwide"],[7,16,1,0],[7,19,1,0,"require"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,2,0],[8,6,2,0,"_vendor"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,3,0],[10,2,4,7],[10,11,4,16,"parseContentLengthHeader"],[10,35,4,40,"parseContentLengthHeader"],[10,36,4,41,"header"],[10,42,4,47],[10,44,4,49],[11,4,5,4],[11,8,5,8],[11,9,5,9,"header"],[11,15,5,15],[11,17,5,17],[12,6,6,8],[12,13,6,15,"undefined"],[12,22,6,24],[13,4,7,4],[14,4,8,4],[14,10,8,10,"size"],[14,14,8,14],[14,17,8,17,"parseInt"],[14,25,8,25],[14,26,8,26,"header"],[14,32,8,32],[14,34,8,34],[14,36,8,36],[14,37,8,37],[15,4,9,4],[15,11,9,11,"isNaN"],[15,16,9,16],[15,17,9,17,"size"],[15,21,9,21],[15,22,9,22],[15,25,9,25,"undefined"],[15,34,9,34],[15,37,9,37,"size"],[15,41,9,41],[16,2,10,0],[17,2,11,0],[18,2,12,7],[18,11,12,16,"getBodySize"],[18,22,12,27,"getBodySize"],[18,23,12,28,"body"],[18,27,12,32],[18,29,12,34],[19,4,13,4],[19,8,13,8],[19,9,13,9,"body"],[19,13,13,13],[19,15,13,15],[20,6,14,8],[20,13,14,15,"undefined"],[20,22,14,24],[21,4,15,4],[22,4,16,4],[22,8,16,8],[23,6,17,8],[23,10,17,12],[23,17,17,19,"body"],[23,21,17,23],[23,26,17,28],[23,34,17,36],[23,36,17,38],[24,8,18,12],[24,15,18,19,"_encode"],[24,22,18,26],[24,23,18,27,"body"],[24,27,18,31],[24,28,18,32],[24,29,18,33,"length"],[24,35,18,39],[25,6,19,8],[26,6,20,8],[26,10,20,12,"body"],[26,14,20,16],[26,26,20,28,"URLSearchParams"],[26,41,20,43],[26,43,20,45],[27,8,21,12],[27,15,21,19,"_encode"],[27,22,21,26],[27,23,21,27,"body"],[27,27,21,31],[27,28,21,32,"toString"],[27,36,21,40],[27,37,21,41],[27,38,21,42],[27,39,21,43],[27,40,21,44,"length"],[27,46,21,50],[28,6,22,8],[29,6,23,8],[29,10,23,12,"body"],[29,14,23,16],[29,26,23,28,"FormData"],[29,34,23,36],[29,36,23,38],[30,8,24,12],[30,14,24,18,"formDataStr"],[30,25,24,29],[30,28,24,32,"_serializeFormData"],[30,46,24,50],[30,47,24,51,"body"],[30,51,24,55],[30,52,24,56],[31,8,25,12],[31,15,25,19,"_encode"],[31,22,25,26],[31,23,25,27,"formDataStr"],[31,34,25,38],[31,35,25,39],[31,36,25,40,"length"],[31,42,25,46],[32,6,26,8],[33,6,27,8],[33,10,27,12,"body"],[33,14,27,16],[33,26,27,28,"Blob"],[33,30,27,32],[33,32,27,34],[34,8,28,12],[34,15,28,19,"body"],[34,19,28,23],[34,20,28,24,"size"],[34,24,28,28],[35,6,29,8],[36,6,30,8],[36,10,30,12,"body"],[36,14,30,16],[36,26,30,28,"ArrayBuffer"],[36,37,30,39],[36,39,30,41],[37,8,31,12],[37,15,31,19,"body"],[37,19,31,23],[37,20,31,24,"byteLength"],[37,30,31,34],[38,6,32,8],[39,6,33,8],[40,4,34,4],[40,5,34,5],[40,6,35,4],[40,13,35,11,"_a"],[40,15,35,13],[40,17,35,15],[41,6,36,8],[42,4,36,8],[43,4,38,4],[43,11,38,11,"undefined"],[43,20,38,20],[44,2,39,0],[45,2,40,0],[45,11,40,9,"_encode"],[45,18,40,16,"_encode"],[45,19,40,17,"input"],[45,24,40,22],[45,26,40,24],[46,4,41,4],[46,8,41,8,"RN_GLOBAL_OBJ"],[46,32,41,21],[46,33,41,22,"TextEncoder"],[46,44,41,33],[46,46,41,35],[47,6,42,8],[47,13,42,15],[47,17,42,19,"RN_GLOBAL_OBJ"],[47,41,42,32],[47,42,42,33,"TextEncoder"],[47,53,42,44],[47,54,42,45],[47,55,42,46],[47,56,42,47,"encode"],[47,62,42,53],[47,63,42,54,"input"],[47,68,42,59],[47,69,42,60],[48,4,43,4],[49,4,44,4],[49,11,44,11],[49,15,44,11,"utf8ToBytes"],[49,34,44,22],[49,36,44,23,"input"],[49,41,44,28],[49,42,44,29],[50,2,45,0],[51,2,46,0],[51,11,46,9,"_serializeFormData"],[51,29,46,27,"_serializeFormData"],[51,30,46,28,"formData"],[51,38,46,36],[51,40,46,38],[52,4,47,4],[53,4,48,4],[54,4,49,4],[55,4,50,4],[55,11,50,11],[55,15,50,15,"URLSearchParams"],[55,30,50,30],[55,31,50,31,"formData"],[55,39,50,39],[55,40,50,40],[55,41,50,41,"toString"],[55,49,50,49],[55,50,50,50],[55,51,50,51],[56,2,51,0],[57,0,51,1],[57,3]],"functionMap":{"names":["<global>","parseContentLengthHeader","getBodySize","_encode","_serializeFormData"],"mappings":"AAA;OCG;CDM;OEE;CF2B;AGC;CHK;AIC;CJK"}},"type":"js/module"}]}