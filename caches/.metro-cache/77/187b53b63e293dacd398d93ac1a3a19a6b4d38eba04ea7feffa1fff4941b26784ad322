{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.flatten = flatten;\n  /** Flattens a multi-dimensional array\n   *\n   * @deprecated This function is deprecated and will be removed in the next major version.\n   */\n  function flatten(input) {\n    const result = [];\n    const flattenHelper = input => {\n      input.forEach(el => {\n        if (Array.isArray(el)) {\n          flattenHelper(el);\n        } else {\n          result.push(el);\n        }\n      });\n    };\n    flattenHelper(input);\n    return result;\n  }\n});","lineCount":24,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,2,5,0],[10,11,5,9,"flatten"],[10,18,5,16,"flatten"],[10,19,5,17,"input"],[10,24,5,22],[10,26,5,24],[11,4,6,2],[11,10,6,8,"result"],[11,16,6,14],[11,19,6,17],[11,21,6,19],[12,4,8,2],[12,10,8,8,"flattenHelper"],[12,23,8,21],[12,26,8,25,"input"],[12,31,8,30],[12,35,8,35],[13,6,9,4,"input"],[13,11,9,9],[13,12,9,10,"forEach"],[13,19,9,17],[13,20,9,19,"el"],[13,22,9,21],[13,26,9,26],[14,8,10,6],[14,12,10,10,"Array"],[14,17,10,15],[14,18,10,16,"isArray"],[14,25,10,23],[14,26,10,24,"el"],[14,28,10,26],[14,29,10,27],[14,31,10,29],[15,10,11,8,"flattenHelper"],[15,23,11,21],[15,24,11,22,"el"],[15,26,11,25],[15,27,11,26],[16,8,12,6],[16,9,12,7],[16,15,12,13],[17,10,13,8,"result"],[17,16,13,14],[17,17,13,15,"push"],[17,21,13,19],[17,22,13,20,"el"],[17,24,13,23],[17,25,13,24],[18,8,14,6],[19,6,15,4],[19,7,15,5],[19,8,15,6],[20,4,16,2],[20,5,16,3],[21,4,18,2,"flattenHelper"],[21,17,18,15],[21,18,18,16,"input"],[21,23,18,21],[21,24,18,22],[22,4,19,2],[22,11,19,9,"result"],[22,17,19,15],[23,2,20,0],[24,0,20,1],[24,3]],"functionMap":{"names":["<global>","flatten","flattenHelper","input.forEach$argument_0"],"mappings":"AAA;ACI;wBCG;kBCC;KDM;GDC;CDI"}},"type":"js/module"}]}