{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":183,"index":183}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":184},"end":{"line":2,"column":37,"index":221}}],"key":"8cLkkKYebhz8179+ortY3/pylDg=","exportNames":["*"]}},{"name":"./cls.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":222},"end":{"line":3,"column":52,"index":274}}],"key":"/zaPXcJr72D8o2EpVfTDTJ4G4Vs=","exportNames":["*"]}},{"name":"./instrument.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":275},"end":{"line":4,"column":192,"index":467}}],"key":"/faGONMhKrqQj2KSLxxwco89Hvc=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":468},"end":{"line":5,"column":124,"index":592}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}},{"name":"./web-vitals/lib/getActivationStart.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":593},"end":{"line":6,"column":76,"index":669}}],"key":"7mZFfnIm7YgfirjU2vnMgx5FT6c=","exportNames":["*"]}},{"name":"./web-vitals/lib/getNavigationEntry.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":670},"end":{"line":7,"column":76,"index":746}}],"key":"wUr+iFGqeAafYrXZWqhjh7PgDMU=","exportNames":["*"]}},{"name":"./web-vitals/lib/getVisibilityWatcher.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":747},"end":{"line":8,"column":80,"index":827}}],"key":"agCQVBpCr5tKi0rsMvEcRAbrym4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports._addMeasureSpans = _addMeasureSpans;\n  exports._addResourceSpans = _addResourceSpans;\n  exports.addPerformanceEntries = addPerformanceEntries;\n  exports.startTrackingInteractions = startTrackingInteractions;\n  exports.startTrackingLongAnimationFrames = startTrackingLongAnimationFrames;\n  exports.startTrackingLongTasks = startTrackingLongTasks;\n  exports.startTrackingWebVitals = startTrackingWebVitals;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _types = require(_dependencyMap[1], \"../types.js\");\n  var _cls = require(_dependencyMap[2], \"./cls.js\");\n  var _instrument = require(_dependencyMap[3], \"./instrument.js\");\n  var _utils = require(_dependencyMap[4], \"./utils.js\");\n  var _getActivationStart = require(_dependencyMap[5], \"./web-vitals/lib/getActivationStart.js\");\n  var _getNavigationEntry = require(_dependencyMap[6], \"./web-vitals/lib/getNavigationEntry.js\");\n  var _getVisibilityWatcher = require(_dependencyMap[7], \"./web-vitals/lib/getVisibilityWatcher.js\");\n  const MAX_INT_AS_BYTES = 2147483647;\n  let _performanceCursor = 0;\n  let _measurements = {};\n  let _lcpEntry;\n  let _clsEntry;\n\n  /**\n   * Start tracking web vitals.\n   * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n   *\n   * @returns A function that forces web vitals collection\n   */\n  function startTrackingWebVitals({\n    recordClsStandaloneSpans\n  }) {\n    const performance = (0, _utils.getBrowserPerformanceAPI)();\n    if (performance && _core.browserPerformanceTimeOrigin) {\n      // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n      if (performance.mark) {\n        _types.WINDOW.performance.mark('sentry-tracing-init');\n      }\n      const fidCleanupCallback = _trackFID();\n      const lcpCleanupCallback = _trackLCP();\n      const ttfbCleanupCallback = _trackTtfb();\n      const clsCleanupCallback = recordClsStandaloneSpans ? (0, _cls.trackClsAsStandaloneSpan)() : _trackCLS();\n      return () => {\n        fidCleanupCallback();\n        lcpCleanupCallback();\n        ttfbCleanupCallback();\n        clsCleanupCallback && clsCleanupCallback();\n      };\n    }\n    return () => undefined;\n  }\n\n  /**\n   * Start tracking long tasks.\n   */\n  function startTrackingLongTasks() {\n    (0, _instrument.addPerformanceInstrumentationHandler)('longtask', ({\n      entries\n    }) => {\n      const parent = (0, _core.getActiveSpan)();\n      if (!parent) {\n        return;\n      }\n      const {\n        op: parentOp,\n        start_timestamp: parentStartTimestamp\n      } = (0, _core.spanToJSON)(parent);\n      for (const entry of entries) {\n        const startTime = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin + entry.startTime);\n        const duration = (0, _utils.msToSec)(entry.duration);\n        if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n          // Skip adding a span if the long task started before the navigation started.\n          // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n          // time, potentially skewing the duration of the actual navigation as reported via our\n          // routing instrumentations\n          continue;\n        }\n        (0, _utils.startAndEndSpan)(parent, startTime, startTime + duration, {\n          name: 'Main UI thread blocked',\n          op: 'ui.long-task',\n          attributes: {\n            [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Start tracking long animation frames.\n   */\n  function startTrackingLongAnimationFrames() {\n    // NOTE: the current web-vitals version (3.5.2) does not support long-animation-frame, so\n    // we directly observe `long-animation-frame` events instead of through the web-vitals\n    // `observe` helper function.\n    const observer = new PerformanceObserver(list => {\n      const parent = (0, _core.getActiveSpan)();\n      if (!parent) {\n        return;\n      }\n      for (const entry of list.getEntries()) {\n        if (!entry.scripts[0]) {\n          continue;\n        }\n        const startTime = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin + entry.startTime);\n        const {\n          start_timestamp: parentStartTimestamp,\n          op: parentOp\n        } = (0, _core.spanToJSON)(parent);\n        if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n          // Skip adding the span if the long animation frame started before the navigation started.\n          // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n          // time, potentially skewing the duration of the actual navigation as reported via our\n          // routing instrumentations\n          continue;\n        }\n        const duration = (0, _utils.msToSec)(entry.duration);\n        const attributes = {\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n        };\n        const initialScript = entry.scripts[0];\n        const {\n          invoker,\n          invokerType,\n          sourceURL,\n          sourceFunctionName,\n          sourceCharPosition\n        } = initialScript;\n        attributes['browser.script.invoker'] = invoker;\n        attributes['browser.script.invoker_type'] = invokerType;\n        if (sourceURL) {\n          attributes['code.filepath'] = sourceURL;\n        }\n        if (sourceFunctionName) {\n          attributes['code.function'] = sourceFunctionName;\n        }\n        if (sourceCharPosition !== -1) {\n          attributes['browser.script.source_char_position'] = sourceCharPosition;\n        }\n        (0, _utils.startAndEndSpan)(parent, startTime, startTime + duration, {\n          name: 'Main UI thread blocked',\n          op: 'ui.long-animation-frame',\n          attributes\n        });\n      }\n    });\n    observer.observe({\n      type: 'long-animation-frame',\n      buffered: true\n    });\n  }\n\n  /**\n   * Start tracking interaction events.\n   */\n  function startTrackingInteractions() {\n    (0, _instrument.addPerformanceInstrumentationHandler)('event', ({\n      entries\n    }) => {\n      const parent = (0, _core.getActiveSpan)();\n      if (!parent) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.name === 'click') {\n          const startTime = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin + entry.startTime);\n          const duration = (0, _utils.msToSec)(entry.duration);\n          const spanOptions = {\n            name: (0, _core.htmlTreeAsString)(entry.target),\n            op: `ui.interaction.${entry.name}`,\n            startTime: startTime,\n            attributes: {\n              [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n            }\n          };\n          const componentName = (0, _core.getComponentName)(entry.target);\n          if (componentName) {\n            spanOptions.attributes['ui.component_name'] = componentName;\n          }\n          (0, _utils.startAndEndSpan)(parent, startTime, startTime + duration, spanOptions);\n        }\n      }\n    });\n  }\n\n  /**\n   * Starts tracking the Cumulative Layout Shift on the current page and collects the value and last entry\n   * to the `_measurements` object which ultimately is applied to the pageload span's measurements.\n   */\n  function _trackCLS() {\n    return (0, _instrument.addClsInstrumentationHandler)(({\n      metric\n    }) => {\n      const entry = metric.entries[metric.entries.length - 1];\n      if (!entry) {\n        return;\n      }\n      _measurements['cls'] = {\n        value: metric.value,\n        unit: ''\n      };\n      _clsEntry = entry;\n    }, true);\n  }\n\n  /** Starts tracking the Largest Contentful Paint on the current page. */\n  function _trackLCP() {\n    return (0, _instrument.addLcpInstrumentationHandler)(({\n      metric\n    }) => {\n      const entry = metric.entries[metric.entries.length - 1];\n      if (!entry) {\n        return;\n      }\n      _measurements['lcp'] = {\n        value: metric.value,\n        unit: 'millisecond'\n      };\n      _lcpEntry = entry;\n    }, true);\n  }\n\n  /** Starts tracking the First Input Delay on the current page. */\n  function _trackFID() {\n    return (0, _instrument.addFidInstrumentationHandler)(({\n      metric\n    }) => {\n      const entry = metric.entries[metric.entries.length - 1];\n      if (!entry) {\n        return;\n      }\n      const timeOrigin = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin);\n      const startTime = (0, _utils.msToSec)(entry.startTime);\n      _measurements['fid'] = {\n        value: metric.value,\n        unit: 'millisecond'\n      };\n      _measurements['mark.fid'] = {\n        value: timeOrigin + startTime,\n        unit: 'second'\n      };\n    });\n  }\n  function _trackTtfb() {\n    return (0, _instrument.addTtfbInstrumentationHandler)(({\n      metric\n    }) => {\n      const entry = metric.entries[metric.entries.length - 1];\n      if (!entry) {\n        return;\n      }\n      _measurements['ttfb'] = {\n        value: metric.value,\n        unit: 'millisecond'\n      };\n    });\n  }\n\n  /** Add performance related spans to a transaction */\n  function addPerformanceEntries(span, options) {\n    const performance = (0, _utils.getBrowserPerformanceAPI)();\n    if (!performance || !performance.getEntries || !_core.browserPerformanceTimeOrigin) {\n      // Gatekeeper if performance API not available\n      return;\n    }\n    const timeOrigin = (0, _utils.msToSec)(_core.browserPerformanceTimeOrigin);\n    const performanceEntries = performance.getEntries();\n    const {\n      op,\n      start_timestamp: transactionStartTime\n    } = (0, _core.spanToJSON)(span);\n    performanceEntries.slice(_performanceCursor).forEach(entry => {\n      const startTime = (0, _utils.msToSec)(entry.startTime);\n      const duration = (0, _utils.msToSec)(\n      // Inexplicably, Chrome sometimes emits a negative duration. We need to work around this.\n      // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display\n      // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.\n      // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.\n      Math.max(0, entry.duration));\n      if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n        return;\n      }\n      switch (entry.entryType) {\n        case 'navigation':\n          {\n            _addNavigationSpans(span, entry, timeOrigin);\n            break;\n          }\n        case 'mark':\n        case 'paint':\n        case 'measure':\n          {\n            _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n            // capture web vitals\n            const firstHidden = (0, _getVisibilityWatcher.getVisibilityWatcher)();\n            // Only report if the page wasn't hidden prior to the web vital.\n            const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n            if (entry.name === 'first-paint' && shouldRecord) {\n              _measurements['fp'] = {\n                value: entry.startTime,\n                unit: 'millisecond'\n              };\n            }\n            if (entry.name === 'first-contentful-paint' && shouldRecord) {\n              _measurements['fcp'] = {\n                value: entry.startTime,\n                unit: 'millisecond'\n              };\n            }\n            break;\n          }\n        case 'resource':\n          {\n            _addResourceSpans(span, entry, entry.name, startTime, duration, timeOrigin);\n            break;\n          }\n        // Ignore other entry types.\n      }\n    });\n    _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n    _trackNavigator(span);\n\n    // Measurements are only available for pageload transactions\n    if (op === 'pageload') {\n      _addTtfbRequestTimeToMeasurements(_measurements);\n      const fidMark = _measurements['mark.fid'];\n      if (fidMark && _measurements['fid']) {\n        // create span for FID\n        (0, _utils.startAndEndSpan)(span, fidMark.value, fidMark.value + (0, _utils.msToSec)(_measurements['fid'].value), {\n          name: 'first input delay',\n          op: 'ui.action',\n          attributes: {\n            [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n          }\n        });\n\n        // Delete mark.fid as we don't want it to be part of final payload\n        delete _measurements['mark.fid'];\n      }\n\n      // If FCP is not recorded we should not record the cls value\n      // according to the new definition of CLS.\n      // TODO: Check if the first condition is still necessary: `onCLS` already only fires once `onFCP` was called.\n      if (!('fcp' in _measurements) || !options.recordClsOnPageloadSpan) {\n        delete _measurements.cls;\n      }\n      Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n        (0, _core.setMeasurement)(measurementName, measurement.value, measurement.unit);\n      });\n\n      // Set timeOrigin which denotes the timestamp which to base the LCP/FCP/FP/TTFB measurements on\n      span.setAttribute('performance.timeOrigin', timeOrigin);\n\n      // In prerendering scenarios, where a page might be prefetched and pre-rendered before the user clicks the link,\n      // the navigation starts earlier than when the user clicks it. Web Vitals should always be based on the\n      // user-perceived time, so they are not reported from the actual start of the navigation, but rather from the\n      // time where the user actively started the navigation, for example by clicking a link.\n      // This is user action is called \"activation\" and the time between navigation and activation is stored in\n      // the `activationStart` attribute of the \"navigation\" PerformanceEntry.\n      span.setAttribute('performance.activationStart', (0, _getActivationStart.getActivationStart)());\n      _setWebVitalAttributes(span);\n    }\n    _lcpEntry = undefined;\n    _clsEntry = undefined;\n    _measurements = {};\n  }\n\n  /**\n   * Create measure related spans.\n   * Exported only for tests.\n   */\n  function _addMeasureSpans(span, entry, startTime, duration, timeOrigin) {\n    const navEntry = (0, _getNavigationEntry.getNavigationEntry)(false);\n    const requestTime = (0, _utils.msToSec)(navEntry ? navEntry.requestStart : 0);\n    // Because performance.measure accepts arbitrary timestamps it can produce\n    // spans that happen before the browser even makes a request for the page.\n    //\n    // An example of this is the automatically generated Next.js-before-hydration\n    // spans created by the Next.js framework.\n    //\n    // To prevent this we will pin the start timestamp to the request start time\n    // This does make duration inaccurate, so if this does happen, we will add\n    // an attribute to the span\n    const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n    const startTimeStamp = timeOrigin + startTime;\n    const measureEndTimestamp = startTimeStamp + duration;\n    const attributes = {\n      [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics'\n    };\n    if (measureStartTimestamp !== startTimeStamp) {\n      attributes['sentry.browser.measure_happened_before_request'] = true;\n      attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n    }\n    (0, _utils.startAndEndSpan)(span, measureStartTimestamp, measureEndTimestamp, {\n      name: entry.name,\n      op: entry.entryType,\n      attributes\n    });\n    return measureStartTimestamp;\n  }\n\n  /** Instrument navigation entries */\n  function _addNavigationSpans(span, entry, timeOrigin) {\n    ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n      _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n    });\n    _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL');\n    _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache');\n    _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n    _addRequest(span, entry, timeOrigin);\n  }\n\n  /** Create performance navigation related spans */\n  function _addPerformanceNavigationTiming(span, entry, event, timeOrigin, name = event) {\n    const eventEnd = _getEndPropertyNameForNavigationTiming(event);\n    const end = entry[eventEnd];\n    const start = entry[`${event}Start`];\n    if (!start || !end) {\n      return;\n    }\n    (0, _utils.startAndEndSpan)(span, timeOrigin + (0, _utils.msToSec)(start), timeOrigin + (0, _utils.msToSec)(end), {\n      op: `browser.${name}`,\n      name: entry.name,\n      attributes: {\n        [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n      }\n    });\n  }\n  function _getEndPropertyNameForNavigationTiming(event) {\n    if (event === 'secureConnection') {\n      return 'connectEnd';\n    }\n    if (event === 'fetch') {\n      return 'domainLookupStart';\n    }\n    return `${event}End`;\n  }\n\n  /** Create request and response related spans */\n  function _addRequest(span, entry, timeOrigin) {\n    const requestStartTimestamp = timeOrigin + (0, _utils.msToSec)(entry.requestStart);\n    const responseEndTimestamp = timeOrigin + (0, _utils.msToSec)(entry.responseEnd);\n    const responseStartTimestamp = timeOrigin + (0, _utils.msToSec)(entry.responseStart);\n    if (entry.responseEnd) {\n      // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n      // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n      // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n      // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n      (0, _utils.startAndEndSpan)(span, requestStartTimestamp, responseEndTimestamp, {\n        op: 'browser.request',\n        name: entry.name,\n        attributes: {\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n        }\n      });\n      (0, _utils.startAndEndSpan)(span, responseStartTimestamp, responseEndTimestamp, {\n        op: 'browser.response',\n        name: entry.name,\n        attributes: {\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics'\n        }\n      });\n    }\n  }\n\n  /**\n   * Create resource-related spans.\n   * Exported only for tests.\n   */\n  function _addResourceSpans(span, entry, resourceUrl, startTime, duration, timeOrigin) {\n    // we already instrument based on fetch and xhr, so we don't need to\n    // duplicate spans here.\n    if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n      return;\n    }\n    const parsedUrl = (0, _core.parseUrl)(resourceUrl);\n    const attributes = {\n      [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics'\n    };\n    setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n    setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n    setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n    // `deliveryType` is experimental and does not exist everywhere\n    const deliveryType = entry.deliveryType;\n    if (deliveryType != null) {\n      attributes['http.response_delivery_type'] = deliveryType;\n    }\n\n    // Types do not reflect this property yet\n    const renderBlockingStatus = entry.renderBlockingStatus;\n    if (renderBlockingStatus) {\n      attributes['resource.render_blocking_status'] = renderBlockingStatus;\n    }\n    if (parsedUrl.protocol) {\n      attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n    }\n    if (parsedUrl.host) {\n      attributes['server.address'] = parsedUrl.host;\n    }\n    attributes['url.same_origin'] = resourceUrl.includes(_types.WINDOW.location.origin);\n    const {\n      name,\n      version\n    } = (0, _utils.extractNetworkProtocol)(entry.nextHopProtocol);\n    attributes['network.protocol.name'] = name;\n    attributes['network.protocol.version'] = version;\n    const startTimestamp = timeOrigin + startTime;\n    const endTimestamp = startTimestamp + duration;\n    (0, _utils.startAndEndSpan)(span, startTimestamp, endTimestamp, {\n      name: resourceUrl.replace(_types.WINDOW.location.origin, ''),\n      op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n      attributes\n    });\n  }\n\n  /**\n   * Capture the information of the user agent.\n   */\n  function _trackNavigator(span) {\n    const navigator = _types.WINDOW.navigator;\n    if (!navigator) {\n      return;\n    }\n\n    // track network connectivity\n    const connection = navigator.connection;\n    if (connection) {\n      if (connection.effectiveType) {\n        span.setAttribute('effectiveConnectionType', connection.effectiveType);\n      }\n      if (connection.type) {\n        span.setAttribute('connectionType', connection.type);\n      }\n      if ((0, _utils.isMeasurementValue)(connection.rtt)) {\n        _measurements['connection.rtt'] = {\n          value: connection.rtt,\n          unit: 'millisecond'\n        };\n      }\n    }\n    if ((0, _utils.isMeasurementValue)(navigator.deviceMemory)) {\n      span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n    }\n    if ((0, _utils.isMeasurementValue)(navigator.hardwareConcurrency)) {\n      span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n    }\n  }\n\n  /** Add LCP / CLS data to span to allow debugging */\n  function _setWebVitalAttributes(span) {\n    if (_lcpEntry) {\n      // Capture Properties of the LCP element that contributes to the LCP.\n\n      if (_lcpEntry.element) {\n        span.setAttribute('lcp.element', (0, _core.htmlTreeAsString)(_lcpEntry.element));\n      }\n      if (_lcpEntry.id) {\n        span.setAttribute('lcp.id', _lcpEntry.id);\n      }\n      if (_lcpEntry.url) {\n        // Trim URL to the first 200 characters.\n        span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n      }\n      if (_lcpEntry.loadTime != null) {\n        // loadTime is the time of LCP that's related to receiving the LCP element response..\n        span.setAttribute('lcp.loadTime', _lcpEntry.loadTime);\n      }\n      if (_lcpEntry.renderTime != null) {\n        // renderTime is loadTime + rendering time\n        // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n        // `Timing-Allow-Origin` header.\n        span.setAttribute('lcp.renderTime', _lcpEntry.renderTime);\n      }\n      span.setAttribute('lcp.size', _lcpEntry.size);\n    }\n\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n    if (_clsEntry && _clsEntry.sources) {\n      _clsEntry.sources.forEach((source, index) => span.setAttribute(`cls.source.${index + 1}`, (0, _core.htmlTreeAsString)(source.node)));\n    }\n  }\n  function setResourceEntrySizeData(attributes, entry, key, dataKey) {\n    const entryVal = entry[key];\n    if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n      attributes[dataKey] = entryVal;\n    }\n  }\n\n  /**\n   * Add ttfb request time information to measurements.\n   *\n   * ttfb information is added via vendored web vitals library.\n   */\n  function _addTtfbRequestTimeToMeasurements(_measurements) {\n    const navEntry = (0, _getNavigationEntry.getNavigationEntry)(false);\n    if (!navEntry) {\n      return;\n    }\n    const {\n      responseStart,\n      requestStart\n    } = navEntry;\n    if (requestStart <= responseStart) {\n      _measurements['ttfb.requestTime'] = {\n        value: responseStart - requestStart,\n        unit: 'millisecond'\n      };\n    }\n  }\n});","lineCount":614,"map":[[12,2,1,0],[12,6,1,0,"_core"],[12,11,1,0],[12,14,1,0,"require"],[12,21,1,0],[12,22,1,0,"_dependencyMap"],[12,36,1,0],[13,2,2,0],[13,6,2,0,"_types"],[13,12,2,0],[13,15,2,0,"require"],[13,22,2,0],[13,23,2,0,"_dependencyMap"],[13,37,2,0],[14,2,3,0],[14,6,3,0,"_cls"],[14,10,3,0],[14,13,3,0,"require"],[14,20,3,0],[14,21,3,0,"_dependencyMap"],[14,35,3,0],[15,2,4,0],[15,6,4,0,"_instrument"],[15,17,4,0],[15,20,4,0,"require"],[15,27,4,0],[15,28,4,0,"_dependencyMap"],[15,42,4,0],[16,2,5,0],[16,6,5,0,"_utils"],[16,12,5,0],[16,15,5,0,"require"],[16,22,5,0],[16,23,5,0,"_dependencyMap"],[16,37,5,0],[17,2,6,0],[17,6,6,0,"_getActivationStart"],[17,25,6,0],[17,28,6,0,"require"],[17,35,6,0],[17,36,6,0,"_dependencyMap"],[17,50,6,0],[18,2,7,0],[18,6,7,0,"_getNavigationEntry"],[18,25,7,0],[18,28,7,0,"require"],[18,35,7,0],[18,36,7,0,"_dependencyMap"],[18,50,7,0],[19,2,8,0],[19,6,8,0,"_getVisibilityWatcher"],[19,27,8,0],[19,30,8,0,"require"],[19,37,8,0],[19,38,8,0,"_dependencyMap"],[19,52,8,0],[20,2,10,0],[20,8,10,6,"MAX_INT_AS_BYTES"],[20,24,10,22],[20,27,10,25],[20,37,10,35],[21,2,12,0],[21,6,12,4,"_performanceCursor"],[21,24,12,22],[21,27,12,25],[21,28,12,26],[22,2,14,0],[22,6,14,4,"_measurements"],[22,19,14,17],[22,22,14,20],[22,23,14,21],[22,24,14,22],[23,2,15,0],[23,6,15,4,"_lcpEntry"],[23,15,15,13],[24,2,16,0],[24,6,16,4,"_clsEntry"],[24,15,16,13],[26,2,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,2,24,0],[32,11,24,9,"startTrackingWebVitals"],[32,33,24,31,"startTrackingWebVitals"],[32,34,24,32],[33,4,24,34,"recordClsStandaloneSpans"],[34,2,24,59],[34,3,24,60],[34,5,24,62],[35,4,25,2],[35,10,25,8,"performance"],[35,21,25,19],[35,24,25,22],[35,28,25,22,"getBrowserPerformanceAPI"],[35,59,25,46],[35,61,25,47],[35,62,25,48],[36,4,26,2],[36,8,26,6,"performance"],[36,19,26,17],[36,23,26,21,"browserPerformanceTimeOrigin"],[36,57,26,49],[36,59,26,51],[37,6,27,4],[38,6,28,4],[38,10,28,8,"performance"],[38,21,28,19],[38,22,28,20,"mark"],[38,26,28,24],[38,28,28,26],[39,8,29,6,"WINDOW"],[39,21,29,12],[39,22,29,13,"performance"],[39,33,29,24],[39,34,29,25,"mark"],[39,38,29,29],[39,39,29,30],[39,60,29,51],[39,61,29,52],[40,6,30,4],[41,6,31,4],[41,12,31,10,"fidCleanupCallback"],[41,30,31,28],[41,33,31,31,"_trackFID"],[41,42,31,40],[41,43,31,41],[41,44,31,42],[42,6,32,4],[42,12,32,10,"lcpCleanupCallback"],[42,30,32,28],[42,33,32,31,"_trackLCP"],[42,42,32,40],[42,43,32,41],[42,44,32,42],[43,6,33,4],[43,12,33,10,"ttfbCleanupCallback"],[43,31,33,29],[43,34,33,32,"_trackTtfb"],[43,44,33,42],[43,45,33,43],[43,46,33,44],[44,6,34,4],[44,12,34,10,"clsCleanupCallback"],[44,30,34,28],[44,33,34,31,"recordClsStandaloneSpans"],[44,57,34,55],[44,60,34,58],[44,64,34,58,"trackClsAsStandaloneSpan"],[44,93,34,82],[44,95,34,83],[44,96,34,84],[44,99,34,87,"_trackCLS"],[44,108,34,96],[44,109,34,97],[44,110,34,98],[45,6,36,4],[45,13,36,11],[45,19,36,17],[46,8,37,6,"fidCleanupCallback"],[46,26,37,24],[46,27,37,25],[46,28,37,26],[47,8,38,6,"lcpCleanupCallback"],[47,26,38,24],[47,27,38,25],[47,28,38,26],[48,8,39,6,"ttfbCleanupCallback"],[48,27,39,25],[48,28,39,26],[48,29,39,27],[49,8,40,6,"clsCleanupCallback"],[49,26,40,24],[49,30,40,28,"clsCleanupCallback"],[49,48,40,46],[49,49,40,47],[49,50,40,48],[50,6,41,4],[50,7,41,5],[51,4,42,2],[52,4,44,2],[52,11,44,9],[52,17,44,15,"undefined"],[52,26,44,24],[53,2,45,0],[55,2,47,0],[56,0,48,0],[57,0,49,0],[58,2,50,0],[58,11,50,9,"startTrackingLongTasks"],[58,33,50,31,"startTrackingLongTasks"],[58,34,50,31],[58,36,50,34],[59,4,51,2],[59,8,51,2,"addPerformanceInstrumentationHandler"],[59,56,51,38],[59,58,51,39],[59,68,51,49],[59,70,51,51],[59,71,51,52],[60,6,51,54,"entries"],[61,4,51,62],[61,5,51,63],[61,10,51,68],[62,6,52,4],[62,12,52,10,"parent"],[62,18,52,16],[62,21,52,19],[62,25,52,19,"getActiveSpan"],[62,44,52,32],[62,46,52,33],[62,47,52,34],[63,6,53,4],[63,10,53,8],[63,11,53,9,"parent"],[63,17,53,15],[63,19,53,17],[64,8,54,6],[65,6,55,4],[66,6,57,4],[66,12,57,10],[67,8,57,12,"op"],[67,10,57,14],[67,12,57,16,"parentOp"],[67,20,57,24],[68,8,57,26,"start_timestamp"],[68,23,57,41],[68,25,57,43,"parentStartTimestamp"],[69,6,57,64],[69,7,57,65],[69,10,57,68],[69,14,57,68,"spanToJSON"],[69,30,57,78],[69,32,57,79,"parent"],[69,38,57,85],[69,39,57,86],[70,6,59,4],[70,11,59,9],[70,17,59,15,"entry"],[70,22,59,20],[70,26,59,24,"entries"],[70,33,59,31],[70,35,59,33],[71,8,60,6],[71,14,60,12,"startTime"],[71,23,60,21],[71,26,60,24],[71,30,60,24,"msToSec"],[71,44,60,31],[71,46,60,33,"browserPerformanceTimeOrigin"],[71,80,60,61],[71,83,60,66,"entry"],[71,88,60,71],[71,89,60,72,"startTime"],[71,98,60,81],[71,99,60,82],[72,8,61,6],[72,14,61,12,"duration"],[72,22,61,20],[72,25,61,23],[72,29,61,23,"msToSec"],[72,43,61,30],[72,45,61,31,"entry"],[72,50,61,36],[72,51,61,37,"duration"],[72,59,61,45],[72,60,61,46],[73,8,63,6],[73,12,63,10,"parentOp"],[73,20,63,18],[73,25,63,23],[73,37,63,35],[73,41,63,39,"parentStartTimestamp"],[73,61,63,59],[73,65,63,63,"startTime"],[73,74,63,72],[73,77,63,75,"parentStartTimestamp"],[73,97,63,95],[73,99,63,97],[74,10,64,8],[75,10,65,8],[76,10,66,8],[77,10,67,8],[78,10,68,8],[79,8,69,6],[80,8,71,6],[80,12,71,6,"startAndEndSpan"],[80,34,71,21],[80,36,71,22,"parent"],[80,42,71,28],[80,44,71,30,"startTime"],[80,53,71,39],[80,55,71,41,"startTime"],[80,64,71,50],[80,67,71,53,"duration"],[80,75,71,61],[80,77,71,63],[81,10,72,8,"name"],[81,14,72,12],[81,16,72,14],[81,40,72,38],[82,10,73,8,"op"],[82,12,73,10],[82,14,73,12],[82,28,73,26],[83,10,74,8,"attributes"],[83,20,74,18],[83,22,74,20],[84,12,75,10],[84,13,75,11,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[84,51,75,43],[84,54,75,46],[85,10,76,8],[86,8,77,6],[86,9,77,7],[86,10,77,8],[87,6,78,4],[88,4,79,2],[88,5,79,3],[88,6,79,4],[89,2,80,0],[91,2,82,0],[92,0,83,0],[93,0,84,0],[94,2,85,0],[94,11,85,9,"startTrackingLongAnimationFrames"],[94,43,85,41,"startTrackingLongAnimationFrames"],[94,44,85,41],[94,46,85,44],[95,4,86,2],[96,4,87,2],[97,4,88,2],[98,4,89,2],[98,10,89,8,"observer"],[98,18,89,16],[98,21,89,19],[98,25,89,23,"PerformanceObserver"],[98,44,89,42],[98,45,89,43,"list"],[98,49,89,47],[98,53,89,51],[99,6,90,4],[99,12,90,10,"parent"],[99,18,90,16],[99,21,90,19],[99,25,90,19,"getActiveSpan"],[99,44,90,32],[99,46,90,33],[99,47,90,34],[100,6,91,4],[100,10,91,8],[100,11,91,9,"parent"],[100,17,91,15],[100,19,91,17],[101,8,92,6],[102,6,93,4],[103,6,94,4],[103,11,94,9],[103,17,94,15,"entry"],[103,22,94,20],[103,26,94,24,"list"],[103,30,94,28],[103,31,94,29,"getEntries"],[103,41,94,39],[103,42,94,40],[103,43,94,41],[103,45,94,44],[104,8,95,6],[104,12,95,10],[104,13,95,11,"entry"],[104,18,95,16],[104,19,95,17,"scripts"],[104,26,95,24],[104,27,95,25],[104,28,95,26],[104,29,95,27],[104,31,95,29],[105,10,96,8],[106,8,97,6],[107,8,99,6],[107,14,99,12,"startTime"],[107,23,99,21],[107,26,99,24],[107,30,99,24,"msToSec"],[107,44,99,31],[107,46,99,33,"browserPerformanceTimeOrigin"],[107,80,99,61],[107,83,99,66,"entry"],[107,88,99,71],[107,89,99,72,"startTime"],[107,98,99,81],[107,99,99,82],[108,8,101,6],[108,14,101,12],[109,10,101,14,"start_timestamp"],[109,25,101,29],[109,27,101,31,"parentStartTimestamp"],[109,47,101,51],[110,10,101,53,"op"],[110,12,101,55],[110,14,101,57,"parentOp"],[111,8,101,66],[111,9,101,67],[111,12,101,70],[111,16,101,70,"spanToJSON"],[111,32,101,80],[111,34,101,81,"parent"],[111,40,101,87],[111,41,101,88],[112,8,103,6],[112,12,103,10,"parentOp"],[112,20,103,18],[112,25,103,23],[112,37,103,35],[112,41,103,39,"parentStartTimestamp"],[112,61,103,59],[112,65,103,63,"startTime"],[112,74,103,72],[112,77,103,75,"parentStartTimestamp"],[112,97,103,95],[112,99,103,97],[113,10,104,8],[114,10,105,8],[115,10,106,8],[116,10,107,8],[117,10,108,8],[118,8,109,6],[119,8,111,6],[119,14,111,12,"duration"],[119,22,111,20],[119,25,111,23],[119,29,111,23,"msToSec"],[119,43,111,30],[119,45,111,31,"entry"],[119,50,111,36],[119,51,111,37,"duration"],[119,59,111,45],[119,60,111,46],[120,8,113,6],[120,14,113,12,"attributes"],[120,24,113,22],[120,27,113,25],[121,10,114,8],[121,11,114,9,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[121,49,114,41],[121,52,114,44],[122,8,115,6],[122,9,115,7],[123,8,117,6],[123,14,117,12,"initialScript"],[123,27,117,25],[123,30,117,28,"entry"],[123,35,117,33],[123,36,117,34,"scripts"],[123,43,117,41],[123,44,117,42],[123,45,117,43],[123,46,117,44],[124,8,118,6],[124,14,118,12],[125,10,118,14,"invoker"],[125,17,118,21],[126,10,118,23,"invokerType"],[126,21,118,34],[127,10,118,36,"sourceURL"],[127,19,118,45],[128,10,118,47,"sourceFunctionName"],[128,28,118,65],[129,10,118,67,"sourceCharPosition"],[130,8,118,86],[130,9,118,87],[130,12,118,90,"initialScript"],[130,25,118,103],[131,8,119,6,"attributes"],[131,18,119,16],[131,19,119,17],[131,43,119,41],[131,44,119,42],[131,47,119,45,"invoker"],[131,54,119,52],[132,8,120,6,"attributes"],[132,18,120,16],[132,19,120,17],[132,48,120,46],[132,49,120,47],[132,52,120,50,"invokerType"],[132,63,120,61],[133,8,121,6],[133,12,121,10,"sourceURL"],[133,21,121,19],[133,23,121,21],[134,10,122,8,"attributes"],[134,20,122,18],[134,21,122,19],[134,36,122,34],[134,37,122,35],[134,40,122,38,"sourceURL"],[134,49,122,47],[135,8,123,6],[136,8,124,6],[136,12,124,10,"sourceFunctionName"],[136,30,124,28],[136,32,124,30],[137,10,125,8,"attributes"],[137,20,125,18],[137,21,125,19],[137,36,125,34],[137,37,125,35],[137,40,125,38,"sourceFunctionName"],[137,58,125,56],[138,8,126,6],[139,8,127,6],[139,12,127,10,"sourceCharPosition"],[139,30,127,28],[139,35,127,33],[139,36,127,34],[139,37,127,35],[139,39,127,37],[140,10,128,8,"attributes"],[140,20,128,18],[140,21,128,19],[140,58,128,56],[140,59,128,57],[140,62,128,60,"sourceCharPosition"],[140,80,128,78],[141,8,129,6],[142,8,131,6],[142,12,131,6,"startAndEndSpan"],[142,34,131,21],[142,36,131,22,"parent"],[142,42,131,28],[142,44,131,30,"startTime"],[142,53,131,39],[142,55,131,41,"startTime"],[142,64,131,50],[142,67,131,53,"duration"],[142,75,131,61],[142,77,131,63],[143,10,132,8,"name"],[143,14,132,12],[143,16,132,14],[143,40,132,38],[144,10,133,8,"op"],[144,12,133,10],[144,14,133,12],[144,39,133,37],[145,10,134,8,"attributes"],[146,8,135,6],[146,9,135,7],[146,10,135,8],[147,6,136,4],[148,4,137,2],[148,5,137,3],[148,6,137,4],[149,4,139,2,"observer"],[149,12,139,10],[149,13,139,11,"observe"],[149,20,139,18],[149,21,139,19],[150,6,139,21,"type"],[150,10,139,25],[150,12,139,27],[150,34,139,49],[151,6,139,51,"buffered"],[151,14,139,59],[151,16,139,61],[152,4,139,66],[152,5,139,67],[152,6,139,68],[153,2,140,0],[155,2,142,0],[156,0,143,0],[157,0,144,0],[158,2,145,0],[158,11,145,9,"startTrackingInteractions"],[158,36,145,34,"startTrackingInteractions"],[158,37,145,34],[158,39,145,37],[159,4,146,2],[159,8,146,2,"addPerformanceInstrumentationHandler"],[159,56,146,38],[159,58,146,39],[159,65,146,46],[159,67,146,48],[159,68,146,49],[160,6,146,51,"entries"],[161,4,146,59],[161,5,146,60],[161,10,146,65],[162,6,147,4],[162,12,147,10,"parent"],[162,18,147,16],[162,21,147,19],[162,25,147,19,"getActiveSpan"],[162,44,147,32],[162,46,147,33],[162,47,147,34],[163,6,148,4],[163,10,148,8],[163,11,148,9,"parent"],[163,17,148,15],[163,19,148,17],[164,8,149,6],[165,6,150,4],[166,6,151,4],[166,11,151,9],[166,17,151,15,"entry"],[166,22,151,20],[166,26,151,24,"entries"],[166,33,151,31],[166,35,151,33],[167,8,152,6],[167,12,152,10,"entry"],[167,17,152,15],[167,18,152,16,"name"],[167,22,152,20],[167,27,152,25],[167,34,152,32],[167,36,152,34],[168,10,153,8],[168,16,153,14,"startTime"],[168,25,153,23],[168,28,153,26],[168,32,153,26,"msToSec"],[168,46,153,33],[168,48,153,35,"browserPerformanceTimeOrigin"],[168,82,153,63],[168,85,153,68,"entry"],[168,90,153,73],[168,91,153,74,"startTime"],[168,100,153,83],[168,101,153,84],[169,10,154,8],[169,16,154,14,"duration"],[169,24,154,22],[169,27,154,25],[169,31,154,25,"msToSec"],[169,45,154,32],[169,47,154,33,"entry"],[169,52,154,38],[169,53,154,39,"duration"],[169,61,154,47],[169,62,154,48],[170,10,156,8],[170,16,156,14,"spanOptions"],[170,27,156,25],[170,30,156,28],[171,12,157,10,"name"],[171,16,157,14],[171,18,157,16],[171,22,157,16,"htmlTreeAsString"],[171,44,157,32],[171,46,157,33,"entry"],[171,51,157,38],[171,52,157,39,"target"],[171,58,157,45],[171,59,157,46],[172,12,158,10,"op"],[172,14,158,12],[172,16,158,14],[172,34,158,32,"entry"],[172,39,158,37],[172,40,158,38,"name"],[172,44,158,42],[172,46,158,44],[173,12,159,10,"startTime"],[173,21,159,19],[173,23,159,21,"startTime"],[173,32,159,30],[174,12,160,10,"attributes"],[174,22,160,20],[174,24,160,22],[175,14,161,12],[175,15,161,13,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[175,53,161,45],[175,56,161,48],[176,12,162,10],[177,10,163,8],[177,11,163,9],[178,10,165,8],[178,16,165,14,"componentName"],[178,29,165,27],[178,32,165,30],[178,36,165,30,"getComponentName"],[178,58,165,46],[178,60,165,47,"entry"],[178,65,165,52],[178,66,165,53,"target"],[178,72,165,59],[178,73,165,60],[179,10,166,8],[179,14,166,12,"componentName"],[179,27,166,25],[179,29,166,27],[180,12,167,10,"spanOptions"],[180,23,167,21],[180,24,167,22,"attributes"],[180,34,167,32],[180,35,167,33],[180,54,167,52],[180,55,167,53],[180,58,167,56,"componentName"],[180,71,167,69],[181,10,168,8],[182,10,170,8],[182,14,170,8,"startAndEndSpan"],[182,36,170,23],[182,38,170,24,"parent"],[182,44,170,30],[182,46,170,32,"startTime"],[182,55,170,41],[182,57,170,43,"startTime"],[182,66,170,52],[182,69,170,55,"duration"],[182,77,170,63],[182,79,170,65,"spanOptions"],[182,90,170,76],[182,91,170,77],[183,8,171,6],[184,6,172,4],[185,4,173,2],[185,5,173,3],[185,6,173,4],[186,2,174,0],[188,2,176,0],[189,0,177,0],[190,0,178,0],[191,0,179,0],[192,2,180,0],[192,11,180,9,"_trackCLS"],[192,20,180,18,"_trackCLS"],[192,21,180,18],[192,23,180,21],[193,4,181,2],[193,11,181,9],[193,15,181,9,"addClsInstrumentationHandler"],[193,55,181,37],[193,57,181,38],[193,58,181,39],[194,6,181,41,"metric"],[195,4,181,48],[195,5,181,49],[195,10,181,54],[196,6,182,4],[196,12,182,10,"entry"],[196,17,182,15],[196,20,182,18,"metric"],[196,26,182,24],[196,27,182,25,"entries"],[196,34,182,32],[196,35,182,33,"metric"],[196,41,182,39],[196,42,182,40,"entries"],[196,49,182,47],[196,50,182,48,"length"],[196,56,182,54],[196,59,182,57],[196,60,182,58],[196,61,182,59],[197,6,183,4],[197,10,183,8],[197,11,183,9,"entry"],[197,16,183,14],[197,18,183,16],[198,8,184,6],[199,6,185,4],[200,6,186,4,"_measurements"],[200,19,186,17],[200,20,186,18],[200,25,186,23],[200,26,186,24],[200,29,186,27],[201,8,186,29,"value"],[201,13,186,34],[201,15,186,36,"metric"],[201,21,186,42],[201,22,186,43,"value"],[201,27,186,48],[202,8,186,50,"unit"],[202,12,186,54],[202,14,186,56],[203,6,186,59],[203,7,186,60],[204,6,187,4,"_clsEntry"],[204,15,187,13],[204,18,187,16,"entry"],[204,23,187,21],[205,4,188,2],[205,5,188,3],[205,7,188,5],[205,11,188,9],[205,12,188,10],[206,2,189,0],[208,2,191,0],[209,2,192,0],[209,11,192,9,"_trackLCP"],[209,20,192,18,"_trackLCP"],[209,21,192,18],[209,23,192,21],[210,4,193,2],[210,11,193,9],[210,15,193,9,"addLcpInstrumentationHandler"],[210,55,193,37],[210,57,193,38],[210,58,193,39],[211,6,193,41,"metric"],[212,4,193,48],[212,5,193,49],[212,10,193,54],[213,6,194,4],[213,12,194,10,"entry"],[213,17,194,15],[213,20,194,18,"metric"],[213,26,194,24],[213,27,194,25,"entries"],[213,34,194,32],[213,35,194,33,"metric"],[213,41,194,39],[213,42,194,40,"entries"],[213,49,194,47],[213,50,194,48,"length"],[213,56,194,54],[213,59,194,57],[213,60,194,58],[213,61,194,59],[214,6,195,4],[214,10,195,8],[214,11,195,9,"entry"],[214,16,195,14],[214,18,195,16],[215,8,196,6],[216,6,197,4],[217,6,199,4,"_measurements"],[217,19,199,17],[217,20,199,18],[217,25,199,23],[217,26,199,24],[217,29,199,27],[218,8,199,29,"value"],[218,13,199,34],[218,15,199,36,"metric"],[218,21,199,42],[218,22,199,43,"value"],[218,27,199,48],[219,8,199,50,"unit"],[219,12,199,54],[219,14,199,56],[220,6,199,70],[220,7,199,71],[221,6,200,4,"_lcpEntry"],[221,15,200,13],[221,18,200,16,"entry"],[221,23,200,21],[222,4,201,2],[222,5,201,3],[222,7,201,5],[222,11,201,9],[222,12,201,10],[223,2,202,0],[225,2,204,0],[226,2,205,0],[226,11,205,9,"_trackFID"],[226,20,205,18,"_trackFID"],[226,21,205,18],[226,23,205,21],[227,4,206,2],[227,11,206,9],[227,15,206,9,"addFidInstrumentationHandler"],[227,55,206,37],[227,57,206,38],[227,58,206,39],[228,6,206,41,"metric"],[229,4,206,48],[229,5,206,49],[229,10,206,54],[230,6,207,4],[230,12,207,10,"entry"],[230,17,207,15],[230,20,207,18,"metric"],[230,26,207,24],[230,27,207,25,"entries"],[230,34,207,32],[230,35,207,33,"metric"],[230,41,207,39],[230,42,207,40,"entries"],[230,49,207,47],[230,50,207,48,"length"],[230,56,207,54],[230,59,207,57],[230,60,207,58],[230,61,207,59],[231,6,208,4],[231,10,208,8],[231,11,208,9,"entry"],[231,16,208,14],[231,18,208,16],[232,8,209,6],[233,6,210,4],[234,6,212,4],[234,12,212,10,"timeOrigin"],[234,22,212,20],[234,25,212,23],[234,29,212,23,"msToSec"],[234,43,212,30],[234,45,212,31,"browserPerformanceTimeOrigin"],[234,79,212,60],[234,80,212,61],[235,6,213,4],[235,12,213,10,"startTime"],[235,21,213,19],[235,24,213,22],[235,28,213,22,"msToSec"],[235,42,213,29],[235,44,213,30,"entry"],[235,49,213,35],[235,50,213,36,"startTime"],[235,59,213,45],[235,60,213,46],[236,6,214,4,"_measurements"],[236,19,214,17],[236,20,214,18],[236,25,214,23],[236,26,214,24],[236,29,214,27],[237,8,214,29,"value"],[237,13,214,34],[237,15,214,36,"metric"],[237,21,214,42],[237,22,214,43,"value"],[237,27,214,48],[238,8,214,50,"unit"],[238,12,214,54],[238,14,214,56],[239,6,214,70],[239,7,214,71],[240,6,215,4,"_measurements"],[240,19,215,17],[240,20,215,18],[240,30,215,28],[240,31,215,29],[240,34,215,32],[241,8,215,34,"value"],[241,13,215,39],[241,15,215,41,"timeOrigin"],[241,25,215,51],[241,28,215,54,"startTime"],[241,37,215,63],[242,8,215,65,"unit"],[242,12,215,69],[242,14,215,71],[243,6,215,80],[243,7,215,81],[244,4,216,2],[244,5,216,3],[244,6,216,4],[245,2,217,0],[246,2,219,0],[246,11,219,9,"_trackTtfb"],[246,21,219,19,"_trackTtfb"],[246,22,219,19],[246,24,219,22],[247,4,220,2],[247,11,220,9],[247,15,220,9,"addTtfbInstrumentationHandler"],[247,56,220,38],[247,58,220,39],[247,59,220,40],[248,6,220,42,"metric"],[249,4,220,49],[249,5,220,50],[249,10,220,55],[250,6,221,4],[250,12,221,10,"entry"],[250,17,221,15],[250,20,221,18,"metric"],[250,26,221,24],[250,27,221,25,"entries"],[250,34,221,32],[250,35,221,33,"metric"],[250,41,221,39],[250,42,221,40,"entries"],[250,49,221,47],[250,50,221,48,"length"],[250,56,221,54],[250,59,221,57],[250,60,221,58],[250,61,221,59],[251,6,222,4],[251,10,222,8],[251,11,222,9,"entry"],[251,16,222,14],[251,18,222,16],[252,8,223,6],[253,6,224,4],[254,6,226,4,"_measurements"],[254,19,226,17],[254,20,226,18],[254,26,226,24],[254,27,226,25],[254,30,226,28],[255,8,226,30,"value"],[255,13,226,35],[255,15,226,37,"metric"],[255,21,226,43],[255,22,226,44,"value"],[255,27,226,49],[256,8,226,51,"unit"],[256,12,226,55],[256,14,226,57],[257,6,226,71],[257,7,226,72],[258,4,227,2],[258,5,227,3],[258,6,227,4],[259,2,228,0],[261,2,230,0],[262,2,231,0],[262,11,231,9,"addPerformanceEntries"],[262,32,231,30,"addPerformanceEntries"],[262,33,231,31,"span"],[262,37,231,35],[262,39,231,37,"options"],[262,46,231,44],[262,48,231,46],[263,4,232,2],[263,10,232,8,"performance"],[263,21,232,19],[263,24,232,22],[263,28,232,22,"getBrowserPerformanceAPI"],[263,59,232,46],[263,61,232,47],[263,62,232,48],[264,4,233,2],[264,8,233,6],[264,9,233,7,"performance"],[264,20,233,18],[264,24,233,22],[264,25,233,23,"performance"],[264,36,233,34],[264,37,233,35,"getEntries"],[264,47,233,45],[264,51,233,49],[264,52,233,50,"browserPerformanceTimeOrigin"],[264,86,233,78],[264,88,233,80],[265,6,234,4],[266,6,235,4],[267,4,236,2],[268,4,238,2],[268,10,238,8,"timeOrigin"],[268,20,238,18],[268,23,238,21],[268,27,238,21,"msToSec"],[268,41,238,28],[268,43,238,29,"browserPerformanceTimeOrigin"],[268,77,238,57],[268,78,238,58],[269,4,240,2],[269,10,240,8,"performanceEntries"],[269,28,240,26],[269,31,240,29,"performance"],[269,42,240,40],[269,43,240,41,"getEntries"],[269,53,240,51],[269,54,240,52],[269,55,240,53],[270,4,242,2],[270,10,242,8],[271,6,242,10,"op"],[271,8,242,12],[272,6,242,14,"start_timestamp"],[272,21,242,29],[272,23,242,31,"transactionStartTime"],[273,4,242,52],[273,5,242,53],[273,8,242,56],[273,12,242,56,"spanToJSON"],[273,28,242,66],[273,30,242,67,"span"],[273,34,242,71],[273,35,242,72],[274,4,244,2,"performanceEntries"],[274,22,244,20],[274,23,244,21,"slice"],[274,28,244,26],[274,29,244,27,"_performanceCursor"],[274,47,244,45],[274,48,244,46],[274,49,244,47,"forEach"],[274,56,244,54],[274,57,244,55,"entry"],[274,62,244,60],[274,66,244,64],[275,6,245,4],[275,12,245,10,"startTime"],[275,21,245,19],[275,24,245,22],[275,28,245,22,"msToSec"],[275,42,245,29],[275,44,245,30,"entry"],[275,49,245,35],[275,50,245,36,"startTime"],[275,59,245,45],[275,60,245,46],[276,6,246,4],[276,12,246,10,"duration"],[276,20,246,18],[276,23,246,21],[276,27,246,21,"msToSec"],[276,41,246,28],[277,6,247,6],[278,6,248,6],[279,6,249,6],[280,6,250,6],[281,6,251,6,"Math"],[281,10,251,10],[281,11,251,11,"max"],[281,14,251,14],[281,15,251,15],[281,16,251,16],[281,18,251,18,"entry"],[281,23,251,23],[281,24,251,24,"duration"],[281,32,251,32],[281,33,252,4],[281,34,252,5],[282,6,254,4],[282,10,254,8,"op"],[282,12,254,10],[282,17,254,15],[282,29,254,27],[282,33,254,31,"transactionStartTime"],[282,53,254,51],[282,57,254,55,"timeOrigin"],[282,67,254,65],[282,70,254,68,"startTime"],[282,79,254,77],[282,82,254,80,"transactionStartTime"],[282,102,254,100],[282,104,254,102],[283,8,255,6],[284,6,256,4],[285,6,258,4],[285,14,258,12,"entry"],[285,19,258,17],[285,20,258,18,"entryType"],[285,29,258,27],[286,8,259,6],[286,13,259,11],[286,25,259,23],[287,10,259,25],[288,12,260,8,"_addNavigationSpans"],[288,31,260,27],[288,32,260,28,"span"],[288,36,260,32],[288,38,260,34,"entry"],[288,43,260,39],[288,45,260,42,"timeOrigin"],[288,55,260,52],[288,56,260,53],[289,12,261,8],[290,10,262,6],[291,8,263,6],[291,13,263,11],[291,19,263,17],[292,8,264,6],[292,13,264,11],[292,20,264,18],[293,8,265,6],[293,13,265,11],[293,22,265,20],[294,10,265,22],[295,12,266,8,"_addMeasureSpans"],[295,28,266,24],[295,29,266,25,"span"],[295,33,266,29],[295,35,266,31,"entry"],[295,40,266,36],[295,42,266,38,"startTime"],[295,51,266,47],[295,53,266,49,"duration"],[295,61,266,57],[295,63,266,59,"timeOrigin"],[295,73,266,69],[295,74,266,70],[297,12,268,8],[298,12,269,8],[298,18,269,14,"firstHidden"],[298,29,269,25],[298,32,269,28],[298,36,269,28,"getVisibilityWatcher"],[298,78,269,48],[298,80,269,49],[298,81,269,50],[299,12,270,8],[300,12,271,8],[300,18,271,14,"shouldRecord"],[300,30,271,26],[300,33,271,29,"entry"],[300,38,271,34],[300,39,271,35,"startTime"],[300,48,271,44],[300,51,271,47,"firstHidden"],[300,62,271,58],[300,63,271,59,"firstHiddenTime"],[300,78,271,74],[301,12,273,8],[301,16,273,12,"entry"],[301,21,273,17],[301,22,273,18,"name"],[301,26,273,22],[301,31,273,27],[301,44,273,40],[301,48,273,44,"shouldRecord"],[301,60,273,56],[301,62,273,58],[302,14,274,10,"_measurements"],[302,27,274,23],[302,28,274,24],[302,32,274,28],[302,33,274,29],[302,36,274,32],[303,16,274,34,"value"],[303,21,274,39],[303,23,274,41,"entry"],[303,28,274,46],[303,29,274,47,"startTime"],[303,38,274,56],[304,16,274,58,"unit"],[304,20,274,62],[304,22,274,64],[305,14,274,78],[305,15,274,79],[306,12,275,8],[307,12,276,8],[307,16,276,12,"entry"],[307,21,276,17],[307,22,276,18,"name"],[307,26,276,22],[307,31,276,27],[307,55,276,51],[307,59,276,55,"shouldRecord"],[307,71,276,67],[307,73,276,69],[308,14,277,10,"_measurements"],[308,27,277,23],[308,28,277,24],[308,33,277,29],[308,34,277,30],[308,37,277,33],[309,16,277,35,"value"],[309,21,277,40],[309,23,277,42,"entry"],[309,28,277,47],[309,29,277,48,"startTime"],[309,38,277,57],[310,16,277,59,"unit"],[310,20,277,63],[310,22,277,65],[311,14,277,79],[311,15,277,80],[312,12,278,8],[313,12,279,8],[314,10,280,6],[315,8,281,6],[315,13,281,11],[315,23,281,21],[316,10,281,23],[317,12,282,8,"_addResourceSpans"],[317,29,282,25],[317,30,282,26,"span"],[317,34,282,30],[317,36,282,32,"entry"],[317,41,282,37],[317,43,282,40,"entry"],[317,48,282,45],[317,49,282,46,"name"],[317,53,282,50],[317,55,282,52,"startTime"],[317,64,282,61],[317,66,282,63,"duration"],[317,74,282,71],[317,76,282,73,"timeOrigin"],[317,86,282,83],[317,87,282,84],[318,12,283,8],[319,10,284,6],[320,8,285,6],[321,6,286,4],[322,4,287,2],[322,5,287,3],[322,6,287,4],[323,4,289,2,"_performanceCursor"],[323,22,289,20],[323,25,289,23,"Math"],[323,29,289,27],[323,30,289,28,"max"],[323,33,289,31],[323,34,289,32,"performanceEntries"],[323,52,289,50],[323,53,289,51,"length"],[323,59,289,57],[323,62,289,60],[323,63,289,61],[323,65,289,63],[323,66,289,64],[323,67,289,65],[324,4,291,2,"_trackNavigator"],[324,19,291,17],[324,20,291,18,"span"],[324,24,291,22],[324,25,291,23],[326,4,293,2],[327,4,294,2],[327,8,294,6,"op"],[327,10,294,8],[327,15,294,13],[327,25,294,23],[327,27,294,25],[328,6,295,4,"_addTtfbRequestTimeToMeasurements"],[328,39,295,37],[328,40,295,38,"_measurements"],[328,53,295,51],[328,54,295,52],[329,6,297,4],[329,12,297,10,"fidMark"],[329,19,297,17],[329,22,297,20,"_measurements"],[329,35,297,33],[329,36,297,34],[329,46,297,44],[329,47,297,45],[330,6,298,4],[330,10,298,8,"fidMark"],[330,17,298,15],[330,21,298,19,"_measurements"],[330,34,298,32],[330,35,298,33],[330,40,298,38],[330,41,298,39],[330,43,298,41],[331,8,299,6],[332,8,300,6],[332,12,300,6,"startAndEndSpan"],[332,34,300,21],[332,36,300,22,"span"],[332,40,300,26],[332,42,300,28,"fidMark"],[332,49,300,35],[332,50,300,36,"value"],[332,55,300,41],[332,57,300,43,"fidMark"],[332,64,300,50],[332,65,300,51,"value"],[332,70,300,56],[332,73,300,59],[332,77,300,59,"msToSec"],[332,91,300,66],[332,93,300,67,"_measurements"],[332,106,300,80],[332,107,300,81],[332,112,300,86],[332,113,300,87],[332,114,300,88,"value"],[332,119,300,93],[332,120,300,94],[332,122,300,96],[333,10,301,8,"name"],[333,14,301,12],[333,16,301,14],[333,35,301,33],[334,10,302,8,"op"],[334,12,302,10],[334,14,302,12],[334,25,302,23],[335,10,303,8,"attributes"],[335,20,303,18],[335,22,303,20],[336,12,304,10],[336,13,304,11,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[336,51,304,43],[336,54,304,46],[337,10,305,8],[338,8,306,6],[338,9,306,7],[338,10,306,8],[340,8,308,6],[341,8,309,6],[341,15,309,13,"_measurements"],[341,28,309,26],[341,29,309,27],[341,39,309,37],[341,40,309,38],[342,6,310,4],[344,6,312,4],[345,6,313,4],[346,6,314,4],[347,6,315,4],[347,10,315,8],[347,12,315,10],[347,17,315,15],[347,21,315,19,"_measurements"],[347,34,315,32],[347,35,315,33],[347,39,315,37],[347,40,315,38,"options"],[347,47,315,45],[347,48,315,46,"recordClsOnPageloadSpan"],[347,71,315,69],[347,73,315,71],[348,8,316,6],[348,15,316,13,"_measurements"],[348,28,316,26],[348,29,316,27,"cls"],[348,32,316,30],[349,6,317,4],[350,6,319,4,"Object"],[350,12,319,10],[350,13,319,11,"entries"],[350,20,319,18],[350,21,319,19,"_measurements"],[350,34,319,32],[350,35,319,33],[350,36,319,34,"forEach"],[350,43,319,41],[350,44,319,42],[350,45,319,43],[350,46,319,44,"measurementName"],[350,61,319,59],[350,63,319,61,"measurement"],[350,74,319,72],[350,75,319,73],[350,80,319,78],[351,8,320,6],[351,12,320,6,"setMeasurement"],[351,32,320,20],[351,34,320,21,"measurementName"],[351,49,320,36],[351,51,320,38,"measurement"],[351,62,320,49],[351,63,320,50,"value"],[351,68,320,55],[351,70,320,57,"measurement"],[351,81,320,68],[351,82,320,69,"unit"],[351,86,320,73],[351,87,320,74],[352,6,321,4],[352,7,321,5],[352,8,321,6],[354,6,323,4],[355,6,324,4,"span"],[355,10,324,8],[355,11,324,9,"setAttribute"],[355,23,324,21],[355,24,324,22],[355,48,324,46],[355,50,324,48,"timeOrigin"],[355,60,324,58],[355,61,324,59],[357,6,326,4],[358,6,327,4],[359,6,328,4],[360,6,329,4],[361,6,330,4],[362,6,331,4],[363,6,332,4,"span"],[363,10,332,8],[363,11,332,9,"setAttribute"],[363,23,332,21],[363,24,332,22],[363,53,332,51],[363,55,332,53],[363,59,332,53,"getActivationStart"],[363,97,332,71],[363,99,332,72],[363,100,332,73],[363,101,332,74],[364,6,334,4,"_setWebVitalAttributes"],[364,28,334,26],[364,29,334,27,"span"],[364,33,334,31],[364,34,334,32],[365,4,335,2],[366,4,337,2,"_lcpEntry"],[366,13,337,11],[366,16,337,14,"undefined"],[366,25,337,23],[367,4,338,2,"_clsEntry"],[367,13,338,11],[367,16,338,14,"undefined"],[367,25,338,23],[368,4,339,2,"_measurements"],[368,17,339,15],[368,20,339,18],[368,21,339,19],[368,22,339,20],[369,2,340,0],[371,2,342,0],[372,0,343,0],[373,0,344,0],[374,0,345,0],[375,2,346,0],[375,11,346,9,"_addMeasureSpans"],[375,27,346,25,"_addMeasureSpans"],[375,28,347,2,"span"],[375,32,347,6],[375,34,348,2,"entry"],[375,39,348,7],[375,41,349,2,"startTime"],[375,50,349,11],[375,52,350,2,"duration"],[375,60,350,10],[375,62,351,2,"timeOrigin"],[375,72,351,12],[375,74,352,2],[376,4,353,2],[376,10,353,8,"navEntry"],[376,18,353,16],[376,21,353,19],[376,25,353,19,"getNavigationEntry"],[376,63,353,37],[376,65,353,38],[376,70,353,43],[376,71,353,44],[377,4,354,2],[377,10,354,8,"requestTime"],[377,21,354,19],[377,24,354,22],[377,28,354,22,"msToSec"],[377,42,354,29],[377,44,354,30,"navEntry"],[377,52,354,38],[377,55,354,41,"navEntry"],[377,63,354,49],[377,64,354,50,"requestStart"],[377,76,354,62],[377,79,354,65],[377,80,354,66],[377,81,354,67],[378,4,355,2],[379,4,356,2],[380,4,357,2],[381,4,358,2],[382,4,359,2],[383,4,360,2],[384,4,361,2],[385,4,362,2],[386,4,363,2],[387,4,364,2],[387,10,364,8,"measureStartTimestamp"],[387,31,364,29],[387,34,364,32,"timeOrigin"],[387,44,364,42],[387,47,364,45,"Math"],[387,51,364,49],[387,52,364,50,"max"],[387,55,364,53],[387,56,364,54,"startTime"],[387,65,364,63],[387,67,364,65,"requestTime"],[387,78,364,76],[387,79,364,77],[388,4,365,2],[388,10,365,8,"startTimeStamp"],[388,24,365,22],[388,27,365,25,"timeOrigin"],[388,37,365,35],[388,40,365,38,"startTime"],[388,49,365,47],[389,4,366,2],[389,10,366,8,"measureEndTimestamp"],[389,29,366,27],[389,32,366,30,"startTimeStamp"],[389,46,366,44],[389,49,366,47,"duration"],[389,57,366,55],[390,4,368,2],[390,10,368,8,"attributes"],[390,20,368,18],[390,23,368,21],[391,6,369,4],[391,7,369,5,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[391,45,369,37],[391,48,369,40],[392,4,370,2],[392,5,370,3],[393,4,372,2],[393,8,372,6,"measureStartTimestamp"],[393,29,372,27],[393,34,372,32,"startTimeStamp"],[393,48,372,46],[393,50,372,48],[394,6,373,4,"attributes"],[394,16,373,14],[394,17,373,15],[394,65,373,63],[394,66,373,64],[394,69,373,67],[394,73,373,71],[395,6,374,4,"attributes"],[395,16,374,14],[395,17,374,15],[395,52,374,50],[395,53,374,51],[395,56,374,54,"measureStartTimestamp"],[395,77,374,75],[396,4,375,2],[397,4,377,2],[397,8,377,2,"startAndEndSpan"],[397,30,377,17],[397,32,377,18,"span"],[397,36,377,22],[397,38,377,24,"measureStartTimestamp"],[397,59,377,45],[397,61,377,47,"measureEndTimestamp"],[397,80,377,66],[397,82,377,68],[398,6,378,4,"name"],[398,10,378,8],[398,12,378,10,"entry"],[398,17,378,15],[398,18,378,16,"name"],[398,22,378,20],[399,6,379,4,"op"],[399,8,379,6],[399,10,379,8,"entry"],[399,15,379,13],[399,16,379,14,"entryType"],[399,25,379,23],[400,6,380,4,"attributes"],[401,4,381,2],[401,5,381,3],[401,6,381,4],[402,4,383,2],[402,11,383,9,"measureStartTimestamp"],[402,32,383,30],[403,2,384,0],[405,2,386,0],[406,2,387,0],[406,11,387,9,"_addNavigationSpans"],[406,30,387,28,"_addNavigationSpans"],[406,31,387,29,"span"],[406,35,387,33],[406,37,387,35,"entry"],[406,42,387,40],[406,44,387,42,"timeOrigin"],[406,54,387,52],[406,56,387,54],[407,4,388,3],[407,5,388,4],[407,18,388,17],[407,20,388,19],[407,30,388,29],[407,32,388,31],[407,55,388,54],[407,57,388,56],[407,68,388,67],[407,70,388,69],[407,79,388,78],[407,80,388,79],[407,81,388,82,"forEach"],[407,88,388,89],[407,89,388,90,"event"],[407,94,388,95],[407,98,388,99],[408,6,389,4,"_addPerformanceNavigationTiming"],[408,37,389,35],[408,38,389,36,"span"],[408,42,389,40],[408,44,389,42,"entry"],[408,49,389,47],[408,51,389,49,"event"],[408,56,389,54],[408,58,389,56,"timeOrigin"],[408,68,389,66],[408,69,389,67],[409,4,390,2],[409,5,390,3],[409,6,390,4],[410,4,391,2,"_addPerformanceNavigationTiming"],[410,35,391,33],[410,36,391,34,"span"],[410,40,391,38],[410,42,391,40,"entry"],[410,47,391,45],[410,49,391,47],[410,67,391,65],[410,69,391,67,"timeOrigin"],[410,79,391,77],[410,81,391,79],[410,90,391,88],[410,91,391,89],[411,4,392,2,"_addPerformanceNavigationTiming"],[411,35,392,33],[411,36,392,34,"span"],[411,40,392,38],[411,42,392,40,"entry"],[411,47,392,45],[411,49,392,47],[411,56,392,54],[411,58,392,56,"timeOrigin"],[411,68,392,66],[411,70,392,68],[411,77,392,75],[411,78,392,76],[412,4,393,2,"_addPerformanceNavigationTiming"],[412,35,393,33],[412,36,393,34,"span"],[412,40,393,38],[412,42,393,40,"entry"],[412,47,393,45],[412,49,393,47],[412,63,393,61],[412,65,393,63,"timeOrigin"],[412,75,393,73],[412,77,393,75],[412,82,393,80],[412,83,393,81],[413,4,395,2,"_addRequest"],[413,15,395,13],[413,16,395,14,"span"],[413,20,395,18],[413,22,395,20,"entry"],[413,27,395,25],[413,29,395,27,"timeOrigin"],[413,39,395,37],[413,40,395,38],[414,2,396,0],[416,2,398,0],[417,2,399,0],[417,11,399,9,"_addPerformanceNavigationTiming"],[417,42,399,40,"_addPerformanceNavigationTiming"],[417,43,400,2,"span"],[417,47,400,6],[417,49,401,2,"entry"],[417,54,401,7],[417,56,402,2,"event"],[417,61,402,7],[417,63,403,2,"timeOrigin"],[417,73,403,12],[417,75,404,2,"name"],[417,79,404,6],[417,82,404,9,"event"],[417,87,404,14],[417,89,405,2],[418,4,406,2],[418,10,406,8,"eventEnd"],[418,18,406,16],[418,21,406,19,"_getEndPropertyNameForNavigationTiming"],[418,59,406,57],[418,60,406,58,"event"],[418,65,406,63],[418,66,406,64],[419,4,407,2],[419,10,407,8,"end"],[419,13,407,11],[419,16,407,14,"entry"],[419,21,407,19],[419,22,407,20,"eventEnd"],[419,30,407,28],[419,31,407,29],[420,4,408,2],[420,10,408,8,"start"],[420,15,408,13],[420,18,408,16,"entry"],[420,23,408,21],[420,24,408,22],[420,27,408,25,"event"],[420,32,408,30],[420,39,408,37],[420,40,408,38],[421,4,409,2],[421,8,409,6],[421,9,409,7,"start"],[421,14,409,12],[421,18,409,16],[421,19,409,17,"end"],[421,22,409,20],[421,24,409,22],[422,6,410,4],[423,4,411,2],[424,4,412,2],[424,8,412,2,"startAndEndSpan"],[424,30,412,17],[424,32,412,18,"span"],[424,36,412,22],[424,38,412,24,"timeOrigin"],[424,48,412,34],[424,51,412,37],[424,55,412,37,"msToSec"],[424,69,412,44],[424,71,412,45,"start"],[424,76,412,50],[424,77,412,51],[424,79,412,53,"timeOrigin"],[424,89,412,63],[424,92,412,66],[424,96,412,66,"msToSec"],[424,110,412,73],[424,112,412,74,"end"],[424,115,412,77],[424,116,412,78],[424,118,412,80],[425,6,413,4,"op"],[425,8,413,6],[425,10,413,8],[425,21,413,19,"name"],[425,25,413,23],[425,27,413,25],[426,6,414,4,"name"],[426,10,414,8],[426,12,414,10,"entry"],[426,17,414,15],[426,18,414,16,"name"],[426,22,414,20],[427,6,415,4,"attributes"],[427,16,415,14],[427,18,415,16],[428,8,416,6],[428,9,416,7,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[428,47,416,39],[428,50,416,42],[429,6,417,4],[430,4,418,2],[430,5,418,3],[430,6,418,4],[431,2,419,0],[432,2,421,0],[432,11,421,9,"_getEndPropertyNameForNavigationTiming"],[432,49,421,47,"_getEndPropertyNameForNavigationTiming"],[432,50,421,48,"event"],[432,55,421,53],[432,57,421,55],[433,4,422,2],[433,8,422,6,"event"],[433,13,422,11],[433,18,422,16],[433,36,422,34],[433,38,422,36],[434,6,423,4],[434,13,423,11],[434,25,423,23],[435,4,424,2],[436,4,425,2],[436,8,425,6,"event"],[436,13,425,11],[436,18,425,16],[436,25,425,23],[436,27,425,25],[437,6,426,4],[437,13,426,11],[437,32,426,30],[438,4,427,2],[439,4,428,2],[439,11,428,9],[439,14,428,12,"event"],[439,19,428,17],[439,24,428,22],[440,2,429,0],[442,2,431,0],[443,2,432,0],[443,11,432,9,"_addRequest"],[443,22,432,20,"_addRequest"],[443,23,432,21,"span"],[443,27,432,25],[443,29,432,27,"entry"],[443,34,432,32],[443,36,432,34,"timeOrigin"],[443,46,432,44],[443,48,432,46],[444,4,433,2],[444,10,433,8,"requestStartTimestamp"],[444,31,433,29],[444,34,433,32,"timeOrigin"],[444,44,433,42],[444,47,433,45],[444,51,433,45,"msToSec"],[444,65,433,52],[444,67,433,53,"entry"],[444,72,433,58],[444,73,433,59,"requestStart"],[444,85,433,72],[444,86,433,73],[445,4,434,2],[445,10,434,8,"responseEndTimestamp"],[445,30,434,28],[445,33,434,31,"timeOrigin"],[445,43,434,41],[445,46,434,44],[445,50,434,44,"msToSec"],[445,64,434,51],[445,66,434,52,"entry"],[445,71,434,57],[445,72,434,58,"responseEnd"],[445,83,434,70],[445,84,434,71],[446,4,435,2],[446,10,435,8,"responseStartTimestamp"],[446,32,435,30],[446,35,435,33,"timeOrigin"],[446,45,435,43],[446,48,435,46],[446,52,435,46,"msToSec"],[446,66,435,53],[446,68,435,54,"entry"],[446,73,435,59],[446,74,435,60,"responseStart"],[446,87,435,74],[446,88,435,75],[447,4,436,2],[447,8,436,6,"entry"],[447,13,436,11],[447,14,436,12,"responseEnd"],[447,25,436,23],[447,27,436,25],[448,6,437,4],[449,6,438,4],[450,6,439,4],[451,6,440,4],[452,6,441,4],[452,10,441,4,"startAndEndSpan"],[452,32,441,19],[452,34,441,20,"span"],[452,38,441,24],[452,40,441,26,"requestStartTimestamp"],[452,61,441,47],[452,63,441,49,"responseEndTimestamp"],[452,83,441,69],[452,85,441,71],[453,8,442,6,"op"],[453,10,442,8],[453,12,442,10],[453,29,442,27],[454,8,443,6,"name"],[454,12,443,10],[454,14,443,12,"entry"],[454,19,443,17],[454,20,443,18,"name"],[454,24,443,22],[455,8,444,6,"attributes"],[455,18,444,16],[455,20,444,18],[456,10,445,8],[456,11,445,9,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[456,49,445,41],[456,52,445,44],[457,8,446,6],[458,6,447,4],[458,7,447,5],[458,8,447,6],[459,6,449,4],[459,10,449,4,"startAndEndSpan"],[459,32,449,19],[459,34,449,20,"span"],[459,38,449,24],[459,40,449,26,"responseStartTimestamp"],[459,62,449,48],[459,64,449,50,"responseEndTimestamp"],[459,84,449,70],[459,86,449,72],[460,8,450,6,"op"],[460,10,450,8],[460,12,450,10],[460,30,450,28],[461,8,451,6,"name"],[461,12,451,10],[461,14,451,12,"entry"],[461,19,451,17],[461,20,451,18,"name"],[461,24,451,22],[462,8,452,6,"attributes"],[462,18,452,16],[462,20,452,18],[463,10,453,8],[463,11,453,9,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[463,49,453,41],[463,52,453,44],[464,8,454,6],[465,6,455,4],[465,7,455,5],[465,8,455,6],[466,4,456,2],[467,2,457,0],[469,2,459,0],[470,0,460,0],[471,0,461,0],[472,0,462,0],[473,2,463,0],[473,11,463,9,"_addResourceSpans"],[473,28,463,26,"_addResourceSpans"],[473,29,464,2,"span"],[473,33,464,6],[473,35,465,2,"entry"],[473,40,465,7],[473,42,466,2,"resourceUrl"],[473,53,466,13],[473,55,467,2,"startTime"],[473,64,467,11],[473,66,468,2,"duration"],[473,74,468,10],[473,76,469,2,"timeOrigin"],[473,86,469,12],[473,88,470,2],[474,4,471,2],[475,4,472,2],[476,4,473,2],[476,8,473,6,"entry"],[476,13,473,11],[476,14,473,12,"initiatorType"],[476,27,473,25],[476,32,473,30],[476,48,473,46],[476,52,473,50,"entry"],[476,57,473,55],[476,58,473,56,"initiatorType"],[476,71,473,69],[476,76,473,74],[476,83,473,81],[476,85,473,83],[477,6,474,4],[478,4,475,2],[479,4,477,2],[479,10,477,8,"parsedUrl"],[479,19,477,17],[479,22,477,20],[479,26,477,20,"parseUrl"],[479,40,477,28],[479,42,477,29,"resourceUrl"],[479,53,477,40],[479,54,477,41],[480,4,479,2],[480,10,479,8,"attributes"],[480,20,479,18],[480,23,479,21],[481,6,480,4],[481,7,480,5,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[481,45,480,37],[481,48,480,40],[482,4,481,2],[482,5,481,3],[483,4,482,2,"setResourceEntrySizeData"],[483,28,482,26],[483,29,482,27,"attributes"],[483,39,482,37],[483,41,482,39,"entry"],[483,46,482,44],[483,48,482,46],[483,62,482,60],[483,64,482,62],[483,93,482,91],[483,94,482,92],[484,4,483,2,"setResourceEntrySizeData"],[484,28,483,26],[484,29,483,27,"attributes"],[484,39,483,37],[484,41,483,39,"entry"],[484,46,483,44],[484,48,483,46],[484,65,483,63],[484,67,483,65],[484,97,483,95],[484,98,483,96],[485,4,484,2,"setResourceEntrySizeData"],[485,28,484,26],[485,29,484,27,"attributes"],[485,39,484,37],[485,41,484,39,"entry"],[485,46,484,44],[485,48,484,46],[485,65,484,63],[485,67,484,65],[485,105,484,103],[485,106,484,104],[487,4,486,2],[488,4,487,2],[488,10,487,8,"deliveryType"],[488,22,487,20],[488,25,487,24,"entry"],[488,30,487,29],[488,31,487,32,"deliveryType"],[488,43,487,44],[489,4,488,2],[489,8,488,6,"deliveryType"],[489,20,488,18],[489,24,488,22],[489,28,488,26],[489,30,488,28],[490,6,489,4,"attributes"],[490,16,489,14],[490,17,489,15],[490,46,489,44],[490,47,489,45],[490,50,489,48,"deliveryType"],[490,62,489,60],[491,4,490,2],[493,4,492,2],[494,4,493,2],[494,10,493,8,"renderBlockingStatus"],[494,30,493,28],[494,33,493,32,"entry"],[494,38,493,37],[494,39,494,5,"renderBlockingStatus"],[494,59,494,25],[495,4,495,2],[495,8,495,6,"renderBlockingStatus"],[495,28,495,26],[495,30,495,28],[496,6,496,4,"attributes"],[496,16,496,14],[496,17,496,15],[496,50,496,48],[496,51,496,49],[496,54,496,52,"renderBlockingStatus"],[496,74,496,72],[497,4,497,2],[498,4,499,2],[498,8,499,6,"parsedUrl"],[498,17,499,15],[498,18,499,16,"protocol"],[498,26,499,24],[498,28,499,26],[499,6,500,4,"attributes"],[499,16,500,14],[499,17,500,15],[499,29,500,27],[499,30,500,28],[499,33,500,31,"parsedUrl"],[499,42,500,40],[499,43,500,41,"protocol"],[499,51,500,49],[499,52,500,50,"split"],[499,57,500,55],[499,58,500,56],[499,61,500,59],[499,62,500,60],[499,63,500,61,"pop"],[499,66,500,64],[499,67,500,65],[499,68,500,66],[499,69,500,67],[499,70,500,68],[500,4,501,2],[501,4,503,2],[501,8,503,6,"parsedUrl"],[501,17,503,15],[501,18,503,16,"host"],[501,22,503,20],[501,24,503,22],[502,6,504,4,"attributes"],[502,16,504,14],[502,17,504,15],[502,33,504,31],[502,34,504,32],[502,37,504,35,"parsedUrl"],[502,46,504,44],[502,47,504,45,"host"],[502,51,504,49],[503,4,505,2],[504,4,507,2,"attributes"],[504,14,507,12],[504,15,507,13],[504,32,507,30],[504,33,507,31],[504,36,507,34,"resourceUrl"],[504,47,507,45],[504,48,507,46,"includes"],[504,56,507,54],[504,57,507,55,"WINDOW"],[504,70,507,61],[504,71,507,62,"location"],[504,79,507,70],[504,80,507,71,"origin"],[504,86,507,77],[504,87,507,78],[505,4,509,2],[505,10,509,8],[506,6,509,10,"name"],[506,10,509,14],[507,6,509,16,"version"],[508,4,509,24],[508,5,509,25],[508,8,509,28],[508,12,509,28,"extractNetworkProtocol"],[508,41,509,50],[508,43,509,51,"entry"],[508,48,509,56],[508,49,509,57,"nextHopProtocol"],[508,64,509,72],[508,65,509,73],[509,4,510,2,"attributes"],[509,14,510,12],[509,15,510,13],[509,38,510,36],[509,39,510,37],[509,42,510,40,"name"],[509,46,510,44],[510,4,511,2,"attributes"],[510,14,511,12],[510,15,511,13],[510,41,511,39],[510,42,511,40],[510,45,511,43,"version"],[510,52,511,50],[511,4,513,2],[511,10,513,8,"startTimestamp"],[511,24,513,22],[511,27,513,25,"timeOrigin"],[511,37,513,35],[511,40,513,38,"startTime"],[511,49,513,47],[512,4,514,2],[512,10,514,8,"endTimestamp"],[512,22,514,20],[512,25,514,23,"startTimestamp"],[512,39,514,37],[512,42,514,40,"duration"],[512,50,514,48],[513,4,516,2],[513,8,516,2,"startAndEndSpan"],[513,30,516,17],[513,32,516,18,"span"],[513,36,516,22],[513,38,516,24,"startTimestamp"],[513,52,516,38],[513,54,516,40,"endTimestamp"],[513,66,516,52],[513,68,516,54],[514,6,517,4,"name"],[514,10,517,8],[514,12,517,10,"resourceUrl"],[514,23,517,21],[514,24,517,22,"replace"],[514,31,517,29],[514,32,517,30,"WINDOW"],[514,45,517,36],[514,46,517,37,"location"],[514,54,517,45],[514,55,517,46,"origin"],[514,61,517,52],[514,63,517,54],[514,65,517,56],[514,66,517,57],[515,6,518,4,"op"],[515,8,518,6],[515,10,518,8,"entry"],[515,15,518,13],[515,16,518,14,"initiatorType"],[515,29,518,27],[515,32,518,30],[515,44,518,42,"entry"],[515,49,518,47],[515,50,518,48,"initiatorType"],[515,63,518,61],[515,65,518,63],[515,68,518,66],[515,84,518,82],[516,6,519,4,"attributes"],[517,4,520,2],[517,5,520,3],[517,6,520,4],[518,2,521,0],[520,2,523,0],[521,0,524,0],[522,0,525,0],[523,2,526,0],[523,11,526,9,"_trackNavigator"],[523,26,526,24,"_trackNavigator"],[523,27,526,25,"span"],[523,31,526,29],[523,33,526,31],[524,4,527,2],[524,10,527,8,"navigator"],[524,19,527,17],[524,22,527,20,"WINDOW"],[524,35,527,26],[524,36,527,27,"navigator"],[524,45,527,36],[525,4,528,2],[525,8,528,6],[525,9,528,7,"navigator"],[525,18,528,16],[525,20,528,18],[526,6,529,4],[527,4,530,2],[529,4,532,2],[530,4,533,2],[530,10,533,8,"connection"],[530,20,533,18],[530,23,533,21,"navigator"],[530,32,533,30],[530,33,533,31,"connection"],[530,43,533,41],[531,4,534,2],[531,8,534,6,"connection"],[531,18,534,16],[531,20,534,18],[532,6,535,4],[532,10,535,8,"connection"],[532,20,535,18],[532,21,535,19,"effectiveType"],[532,34,535,32],[532,36,535,34],[533,8,536,6,"span"],[533,12,536,10],[533,13,536,11,"setAttribute"],[533,25,536,23],[533,26,536,24],[533,51,536,49],[533,53,536,51,"connection"],[533,63,536,61],[533,64,536,62,"effectiveType"],[533,77,536,75],[533,78,536,76],[534,6,537,4],[535,6,539,4],[535,10,539,8,"connection"],[535,20,539,18],[535,21,539,19,"type"],[535,25,539,23],[535,27,539,25],[536,8,540,6,"span"],[536,12,540,10],[536,13,540,11,"setAttribute"],[536,25,540,23],[536,26,540,24],[536,42,540,40],[536,44,540,42,"connection"],[536,54,540,52],[536,55,540,53,"type"],[536,59,540,57],[536,60,540,58],[537,6,541,4],[538,6,543,4],[538,10,543,8],[538,14,543,8,"isMeasurementValue"],[538,39,543,26],[538,41,543,27,"connection"],[538,51,543,37],[538,52,543,38,"rtt"],[538,55,543,41],[538,56,543,42],[538,58,543,44],[539,8,544,6,"_measurements"],[539,21,544,19],[539,22,544,20],[539,38,544,36],[539,39,544,37],[539,42,544,40],[540,10,544,42,"value"],[540,15,544,47],[540,17,544,49,"connection"],[540,27,544,59],[540,28,544,60,"rtt"],[540,31,544,63],[541,10,544,65,"unit"],[541,14,544,69],[541,16,544,71],[542,8,544,85],[542,9,544,86],[543,6,545,4],[544,4,546,2],[545,4,548,2],[545,8,548,6],[545,12,548,6,"isMeasurementValue"],[545,37,548,24],[545,39,548,25,"navigator"],[545,48,548,34],[545,49,548,35,"deviceMemory"],[545,61,548,47],[545,62,548,48],[545,64,548,50],[546,6,549,4,"span"],[546,10,549,8],[546,11,549,9,"setAttribute"],[546,23,549,21],[546,24,549,22],[546,38,549,36],[546,40,549,38],[546,43,549,41,"navigator"],[546,52,549,50],[546,53,549,51,"deviceMemory"],[546,65,549,63],[546,70,549,68],[546,71,549,69],[547,4,550,2],[548,4,552,2],[548,8,552,6],[548,12,552,6,"isMeasurementValue"],[548,37,552,24],[548,39,552,25,"navigator"],[548,48,552,34],[548,49,552,35,"hardwareConcurrency"],[548,68,552,54],[548,69,552,55],[548,71,552,57],[549,6,553,4,"span"],[549,10,553,8],[549,11,553,9,"setAttribute"],[549,23,553,21],[549,24,553,22],[549,45,553,43],[549,47,553,45,"String"],[549,53,553,51],[549,54,553,52,"navigator"],[549,63,553,61],[549,64,553,62,"hardwareConcurrency"],[549,83,553,81],[549,84,553,82],[549,85,553,83],[550,4,554,2],[551,2,555,0],[553,2,557,0],[554,2,558,0],[554,11,558,9,"_setWebVitalAttributes"],[554,33,558,31,"_setWebVitalAttributes"],[554,34,558,32,"span"],[554,38,558,36],[554,40,558,38],[555,4,559,2],[555,8,559,6,"_lcpEntry"],[555,17,559,15],[555,19,559,17],[556,6,560,4],[558,6,562,4],[558,10,562,8,"_lcpEntry"],[558,19,562,17],[558,20,562,18,"element"],[558,27,562,25],[558,29,562,27],[559,8,563,6,"span"],[559,12,563,10],[559,13,563,11,"setAttribute"],[559,25,563,23],[559,26,563,24],[559,39,563,37],[559,41,563,39],[559,45,563,39,"htmlTreeAsString"],[559,67,563,55],[559,69,563,56,"_lcpEntry"],[559,78,563,65],[559,79,563,66,"element"],[559,86,563,73],[559,87,563,74],[559,88,563,75],[560,6,564,4],[561,6,566,4],[561,10,566,8,"_lcpEntry"],[561,19,566,17],[561,20,566,18,"id"],[561,22,566,20],[561,24,566,22],[562,8,567,6,"span"],[562,12,567,10],[562,13,567,11,"setAttribute"],[562,25,567,23],[562,26,567,24],[562,34,567,32],[562,36,567,34,"_lcpEntry"],[562,45,567,43],[562,46,567,44,"id"],[562,48,567,46],[562,49,567,47],[563,6,568,4],[564,6,570,4],[564,10,570,8,"_lcpEntry"],[564,19,570,17],[564,20,570,18,"url"],[564,23,570,21],[564,25,570,23],[565,8,571,6],[566,8,572,6,"span"],[566,12,572,10],[566,13,572,11,"setAttribute"],[566,25,572,23],[566,26,572,24],[566,35,572,33],[566,37,572,35,"_lcpEntry"],[566,46,572,44],[566,47,572,45,"url"],[566,50,572,48],[566,51,572,49,"trim"],[566,55,572,53],[566,56,572,54],[566,57,572,55],[566,58,572,56,"slice"],[566,63,572,61],[566,64,572,62],[566,65,572,63],[566,67,572,65],[566,70,572,68],[566,71,572,69],[566,72,572,70],[567,6,573,4],[568,6,575,4],[568,10,575,8,"_lcpEntry"],[568,19,575,17],[568,20,575,18,"loadTime"],[568,28,575,26],[568,32,575,30],[568,36,575,34],[568,38,575,36],[569,8,576,6],[570,8,577,6,"span"],[570,12,577,10],[570,13,577,11,"setAttribute"],[570,25,577,23],[570,26,577,24],[570,40,577,38],[570,42,577,40,"_lcpEntry"],[570,51,577,49],[570,52,577,50,"loadTime"],[570,60,577,58],[570,61,577,59],[571,6,578,4],[572,6,580,4],[572,10,580,8,"_lcpEntry"],[572,19,580,17],[572,20,580,18,"renderTime"],[572,30,580,28],[572,34,580,32],[572,38,580,36],[572,40,580,38],[573,8,581,6],[574,8,582,6],[575,8,583,6],[576,8,584,6,"span"],[576,12,584,10],[576,13,584,11,"setAttribute"],[576,25,584,23],[576,26,584,24],[576,42,584,40],[576,44,584,42,"_lcpEntry"],[576,53,584,51],[576,54,584,52,"renderTime"],[576,64,584,62],[576,65,584,63],[577,6,585,4],[578,6,587,4,"span"],[578,10,587,8],[578,11,587,9,"setAttribute"],[578,23,587,21],[578,24,587,22],[578,34,587,32],[578,36,587,34,"_lcpEntry"],[578,45,587,43],[578,46,587,44,"size"],[578,50,587,48],[578,51,587,49],[579,4,588,2],[581,4,590,2],[582,4,591,2],[582,8,591,6,"_clsEntry"],[582,17,591,15],[582,21,591,19,"_clsEntry"],[582,30,591,28],[582,31,591,29,"sources"],[582,38,591,36],[582,40,591,38],[583,6,592,4,"_clsEntry"],[583,15,592,13],[583,16,592,14,"sources"],[583,23,592,21],[583,24,592,22,"forEach"],[583,31,592,29],[583,32,592,30],[583,33,592,31,"source"],[583,39,592,37],[583,41,592,39,"index"],[583,46,592,44],[583,51,593,6,"span"],[583,55,593,10],[583,56,593,11,"setAttribute"],[583,68,593,23],[583,69,593,24],[583,83,593,38,"index"],[583,88,593,43],[583,91,593,46],[583,92,593,47],[583,94,593,49],[583,96,593,51],[583,100,593,51,"htmlTreeAsString"],[583,122,593,67],[583,124,593,68,"source"],[583,130,593,74],[583,131,593,75,"node"],[583,135,593,79],[583,136,593,80],[583,137,594,4],[583,138,594,5],[584,4,595,2],[585,2,596,0],[586,2,598,0],[586,11,598,9,"setResourceEntrySizeData"],[586,35,598,33,"setResourceEntrySizeData"],[586,36,599,2,"attributes"],[586,46,599,12],[586,48,600,2,"entry"],[586,53,600,7],[586,55,601,2,"key"],[586,58,601,5],[586,60,602,2,"dataKey"],[586,67,602,9],[586,69,603,2],[587,4,604,2],[587,10,604,8,"entryVal"],[587,18,604,16],[587,21,604,19,"entry"],[587,26,604,24],[587,27,604,25,"key"],[587,30,604,28],[587,31,604,29],[588,4,605,2],[588,8,605,6,"entryVal"],[588,16,605,14],[588,20,605,18],[588,24,605,22],[588,28,605,26,"entryVal"],[588,36,605,34],[588,39,605,37,"MAX_INT_AS_BYTES"],[588,55,605,53],[588,57,605,55],[589,6,606,4,"attributes"],[589,16,606,14],[589,17,606,15,"dataKey"],[589,24,606,22],[589,25,606,23],[589,28,606,26,"entryVal"],[589,36,606,34],[590,4,607,2],[591,2,608,0],[593,2,610,0],[594,0,611,0],[595,0,612,0],[596,0,613,0],[597,0,614,0],[598,2,615,0],[598,11,615,9,"_addTtfbRequestTimeToMeasurements"],[598,44,615,42,"_addTtfbRequestTimeToMeasurements"],[598,45,615,43,"_measurements"],[598,58,615,56],[598,60,615,58],[599,4,616,2],[599,10,616,8,"navEntry"],[599,18,616,16],[599,21,616,19],[599,25,616,19,"getNavigationEntry"],[599,63,616,37],[599,65,616,38],[599,70,616,43],[599,71,616,44],[600,4,617,2],[600,8,617,6],[600,9,617,7,"navEntry"],[600,17,617,15],[600,19,617,17],[601,6,618,4],[602,4,619,2],[603,4,621,2],[603,10,621,8],[604,6,621,10,"responseStart"],[604,19,621,23],[605,6,621,25,"requestStart"],[606,4,621,38],[606,5,621,39],[606,8,621,42,"navEntry"],[606,16,621,50],[607,4,623,2],[607,8,623,6,"requestStart"],[607,20,623,18],[607,24,623,22,"responseStart"],[607,37,623,35],[607,39,623,37],[608,6,624,4,"_measurements"],[608,19,624,17],[608,20,624,18],[608,38,624,36],[608,39,624,37],[608,42,624,40],[609,8,625,6,"value"],[609,13,625,11],[609,15,625,13,"responseStart"],[609,28,625,26],[609,31,625,29,"requestStart"],[609,43,625,41],[610,8,626,6,"unit"],[610,12,626,10],[610,14,626,12],[611,6,627,4],[611,7,627,5],[612,4,628,2],[613,2,629,0],[614,0,629,1],[614,3]],"functionMap":{"names":["<global>","startTrackingWebVitals","<anonymous>","startTrackingLongTasks","addPerformanceInstrumentationHandler$argument_1","startTrackingLongAnimationFrames","PerformanceObserver$argument_0","startTrackingInteractions","_trackCLS","addClsInstrumentationHandler$argument_0","_trackLCP","addLcpInstrumentationHandler$argument_0","_trackFID","addFidInstrumentationHandler$argument_0","_trackTtfb","addTtfbInstrumentationHandler$argument_0","addPerformanceEntries","performanceEntries.slice.forEach$argument_0","Object.entries.forEach$argument_0","_addMeasureSpans","_addNavigationSpans","forEach$argument_0","_addPerformanceNavigationTiming","_getEndPropertyNameForNavigationTiming","_addRequest","_addResourceSpans","_trackNavigator","_setWebVitalAttributes","_clsEntry.sources.forEach$argument_0","setResourceEntrySizeData","_addTtfbRequestTimeToMeasurements"],"mappings":"AAA;ACuB;WCY;KDK;SCG,eD;CDC;AGK;mDCC;GD4B;CHC;AKK;2CCI;GDgD;CLG;AOK;gDHC;GG2B;CPC;AQM;sCCC;GDO;CRC;AUG;sCCC;GDQ;CVC;AYG;sCCC;GDU;CZC;AcE;uCCC;GDO;CdC;AgBG;uDCa;GD2C;0CEgC;KFE;ChBmB;AmBM;CnBsC;AoBG;0FCC;GDE;CpBM;AsBG;CtBoB;AuBE;CvBQ;AwBG;CxByB;AyBM;CzB0D;A0BK;C1B6B;A2BG;8BCkC;iFDC;C3BG;A6BE;C7BU;A8BO;C9Bc"}},"type":"js/module"}]}