{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":86,"index":86}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":87},"end":{"line":2,"column":39,"index":126}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}},{"name":"./fetch.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":127},"end":{"line":3,"column":48,"index":175}}],"key":"xHY+CW/ndQEg0vZqFT+SNQ3PwrI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createStore = createStore;\n  exports.makeBrowserOfflineTransport = makeBrowserOfflineTransport;\n  exports.push = push;\n  exports.shift = shift;\n  exports.unshift = unshift;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _helpers = require(_dependencyMap[1], \"../helpers.js\");\n  var _fetch = require(_dependencyMap[2], \"./fetch.js\");\n  // 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n  // modified and simplified: https://github.com/jakearchibald/idb-keyval\n  //\n  // At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n  // Original license:\n\n  // Copyright 2016, Jake Archibald\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  //   http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n      // @ts-expect-error - file size hacks\n      request.oncomplete = request.onsuccess = () => resolve(request.result);\n      // @ts-expect-error - file size hacks\n      request.onabort = request.onerror = () => reject(request.error);\n    });\n  }\n\n  /** Create or open an IndexedDb store */\n  function createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n  }\n  function keys(store) {\n    return promisifyRequest(store.getAllKeys());\n  }\n\n  /** Insert into the end of the store */\n  function push(store, value, maxQueueSize) {\n    return store(store => {\n      return keys(store).then(keys => {\n        if (keys.length >= maxQueueSize) {\n          return;\n        }\n\n        // We insert with an incremented key so that the entries are popped in order\n        store.put(value, Math.max(...keys, 0) + 1);\n        return promisifyRequest(store.transaction);\n      });\n    });\n  }\n\n  /** Insert into the front of the store */\n  function unshift(store, value, maxQueueSize) {\n    return store(store => {\n      return keys(store).then(keys => {\n        if (keys.length >= maxQueueSize) {\n          return;\n        }\n\n        // We insert with an decremented key so that the entries are popped in order\n        store.put(value, Math.min(...keys, 0) - 1);\n        return promisifyRequest(store.transaction);\n      });\n    });\n  }\n\n  /** Pop the oldest value from the store */\n  function shift(store) {\n    return store(store => {\n      return keys(store).then(keys => {\n        const firstKey = keys[0];\n        if (firstKey == null) {\n          return undefined;\n        }\n        return promisifyRequest(store.get(firstKey)).then(value => {\n          store.delete(firstKey);\n          return promisifyRequest(store.transaction).then(() => value);\n        });\n      });\n    });\n  }\n  function createIndexedDbStore(options) {\n    let store;\n\n    // Lazily create the store only when it's needed\n    function getStore() {\n      if (store == undefined) {\n        store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n      }\n      return store;\n    }\n    return {\n      push: async env => {\n        try {\n          const serialized = await (0, _core.serializeEnvelope)(env);\n          await push(getStore(), serialized, options.maxQueueSize || 30);\n        } catch (_) {\n          //\n        }\n      },\n      unshift: async env => {\n        try {\n          const serialized = await (0, _core.serializeEnvelope)(env);\n          await unshift(getStore(), serialized, options.maxQueueSize || 30);\n        } catch (_) {\n          //\n        }\n      },\n      shift: async () => {\n        try {\n          const deserialized = await shift(getStore());\n          if (deserialized) {\n            return (0, _core.parseEnvelope)(deserialized);\n          }\n        } catch (_) {\n          //\n        }\n        return undefined;\n      }\n    };\n  }\n  function makeIndexedDbOfflineTransport(createTransport) {\n    return options => {\n      const transport = createTransport({\n        ...options,\n        createStore: createIndexedDbStore\n      });\n      _helpers.WINDOW.addEventListener('online', async _ => {\n        await transport.flush();\n      });\n      return transport;\n    };\n  }\n\n  /**\n   * Creates a transport that uses IndexedDb to store events when offline.\n   */\n  function makeBrowserOfflineTransport(createTransport = _fetch.makeFetchTransport) {\n    return makeIndexedDbOfflineTransport((0, _core.makeOfflineTransport)(createTransport));\n  }\n});","lineCount":157,"map":[[10,2,1,0],[10,6,1,0,"_core"],[10,11,1,0],[10,14,1,0,"require"],[10,21,1,0],[10,22,1,0,"_dependencyMap"],[10,36,1,0],[11,2,2,0],[11,6,2,0,"_helpers"],[11,14,2,0],[11,17,2,0,"require"],[11,24,2,0],[11,25,2,0,"_dependencyMap"],[11,39,2,0],[12,2,3,0],[12,6,3,0,"_fetch"],[12,12,3,0],[12,15,3,0,"require"],[12,22,3,0],[12,23,3,0,"_dependencyMap"],[12,37,3,0],[13,2,5,0],[14,2,6,0],[15,2,7,0],[16,2,8,0],[17,2,9,0],[19,2,11,0],[20,2,12,0],[21,2,13,0],[22,2,14,0],[23,2,15,0],[24,2,16,0],[25,2,17,0],[26,2,18,0],[27,2,19,0],[28,2,20,0],[29,2,21,0],[30,2,22,0],[31,2,23,0],[33,2,25,0],[33,11,25,9,"promisifyRequest"],[33,27,25,25,"promisifyRequest"],[33,28,25,26,"request"],[33,35,25,33],[33,37,25,35],[34,4,26,2],[34,11,26,9],[34,15,26,13,"Promise"],[34,22,26,20],[34,23,26,21],[34,24,26,22,"resolve"],[34,31,26,29],[34,33,26,31,"reject"],[34,39,26,37],[34,44,26,42],[35,6,27,4],[36,6,28,4,"request"],[36,13,28,11],[36,14,28,12,"oncomplete"],[36,24,28,22],[36,27,28,25,"request"],[36,34,28,32],[36,35,28,33,"onsuccess"],[36,44,28,42],[36,47,28,45],[36,53,28,51,"resolve"],[36,60,28,58],[36,61,28,59,"request"],[36,68,28,66],[36,69,28,67,"result"],[36,75,28,73],[36,76,28,74],[37,6,29,4],[38,6,30,4,"request"],[38,13,30,11],[38,14,30,12,"onabort"],[38,21,30,19],[38,24,30,22,"request"],[38,31,30,29],[38,32,30,30,"onerror"],[38,39,30,37],[38,42,30,40],[38,48,30,46,"reject"],[38,54,30,52],[38,55,30,53,"request"],[38,62,30,60],[38,63,30,61,"error"],[38,68,30,66],[38,69,30,67],[39,4,31,2],[39,5,31,3],[39,6,31,4],[40,2,32,0],[42,2,34,0],[43,2,35,0],[43,11,35,9,"createStore"],[43,22,35,20,"createStore"],[43,23,35,21,"dbName"],[43,29,35,27],[43,31,35,29,"storeName"],[43,40,35,38],[43,42,35,40],[44,4,36,2],[44,10,36,8,"request"],[44,17,36,15],[44,20,36,18,"indexedDB"],[44,29,36,27],[44,30,36,28,"open"],[44,34,36,32],[44,35,36,33,"dbName"],[44,41,36,39],[44,42,36,40],[45,4,37,2,"request"],[45,11,37,9],[45,12,37,10,"onupgradeneeded"],[45,27,37,25],[45,30,37,28],[45,36,37,34,"request"],[45,43,37,41],[45,44,37,42,"result"],[45,50,37,48],[45,51,37,49,"createObjectStore"],[45,68,37,66],[45,69,37,67,"storeName"],[45,78,37,76],[45,79,37,77],[46,4,38,2],[46,10,38,8,"dbp"],[46,13,38,11],[46,16,38,14,"promisifyRequest"],[46,32,38,30],[46,33,38,31,"request"],[46,40,38,38],[46,41,38,39],[47,4,40,2],[47,11,40,9,"callback"],[47,19,40,17],[47,23,40,21,"dbp"],[47,26,40,24],[47,27,40,25,"then"],[47,31,40,29],[47,32,40,30,"db"],[47,34,40,32],[47,38,40,36,"callback"],[47,46,40,44],[47,47,40,45,"db"],[47,49,40,47],[47,50,40,48,"transaction"],[47,61,40,59],[47,62,40,60,"storeName"],[47,71,40,69],[47,73,40,71],[47,84,40,82],[47,85,40,83],[47,86,40,84,"objectStore"],[47,97,40,95],[47,98,40,96,"storeName"],[47,107,40,105],[47,108,40,106],[47,109,40,107],[47,110,40,108],[48,2,41,0],[49,2,43,0],[49,11,43,9,"keys"],[49,15,43,13,"keys"],[49,16,43,14,"store"],[49,21,43,19],[49,23,43,21],[50,4,44,2],[50,11,44,9,"promisifyRequest"],[50,27,44,25],[50,28,44,26,"store"],[50,33,44,31],[50,34,44,32,"getAllKeys"],[50,44,44,42],[50,45,44,43],[50,46,44,45],[50,47,44,46],[51,2,45,0],[53,2,47,0],[54,2,48,0],[54,11,48,9,"push"],[54,15,48,13,"push"],[54,16,48,14,"store"],[54,21,48,19],[54,23,48,21,"value"],[54,28,48,26],[54,30,48,28,"maxQueueSize"],[54,42,48,40],[54,44,48,42],[55,4,49,2],[55,11,49,9,"store"],[55,16,49,14],[55,17,49,15,"store"],[55,22,49,20],[55,26,49,24],[56,6,50,4],[56,13,50,11,"keys"],[56,17,50,15],[56,18,50,16,"store"],[56,23,50,21],[56,24,50,22],[56,25,50,23,"then"],[56,29,50,27],[56,30,50,28,"keys"],[56,34,50,32],[56,38,50,36],[57,8,51,6],[57,12,51,10,"keys"],[57,16,51,14],[57,17,51,15,"length"],[57,23,51,21],[57,27,51,25,"maxQueueSize"],[57,39,51,37],[57,41,51,39],[58,10,52,8],[59,8,53,6],[61,8,55,6],[62,8,56,6,"store"],[62,13,56,11],[62,14,56,12,"put"],[62,17,56,15],[62,18,56,16,"value"],[62,23,56,21],[62,25,56,23,"Math"],[62,29,56,27],[62,30,56,28,"max"],[62,33,56,31],[62,34,56,32],[62,37,56,35,"keys"],[62,41,56,39],[62,43,56,41],[62,44,56,42],[62,45,56,43],[62,48,56,46],[62,49,56,47],[62,50,56,48],[63,8,57,6],[63,15,57,13,"promisifyRequest"],[63,31,57,29],[63,32,57,30,"store"],[63,37,57,35],[63,38,57,36,"transaction"],[63,49,57,47],[63,50,57,48],[64,6,58,4],[64,7,58,5],[64,8,58,6],[65,4,59,2],[65,5,59,3],[65,6,59,4],[66,2,60,0],[68,2,62,0],[69,2,63,0],[69,11,63,9,"unshift"],[69,18,63,16,"unshift"],[69,19,63,17,"store"],[69,24,63,22],[69,26,63,24,"value"],[69,31,63,29],[69,33,63,31,"maxQueueSize"],[69,45,63,43],[69,47,63,45],[70,4,64,2],[70,11,64,9,"store"],[70,16,64,14],[70,17,64,15,"store"],[70,22,64,20],[70,26,64,24],[71,6,65,4],[71,13,65,11,"keys"],[71,17,65,15],[71,18,65,16,"store"],[71,23,65,21],[71,24,65,22],[71,25,65,23,"then"],[71,29,65,27],[71,30,65,28,"keys"],[71,34,65,32],[71,38,65,36],[72,8,66,6],[72,12,66,10,"keys"],[72,16,66,14],[72,17,66,15,"length"],[72,23,66,21],[72,27,66,25,"maxQueueSize"],[72,39,66,37],[72,41,66,39],[73,10,67,8],[74,8,68,6],[76,8,70,6],[77,8,71,6,"store"],[77,13,71,11],[77,14,71,12,"put"],[77,17,71,15],[77,18,71,16,"value"],[77,23,71,21],[77,25,71,23,"Math"],[77,29,71,27],[77,30,71,28,"min"],[77,33,71,31],[77,34,71,32],[77,37,71,35,"keys"],[77,41,71,39],[77,43,71,41],[77,44,71,42],[77,45,71,43],[77,48,71,46],[77,49,71,47],[77,50,71,48],[78,8,72,6],[78,15,72,13,"promisifyRequest"],[78,31,72,29],[78,32,72,30,"store"],[78,37,72,35],[78,38,72,36,"transaction"],[78,49,72,47],[78,50,72,48],[79,6,73,4],[79,7,73,5],[79,8,73,6],[80,4,74,2],[80,5,74,3],[80,6,74,4],[81,2,75,0],[83,2,77,0],[84,2,78,0],[84,11,78,9,"shift"],[84,16,78,14,"shift"],[84,17,78,15,"store"],[84,22,78,20],[84,24,78,22],[85,4,79,2],[85,11,79,9,"store"],[85,16,79,14],[85,17,79,15,"store"],[85,22,79,20],[85,26,79,24],[86,6,80,4],[86,13,80,11,"keys"],[86,17,80,15],[86,18,80,16,"store"],[86,23,80,21],[86,24,80,22],[86,25,80,23,"then"],[86,29,80,27],[86,30,80,28,"keys"],[86,34,80,32],[86,38,80,36],[87,8,81,6],[87,14,81,12,"firstKey"],[87,22,81,20],[87,25,81,23,"keys"],[87,29,81,27],[87,30,81,28],[87,31,81,29],[87,32,81,30],[88,8,82,6],[88,12,82,10,"firstKey"],[88,20,82,18],[88,24,82,22],[88,28,82,26],[88,30,82,28],[89,10,83,8],[89,17,83,15,"undefined"],[89,26,83,24],[90,8,84,6],[91,8,86,6],[91,15,86,13,"promisifyRequest"],[91,31,86,29],[91,32,86,30,"store"],[91,37,86,35],[91,38,86,36,"get"],[91,41,86,39],[91,42,86,40,"firstKey"],[91,50,86,48],[91,51,86,49],[91,52,86,50],[91,53,86,51,"then"],[91,57,86,55],[91,58,86,56,"value"],[91,63,86,61],[91,67,86,65],[92,10,87,8,"store"],[92,15,87,13],[92,16,87,14,"delete"],[92,22,87,20],[92,23,87,21,"firstKey"],[92,31,87,29],[92,32,87,30],[93,10,88,8],[93,17,88,15,"promisifyRequest"],[93,33,88,31],[93,34,88,32,"store"],[93,39,88,37],[93,40,88,38,"transaction"],[93,51,88,49],[93,52,88,50],[93,53,88,51,"then"],[93,57,88,55],[93,58,88,56],[93,64,88,62,"value"],[93,69,88,67],[93,70,88,68],[94,8,89,6],[94,9,89,7],[94,10,89,8],[95,6,90,4],[95,7,90,5],[95,8,90,6],[96,4,91,2],[96,5,91,3],[96,6,91,4],[97,2,92,0],[98,2,94,0],[98,11,94,9,"createIndexedDbStore"],[98,31,94,29,"createIndexedDbStore"],[98,32,94,30,"options"],[98,39,94,37],[98,41,94,39],[99,4,95,2],[99,8,95,6,"store"],[99,13,95,11],[101,4,97,2],[102,4,98,2],[102,13,98,11,"getStore"],[102,21,98,19,"getStore"],[102,22,98,19],[102,24,98,22],[103,6,99,4],[103,10,99,8,"store"],[103,15,99,13],[103,19,99,17,"undefined"],[103,28,99,26],[103,30,99,28],[104,8,100,6,"store"],[104,13,100,11],[104,16,100,14,"createStore"],[104,27,100,25],[104,28,100,26,"options"],[104,35,100,33],[104,36,100,34,"dbName"],[104,42,100,40],[104,46,100,44],[104,62,100,60],[104,64,100,62,"options"],[104,71,100,69],[104,72,100,70,"storeName"],[104,81,100,79],[104,85,100,83],[104,92,100,90],[104,93,100,91],[105,6,101,4],[106,6,103,4],[106,13,103,11,"store"],[106,18,103,16],[107,4,104,2],[108,4,106,2],[108,11,106,9],[109,6,107,4,"push"],[109,10,107,8],[109,12,107,10],[109,18,107,17,"env"],[109,21,107,20],[109,25,107,25],[110,8,108,6],[110,12,108,10],[111,10,109,8],[111,16,109,14,"serialized"],[111,26,109,24],[111,29,109,27],[111,35,109,33],[111,39,109,33,"serializeEnvelope"],[111,62,109,50],[111,64,109,51,"env"],[111,67,109,54],[111,68,109,55],[112,10,110,8],[112,16,110,14,"push"],[112,20,110,18],[112,21,110,19,"getStore"],[112,29,110,27],[112,30,110,28],[112,31,110,29],[112,33,110,31,"serialized"],[112,43,110,41],[112,45,110,43,"options"],[112,52,110,50],[112,53,110,51,"maxQueueSize"],[112,65,110,63],[112,69,110,67],[112,71,110,69],[112,72,110,70],[113,8,111,6],[113,9,111,7],[113,10,111,8],[113,17,111,15,"_"],[113,18,111,16],[113,20,111,18],[114,10,112,8],[115,8,112,8],[116,6,114,4],[116,7,114,5],[117,6,115,4,"unshift"],[117,13,115,11],[117,15,115,13],[117,21,115,20,"env"],[117,24,115,23],[117,28,115,28],[118,8,116,6],[118,12,116,10],[119,10,117,8],[119,16,117,14,"serialized"],[119,26,117,24],[119,29,117,27],[119,35,117,33],[119,39,117,33,"serializeEnvelope"],[119,62,117,50],[119,64,117,51,"env"],[119,67,117,54],[119,68,117,55],[120,10,118,8],[120,16,118,14,"unshift"],[120,23,118,21],[120,24,118,22,"getStore"],[120,32,118,30],[120,33,118,31],[120,34,118,32],[120,36,118,34,"serialized"],[120,46,118,44],[120,48,118,46,"options"],[120,55,118,53],[120,56,118,54,"maxQueueSize"],[120,68,118,66],[120,72,118,70],[120,74,118,72],[120,75,118,73],[121,8,119,6],[121,9,119,7],[121,10,119,8],[121,17,119,15,"_"],[121,18,119,16],[121,20,119,18],[122,10,120,8],[123,8,120,8],[124,6,122,4],[124,7,122,5],[125,6,123,4,"shift"],[125,11,123,9],[125,13,123,11],[125,19,123,11,"shift"],[125,20,123,11],[125,25,123,23],[126,8,124,6],[126,12,124,10],[127,10,125,8],[127,16,125,14,"deserialized"],[127,28,125,26],[127,31,125,29],[127,37,125,35,"shift"],[127,42,125,40],[127,43,125,41,"getStore"],[127,51,125,49],[127,52,125,50],[127,53,125,51],[127,54,125,52],[128,10,126,8],[128,14,126,12,"deserialized"],[128,26,126,24],[128,28,126,26],[129,12,127,10],[129,19,127,17],[129,23,127,17,"parseEnvelope"],[129,42,127,30],[129,44,127,31,"deserialized"],[129,56,127,43],[129,57,127,44],[130,10,128,8],[131,8,129,6],[131,9,129,7],[131,10,129,8],[131,17,129,15,"_"],[131,18,129,16],[131,20,129,18],[132,10,130,8],[133,8,130,8],[134,8,133,6],[134,15,133,13,"undefined"],[134,24,133,22],[135,6,134,4],[136,4,135,2],[136,5,135,3],[137,2,136,0],[138,2,138,0],[138,11,138,9,"makeIndexedDbOfflineTransport"],[138,40,138,38,"makeIndexedDbOfflineTransport"],[138,41,139,2,"createTransport"],[138,56,139,17],[138,58,140,2],[139,4,141,2],[139,11,141,9,"options"],[139,18,141,16],[139,22,141,20],[140,6,142,4],[140,12,142,10,"transport"],[140,21,142,19],[140,24,142,22,"createTransport"],[140,39,142,37],[140,40,142,38],[141,8,142,40],[141,11,142,43,"options"],[141,18,142,50],[142,8,142,52,"createStore"],[142,19,142,63],[142,21,142,65,"createIndexedDbStore"],[143,6,142,86],[143,7,142,87],[143,8,142,88],[144,6,144,4,"WINDOW"],[144,21,144,10],[144,22,144,11,"addEventListener"],[144,38,144,27],[144,39,144,28],[144,47,144,36],[144,49,144,38],[144,55,144,44,"_"],[144,56,144,45],[144,60,144,49],[145,8,145,6],[145,14,145,12,"transport"],[145,23,145,21],[145,24,145,22,"flush"],[145,29,145,27],[145,30,145,28],[145,31,145,29],[146,6,146,4],[146,7,146,5],[146,8,146,6],[147,6,148,4],[147,13,148,11,"transport"],[147,22,148,20],[148,4,149,2],[148,5,149,3],[149,2,150,0],[151,2,152,0],[152,0,153,0],[153,0,154,0],[154,2,155,0],[154,11,155,9,"makeBrowserOfflineTransport"],[154,38,155,36,"makeBrowserOfflineTransport"],[154,39,156,2,"createTransport"],[154,54,156,17],[154,57,156,20,"makeFetchTransport"],[154,82,156,38],[154,84,157,2],[155,4,158,2],[155,11,158,9,"makeIndexedDbOfflineTransport"],[155,40,158,38],[155,41,158,39],[155,45,158,39,"makeOfflineTransport"],[155,71,158,59],[155,73,158,60,"createTransport"],[155,88,158,75],[155,89,158,76],[155,90,158,77],[156,2,159,0],[157,0,159,1],[157,3]],"functionMap":{"names":["<global>","promisifyRequest","Promise$argument_0","request.onsuccess","request.onerror","createStore","request.onupgradeneeded","<anonymous>","dbp.then$argument_0","keys","push","store$argument_0","keys.then$argument_0","unshift","shift","promisifyRequest.then$argument_0","createIndexedDbStore","getStore","makeIndexedDbOfflineTransport","WINDOW.addEventListener$argument_1","makeBrowserOfflineTransport"],"mappings":"AAA;ACwB;qBCC;6CCE,6BD;wCEE,2BF;GDC;CDC;AKG;4BCE,iDD;SEG,qBC,6ED,CF;CLC;ASE;CTE;AUG;eCC;4BCC;KDQ;GDC;CVC;AaG;eFC;4BCC;KDQ;GEC;CbC;AcG;eHC;4BCC;wDGM;OHG;KDC;GGC;CdC;AgBE;ECI;GDM;UNG;KMO;aHC;KGO;WFC;KEW;ChBE;AkBE;SXG;sCYG;KZE;GWG;ClBC;AoBK;CpBI"}},"type":"js/module"}]}