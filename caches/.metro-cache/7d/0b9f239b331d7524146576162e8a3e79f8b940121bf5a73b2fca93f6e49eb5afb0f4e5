{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":229,"index":229}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":230},"end":{"line":2,"column":48,"index":278}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../eventbuilder.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":279},"end":{"line":3,"column":59,"index":338}}],"key":"/3esTw0IO+z2wDzSpZn1CVjNb5A=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":339},"end":{"line":4,"column":52,"index":391}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.globalHandlersIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _debugBuild = require(_dependencyMap[1], \"../debug-build.js\");\n  var _eventbuilder = require(_dependencyMap[2], \"../eventbuilder.js\");\n  var _helpers = require(_dependencyMap[3], \"../helpers.js\");\n  const INTEGRATION_NAME = 'GlobalHandlers';\n  const _globalHandlersIntegration = (options = {}) => {\n    const _options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options\n    };\n    return {\n      name: INTEGRATION_NAME,\n      setupOnce() {\n        Error.stackTraceLimit = 50;\n      },\n      setup(client) {\n        if (_options.onerror) {\n          _installGlobalOnErrorHandler(client);\n          globalHandlerLog('onerror');\n        }\n        if (_options.onunhandledrejection) {\n          _installGlobalOnUnhandledRejectionHandler(client);\n          globalHandlerLog('onunhandledrejection');\n        }\n      }\n    };\n  };\n  const globalHandlersIntegration = exports.globalHandlersIntegration = (0, _core.defineIntegration)(_globalHandlersIntegration);\n  function _installGlobalOnErrorHandler(client) {\n    (0, _core.addGlobalErrorInstrumentationHandler)(data => {\n      const {\n        stackParser,\n        attachStacktrace\n      } = getOptions();\n      if ((0, _core.getClient)() !== client || (0, _helpers.shouldIgnoreOnError)()) {\n        return;\n      }\n      const {\n        msg,\n        url,\n        line,\n        column,\n        error\n      } = data;\n      const event = _enhanceEventWithInitialFrame((0, _eventbuilder.eventFromUnknownInput)(stackParser, error || msg, undefined, attachStacktrace, false), url, line, column);\n      event.level = 'error';\n      (0, _core.captureEvent)(event, {\n        originalException: error,\n        mechanism: {\n          handled: false,\n          type: 'onerror'\n        }\n      });\n    });\n  }\n  function _installGlobalOnUnhandledRejectionHandler(client) {\n    (0, _core.addGlobalUnhandledRejectionInstrumentationHandler)(e => {\n      const {\n        stackParser,\n        attachStacktrace\n      } = getOptions();\n      if ((0, _core.getClient)() !== client || (0, _helpers.shouldIgnoreOnError)()) {\n        return;\n      }\n      const error = _getUnhandledRejectionError(e);\n      const event = (0, _core.isPrimitive)(error) ? _eventFromRejectionWithPrimitive(error) : (0, _eventbuilder.eventFromUnknownInput)(stackParser, error, undefined, attachStacktrace, true);\n      event.level = 'error';\n      (0, _core.captureEvent)(event, {\n        originalException: error,\n        mechanism: {\n          handled: false,\n          type: 'onunhandledrejection'\n        }\n      });\n    });\n  }\n  function _getUnhandledRejectionError(error) {\n    if ((0, _core.isPrimitive)(error)) {\n      return error;\n    }\n\n    // dig the object of the rejection out of known event types\n    try {\n      // PromiseRejectionEvents store the object of the rejection under 'reason'\n      // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n      if ('reason' in error) {\n        return error.reason;\n      }\n\n      // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n      // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n      // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n      // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n      // https://github.com/getsentry/sentry-javascript/issues/2380\n      if ('detail' in error && 'reason' in error.detail) {\n        return error.detail.reason;\n      }\n    } catch (e2) {} // eslint-disable-line no-empty\n\n    return error;\n  }\n\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  function _eventFromRejectionWithPrimitive(reason) {\n    return {\n      exception: {\n        values: [{\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`\n        }]\n      }\n    };\n  }\n  function _enhanceEventWithInitialFrame(event, url, line, column) {\n    // event.exception\n    const e = event.exception = event.exception || {};\n    // event.exception.values\n    const ev = e.values = e.values || [];\n    // event.exception.values[0]\n    const ev0 = ev[0] = ev[0] || {};\n    // event.exception.values[0].stacktrace\n    const ev0s = ev0.stacktrace = ev0.stacktrace || {};\n    // event.exception.values[0].stacktrace.frames\n    const ev0sf = ev0s.frames = ev0s.frames || [];\n    const colno = column;\n    const lineno = line;\n    const filename = (0, _core.isString)(url) && url.length > 0 ? url : (0, _core.getLocationHref)();\n\n    // event.exception.values[0].stacktrace.frames\n    if (ev0sf.length === 0) {\n      ev0sf.push({\n        colno,\n        filename,\n        function: _core.UNKNOWN_FUNCTION,\n        in_app: true,\n        lineno\n      });\n    }\n    return event;\n  }\n  function globalHandlerLog(type) {\n    _debugBuild.DEBUG_BUILD && _core.logger.log(`Global Handler attached: ${type}`);\n  }\n  function getOptions() {\n    const client = (0, _core.getClient)();\n    const options = client && client.getOptions() || {\n      stackParser: () => [],\n      attachStacktrace: false\n    };\n    return options;\n  }\n});","lineCount":164,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,0,"_debugBuild"],[7,17,2,0],[7,20,2,0,"require"],[7,27,2,0],[7,28,2,0,"_dependencyMap"],[7,42,2,0],[8,2,3,0],[8,6,3,0,"_eventbuilder"],[8,19,3,0],[8,22,3,0,"require"],[8,29,3,0],[8,30,3,0,"_dependencyMap"],[8,44,3,0],[9,2,4,0],[9,6,4,0,"_helpers"],[9,14,4,0],[9,17,4,0,"require"],[9,24,4,0],[9,25,4,0,"_dependencyMap"],[9,39,4,0],[10,2,6,0],[10,8,6,6,"INTEGRATION_NAME"],[10,24,6,22],[10,27,6,25],[10,43,6,41],[11,2,8,0],[11,8,8,6,"_globalHandlersIntegration"],[11,34,8,32],[11,37,8,36,"_globalHandlersIntegration"],[11,38,8,37,"options"],[11,45,8,44],[11,48,8,47],[11,49,8,48],[11,50,8,49],[11,55,8,54],[12,4,9,2],[12,10,9,8,"_options"],[12,18,9,16],[12,21,9,19],[13,6,10,4,"onerror"],[13,13,10,11],[13,15,10,13],[13,19,10,17],[14,6,11,4,"onunhandledrejection"],[14,26,11,24],[14,28,11,26],[14,32,11,30],[15,6,12,4],[15,9,12,7,"options"],[16,4,13,2],[16,5,13,3],[17,4,15,2],[17,11,15,9],[18,6,16,4,"name"],[18,10,16,8],[18,12,16,10,"INTEGRATION_NAME"],[18,28,16,26],[19,6,17,4,"setupOnce"],[19,15,17,13,"setupOnce"],[19,16,17,13],[19,18,17,16],[20,8,18,6,"Error"],[20,13,18,11],[20,14,18,12,"stackTraceLimit"],[20,29,18,27],[20,32,18,30],[20,34,18,32],[21,6,19,4],[21,7,19,5],[22,6,20,4,"setup"],[22,11,20,9,"setup"],[22,12,20,10,"client"],[22,18,20,16],[22,20,20,18],[23,8,21,6],[23,12,21,10,"_options"],[23,20,21,18],[23,21,21,19,"onerror"],[23,28,21,26],[23,30,21,28],[24,10,22,8,"_installGlobalOnErrorHandler"],[24,38,22,36],[24,39,22,37,"client"],[24,45,22,43],[24,46,22,44],[25,10,23,8,"globalHandlerLog"],[25,26,23,24],[25,27,23,25],[25,36,23,34],[25,37,23,35],[26,8,24,6],[27,8,25,6],[27,12,25,10,"_options"],[27,20,25,18],[27,21,25,19,"onunhandledrejection"],[27,41,25,39],[27,43,25,41],[28,10,26,8,"_installGlobalOnUnhandledRejectionHandler"],[28,51,26,49],[28,52,26,50,"client"],[28,58,26,56],[28,59,26,57],[29,10,27,8,"globalHandlerLog"],[29,26,27,24],[29,27,27,25],[29,49,27,47],[29,50,27,48],[30,8,28,6],[31,6,29,4],[32,4,30,2],[32,5,30,3],[33,2,31,0],[33,3,31,2],[34,2,33,0],[34,8,33,6,"globalHandlersIntegration"],[34,33,33,31],[34,36,33,31,"exports"],[34,43,33,31],[34,44,33,31,"globalHandlersIntegration"],[34,69,33,31],[34,72,33,34],[34,76,33,34,"defineIntegration"],[34,99,33,51],[34,101,33,52,"_globalHandlersIntegration"],[34,127,33,78],[34,128,33,79],[35,2,35,0],[35,11,35,9,"_installGlobalOnErrorHandler"],[35,39,35,37,"_installGlobalOnErrorHandler"],[35,40,35,38,"client"],[35,46,35,44],[35,48,35,46],[36,4,36,2],[36,8,36,2,"addGlobalErrorInstrumentationHandler"],[36,50,36,38],[36,52,36,39,"data"],[36,56,36,43],[36,60,36,47],[37,6,37,4],[37,12,37,10],[38,8,37,12,"stackParser"],[38,19,37,23],[39,8,37,25,"attachStacktrace"],[40,6,37,42],[40,7,37,43],[40,10,37,46,"getOptions"],[40,20,37,56],[40,21,37,57],[40,22,37,58],[41,6,39,4],[41,10,39,8],[41,14,39,8,"getClient"],[41,29,39,17],[41,31,39,18],[41,32,39,19],[41,37,39,24,"client"],[41,43,39,30],[41,47,39,34],[41,51,39,34,"shouldIgnoreOnError"],[41,79,39,53],[41,81,39,54],[41,82,39,55],[41,84,39,57],[42,8,40,6],[43,6,41,4],[44,6,43,4],[44,12,43,10],[45,8,43,12,"msg"],[45,11,43,15],[46,8,43,17,"url"],[46,11,43,20],[47,8,43,22,"line"],[47,12,43,26],[48,8,43,28,"column"],[48,14,43,34],[49,8,43,36,"error"],[50,6,43,42],[50,7,43,43],[50,10,43,46,"data"],[50,14,43,50],[51,6,45,4],[51,12,45,10,"event"],[51,17,45,15],[51,20,45,18,"_enhanceEventWithInitialFrame"],[51,49,45,47],[51,50,46,6],[51,54,46,6,"eventFromUnknownInput"],[51,89,46,27],[51,91,46,28,"stackParser"],[51,102,46,39],[51,104,46,41,"error"],[51,109,46,46],[51,113,46,50,"msg"],[51,116,46,53],[51,118,46,55,"undefined"],[51,127,46,64],[51,129,46,66,"attachStacktrace"],[51,145,46,82],[51,147,46,84],[51,152,46,89],[51,153,46,90],[51,155,47,6,"url"],[51,158,47,9],[51,160,48,6,"line"],[51,164,48,10],[51,166,49,6,"column"],[51,172,50,4],[51,173,50,5],[52,6,52,4,"event"],[52,11,52,9],[52,12,52,10,"level"],[52,17,52,15],[52,20,52,18],[52,27,52,25],[53,6,54,4],[53,10,54,4,"captureEvent"],[53,28,54,16],[53,30,54,17,"event"],[53,35,54,22],[53,37,54,24],[54,8,55,6,"originalException"],[54,25,55,23],[54,27,55,25,"error"],[54,32,55,30],[55,8,56,6,"mechanism"],[55,17,56,15],[55,19,56,17],[56,10,57,8,"handled"],[56,17,57,15],[56,19,57,17],[56,24,57,22],[57,10,58,8,"type"],[57,14,58,12],[57,16,58,14],[58,8,59,6],[59,6,60,4],[59,7,60,5],[59,8,60,6],[60,4,61,2],[60,5,61,3],[60,6,61,4],[61,2,62,0],[62,2,64,0],[62,11,64,9,"_installGlobalOnUnhandledRejectionHandler"],[62,52,64,50,"_installGlobalOnUnhandledRejectionHandler"],[62,53,64,51,"client"],[62,59,64,57],[62,61,64,59],[63,4,65,2],[63,8,65,2,"addGlobalUnhandledRejectionInstrumentationHandler"],[63,63,65,51],[63,65,65,52,"e"],[63,66,65,53],[63,70,65,57],[64,6,66,4],[64,12,66,10],[65,8,66,12,"stackParser"],[65,19,66,23],[66,8,66,25,"attachStacktrace"],[67,6,66,42],[67,7,66,43],[67,10,66,46,"getOptions"],[67,20,66,56],[67,21,66,57],[67,22,66,58],[68,6,68,4],[68,10,68,8],[68,14,68,8,"getClient"],[68,29,68,17],[68,31,68,18],[68,32,68,19],[68,37,68,24,"client"],[68,43,68,30],[68,47,68,34],[68,51,68,34,"shouldIgnoreOnError"],[68,79,68,53],[68,81,68,54],[68,82,68,55],[68,84,68,57],[69,8,69,6],[70,6,70,4],[71,6,72,4],[71,12,72,10,"error"],[71,17,72,15],[71,20,72,18,"_getUnhandledRejectionError"],[71,47,72,45],[71,48,72,46,"e"],[71,49,72,48],[71,50,72,49],[72,6,74,4],[72,12,74,10,"event"],[72,17,74,15],[72,20,74,18],[72,24,74,18,"isPrimitive"],[72,41,74,29],[72,43,74,30,"error"],[72,48,74,35],[72,49,74,36],[72,52,75,8,"_eventFromRejectionWithPrimitive"],[72,84,75,40],[72,85,75,41,"error"],[72,90,75,46],[72,91,75,47],[72,94,76,8],[72,98,76,8,"eventFromUnknownInput"],[72,133,76,29],[72,135,76,30,"stackParser"],[72,146,76,41],[72,148,76,43,"error"],[72,153,76,48],[72,155,76,50,"undefined"],[72,164,76,59],[72,166,76,61,"attachStacktrace"],[72,182,76,77],[72,184,76,79],[72,188,76,83],[72,189,76,84],[73,6,78,4,"event"],[73,11,78,9],[73,12,78,10,"level"],[73,17,78,15],[73,20,78,18],[73,27,78,25],[74,6,80,4],[74,10,80,4,"captureEvent"],[74,28,80,16],[74,30,80,17,"event"],[74,35,80,22],[74,37,80,24],[75,8,81,6,"originalException"],[75,25,81,23],[75,27,81,25,"error"],[75,32,81,30],[76,8,82,6,"mechanism"],[76,17,82,15],[76,19,82,17],[77,10,83,8,"handled"],[77,17,83,15],[77,19,83,17],[77,24,83,22],[78,10,84,8,"type"],[78,14,84,12],[78,16,84,14],[79,8,85,6],[80,6,86,4],[80,7,86,5],[80,8,86,6],[81,4,87,2],[81,5,87,3],[81,6,87,4],[82,2,88,0],[83,2,90,0],[83,11,90,9,"_getUnhandledRejectionError"],[83,38,90,36,"_getUnhandledRejectionError"],[83,39,90,37,"error"],[83,44,90,42],[83,46,90,44],[84,4,91,2],[84,8,91,6],[84,12,91,6,"isPrimitive"],[84,29,91,17],[84,31,91,18,"error"],[84,36,91,23],[84,37,91,24],[84,39,91,26],[85,6,92,4],[85,13,92,11,"error"],[85,18,92,16],[86,4,93,2],[88,4,95,2],[89,4,96,2],[89,8,96,6],[90,6,98,4],[91,6,99,4],[92,6,100,4],[92,10,100,8],[92,18,100,16],[92,22,100,21,"error"],[92,27,100,28],[92,29,100,30],[93,8,101,6],[93,15,101,14,"error"],[93,20,101,19],[93,21,101,22,"reason"],[93,27,101,28],[94,6,102,4],[96,6,104,4],[97,6,105,4],[98,6,106,4],[99,6,107,4],[100,6,108,4],[101,6,109,4],[101,10,109,8],[101,18,109,16],[101,22,109,21,"error"],[101,27,109,28],[101,31,109,32],[101,39,109,40],[101,43,109,45,"error"],[101,48,109,50],[101,49,109,53,"detail"],[101,55,109,59],[101,57,109,61],[102,8,110,6],[102,15,110,14,"error"],[102,20,110,19],[102,21,110,22,"detail"],[102,27,110,28],[102,28,110,29,"reason"],[102,34,110,35],[103,6,111,4],[104,4,112,2],[104,5,112,3],[104,6,112,4],[104,13,112,11,"e2"],[104,15,112,13],[104,17,112,15],[104,18,112,16],[104,19,112,17],[104,20,112,18],[106,4,114,2],[106,11,114,9,"error"],[106,16,114,14],[107,2,115,0],[109,2,117,0],[110,0,118,0],[111,0,119,0],[112,0,120,0],[113,0,121,0],[114,0,122,0],[115,2,123,0],[115,11,123,9,"_eventFromRejectionWithPrimitive"],[115,43,123,41,"_eventFromRejectionWithPrimitive"],[115,44,123,42,"reason"],[115,50,123,48],[115,52,123,50],[116,4,124,2],[116,11,124,9],[117,6,125,4,"exception"],[117,15,125,13],[117,17,125,15],[118,8,126,6,"values"],[118,14,126,12],[118,16,126,14],[118,17,127,8],[119,10,128,10,"type"],[119,14,128,14],[119,16,128,16],[119,36,128,36],[120,10,129,10],[121,10,130,10,"value"],[121,15,130,15],[121,17,130,17],[121,69,130,69,"String"],[121,75,130,75],[121,76,130,76,"reason"],[121,82,130,82],[121,83,130,83],[122,8,131,8],[122,9,131,9],[123,6,133,4],[124,4,134,2],[124,5,134,3],[125,2,135,0],[126,2,137,0],[126,11,137,9,"_enhanceEventWithInitialFrame"],[126,40,137,38,"_enhanceEventWithInitialFrame"],[126,41,138,2,"event"],[126,46,138,7],[126,48,139,2,"url"],[126,51,139,5],[126,53,140,2,"line"],[126,57,140,6],[126,59,141,2,"column"],[126,65,141,8],[126,67,142,2],[127,4,143,2],[128,4,144,2],[128,10,144,8,"e"],[128,11,144,9],[128,14,144,13,"event"],[128,19,144,18],[128,20,144,19,"exception"],[128,29,144,28],[128,32,144,31,"event"],[128,37,144,36],[128,38,144,37,"exception"],[128,47,144,46],[128,51,144,50],[128,52,144,51],[128,53,144,53],[129,4,145,2],[130,4,146,2],[130,10,146,8,"ev"],[130,12,146,10],[130,15,146,14,"e"],[130,16,146,15],[130,17,146,16,"values"],[130,23,146,22],[130,26,146,25,"e"],[130,27,146,26],[130,28,146,27,"values"],[130,34,146,33],[130,38,146,37],[130,40,146,40],[131,4,147,2],[132,4,148,2],[132,10,148,8,"ev0"],[132,13,148,11],[132,16,148,15,"ev"],[132,18,148,17],[132,19,148,18],[132,20,148,19],[132,21,148,20],[132,24,148,23,"ev"],[132,26,148,25],[132,27,148,26],[132,28,148,27],[132,29,148,28],[132,33,148,32],[132,34,148,33],[132,35,148,35],[133,4,149,2],[134,4,150,2],[134,10,150,8,"ev0s"],[134,14,150,12],[134,17,150,16,"ev0"],[134,20,150,19],[134,21,150,20,"stacktrace"],[134,31,150,30],[134,34,150,33,"ev0"],[134,37,150,36],[134,38,150,37,"stacktrace"],[134,48,150,47],[134,52,150,51],[134,53,150,52],[134,54,150,54],[135,4,151,2],[136,4,152,2],[136,10,152,8,"ev0sf"],[136,15,152,13],[136,18,152,17,"ev0s"],[136,22,152,21],[136,23,152,22,"frames"],[136,29,152,28],[136,32,152,31,"ev0s"],[136,36,152,35],[136,37,152,36,"frames"],[136,43,152,42],[136,47,152,46],[136,49,152,49],[137,4,154,2],[137,10,154,8,"colno"],[137,15,154,13],[137,18,154,16,"column"],[137,24,154,22],[138,4,155,2],[138,10,155,8,"lineno"],[138,16,155,14],[138,19,155,17,"line"],[138,23,155,21],[139,4,156,2],[139,10,156,8,"filename"],[139,18,156,16],[139,21,156,19],[139,25,156,19,"isString"],[139,39,156,27],[139,41,156,28,"url"],[139,44,156,31],[139,45,156,32],[139,49,156,36,"url"],[139,52,156,39],[139,53,156,40,"length"],[139,59,156,46],[139,62,156,49],[139,63,156,50],[139,66,156,53,"url"],[139,69,156,56],[139,72,156,59],[139,76,156,59,"getLocationHref"],[139,97,156,74],[139,99,156,75],[139,100,156,76],[141,4,158,2],[142,4,159,2],[142,8,159,6,"ev0sf"],[142,13,159,11],[142,14,159,12,"length"],[142,20,159,18],[142,25,159,23],[142,26,159,24],[142,28,159,26],[143,6,160,4,"ev0sf"],[143,11,160,9],[143,12,160,10,"push"],[143,16,160,14],[143,17,160,15],[144,8,161,6,"colno"],[144,13,161,11],[145,8,162,6,"filename"],[145,16,162,14],[146,8,163,6,"function"],[146,16,163,14],[146,18,163,16,"UNKNOWN_FUNCTION"],[146,40,163,32],[147,8,164,6,"in_app"],[147,14,164,12],[147,16,164,14],[147,20,164,18],[148,8,165,6,"lineno"],[149,6,166,4],[149,7,166,5],[149,8,166,6],[150,4,167,2],[151,4,169,2],[151,11,169,9,"event"],[151,16,169,14],[152,2,170,0],[153,2,172,0],[153,11,172,9,"globalHandlerLog"],[153,27,172,25,"globalHandlerLog"],[153,28,172,26,"type"],[153,32,172,30],[153,34,172,32],[154,4,173,2,"DEBUG_BUILD"],[154,27,173,13],[154,31,173,17,"logger"],[154,43,173,23],[154,44,173,24,"log"],[154,47,173,27],[154,48,173,28],[154,76,173,56,"type"],[154,80,173,60],[154,82,173,62],[154,83,173,63],[155,2,174,0],[156,2,176,0],[156,11,176,9,"getOptions"],[156,21,176,19,"getOptions"],[156,22,176,19],[156,24,176,22],[157,4,177,2],[157,10,177,8,"client"],[157,16,177,14],[157,19,177,17],[157,23,177,17,"getClient"],[157,38,177,26],[157,40,177,27],[157,41,177,28],[158,4,178,2],[158,10,178,8,"options"],[158,17,178,15],[158,20,178,19,"client"],[158,26,178,25],[158,30,178,29,"client"],[158,36,178,35],[158,37,178,36,"getOptions"],[158,47,178,46],[158,48,178,47],[158,49,178,48],[158,53,178,53],[159,6,179,4,"stackParser"],[159,17,179,15],[159,19,179,17,"stackParser"],[159,20,179,17],[159,25,179,23],[159,27,179,25],[160,6,180,4,"attachStacktrace"],[160,22,180,20],[160,24,180,22],[161,4,181,2],[161,5,181,3],[162,4,182,2],[162,11,182,9,"options"],[162,18,182,16],[163,2,183,0],[164,0,183,1],[164,3]],"functionMap":{"names":["<global>","_globalHandlersIntegration","setupOnce","setup","_installGlobalOnErrorHandler","addGlobalErrorInstrumentationHandler$argument_0","_installGlobalOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler$argument_0","_getUnhandledRejectionError","_eventFromRejectionWithPrimitive","_enhanceEventWithInitialFrame","globalHandlerLog","getOptions","stackParser"],"mappings":"AAA;oCCO;ICS;KDE;IEC;KFS;CDE;AII;uCCC;GDyB;CJC;AME;oDCC;GDsB;CNC;AQE;CRyB;ASQ;CTY;AUE;CViC;AWE;CXE;AYE;iBCG,QD;CZI"}},"type":"js/module"}]}