{"dependencies":[{"name":"../utils-hoist/object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"IWRGqGXR51VGNaoabCqwsNvBzK0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCapturedScopesOnSpan = getCapturedScopesOnSpan;\n  exports.setCapturedScopesOnSpan = setCapturedScopesOnSpan;\n  var _object = require(_dependencyMap[0], \"../utils-hoist/object.js\");\n  const SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\n  const ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n  /** Store the scope & isolation scope for a span, which can the be used when it is finished. */\n  function setCapturedScopesOnSpan(span, scope, isolationScope) {\n    if (span) {\n      (0, _object.addNonEnumerableProperty)(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n      (0, _object.addNonEnumerableProperty)(span, SCOPE_ON_START_SPAN_FIELD, scope);\n    }\n  }\n\n  /**\n   * Grabs the scope and isolation scope off a span that were active when the span was started.\n   */\n  function getCapturedScopesOnSpan(span) {\n    return {\n      scope: span[SCOPE_ON_START_SPAN_FIELD],\n      isolationScope: span[ISOLATION_SCOPE_ON_START_SPAN_FIELD]\n    };\n  }\n});","lineCount":28,"map":[[7,2,1,0],[7,6,1,0,"_object"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[8,8,3,6,"SCOPE_ON_START_SPAN_FIELD"],[8,33,3,31],[8,36,3,34],[8,50,3,48],[9,2,4,0],[9,8,4,6,"ISOLATION_SCOPE_ON_START_SPAN_FIELD"],[9,43,4,41],[9,46,4,44],[9,69,4,67],[11,2,6,0],[12,2,7,0],[12,11,7,9,"setCapturedScopesOnSpan"],[12,34,7,32,"setCapturedScopesOnSpan"],[12,35,7,33,"span"],[12,39,7,37],[12,41,7,39,"scope"],[12,46,7,44],[12,48,7,46,"isolationScope"],[12,62,7,60],[12,64,7,62],[13,4,8,2],[13,8,8,6,"span"],[13,12,8,10],[13,14,8,12],[14,6,9,4],[14,10,9,4,"addNonEnumerableProperty"],[14,42,9,28],[14,44,9,29,"span"],[14,48,9,33],[14,50,9,35,"ISOLATION_SCOPE_ON_START_SPAN_FIELD"],[14,85,9,70],[14,87,9,72,"isolationScope"],[14,101,9,86],[14,102,9,87],[15,6,10,4],[15,10,10,4,"addNonEnumerableProperty"],[15,42,10,28],[15,44,10,29,"span"],[15,48,10,33],[15,50,10,35,"SCOPE_ON_START_SPAN_FIELD"],[15,75,10,60],[15,77,10,62,"scope"],[15,82,10,67],[15,83,10,68],[16,4,11,2],[17,2,12,0],[19,2,14,0],[20,0,15,0],[21,0,16,0],[22,2,17,0],[22,11,17,9,"getCapturedScopesOnSpan"],[22,34,17,32,"getCapturedScopesOnSpan"],[22,35,17,33,"span"],[22,39,17,37],[22,41,17,39],[23,4,18,2],[23,11,18,9],[24,6,19,4,"scope"],[24,11,19,9],[24,13,19,12,"span"],[24,17,19,16],[24,18,19,19,"SCOPE_ON_START_SPAN_FIELD"],[24,43,19,44],[24,44,19,45],[25,6,20,4,"isolationScope"],[25,20,20,18],[25,22,20,21,"span"],[25,26,20,25],[25,27,20,28,"ISOLATION_SCOPE_ON_START_SPAN_FIELD"],[25,62,20,63],[26,4,21,2],[26,5,21,3],[27,2,22,0],[28,0,22,1],[28,3]],"functionMap":{"names":["<global>","setCapturedScopesOnSpan","getCapturedScopesOnSpan"],"mappings":"AAA;ACM;CDK;AEK;CFK"}},"type":"js/module"}]}