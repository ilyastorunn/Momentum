{"dependencies":[{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../semanticAttributes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":131,"index":180}}],"key":"Ovsn9ORXEwSazI36ru//KBDD8LQ=","exportNames":["*"]}},{"name":"../utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":181},"end":{"line":3,"column":50,"index":231}}],"key":"ntkLGOO3yQLxIuhQNqZB03aOwxw=","exportNames":["*"]}},{"name":"../utils/spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":232},"end":{"line":4,"column":67,"index":299}}],"key":"UzLeGx1bDOwqjtebNy27AzwV/PI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.setMeasurement = setMeasurement;\n  exports.timedEventsToMeasurements = timedEventsToMeasurements;\n  var _debugBuild = require(_dependencyMap[0], \"../debug-build.js\");\n  var _semanticAttributes = require(_dependencyMap[1], \"../semanticAttributes.js\");\n  var _logger = require(_dependencyMap[2], \"../utils-hoist/logger.js\");\n  var _spanUtils = require(_dependencyMap[3], \"../utils/spanUtils.js\");\n  /**\n   * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n   * as the 4th parameter.\n   */\n  function setMeasurement(name, value, unit, activeSpan = (0, _spanUtils.getActiveSpan)()) {\n    const rootSpan = activeSpan && (0, _spanUtils.getRootSpan)(activeSpan);\n    if (rootSpan) {\n      _debugBuild.DEBUG_BUILD && _logger.logger.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n      rootSpan.addEvent(name, {\n        [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n        [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit\n      });\n    }\n  }\n\n  /**\n   * Convert timed events to measurements.\n   */\n  function timedEventsToMeasurements(events) {\n    if (!events || events.length === 0) {\n      return undefined;\n    }\n    const measurements = {};\n    events.forEach(event => {\n      const attributes = event.attributes || {};\n      const unit = attributes[_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT];\n      const value = attributes[_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE];\n      if (typeof unit === 'string' && typeof value === 'number') {\n        measurements[event.name] = {\n          value,\n          unit\n        };\n      }\n    });\n    return measurements;\n  }\n});","lineCount":47,"map":[[7,2,1,0],[7,6,1,0,"_debugBuild"],[7,17,1,0],[7,20,1,0,"require"],[7,27,1,0],[7,28,1,0,"_dependencyMap"],[7,42,1,0],[8,2,2,0],[8,6,2,0,"_semanticAttributes"],[8,25,2,0],[8,28,2,0,"require"],[8,35,2,0],[8,36,2,0,"_dependencyMap"],[8,50,2,0],[9,2,3,0],[9,6,3,0,"_logger"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,4,0],[10,6,4,0,"_spanUtils"],[10,16,4,0],[10,19,4,0,"require"],[10,26,4,0],[10,27,4,0,"_dependencyMap"],[10,41,4,0],[11,2,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,2,10,0],[15,11,10,9,"setMeasurement"],[15,25,10,23,"setMeasurement"],[15,26,10,24,"name"],[15,30,10,28],[15,32,10,30,"value"],[15,37,10,35],[15,39,10,37,"unit"],[15,43,10,41],[15,45,10,43,"activeSpan"],[15,55,10,53],[15,58,10,56],[15,62,10,56,"getActiveSpan"],[15,86,10,69],[15,88,10,70],[15,89,10,71],[15,91,10,73],[16,4,11,2],[16,10,11,8,"rootSpan"],[16,18,11,16],[16,21,11,19,"activeSpan"],[16,31,11,29],[16,35,11,33],[16,39,11,33,"getRootSpan"],[16,61,11,44],[16,63,11,45,"activeSpan"],[16,73,11,55],[16,74,11,56],[17,4,13,2],[17,8,13,6,"rootSpan"],[17,16,13,14],[17,18,13,16],[18,6,14,4,"DEBUG_BUILD"],[18,29,14,15],[18,33,14,19,"logger"],[18,47,14,25],[18,48,14,26,"log"],[18,51,14,29],[18,52,14,30],[18,103,14,81,"name"],[18,107,14,85],[18,113,14,91,"value"],[18,118,14,96],[18,122,14,100,"unit"],[18,126,14,104],[18,128,14,106],[18,129,14,107],[19,6,15,4,"rootSpan"],[19,14,15,12],[19,15,15,13,"addEvent"],[19,23,15,21],[19,24,15,22,"name"],[19,28,15,26],[19,30,15,28],[20,8,16,6],[20,9,16,7,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE"],[20,72,16,50],[20,75,16,53,"value"],[20,80,16,58],[21,8,17,6],[21,9,17,7,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT"],[21,71,17,49],[21,74,17,52,"unit"],[22,6,18,4],[22,7,18,5],[22,8,18,6],[23,4,19,2],[24,2,20,0],[26,2,22,0],[27,0,23,0],[28,0,24,0],[29,2,25,0],[29,11,25,9,"timedEventsToMeasurements"],[29,36,25,34,"timedEventsToMeasurements"],[29,37,25,35,"events"],[29,43,25,41],[29,45,25,43],[30,4,26,2],[30,8,26,6],[30,9,26,7,"events"],[30,15,26,13],[30,19,26,17,"events"],[30,25,26,23],[30,26,26,24,"length"],[30,32,26,30],[30,37,26,35],[30,38,26,36],[30,40,26,38],[31,6,27,4],[31,13,27,11,"undefined"],[31,22,27,20],[32,4,28,2],[33,4,30,2],[33,10,30,8,"measurements"],[33,22,30,20],[33,25,30,23],[33,26,30,24],[33,27,30,25],[34,4,31,2,"events"],[34,10,31,8],[34,11,31,9,"forEach"],[34,18,31,16],[34,19,31,17,"event"],[34,24,31,22],[34,28,31,26],[35,6,32,4],[35,12,32,10,"attributes"],[35,22,32,20],[35,25,32,23,"event"],[35,30,32,28],[35,31,32,29,"attributes"],[35,41,32,39],[35,45,32,43],[35,46,32,44],[35,47,32,45],[36,6,33,4],[36,12,33,10,"unit"],[36,16,33,14],[36,19,33,17,"attributes"],[36,29,33,27],[36,30,33,28,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT"],[36,92,33,70],[36,93,33,71],[37,6,34,4],[37,12,34,10,"value"],[37,17,34,15],[37,20,34,18,"attributes"],[37,30,34,28],[37,31,34,29,"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE"],[37,94,34,72],[37,95,34,73],[38,6,36,4],[38,10,36,8],[38,17,36,15,"unit"],[38,21,36,19],[38,26,36,24],[38,34,36,32],[38,38,36,36],[38,45,36,43,"value"],[38,50,36,48],[38,55,36,53],[38,63,36,61],[38,65,36,63],[39,8,37,6,"measurements"],[39,20,37,18],[39,21,37,19,"event"],[39,26,37,24],[39,27,37,25,"name"],[39,31,37,29],[39,32,37,30],[39,35,37,33],[40,10,37,35,"value"],[40,15,37,40],[41,10,37,42,"unit"],[42,8,37,47],[42,9,37,48],[43,6,38,4],[44,4,39,2],[44,5,39,3],[44,6,39,4],[45,4,41,2],[45,11,41,9,"measurements"],[45,23,41,21],[46,2,42,0],[47,0,42,1],[47,3]],"functionMap":{"names":["<global>","setMeasurement","timedEventsToMeasurements","events.forEach$argument_0"],"mappings":"AAA;ACS;CDU;AEK;iBCM;GDQ;CFG"}},"type":"js/module"}]}