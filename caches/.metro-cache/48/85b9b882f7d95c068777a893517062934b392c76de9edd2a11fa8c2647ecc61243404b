{"dependencies":[{"name":"../worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"oFVkO1TNcrWeLXFY3p/6B7+diEg=","exportNames":["*"]}},{"name":"./handlers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":77,"index":123}}],"key":"KucQFengibIO2FPJs66kwgxrI08=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addGlobalErrorInstrumentationHandler = addGlobalErrorInstrumentationHandler;\n  var _worldwide = require(_dependencyMap[0], \"../worldwide.js\");\n  var _handlers = require(_dependencyMap[1], \"./handlers.js\");\n  let _oldOnErrorHandler = null;\n\n  /**\n   * Add an instrumentation handler for when an error is captured by the global error handler.\n   *\n   * Use at your own risk, this might break without changelog notice, only used internally.\n   * @hidden\n   */\n  function addGlobalErrorInstrumentationHandler(handler) {\n    const type = 'error';\n    (0, _handlers.addHandler)(type, handler);\n    (0, _handlers.maybeInstrument)(type, instrumentError);\n  }\n  function instrumentError() {\n    _oldOnErrorHandler = _worldwide.GLOBAL_OBJ.onerror;\n\n    // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n    // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n    _worldwide.GLOBAL_OBJ.onerror = function (msg, url, line, column, error) {\n      const handlerData = {\n        column,\n        error,\n        line,\n        msg,\n        url\n      };\n      (0, _handlers.triggerHandlers)('error', handlerData);\n      if (_oldOnErrorHandler) {\n        // eslint-disable-next-line prefer-rest-params\n        return _oldOnErrorHandler.apply(this, arguments);\n      }\n      return false;\n    };\n    _worldwide.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n  }\n});","lineCount":43,"map":[[6,2,1,0],[6,6,1,0,"_worldwide"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_handlers"],[7,15,2,0],[7,18,2,0,"require"],[7,25,2,0],[7,26,2,0,"_dependencyMap"],[7,40,2,0],[8,2,4,0],[8,6,4,4,"_oldOnErrorHandler"],[8,24,4,22],[8,27,4,25],[8,31,4,29],[10,2,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,2,12,0],[16,11,12,9,"addGlobalErrorInstrumentationHandler"],[16,47,12,45,"addGlobalErrorInstrumentationHandler"],[16,48,12,46,"handler"],[16,55,12,53],[16,57,12,55],[17,4,13,2],[17,10,13,8,"type"],[17,14,13,12],[17,17,13,15],[17,24,13,22],[18,4,14,2],[18,8,14,2,"addHandler"],[18,28,14,12],[18,30,14,13,"type"],[18,34,14,17],[18,36,14,19,"handler"],[18,43,14,26],[18,44,14,27],[19,4,15,2],[19,8,15,2,"maybeInstrument"],[19,33,15,17],[19,35,15,18,"type"],[19,39,15,22],[19,41,15,24,"instrumentError"],[19,56,15,39],[19,57,15,40],[20,2,16,0],[21,2,18,0],[21,11,18,9,"instrumentError"],[21,26,18,24,"instrumentError"],[21,27,18,24],[21,29,18,27],[22,4,19,2,"_oldOnErrorHandler"],[22,22,19,20],[22,25,19,23,"GLOBAL_OBJ"],[22,46,19,33],[22,47,19,34,"onerror"],[22,54,19,41],[24,4,21,2],[25,4,22,2],[26,4,23,2,"GLOBAL_OBJ"],[26,25,23,12],[26,26,23,13,"onerror"],[26,33,23,20],[26,36,23,23],[26,46,24,4,"msg"],[26,49,24,7],[26,51,25,4,"url"],[26,54,25,7],[26,56,26,4,"line"],[26,60,26,8],[26,62,27,4,"column"],[26,68,27,10],[26,70,28,4,"error"],[26,75,28,9],[26,77,29,4],[27,6,30,4],[27,12,30,10,"handlerData"],[27,23,30,21],[27,26,30,24],[28,8,31,6,"column"],[28,14,31,12],[29,8,32,6,"error"],[29,13,32,11],[30,8,33,6,"line"],[30,12,33,10],[31,8,34,6,"msg"],[31,11,34,9],[32,8,35,6,"url"],[33,6,36,4],[33,7,36,5],[34,6,37,4],[34,10,37,4,"triggerHandlers"],[34,35,37,19],[34,37,37,20],[34,44,37,27],[34,46,37,29,"handlerData"],[34,57,37,40],[34,58,37,41],[35,6,39,4],[35,10,39,8,"_oldOnErrorHandler"],[35,28,39,26],[35,30,39,28],[36,8,40,6],[37,8,41,6],[37,15,41,13,"_oldOnErrorHandler"],[37,33,41,31],[37,34,41,32,"apply"],[37,39,41,37],[37,40,41,38],[37,44,41,42],[37,46,41,44,"arguments"],[37,55,41,53],[37,56,41,54],[38,6,42,4],[39,6,44,4],[39,13,44,11],[39,18,44,16],[40,4,45,2],[40,5,45,3],[41,4,47,2,"GLOBAL_OBJ"],[41,25,47,12],[41,26,47,13,"onerror"],[41,33,47,20],[41,34,47,21,"__SENTRY_INSTRUMENTED__"],[41,57,47,44],[41,60,47,47],[41,64,47,51],[42,2,48,0],[43,0,48,1],[43,3]],"functionMap":{"names":["<global>","addGlobalErrorInstrumentationHandler","instrumentError","GLOBAL_OBJ.onerror"],"mappings":"AAA;ACW;CDI;AEE;uBCK;GDsB;CFG"}},"type":"js/module"}]}