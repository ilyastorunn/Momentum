{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.escapeStringForRegex = escapeStringForRegex;\n  // Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n  //   a) reduce the size by skipping the runtime type - checking\n  //   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n  //\n  // MIT License\n  //\n  // Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n  // the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n  // THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n  // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  // TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n\n  /**\n   * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n   * `new RegExp()`.\n   *\n   * @param regexString The string to escape\n   * @returns An version of the string with all special regex characters escaped\n   */\n  function escapeStringForRegex(regexString) {\n    // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n    // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n    return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n  }\n});","lineCount":40,"map":[[6,2,1,0],[7,2,2,0],[8,2,3,0],[9,2,4,0],[10,2,5,0],[11,2,6,0],[12,2,7,0],[13,2,8,0],[14,2,9,0],[15,2,10,0],[16,2,11,0],[17,2,12,0],[18,2,13,0],[19,2,14,0],[20,2,15,0],[21,2,16,0],[22,2,17,0],[23,2,18,0],[24,2,19,0],[25,2,20,0],[26,2,21,0],[28,2,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,2,30,0],[35,11,30,9,"escapeStringForRegex"],[35,31,30,29,"escapeStringForRegex"],[35,32,30,30,"regexString"],[35,43,30,41],[35,45,30,43],[36,4,31,2],[37,4,32,2],[38,4,33,2],[38,11,33,9,"regexString"],[38,22,33,20],[38,23,33,21,"replace"],[38,30,33,28],[38,31,33,29],[38,52,33,50],[38,54,33,52],[38,60,33,58],[38,61,33,59],[38,62,33,60,"replace"],[38,69,33,67],[38,70,33,68],[38,74,33,72],[38,76,33,74],[38,83,33,81],[38,84,33,82],[39,2,34,0],[40,0,34,1],[40,3]],"functionMap":{"names":["<global>","escapeStringForRegex"],"mappings":"AAA;AC6B;CDI"}},"type":"js/module"}]}