{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.merge = merge;\n  /**\n   * Shallow merge two objects.\n   * Does not mutate the passed in objects.\n   * Undefined/empty values in the merge object will overwrite existing values.\n   *\n   * By default, this merges 2 levels deep.\n   */\n  function merge(initialObj, mergeObj, levels = 2) {\n    // If the merge value is not an object, or we have no merge levels left,\n    // we just set the value to the merge value\n    if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n      return mergeObj;\n    }\n\n    // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n    if (initialObj && mergeObj && Object.keys(mergeObj).length === 0) {\n      return initialObj;\n    }\n\n    // Clone object\n    const output = {\n      ...initialObj\n    };\n\n    // Merge values into output, resursively\n    for (const key in mergeObj) {\n      if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n        output[key] = merge(output[key], mergeObj[key], levels - 1);\n      }\n    }\n    return output;\n  }\n});","lineCount":38,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,2,8,0],[13,11,8,9,"merge"],[13,16,8,14,"merge"],[13,17,8,15,"initialObj"],[13,27,8,25],[13,29,8,27,"mergeObj"],[13,37,8,35],[13,39,8,37,"levels"],[13,45,8,43],[13,48,8,46],[13,49,8,47],[13,51,8,49],[14,4,9,2],[15,4,10,2],[16,4,11,2],[16,8,11,6],[16,9,11,7,"mergeObj"],[16,17,11,15],[16,21,11,19],[16,28,11,26,"mergeObj"],[16,36,11,34],[16,41,11,39],[16,49,11,47],[16,53,11,51,"levels"],[16,59,11,57],[16,63,11,61],[16,64,11,62],[16,66,11,64],[17,6,12,4],[17,13,12,11,"mergeObj"],[17,21,12,19],[18,4,13,2],[20,4,15,2],[21,4,16,2],[21,8,16,6,"initialObj"],[21,18,16,16],[21,22,16,20,"mergeObj"],[21,30,16,28],[21,34,16,32,"Object"],[21,40,16,38],[21,41,16,39,"keys"],[21,45,16,43],[21,46,16,44,"mergeObj"],[21,54,16,52],[21,55,16,53],[21,56,16,54,"length"],[21,62,16,60],[21,67,16,65],[21,68,16,66],[21,70,16,68],[22,6,17,4],[22,13,17,11,"initialObj"],[22,23,17,21],[23,4,18,2],[25,4,20,2],[26,4,21,2],[26,10,21,8,"output"],[26,16,21,14],[26,19,21,17],[27,6,21,19],[27,9,21,22,"initialObj"],[28,4,21,33],[28,5,21,34],[30,4,23,2],[31,4,24,2],[31,9,24,7],[31,15,24,13,"key"],[31,18,24,16],[31,22,24,20,"mergeObj"],[31,30,24,28],[31,32,24,30],[32,6,25,4],[32,10,25,8,"Object"],[32,16,25,14],[32,17,25,15,"prototype"],[32,26,25,24],[32,27,25,25,"hasOwnProperty"],[32,41,25,39],[32,42,25,40,"call"],[32,46,25,44],[32,47,25,45,"mergeObj"],[32,55,25,53],[32,57,25,55,"key"],[32,60,25,58],[32,61,25,59],[32,63,25,61],[33,8,26,6,"output"],[33,14,26,12],[33,15,26,13,"key"],[33,18,26,16],[33,19,26,17],[33,22,26,20,"merge"],[33,27,26,25],[33,28,26,26,"output"],[33,34,26,32],[33,35,26,33,"key"],[33,38,26,36],[33,39,26,37],[33,41,26,39,"mergeObj"],[33,49,26,47],[33,50,26,48,"key"],[33,53,26,51],[33,54,26,52],[33,56,26,54,"levels"],[33,62,26,60],[33,65,26,63],[33,66,26,64],[33,67,26,65],[34,6,27,4],[35,4,28,2],[36,4,30,2],[36,11,30,9,"output"],[36,17,30,15],[37,2,31,0],[38,0,31,1],[38,3]],"functionMap":{"names":["<global>","merge"],"mappings":"AAA;ACO;CDuB"}},"type":"js/module"}]}