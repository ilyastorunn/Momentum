{"dependencies":[{"name":"./tracing/dynamicSamplingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"a9UVkG/TCcdnJj9beLH2iUxGaco=","exportNames":["*"]}},{"name":"./utils-hoist/dsn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":51,"index":140}}],"key":"0dkDQ3JT6WMpnFh2RpIJM2X12ZQ=","exportNames":["*"]}},{"name":"./utils-hoist/envelope.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":141},"end":{"line":3,"column":144,"index":285}}],"key":"5Y0d4gJfoiIW4PKXtbONmEGlgVA=","exportNames":["*"]}},{"name":"./utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":286},"end":{"line":4,"column":38,"index":324}}],"key":"m8KfYj+k/3+bPHhnkEVLMr3nakA=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":325},"end":{"line":5,"column":33,"index":358}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./utils/spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":359},"end":{"line":6,"column":71,"index":430}}],"key":"xliqJNKUR7kbMbGBAOHednh2o/4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createEventEnvelope = createEventEnvelope;\n  exports.createSessionEnvelope = createSessionEnvelope;\n  exports.createSpanEnvelope = createSpanEnvelope;\n  var _dynamicSamplingContext = require(_dependencyMap[0], \"./tracing/dynamicSamplingContext.js\");\n  var _dsn = require(_dependencyMap[1], \"./utils-hoist/dsn.js\");\n  var _envelope = require(_dependencyMap[2], \"./utils-hoist/envelope.js\");\n  require(_dependencyMap[3], \"./utils-hoist/debug-build.js\");\n  require(_dependencyMap[4], \"./utils-hoist/logger.js\");\n  var _spanUtils = require(_dependencyMap[5], \"./utils/spanUtils.js\");\n  /**\n   * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n   * Merge with existing data if any.\n   **/\n  function enhanceEventWithSdkInfo(event, sdkInfo) {\n    if (!sdkInfo) {\n      return event;\n    }\n    event.sdk = event.sdk || {};\n    event.sdk.name = event.sdk.name || sdkInfo.name;\n    event.sdk.version = event.sdk.version || sdkInfo.version;\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n    event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n    return event;\n  }\n\n  /** Creates an envelope from a Session */\n  function createSessionEnvelope(session, dsn, metadata, tunnel) {\n    const sdkInfo = (0, _envelope.getSdkMetadataForEnvelopeHeader)(metadata);\n    const envelopeHeaders = {\n      sent_at: new Date().toISOString(),\n      ...(sdkInfo && {\n        sdk: sdkInfo\n      }),\n      ...(!!tunnel && dsn && {\n        dsn: (0, _dsn.dsnToString)(dsn)\n      })\n    };\n    const envelopeItem = 'aggregates' in session ? [{\n      type: 'sessions'\n    }, session] : [{\n      type: 'session'\n    }, session.toJSON()];\n    return (0, _envelope.createEnvelope)(envelopeHeaders, [envelopeItem]);\n  }\n\n  /**\n   * Create an Envelope from an event.\n   */\n  function createEventEnvelope(event, dsn, metadata, tunnel) {\n    const sdkInfo = (0, _envelope.getSdkMetadataForEnvelopeHeader)(metadata);\n\n    /*\n      Note: Due to TS, event.type may be `replay_event`, theoretically.\n      In practice, we never call `createEventEnvelope` with `replay_event` type,\n      and we'd have to adjust a looot of types to make this work properly.\n      We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n      So the safe choice is to really guard against the replay_event type here.\n    */\n    const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n    enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n    const envelopeHeaders = (0, _envelope.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n    // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n    // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n    // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n    // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n    delete event.sdkProcessingMetadata;\n    const eventItem = [{\n      type: eventType\n    }, event];\n    return (0, _envelope.createEnvelope)(envelopeHeaders, [eventItem]);\n  }\n\n  /**\n   * Create envelope from Span item.\n   *\n   * Takes an optional client and runs spans through `beforeSendSpan` if available.\n   */\n  function createSpanEnvelope(spans, client) {\n    function dscHasRequiredProps(dsc) {\n      return !!dsc.trace_id && !!dsc.public_key;\n    }\n\n    // For the moment we'll obtain the DSC from the first span in the array\n    // This might need to be changed if we permit sending multiple spans from\n    // different segments in one envelope\n    const dsc = (0, _dynamicSamplingContext.getDynamicSamplingContextFromSpan)(spans[0]);\n    const dsn = client && client.getDsn();\n    const tunnel = client && client.getOptions().tunnel;\n    const headers = {\n      sent_at: new Date().toISOString(),\n      ...(dscHasRequiredProps(dsc) && {\n        trace: dsc\n      }),\n      ...(!!tunnel && dsn && {\n        dsn: (0, _dsn.dsnToString)(dsn)\n      })\n    };\n    const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n    const convertToSpanJSON = beforeSendSpan ? span => {\n      const spanJson = beforeSendSpan((0, _spanUtils.spanToJSON)(span));\n      if (!spanJson) {\n        (0, _spanUtils.showSpanDropWarning)();\n      }\n      return spanJson;\n    } : span => (0, _spanUtils.spanToJSON)(span);\n    const items = [];\n    for (const span of spans) {\n      const spanJson = convertToSpanJSON(span);\n      if (spanJson) {\n        items.push((0, _envelope.createSpanEnvelopeItem)(spanJson));\n      }\n    }\n    return (0, _envelope.createEnvelope)(headers, items);\n  }\n});","lineCount":120,"map":[[8,2,1,0],[8,6,1,0,"_dynamicSamplingContext"],[8,29,1,0],[8,32,1,0,"require"],[8,39,1,0],[8,40,1,0,"_dependencyMap"],[8,54,1,0],[9,2,2,0],[9,6,2,0,"_dsn"],[9,10,2,0],[9,13,2,0,"require"],[9,20,2,0],[9,21,2,0,"_dependencyMap"],[9,35,2,0],[10,2,3,0],[10,6,3,0,"_envelope"],[10,15,3,0],[10,18,3,0,"require"],[10,25,3,0],[10,26,3,0,"_dependencyMap"],[10,40,3,0],[11,2,4,0,"require"],[11,9,4,0],[11,10,4,0,"_dependencyMap"],[11,24,4,0],[12,2,5,0,"require"],[12,9,5,0],[12,10,5,0,"_dependencyMap"],[12,24,5,0],[13,2,6,0],[13,6,6,0,"_spanUtils"],[13,16,6,0],[13,19,6,0,"require"],[13,26,6,0],[13,27,6,0,"_dependencyMap"],[13,41,6,0],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,2,12,0],[18,11,12,9,"enhanceEventWithSdkInfo"],[18,34,12,32,"enhanceEventWithSdkInfo"],[18,35,12,33,"event"],[18,40,12,38],[18,42,12,40,"sdkInfo"],[18,49,12,47],[18,51,12,49],[19,4,13,2],[19,8,13,6],[19,9,13,7,"sdkInfo"],[19,16,13,14],[19,18,13,16],[20,6,14,4],[20,13,14,11,"event"],[20,18,14,16],[21,4,15,2],[22,4,16,2,"event"],[22,9,16,7],[22,10,16,8,"sdk"],[22,13,16,11],[22,16,16,14,"event"],[22,21,16,19],[22,22,16,20,"sdk"],[22,25,16,23],[22,29,16,27],[22,30,16,28],[22,31,16,29],[23,4,17,2,"event"],[23,9,17,7],[23,10,17,8,"sdk"],[23,13,17,11],[23,14,17,12,"name"],[23,18,17,16],[23,21,17,19,"event"],[23,26,17,24],[23,27,17,25,"sdk"],[23,30,17,28],[23,31,17,29,"name"],[23,35,17,33],[23,39,17,37,"sdkInfo"],[23,46,17,44],[23,47,17,45,"name"],[23,51,17,49],[24,4,18,2,"event"],[24,9,18,7],[24,10,18,8,"sdk"],[24,13,18,11],[24,14,18,12,"version"],[24,21,18,19],[24,24,18,22,"event"],[24,29,18,27],[24,30,18,28,"sdk"],[24,33,18,31],[24,34,18,32,"version"],[24,41,18,39],[24,45,18,43,"sdkInfo"],[24,52,18,50],[24,53,18,51,"version"],[24,60,18,58],[25,4,19,2,"event"],[25,9,19,7],[25,10,19,8,"sdk"],[25,13,19,11],[25,14,19,12,"integrations"],[25,26,19,24],[25,29,19,27],[25,30,19,28],[25,34,19,32,"event"],[25,39,19,37],[25,40,19,38,"sdk"],[25,43,19,41],[25,44,19,42,"integrations"],[25,56,19,54],[25,60,19,58],[25,62,19,60],[25,63,19,61],[25,65,19,63],[25,69,19,67,"sdkInfo"],[25,76,19,74],[25,77,19,75,"integrations"],[25,89,19,87],[25,93,19,91],[25,95,19,93],[25,96,19,94],[25,97,19,95],[26,4,20,2,"event"],[26,9,20,7],[26,10,20,8,"sdk"],[26,13,20,11],[26,14,20,12,"packages"],[26,22,20,20],[26,25,20,23],[26,26,20,24],[26,30,20,28,"event"],[26,35,20,33],[26,36,20,34,"sdk"],[26,39,20,37],[26,40,20,38,"packages"],[26,48,20,46],[26,52,20,50],[26,54,20,52],[26,55,20,53],[26,57,20,55],[26,61,20,59,"sdkInfo"],[26,68,20,66],[26,69,20,67,"packages"],[26,77,20,75],[26,81,20,79],[26,83,20,81],[26,84,20,82],[26,85,20,83],[27,4,21,2],[27,11,21,9,"event"],[27,16,21,14],[28,2,22,0],[30,2,24,0],[31,2,25,0],[31,11,25,9,"createSessionEnvelope"],[31,32,25,30,"createSessionEnvelope"],[31,33,26,2,"session"],[31,40,26,9],[31,42,27,2,"dsn"],[31,45,27,5],[31,47,28,2,"metadata"],[31,55,28,10],[31,57,29,2,"tunnel"],[31,63,29,8],[31,65,30,2],[32,4,31,2],[32,10,31,8,"sdkInfo"],[32,17,31,15],[32,20,31,18],[32,24,31,18,"getSdkMetadataForEnvelopeHeader"],[32,65,31,49],[32,67,31,50,"metadata"],[32,75,31,58],[32,76,31,59],[33,4,32,2],[33,10,32,8,"envelopeHeaders"],[33,25,32,23],[33,28,32,26],[34,6,33,4,"sent_at"],[34,13,33,11],[34,15,33,13],[34,19,33,17,"Date"],[34,23,33,21],[34,24,33,22],[34,25,33,23],[34,26,33,24,"toISOString"],[34,37,33,35],[34,38,33,36],[34,39,33,37],[35,6,34,4],[35,10,34,8,"sdkInfo"],[35,17,34,15],[35,21,34,19],[36,8,34,21,"sdk"],[36,11,34,24],[36,13,34,26,"sdkInfo"],[37,6,34,34],[37,7,34,35],[37,8,34,36],[38,6,35,4],[38,10,35,8],[38,11,35,9],[38,12,35,10,"tunnel"],[38,18,35,16],[38,22,35,20,"dsn"],[38,25,35,23],[38,29,35,27],[39,8,35,29,"dsn"],[39,11,35,32],[39,13,35,34],[39,17,35,34,"dsnToString"],[39,33,35,45],[39,35,35,46,"dsn"],[39,38,35,49],[40,6,35,51],[40,7,35,52],[41,4,36,2],[41,5,36,3],[42,4,38,2],[42,10,38,8,"envelopeItem"],[42,22,38,20],[42,25,39,4],[42,37,39,16],[42,41,39,20,"session"],[42,48,39,27],[42,51,39,30],[42,52,39,31],[43,6,39,33,"type"],[43,10,39,37],[43,12,39,39],[44,4,39,50],[44,5,39,51],[44,7,39,53,"session"],[44,14,39,60],[44,15,39,61],[44,18,39,64],[44,19,39,65],[45,6,39,67,"type"],[45,10,39,71],[45,12,39,73],[46,4,39,83],[46,5,39,84],[46,7,39,86,"session"],[46,14,39,93],[46,15,39,94,"toJSON"],[46,21,39,100],[46,22,39,101],[46,23,39,102],[46,24,39,103],[47,4,41,2],[47,11,41,9],[47,15,41,9,"createEnvelope"],[47,39,41,23],[47,41,41,24,"envelopeHeaders"],[47,56,41,39],[47,58,41,41],[47,59,41,42,"envelopeItem"],[47,71,41,54],[47,72,41,55],[47,73,41,56],[48,2,42,0],[50,2,44,0],[51,0,45,0],[52,0,46,0],[53,2,47,0],[53,11,47,9,"createEventEnvelope"],[53,30,47,28,"createEventEnvelope"],[53,31,48,2,"event"],[53,36,48,7],[53,38,49,2,"dsn"],[53,41,49,5],[53,43,50,2,"metadata"],[53,51,50,10],[53,53,51,2,"tunnel"],[53,59,51,8],[53,61,52,2],[54,4,53,2],[54,10,53,8,"sdkInfo"],[54,17,53,15],[54,20,53,18],[54,24,53,18,"getSdkMetadataForEnvelopeHeader"],[54,65,53,49],[54,67,53,50,"metadata"],[54,75,53,58],[54,76,53,59],[56,4,55,2],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,4,62,2],[63,10,62,8,"eventType"],[63,19,62,17],[63,22,62,20,"event"],[63,27,62,25],[63,28,62,26,"type"],[63,32,62,30],[63,36,62,34,"event"],[63,41,62,39],[63,42,62,40,"type"],[63,46,62,44],[63,51,62,49],[63,65,62,63],[63,68,62,66,"event"],[63,73,62,71],[63,74,62,72,"type"],[63,78,62,76],[63,81,62,79],[63,88,62,86],[64,4,64,2,"enhanceEventWithSdkInfo"],[64,27,64,25],[64,28,64,26,"event"],[64,33,64,31],[64,35,64,33,"metadata"],[64,43,64,41],[64,47,64,45,"metadata"],[64,55,64,53],[64,56,64,54,"sdk"],[64,59,64,57],[64,60,64,58],[65,4,66,2],[65,10,66,8,"envelopeHeaders"],[65,25,66,23],[65,28,66,26],[65,32,66,26,"createEventEnvelopeHeaders"],[65,68,66,52],[65,70,66,53,"event"],[65,75,66,58],[65,77,66,60,"sdkInfo"],[65,84,66,67],[65,86,66,69,"tunnel"],[65,92,66,75],[65,94,66,77,"dsn"],[65,97,66,80],[65,98,66,81],[67,4,68,2],[68,4,69,2],[69,4,70,2],[70,4,71,2],[71,4,72,2],[71,11,72,9,"event"],[71,16,72,14],[71,17,72,15,"sdkProcessingMetadata"],[71,38,72,36],[72,4,74,2],[72,10,74,8,"eventItem"],[72,19,74,17],[72,22,74,20],[72,23,74,21],[73,6,74,23,"type"],[73,10,74,27],[73,12,74,29,"eventType"],[74,4,74,39],[74,5,74,40],[74,7,74,42,"event"],[74,12,74,47],[74,13,74,48],[75,4,75,2],[75,11,75,9],[75,15,75,9,"createEnvelope"],[75,39,75,23],[75,41,75,24,"envelopeHeaders"],[75,56,75,39],[75,58,75,41],[75,59,75,42,"eventItem"],[75,68,75,51],[75,69,75,52],[75,70,75,53],[76,2,76,0],[78,2,78,0],[79,0,79,0],[80,0,80,0],[81,0,81,0],[82,0,82,0],[83,2,83,0],[83,11,83,9,"createSpanEnvelope"],[83,29,83,27,"createSpanEnvelope"],[83,30,83,28,"spans"],[83,35,83,33],[83,37,83,35,"client"],[83,43,83,41],[83,45,83,43],[84,4,84,2],[84,13,84,11,"dscHasRequiredProps"],[84,32,84,30,"dscHasRequiredProps"],[84,33,84,31,"dsc"],[84,36,84,34],[84,38,84,36],[85,6,85,4],[85,13,85,11],[85,14,85,12],[85,15,85,13,"dsc"],[85,18,85,16],[85,19,85,17,"trace_id"],[85,27,85,25],[85,31,85,29],[85,32,85,30],[85,33,85,31,"dsc"],[85,36,85,34],[85,37,85,35,"public_key"],[85,47,85,45],[86,4,86,2],[88,4,88,2],[89,4,89,2],[90,4,90,2],[91,4,91,2],[91,10,91,8,"dsc"],[91,13,91,11],[91,16,91,14],[91,20,91,14,"getDynamicSamplingContextFromSpan"],[91,77,91,47],[91,79,91,48,"spans"],[91,84,91,53],[91,85,91,54],[91,86,91,55],[91,87,91,56],[91,88,91,57],[92,4,93,2],[92,10,93,8,"dsn"],[92,13,93,11],[92,16,93,14,"client"],[92,22,93,20],[92,26,93,24,"client"],[92,32,93,30],[92,33,93,31,"getDsn"],[92,39,93,37],[92,40,93,38],[92,41,93,39],[93,4,94,2],[93,10,94,8,"tunnel"],[93,16,94,14],[93,19,94,17,"client"],[93,25,94,23],[93,29,94,27,"client"],[93,35,94,33],[93,36,94,34,"getOptions"],[93,46,94,44],[93,47,94,45],[93,48,94,46],[93,49,94,47,"tunnel"],[93,55,94,53],[94,4,96,2],[94,10,96,8,"headers"],[94,17,96,15],[94,20,96,18],[95,6,97,4,"sent_at"],[95,13,97,11],[95,15,97,13],[95,19,97,17,"Date"],[95,23,97,21],[95,24,97,22],[95,25,97,23],[95,26,97,24,"toISOString"],[95,37,97,35],[95,38,97,36],[95,39,97,37],[96,6,98,4],[96,10,98,8,"dscHasRequiredProps"],[96,29,98,27],[96,30,98,28,"dsc"],[96,33,98,31],[96,34,98,32],[96,38,98,36],[97,8,98,38,"trace"],[97,13,98,43],[97,15,98,45,"dsc"],[98,6,98,49],[98,7,98,50],[98,8,98,51],[99,6,99,4],[99,10,99,8],[99,11,99,9],[99,12,99,10,"tunnel"],[99,18,99,16],[99,22,99,20,"dsn"],[99,25,99,23],[99,29,99,27],[100,8,99,29,"dsn"],[100,11,99,32],[100,13,99,34],[100,17,99,34,"dsnToString"],[100,33,99,45],[100,35,99,46,"dsn"],[100,38,99,49],[101,6,99,51],[101,7,99,52],[102,4,100,2],[102,5,100,3],[103,4,102,2],[103,10,102,8,"beforeSendSpan"],[103,24,102,22],[103,27,102,25,"client"],[103,33,102,31],[103,37,102,35,"client"],[103,43,102,41],[103,44,102,42,"getOptions"],[103,54,102,52],[103,55,102,53],[103,56,102,54],[103,57,102,55,"beforeSendSpan"],[103,71,102,69],[104,4,103,2],[104,10,103,8,"convertToSpanJSON"],[104,27,103,25],[104,30,103,28,"beforeSendSpan"],[104,44,103,42],[104,47,104,7,"span"],[104,51,104,11],[104,55,104,16],[105,6,105,8],[105,12,105,14,"spanJson"],[105,20,105,22],[105,23,105,25,"beforeSendSpan"],[105,37,105,39],[105,38,105,40],[105,42,105,40,"spanToJSON"],[105,63,105,50],[105,65,105,51,"span"],[105,69,105,55],[105,70,105,57],[105,71,105,58],[106,6,106,8],[106,10,106,12],[106,11,106,13,"spanJson"],[106,19,106,21],[106,21,106,23],[107,8,107,10],[107,12,107,10,"showSpanDropWarning"],[107,42,107,29],[107,44,107,30],[107,45,107,31],[108,6,108,8],[109,6,109,8],[109,13,109,15,"spanJson"],[109,21,109,23],[110,4,110,6],[110,5,110,7],[110,8,111,7,"span"],[110,12,111,11],[110,16,111,16],[110,20,111,16,"spanToJSON"],[110,41,111,26],[110,43,111,27,"span"],[110,47,111,31],[110,48,111,32],[111,4,113,2],[111,10,113,8,"items"],[111,15,113,13],[111,18,113,16],[111,20,113,18],[112,4,114,2],[112,9,114,7],[112,15,114,13,"span"],[112,19,114,17],[112,23,114,21,"spans"],[112,28,114,26],[112,30,114,28],[113,6,115,4],[113,12,115,10,"spanJson"],[113,20,115,18],[113,23,115,21,"convertToSpanJSON"],[113,40,115,38],[113,41,115,39,"span"],[113,45,115,43],[113,46,115,44],[114,6,116,4],[114,10,116,8,"spanJson"],[114,18,116,16],[114,20,116,18],[115,8,117,6,"items"],[115,13,117,11],[115,14,117,12,"push"],[115,18,117,16],[115,19,117,17],[115,23,117,17,"createSpanEnvelopeItem"],[115,55,117,39],[115,57,117,40,"spanJson"],[115,65,117,48],[115,66,117,49],[115,67,117,50],[116,6,118,4],[117,4,119,2],[118,4,121,2],[118,11,121,9],[118,15,121,9,"createEnvelope"],[118,39,121,23],[118,41,121,24,"headers"],[118,48,121,31],[118,50,121,33,"items"],[118,55,121,38],[118,56,121,39],[119,2,122,0],[120,0,122,1],[120,3]],"functionMap":{"names":["<global>","enhanceEventWithSdkInfo","createSessionEnvelope","createEventEnvelope","createSpanEnvelope","dscHasRequiredProps","<anonymous>"],"mappings":"AAA;ACW;CDU;AEG;CFiB;AGK;CH6B;AIO;ECC;GDE;MEkB;OFM;MEC,0BF;CJW"}},"type":"js/module"}]}