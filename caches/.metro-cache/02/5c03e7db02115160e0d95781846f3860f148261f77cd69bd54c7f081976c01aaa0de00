{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/AppState","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"JfCM6WRyn2619+pzBJhEHd1+SSw=","exportNames":["*"]}},{"name":"../utils/span","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":131},"end":{"line":3,"column":57,"index":188}}],"key":"SmejHLZsYa7o/dEFwNj+T2rtX3Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ignoreEmptyBackNavigation = exports.cancelInBackground = exports.adjustTransactionDuration = void 0;\n  exports.onThisSpanEnd = onThisSpanEnd;\n  exports.onlySampleIfChildSpans = void 0;\n  var _core = require(_dependencyMap[1], \"@sentry/core\");\n  var _AppState = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/AppState\"));\n  var _span = require(_dependencyMap[3], \"../utils/span\");\n  /**\n   * Hooks on span end event to execute a callback when the span ends.\n   */\n  function onThisSpanEnd(client, span, callback) {\n    client.on('spanEnd', endedSpan => {\n      if (span !== endedSpan) {\n        return;\n      }\n      callback(endedSpan);\n    });\n  }\n  const adjustTransactionDuration = (client, span, maxDurationMs) => {\n    if (!(0, _span.isRootSpan)(span)) {\n      _core.logger.warn('Not sampling empty back spans only works for Sentry Transactions (Root Spans).');\n      return;\n    }\n    client.on('spanEnd', endedSpan => {\n      if (endedSpan !== span) {\n        return;\n      }\n      const endTimestamp = (0, _core.spanToJSON)(span).timestamp;\n      const startTimestamp = (0, _core.spanToJSON)(span).start_timestamp;\n      if (!endTimestamp || !startTimestamp) {\n        return;\n      }\n      const diff = endTimestamp - startTimestamp;\n      const isOutdatedTransaction = endTimestamp && (diff > maxDurationMs || diff < 0);\n      if (isOutdatedTransaction) {\n        span.setStatus({\n          code: _core.SPAN_STATUS_ERROR,\n          message: 'deadline_exceeded'\n        });\n        // TODO: check where was used, might be possible to delete\n        span.setAttribute('maxTransactionDurationExceeded', 'true');\n      }\n    });\n  };\n  exports.adjustTransactionDuration = adjustTransactionDuration;\n  const ignoreEmptyBackNavigation = (client, span) => {\n    if (!client) {\n      _core.logger.warn('Could not hook on spanEnd event because client is not defined.');\n      return;\n    }\n    if (!span) {\n      _core.logger.warn('Could not hook on spanEnd event because span is not defined.');\n      return;\n    }\n    if (!(0, _span.isRootSpan)(span) || !(0, _span.isSentrySpan)(span)) {\n      _core.logger.warn('Not sampling empty back spans only works for Sentry Transactions (Root Spans).');\n      return;\n    }\n    client.on('spanEnd', endedSpan => {\n      var _a;\n      if (endedSpan !== span) {\n        return;\n      }\n      if (!((_a = (0, _core.spanToJSON)(span).data) === null || _a === void 0 ? void 0 : _a['route.has_been_seen'])) {\n        return;\n      }\n      const children = (0, _core.getSpanDescendants)(span);\n      const filtered = children.filter(child => child.spanContext().spanId !== span.spanContext().spanId && (0, _core.spanToJSON)(child).op !== 'ui.load.initial_display' && (0, _core.spanToJSON)(child).op !== 'navigation.processing');\n      if (filtered.length <= 0) {\n        // filter children must include at least one span not created by the navigation automatic instrumentation\n        _core.logger.log('Not sampling transaction as route has been seen before. Pass ignoreEmptyBackNavigationTransactions = false to disable this feature.');\n        // Route has been seen before and has no child spans.\n        span['_sampled'] = false;\n      }\n    });\n  };\n  /**\n   * Idle Transaction callback to only sample transactions with child spans.\n   * To avoid side effects of other callbacks this should be hooked as the last callback.\n   */\n  exports.ignoreEmptyBackNavigation = ignoreEmptyBackNavigation;\n  const onlySampleIfChildSpans = (client, span) => {\n    if (!(0, _span.isRootSpan)(span) || !(0, _span.isSentrySpan)(span)) {\n      _core.logger.warn('Not sampling childless spans only works for Sentry Transactions (Root Spans).');\n      return;\n    }\n    client.on('spanEnd', endedSpan => {\n      if (endedSpan !== span) {\n        return;\n      }\n      const children = (0, _core.getSpanDescendants)(span);\n      if (children.length <= 1) {\n        // Span always has at lest one child, itself\n        _core.logger.log(`Not sampling as ${(0, _core.spanToJSON)(span).op} transaction has no child spans.`);\n        span['_sampled'] = false;\n      }\n    });\n  };\n  /**\n   * Hooks on AppState change to cancel the span if the app goes background.\n   */\n  exports.onlySampleIfChildSpans = onlySampleIfChildSpans;\n  const cancelInBackground = (client, span) => {\n    const subscription = _AppState.default.addEventListener('change', newState => {\n      if (newState === 'background') {\n        _core.logger.debug(`Setting ${(0, _core.spanToJSON)(span).op} transaction to cancelled because the app is in the background.`);\n        span.setStatus({\n          code: _core.SPAN_STATUS_ERROR,\n          message: 'cancelled'\n        });\n        span.end();\n      }\n    });\n    subscription && client.on('spanEnd', endedSpan => {\n      if (endedSpan === span) {\n        _core.logger.debug(`Removing AppState listener for ${(0, _core.spanToJSON)(span).op} transaction.`);\n        subscription && subscription.remove && subscription.remove();\n      }\n    });\n  };\n  exports.cancelInBackground = cancelInBackground;\n});","lineCount":126,"map":[[9,2,1,0],[9,6,1,0,"_core"],[9,11,1,0],[9,14,1,0,"require"],[9,21,1,0],[9,22,1,0,"_dependencyMap"],[9,36,1,0],[10,2,1,89],[10,6,1,89,"_AppState"],[10,15,1,89],[10,18,1,89,"_interopRequireDefault"],[10,40,1,89],[10,41,1,89,"require"],[10,48,1,89],[10,49,1,89,"_dependencyMap"],[10,63,1,89],[11,2,3,0],[11,6,3,0,"_span"],[11,11,3,0],[11,14,3,0,"require"],[11,21,3,0],[11,22,3,0,"_dependencyMap"],[11,36,3,0],[12,2,4,0],[13,0,5,0],[14,0,6,0],[15,2,7,7],[15,11,7,16,"onThisSpanEnd"],[15,24,7,29,"onThisSpanEnd"],[15,25,7,30,"client"],[15,31,7,36],[15,33,7,38,"span"],[15,37,7,42],[15,39,7,44,"callback"],[15,47,7,52],[15,49,7,54],[16,4,8,4,"client"],[16,10,8,10],[16,11,8,11,"on"],[16,13,8,13],[16,14,8,14],[16,23,8,23],[16,25,8,26,"endedSpan"],[16,34,8,35],[16,38,8,40],[17,6,9,8],[17,10,9,12,"span"],[17,14,9,16],[17,19,9,21,"endedSpan"],[17,28,9,30],[17,30,9,32],[18,8,10,12],[19,6,11,8],[20,6,12,8,"callback"],[20,14,12,16],[20,15,12,17,"endedSpan"],[20,24,12,26],[20,25,12,27],[21,4,13,4],[21,5,13,5],[21,6,13,6],[22,2,14,0],[23,2,15,7],[23,8,15,13,"adjustTransactionDuration"],[23,33,15,38],[23,36,15,41,"adjustTransactionDuration"],[23,37,15,42,"client"],[23,43,15,48],[23,45,15,50,"span"],[23,49,15,54],[23,51,15,56,"maxDurationMs"],[23,64,15,69],[23,69,15,74],[24,4,16,4],[24,8,16,8],[24,9,16,9],[24,13,16,9,"isRootSpan"],[24,29,16,19],[24,31,16,20,"span"],[24,35,16,24],[24,36,16,25],[24,38,16,27],[25,6,17,8,"logger"],[25,18,17,14],[25,19,17,15,"warn"],[25,23,17,19],[25,24,17,20],[25,104,17,100],[25,105,17,101],[26,6,18,8],[27,4,19,4],[28,4,20,4,"client"],[28,10,20,10],[28,11,20,11,"on"],[28,13,20,13],[28,14,20,14],[28,23,20,23],[28,25,20,26,"endedSpan"],[28,34,20,35],[28,38,20,40],[29,6,21,8],[29,10,21,12,"endedSpan"],[29,19,21,21],[29,24,21,26,"span"],[29,28,21,30],[29,30,21,32],[30,8,22,12],[31,6,23,8],[32,6,24,8],[32,12,24,14,"endTimestamp"],[32,24,24,26],[32,27,24,29],[32,31,24,29,"spanToJSON"],[32,47,24,39],[32,49,24,40,"span"],[32,53,24,44],[32,54,24,45],[32,55,24,46,"timestamp"],[32,64,24,55],[33,6,25,8],[33,12,25,14,"startTimestamp"],[33,26,25,28],[33,29,25,31],[33,33,25,31,"spanToJSON"],[33,49,25,41],[33,51,25,42,"span"],[33,55,25,46],[33,56,25,47],[33,57,25,48,"start_timestamp"],[33,72,25,63],[34,6,26,8],[34,10,26,12],[34,11,26,13,"endTimestamp"],[34,23,26,25],[34,27,26,29],[34,28,26,30,"startTimestamp"],[34,42,26,44],[34,44,26,46],[35,8,27,12],[36,6,28,8],[37,6,29,8],[37,12,29,14,"diff"],[37,16,29,18],[37,19,29,21,"endTimestamp"],[37,31,29,33],[37,34,29,36,"startTimestamp"],[37,48,29,50],[38,6,30,8],[38,12,30,14,"isOutdatedTransaction"],[38,33,30,35],[38,36,30,38,"endTimestamp"],[38,48,30,50],[38,53,30,55,"diff"],[38,57,30,59],[38,60,30,62,"maxDurationMs"],[38,73,30,75],[38,77,30,79,"diff"],[38,81,30,83],[38,84,30,86],[38,85,30,87],[38,86,30,88],[39,6,31,8],[39,10,31,12,"isOutdatedTransaction"],[39,31,31,33],[39,33,31,35],[40,8,32,12,"span"],[40,12,32,16],[40,13,32,17,"setStatus"],[40,22,32,26],[40,23,32,27],[41,10,32,29,"code"],[41,14,32,33],[41,16,32,35,"SPAN_STATUS_ERROR"],[41,39,32,52],[42,10,32,54,"message"],[42,17,32,61],[42,19,32,63],[43,8,32,83],[43,9,32,84],[43,10,32,85],[44,8,33,12],[45,8,34,12,"span"],[45,12,34,16],[45,13,34,17,"setAttribute"],[45,25,34,29],[45,26,34,30],[45,58,34,62],[45,60,34,64],[45,66,34,70],[45,67,34,71],[46,6,35,8],[47,4,36,4],[47,5,36,5],[47,6,36,6],[48,2,37,0],[48,3,37,1],[49,2,37,2,"exports"],[49,9,37,2],[49,10,37,2,"adjustTransactionDuration"],[49,35,37,2],[49,38,37,2,"adjustTransactionDuration"],[49,63,37,2],[50,2,38,7],[50,8,38,13,"ignoreEmptyBackNavigation"],[50,33,38,38],[50,36,38,41,"ignoreEmptyBackNavigation"],[50,37,38,42,"client"],[50,43,38,48],[50,45,38,50,"span"],[50,49,38,54],[50,54,38,59],[51,4,39,4],[51,8,39,8],[51,9,39,9,"client"],[51,15,39,15],[51,17,39,17],[52,6,40,8,"logger"],[52,18,40,14],[52,19,40,15,"warn"],[52,23,40,19],[52,24,40,20],[52,88,40,84],[52,89,40,85],[53,6,41,8],[54,4,42,4],[55,4,43,4],[55,8,43,8],[55,9,43,9,"span"],[55,13,43,13],[55,15,43,15],[56,6,44,8,"logger"],[56,18,44,14],[56,19,44,15,"warn"],[56,23,44,19],[56,24,44,20],[56,86,44,82],[56,87,44,83],[57,6,45,8],[58,4,46,4],[59,4,47,4],[59,8,47,8],[59,9,47,9],[59,13,47,9,"isRootSpan"],[59,29,47,19],[59,31,47,20,"span"],[59,35,47,24],[59,36,47,25],[59,40,47,29],[59,41,47,30],[59,45,47,30,"isSentrySpan"],[59,63,47,42],[59,65,47,43,"span"],[59,69,47,47],[59,70,47,48],[59,72,47,50],[60,6,48,8,"logger"],[60,18,48,14],[60,19,48,15,"warn"],[60,23,48,19],[60,24,48,20],[60,104,48,100],[60,105,48,101],[61,6,49,8],[62,4,50,4],[63,4,51,4,"client"],[63,10,51,10],[63,11,51,11,"on"],[63,13,51,13],[63,14,51,14],[63,23,51,23],[63,25,51,26,"endedSpan"],[63,34,51,35],[63,38,51,40],[64,6,52,8],[64,10,52,12,"_a"],[64,12,52,14],[65,6,53,8],[65,10,53,12,"endedSpan"],[65,19,53,21],[65,24,53,26,"span"],[65,28,53,30],[65,30,53,32],[66,8,54,12],[67,6,55,8],[68,6,56,8],[68,10,56,12],[68,12,56,14],[68,13,56,15,"_a"],[68,15,56,17],[68,18,56,20],[68,22,56,20,"spanToJSON"],[68,38,56,30],[68,40,56,31,"span"],[68,44,56,35],[68,45,56,36],[68,46,56,37,"data"],[68,50,56,41],[68,56,56,47],[68,60,56,51],[68,64,56,55,"_a"],[68,66,56,57],[68,71,56,62],[68,76,56,67],[68,77,56,68],[68,80,56,71],[68,85,56,76],[68,86,56,77],[68,89,56,80,"_a"],[68,91,56,82],[68,92,56,83],[68,113,56,104],[68,114,56,105],[68,115,56,106],[68,117,56,108],[69,8,57,12],[70,6,58,8],[71,6,59,8],[71,12,59,14,"children"],[71,20,59,22],[71,23,59,25],[71,27,59,25,"getSpanDescendants"],[71,51,59,43],[71,53,59,44,"span"],[71,57,59,48],[71,58,59,49],[72,6,60,8],[72,12,60,14,"filtered"],[72,20,60,22],[72,23,60,25,"children"],[72,31,60,33],[72,32,60,34,"filter"],[72,38,60,40],[72,39,60,41,"child"],[72,44,60,46],[72,48,60,50,"child"],[72,53,60,55],[72,54,60,56,"spanContext"],[72,65,60,67],[72,66,60,68],[72,67,60,69],[72,68,60,70,"spanId"],[72,74,60,76],[72,79,60,81,"span"],[72,83,60,85],[72,84,60,86,"spanContext"],[72,95,60,97],[72,96,60,98],[72,97,60,99],[72,98,60,100,"spanId"],[72,104,60,106],[72,108,61,12],[72,112,61,12,"spanToJSON"],[72,128,61,22],[72,130,61,23,"child"],[72,135,61,28],[72,136,61,29],[72,137,61,30,"op"],[72,139,61,32],[72,144,61,37],[72,169,61,62],[72,173,62,12],[72,177,62,12,"spanToJSON"],[72,193,62,22],[72,195,62,23,"child"],[72,200,62,28],[72,201,62,29],[72,202,62,30,"op"],[72,204,62,32],[72,209,62,37],[72,232,62,60],[72,233,62,61],[73,6,63,8],[73,10,63,12,"filtered"],[73,18,63,20],[73,19,63,21,"length"],[73,25,63,27],[73,29,63,31],[73,30,63,32],[73,32,63,34],[74,8,64,12],[75,8,65,12,"logger"],[75,20,65,18],[75,21,65,19,"log"],[75,24,65,22],[75,25,65,23],[75,158,65,156],[75,159,65,157],[76,8,66,12],[77,8,67,12,"span"],[77,12,67,16],[77,13,67,17],[77,23,67,27],[77,24,67,28],[77,27,67,31],[77,32,67,36],[78,6,68,8],[79,4,69,4],[79,5,69,5],[79,6,69,6],[80,2,70,0],[80,3,70,1],[81,2,71,0],[82,0,72,0],[83,0,73,0],[84,0,74,0],[85,2,71,0,"exports"],[85,9,71,0],[85,10,71,0,"ignoreEmptyBackNavigation"],[85,35,71,0],[85,38,71,0,"ignoreEmptyBackNavigation"],[85,63,71,0],[86,2,75,7],[86,8,75,13,"onlySampleIfChildSpans"],[86,30,75,35],[86,33,75,38,"onlySampleIfChildSpans"],[86,34,75,39,"client"],[86,40,75,45],[86,42,75,47,"span"],[86,46,75,51],[86,51,75,56],[87,4,76,4],[87,8,76,8],[87,9,76,9],[87,13,76,9,"isRootSpan"],[87,29,76,19],[87,31,76,20,"span"],[87,35,76,24],[87,36,76,25],[87,40,76,29],[87,41,76,30],[87,45,76,30,"isSentrySpan"],[87,63,76,42],[87,65,76,43,"span"],[87,69,76,47],[87,70,76,48],[87,72,76,50],[88,6,77,8,"logger"],[88,18,77,14],[88,19,77,15,"warn"],[88,23,77,19],[88,24,77,20],[88,103,77,99],[88,104,77,100],[89,6,78,8],[90,4,79,4],[91,4,80,4,"client"],[91,10,80,10],[91,11,80,11,"on"],[91,13,80,13],[91,14,80,14],[91,23,80,23],[91,25,80,26,"endedSpan"],[91,34,80,35],[91,38,80,40],[92,6,81,8],[92,10,81,12,"endedSpan"],[92,19,81,21],[92,24,81,26,"span"],[92,28,81,30],[92,30,81,32],[93,8,82,12],[94,6,83,8],[95,6,84,8],[95,12,84,14,"children"],[95,20,84,22],[95,23,84,25],[95,27,84,25,"getSpanDescendants"],[95,51,84,43],[95,53,84,44,"span"],[95,57,84,48],[95,58,84,49],[96,6,85,8],[96,10,85,12,"children"],[96,18,85,20],[96,19,85,21,"length"],[96,25,85,27],[96,29,85,31],[96,30,85,32],[96,32,85,34],[97,8,86,12],[98,8,87,12,"logger"],[98,20,87,18],[98,21,87,19,"log"],[98,24,87,22],[98,25,87,23],[98,44,87,42],[98,48,87,42,"spanToJSON"],[98,64,87,52],[98,66,87,53,"span"],[98,70,87,57],[98,71,87,58],[98,72,87,59,"op"],[98,74,87,61],[98,108,87,95],[98,109,87,96],[99,8,88,12,"span"],[99,12,88,16],[99,13,88,17],[99,23,88,27],[99,24,88,28],[99,27,88,31],[99,32,88,36],[100,6,89,8],[101,4,90,4],[101,5,90,5],[101,6,90,6],[102,2,91,0],[102,3,91,1],[103,2,92,0],[104,0,93,0],[105,0,94,0],[106,2,92,0,"exports"],[106,9,92,0],[106,10,92,0,"onlySampleIfChildSpans"],[106,32,92,0],[106,35,92,0,"onlySampleIfChildSpans"],[106,57,92,0],[107,2,95,7],[107,8,95,13,"cancelInBackground"],[107,26,95,31],[107,29,95,34,"cancelInBackground"],[107,30,95,35,"client"],[107,36,95,41],[107,38,95,43,"span"],[107,42,95,47],[107,47,95,52],[108,4,96,4],[108,10,96,10,"subscription"],[108,22,96,22],[108,25,96,25,"AppState"],[108,42,96,33],[108,43,96,34,"addEventListener"],[108,59,96,50],[108,60,96,51],[108,68,96,59],[108,70,96,62,"newState"],[108,78,96,70],[108,82,96,75],[109,6,97,8],[109,10,97,12,"newState"],[109,18,97,20],[109,23,97,25],[109,35,97,37],[109,37,97,39],[110,8,98,12,"logger"],[110,20,98,18],[110,21,98,19,"debug"],[110,26,98,24],[110,27,98,25],[110,38,98,36],[110,42,98,36,"spanToJSON"],[110,58,98,46],[110,60,98,47,"span"],[110,64,98,51],[110,65,98,52],[110,66,98,53,"op"],[110,68,98,55],[110,133,98,120],[110,134,98,121],[111,8,99,12,"span"],[111,12,99,16],[111,13,99,17,"setStatus"],[111,22,99,26],[111,23,99,27],[112,10,99,29,"code"],[112,14,99,33],[112,16,99,35,"SPAN_STATUS_ERROR"],[112,39,99,52],[113,10,99,54,"message"],[113,17,99,61],[113,19,99,63],[114,8,99,75],[114,9,99,76],[114,10,99,77],[115,8,100,12,"span"],[115,12,100,16],[115,13,100,17,"end"],[115,16,100,20],[115,17,100,21],[115,18,100,22],[116,6,101,8],[117,4,102,4],[117,5,102,5],[117,6,102,6],[118,4,103,4,"subscription"],[118,16,103,16],[118,20,104,8,"client"],[118,26,104,14],[118,27,104,15,"on"],[118,29,104,17],[118,30,104,18],[118,39,104,27],[118,41,104,30,"endedSpan"],[118,50,104,39],[118,54,104,44],[119,6,105,12],[119,10,105,16,"endedSpan"],[119,19,105,25],[119,24,105,30,"span"],[119,28,105,34],[119,30,105,36],[120,8,106,16,"logger"],[120,20,106,22],[120,21,106,23,"debug"],[120,26,106,28],[120,27,106,29],[120,61,106,63],[120,65,106,63,"spanToJSON"],[120,81,106,73],[120,83,106,74,"span"],[120,87,106,78],[120,88,106,79],[120,89,106,80,"op"],[120,91,106,82],[120,106,106,97],[120,107,106,98],[121,8,107,16,"subscription"],[121,20,107,28],[121,24,107,32,"subscription"],[121,36,107,44],[121,37,107,45,"remove"],[121,43,107,51],[121,47,107,55,"subscription"],[121,59,107,67],[121,60,107,68,"remove"],[121,66,107,74],[121,67,107,75],[121,68,107,76],[122,6,108,12],[123,4,109,8],[123,5,109,9],[123,6,109,10],[124,2,110,0],[124,3,110,1],[125,2,110,2,"exports"],[125,9,110,2],[125,10,110,2,"cancelInBackground"],[125,28,110,2],[125,31,110,2,"cancelInBackground"],[125,49,110,2],[126,0,110,2],[126,3]],"functionMap":{"names":["<global>","onThisSpanEnd","client.on$argument_1","adjustTransactionDuration","ignoreEmptyBackNavigation","children.filter$argument_0","onlySampleIfChildSpans","cancelInBackground","AppState.addEventListener$argument_1"],"mappings":"AAA;OCM;yBCC;KDK;CDC;yCGC;yBDK;KCgB;CHC;yCIC;yBFa;yCGS;4DHE;KEO;CJC;sCMK;yBJK;KIU;CNC;kCOI;6DCC;KDM;6BLE;SKK;CPC"}},"type":"js/module"}]}