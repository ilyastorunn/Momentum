{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../eventbuilder.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":56,"index":135}}],"key":"/3esTw0IO+z2wDzSpZn1CVjNb5A=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.linkedErrorsIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _eventbuilder = require(_dependencyMap[1], \"../eventbuilder.js\");\n  const DEFAULT_KEY = 'cause';\n  const DEFAULT_LIMIT = 5;\n  const INTEGRATION_NAME = 'LinkedErrors';\n  const _linkedErrorsIntegration = (options = {}) => {\n    const limit = options.limit || DEFAULT_LIMIT;\n    const key = options.key || DEFAULT_KEY;\n    return {\n      name: INTEGRATION_NAME,\n      preprocessEvent(event, hint, client) {\n        const options = client.getOptions();\n        (0, _core.applyAggregateErrorsToEvent)(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        _eventbuilder.exceptionFromError, options.stackParser, options.maxValueLength, key, limit, event, hint);\n      }\n    };\n  };\n\n  /**\n   * Aggregrate linked errors in an event.\n   */\n  const linkedErrorsIntegration = exports.linkedErrorsIntegration = (0, _core.defineIntegration)(_linkedErrorsIntegration);\n});","lineCount":29,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,0,"_eventbuilder"],[7,19,2,0],[7,22,2,0,"require"],[7,29,2,0],[7,30,2,0,"_dependencyMap"],[7,44,2,0],[8,2,4,0],[8,8,4,6,"DEFAULT_KEY"],[8,19,4,17],[8,22,4,20],[8,29,4,27],[9,2,5,0],[9,8,5,6,"DEFAULT_LIMIT"],[9,21,5,19],[9,24,5,22],[9,25,5,23],[10,2,7,0],[10,8,7,6,"INTEGRATION_NAME"],[10,24,7,22],[10,27,7,25],[10,41,7,39],[11,2,9,0],[11,8,9,6,"_linkedErrorsIntegration"],[11,32,9,30],[11,35,9,34,"_linkedErrorsIntegration"],[11,36,9,35,"options"],[11,43,9,42],[11,46,9,45],[11,47,9,46],[11,48,9,47],[11,53,9,52],[12,4,10,2],[12,10,10,8,"limit"],[12,15,10,13],[12,18,10,16,"options"],[12,25,10,23],[12,26,10,24,"limit"],[12,31,10,29],[12,35,10,33,"DEFAULT_LIMIT"],[12,48,10,46],[13,4,11,2],[13,10,11,8,"key"],[13,13,11,11],[13,16,11,14,"options"],[13,23,11,21],[13,24,11,22,"key"],[13,27,11,25],[13,31,11,29,"DEFAULT_KEY"],[13,42,11,40],[14,4,13,2],[14,11,13,9],[15,6,14,4,"name"],[15,10,14,8],[15,12,14,10,"INTEGRATION_NAME"],[15,28,14,26],[16,6,15,4,"preprocessEvent"],[16,21,15,19,"preprocessEvent"],[16,22,15,20,"event"],[16,27,15,25],[16,29,15,27,"hint"],[16,33,15,31],[16,35,15,33,"client"],[16,41,15,39],[16,43,15,41],[17,8,16,6],[17,14,16,12,"options"],[17,21,16,19],[17,24,16,22,"client"],[17,30,16,28],[17,31,16,29,"getOptions"],[17,41,16,39],[17,42,16,40],[17,43,16,41],[18,8,18,6],[18,12,18,6,"applyAggregateErrorsToEvent"],[18,45,18,33],[19,8,19,8],[20,8,20,8,"exceptionFromError"],[20,40,20,26],[20,42,21,8,"options"],[20,49,21,15],[20,50,21,16,"stackParser"],[20,61,21,27],[20,63,22,8,"options"],[20,70,22,15],[20,71,22,16,"maxValueLength"],[20,85,22,30],[20,87,23,8,"key"],[20,90,23,11],[20,92,24,8,"limit"],[20,97,24,13],[20,99,25,8,"event"],[20,104,25,13],[20,106,26,8,"hint"],[20,110,27,6],[20,111,27,7],[21,6,28,4],[22,4,29,2],[22,5,29,3],[23,2,30,0],[23,3,30,2],[25,2,32,0],[26,0,33,0],[27,0,34,0],[28,2,35,0],[28,8,35,6,"linkedErrorsIntegration"],[28,31,35,29],[28,34,35,29,"exports"],[28,41,35,29],[28,42,35,29,"linkedErrorsIntegration"],[28,65,35,29],[28,68,35,32],[28,72,35,32,"defineIntegration"],[28,95,35,49],[28,97,35,50,"_linkedErrorsIntegration"],[28,121,35,74],[28,122,35,75],[29,0,35,76],[29,3]],"functionMap":{"names":["<global>","_linkedErrorsIntegration","preprocessEvent"],"mappings":"AAA;kCCQ;ICM;KDa;CDE"}},"type":"js/module"}]}