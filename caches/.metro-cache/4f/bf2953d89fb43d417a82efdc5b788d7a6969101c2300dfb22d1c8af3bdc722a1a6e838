{"dependencies":[{"name":"../../types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"W1BH0a3HSCo8tOLXH7X+m5FGigs=","exportNames":["*"]}},{"name":"./lib/bindReporter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":53,"index":94}}],"key":"yZXTUsWh1M46DyxIbZ88NUHRymg=","exportNames":["*"]}},{"name":"./lib/getActivationStart.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":95},"end":{"line":3,"column":65,"index":160}}],"key":"GdWeY/Ul63HmG3e9yq4TWUwqk0M=","exportNames":["*"]}},{"name":"./lib/getNavigationEntry.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":65,"index":226}}],"key":"tqQhkALFt/Nyl0IIvEJIjJVM1DQ=","exportNames":["*"]}},{"name":"./lib/initMetric.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":227},"end":{"line":5,"column":49,"index":276}}],"key":"3h8m+kvAV2o3xN93IHHrmBqzs4s=","exportNames":["*"]}},{"name":"./lib/whenActivated.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":277},"end":{"line":6,"column":55,"index":332}}],"key":"ZUHRzyG92JJbjB1/O2ptt6DviqY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.onTTFB = exports.TTFBThresholds = void 0;\n  var _types = require(_dependencyMap[0], \"../../types.js\");\n  var _bindReporter = require(_dependencyMap[1], \"./lib/bindReporter.js\");\n  var _getActivationStart = require(_dependencyMap[2], \"./lib/getActivationStart.js\");\n  var _getNavigationEntry = require(_dependencyMap[3], \"./lib/getNavigationEntry.js\");\n  var _initMetric = require(_dependencyMap[4], \"./lib/initMetric.js\");\n  var _whenActivated = require(_dependencyMap[5], \"./lib/whenActivated.js\");\n  /*\n   * Copyright 2020 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\n  const TTFBThresholds = exports.TTFBThresholds = [800, 1800];\n\n  /**\n   * Runs in the next task after the page is done loading and/or prerendering.\n   * @param callback\n   */\n  const whenReady = callback => {\n    if (_types.WINDOW.document && _types.WINDOW.document.prerendering) {\n      (0, _whenActivated.whenActivated)(() => whenReady(callback));\n    } else if (_types.WINDOW.document && _types.WINDOW.document.readyState !== 'complete') {\n      addEventListener('load', () => whenReady(callback), true);\n    } else {\n      // Queue a task so the callback runs after `loadEventEnd`.\n      setTimeout(callback, 0);\n    }\n  };\n\n  /**\n   * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n   * current page and calls the `callback` function once the page has loaded,\n   * along with the relevant `navigation` performance entry used to determine the\n   * value. The reported value is a `DOMHighResTimeStamp`.\n   *\n   * Note, this function waits until after the page is loaded to call `callback`\n   * in order to ensure all properties of the `navigation` entry are populated.\n   * This is useful if you want to report on other metrics exposed by the\n   * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n   * example, the TTFB metric starts from the page's [time\n   * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n   * includes time spent on DNS lookup, connection negotiation, network latency,\n   * and server processing time.\n   */\n  const onTTFB = (onReport, opts = {}) => {\n    const metric = (0, _initMetric.initMetric)('TTFB');\n    const report = (0, _bindReporter.bindReporter)(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n    whenReady(() => {\n      const navigationEntry = (0, _getNavigationEntry.getNavigationEntry)();\n      if (navigationEntry) {\n        // The activationStart reference is used because TTFB should be\n        // relative to page activation rather than navigation start if the\n        // page was prerendered. But in cases where `activationStart` occurs\n        // after the first byte is received, this time should be clamped at 0.\n        metric.value = Math.max(navigationEntry.responseStart - (0, _getActivationStart.getActivationStart)(), 0);\n        metric.entries = [navigationEntry];\n        report(true);\n      }\n    });\n  };\n  exports.onTTFB = onTTFB;\n});","lineCount":78,"map":[[6,2,1,0],[6,6,1,0,"_types"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_bindReporter"],[7,19,2,0],[7,22,2,0,"require"],[7,29,2,0],[7,30,2,0,"_dependencyMap"],[7,44,2,0],[8,2,3,0],[8,6,3,0,"_getActivationStart"],[8,25,3,0],[8,28,3,0,"require"],[8,35,3,0],[8,36,3,0,"_dependencyMap"],[8,50,3,0],[9,2,4,0],[9,6,4,0,"_getNavigationEntry"],[9,25,4,0],[9,28,4,0,"require"],[9,35,4,0],[9,36,4,0,"_dependencyMap"],[9,50,4,0],[10,2,5,0],[10,6,5,0,"_initMetric"],[10,17,5,0],[10,20,5,0,"require"],[10,27,5,0],[10,28,5,0,"_dependencyMap"],[10,42,5,0],[11,2,6,0],[11,6,6,0,"_whenActivated"],[11,20,6,0],[11,23,6,0,"require"],[11,30,6,0],[11,31,6,0,"_dependencyMap"],[11,45,6,0],[12,2,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[28,2,25,0],[29,2,26,0],[29,8,26,6,"TTFBThresholds"],[29,22,26,20],[29,25,26,20,"exports"],[29,32,26,20],[29,33,26,20,"TTFBThresholds"],[29,47,26,20],[29,50,26,23],[29,51,26,24],[29,54,26,27],[29,56,26,29],[29,60,26,33],[29,61,26,34],[31,2,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,2,32,0],[35,8,32,6,"whenReady"],[35,17,32,15],[35,20,32,19,"callback"],[35,28,32,27],[35,32,32,32],[36,4,33,2],[36,8,33,6,"WINDOW"],[36,21,33,12],[36,22,33,13,"document"],[36,30,33,21],[36,34,33,25,"WINDOW"],[36,47,33,31],[36,48,33,32,"document"],[36,56,33,40],[36,57,33,41,"prerendering"],[36,69,33,53],[36,71,33,55],[37,6,34,4],[37,10,34,4,"whenActivated"],[37,38,34,17],[37,40,34,18],[37,46,34,24,"whenReady"],[37,55,34,33],[37,56,34,34,"callback"],[37,64,34,42],[37,65,34,43],[37,66,34,44],[38,4,35,2],[38,5,35,3],[38,11,35,9],[38,15,35,13,"WINDOW"],[38,28,35,19],[38,29,35,20,"document"],[38,37,35,28],[38,41,35,32,"WINDOW"],[38,54,35,38],[38,55,35,39,"document"],[38,63,35,47],[38,64,35,48,"readyState"],[38,74,35,58],[38,79,35,63],[38,89,35,73],[38,91,35,75],[39,6,36,4,"addEventListener"],[39,22,36,20],[39,23,36,21],[39,29,36,27],[39,31,36,29],[39,37,36,35,"whenReady"],[39,46,36,44],[39,47,36,45,"callback"],[39,55,36,53],[39,56,36,54],[39,58,36,56],[39,62,36,60],[39,63,36,61],[40,4,37,2],[40,5,37,3],[40,11,37,9],[41,6,38,4],[42,6,39,4,"setTimeout"],[42,16,39,14],[42,17,39,15,"callback"],[42,25,39,23],[42,27,39,25],[42,28,39,26],[42,29,39,27],[43,4,40,2],[44,2,41,0],[44,3,41,1],[46,2,43,0],[47,0,44,0],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,0,49,0],[53,0,50,0],[54,0,51,0],[55,0,52,0],[56,0,53,0],[57,0,54,0],[58,0,55,0],[59,0,56,0],[60,0,57,0],[61,2,58,0],[61,8,58,6,"onTTFB"],[61,14,58,12],[61,17,58,15,"onTTFB"],[61,18,58,16,"onReport"],[61,26,58,24],[61,28,58,26,"opts"],[61,32,58,30],[61,35,58,33],[61,36,58,34],[61,37,58,35],[61,42,58,40],[62,4,59,2],[62,10,59,8,"metric"],[62,16,59,14],[62,19,59,17],[62,23,59,17,"initMetric"],[62,45,59,27],[62,47,59,28],[62,53,59,34],[62,54,59,35],[63,4,60,2],[63,10,60,8,"report"],[63,16,60,14],[63,19,60,17],[63,23,60,17,"bindReporter"],[63,49,60,29],[63,51,60,30,"onReport"],[63,59,60,38],[63,61,60,40,"metric"],[63,67,60,46],[63,69,60,48,"TTFBThresholds"],[63,83,60,62],[63,85,60,64,"opts"],[63,89,60,68],[63,90,60,69,"reportAllChanges"],[63,106,60,85],[63,107,60,86],[64,4,62,2,"whenReady"],[64,13,62,11],[64,14,62,12],[64,20,62,18],[65,6,63,4],[65,12,63,10,"navigationEntry"],[65,27,63,25],[65,30,63,28],[65,34,63,28,"getNavigationEntry"],[65,72,63,46],[65,74,63,47],[65,75,63,48],[66,6,65,4],[66,10,65,8,"navigationEntry"],[66,25,65,23],[66,27,65,25],[67,8,66,6],[68,8,67,6],[69,8,68,6],[70,8,69,6],[71,8,70,6,"metric"],[71,14,70,12],[71,15,70,13,"value"],[71,20,70,18],[71,23,70,21,"Math"],[71,27,70,25],[71,28,70,26,"max"],[71,31,70,29],[71,32,70,30,"navigationEntry"],[71,47,70,45],[71,48,70,46,"responseStart"],[71,61,70,59],[71,64,70,62],[71,68,70,62,"getActivationStart"],[71,106,70,80],[71,108,70,81],[71,109,70,82],[71,111,70,84],[71,112,70,85],[71,113,70,86],[72,8,72,6,"metric"],[72,14,72,12],[72,15,72,13,"entries"],[72,22,72,20],[72,25,72,23],[72,26,72,24,"navigationEntry"],[72,41,72,39],[72,42,72,40],[73,8,73,6,"report"],[73,14,73,12],[73,15,73,13],[73,19,73,17],[73,20,73,18],[74,6,74,4],[75,4,75,2],[75,5,75,3],[75,6,75,4],[76,2,76,0],[76,3,76,1],[77,2,76,2,"exports"],[77,9,76,2],[77,10,76,2,"onTTFB"],[77,16,76,2],[77,19,76,2,"onTTFB"],[77,25,76,2],[78,0,76,2],[78,3]],"functionMap":{"names":["<global>","whenReady","whenActivated$argument_0","addEventListener$argument_1","onTTFB","whenReady$argument_0"],"mappings":"AAA;kBC+B;kBCE,yBD;6BEE,yBF;CDK;eIiB;YCI;GDa;CJC"}},"type":"js/module"}]}