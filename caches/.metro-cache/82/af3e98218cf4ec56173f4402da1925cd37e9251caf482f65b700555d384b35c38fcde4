{"dependencies":[{"name":"../integration.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"B8aKvpmafw58aWtupuC7GWTMiwo=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":48,"index":103}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":50,"index":154}}],"key":"ntkLGOO3yQLxIuhQNqZB03aOwxw=","exportNames":["*"]}},{"name":"../utils-hoist/stacktrace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":155},"end":{"line":4,"column":66,"index":221}}],"key":"2lBxHbvYEHUBOpG3/Vvqo+tY2+M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports._shouldDropEvent = _shouldDropEvent;\n  exports.dedupeIntegration = void 0;\n  var _integration = require(_dependencyMap[0], \"../integration.js\");\n  var _debugBuild = require(_dependencyMap[1], \"../debug-build.js\");\n  var _logger = require(_dependencyMap[2], \"../utils-hoist/logger.js\");\n  var _stacktrace = require(_dependencyMap[3], \"../utils-hoist/stacktrace.js\");\n  const INTEGRATION_NAME = 'Dedupe';\n  const _dedupeIntegration = () => {\n    let previousEvent;\n    return {\n      name: INTEGRATION_NAME,\n      processEvent(currentEvent) {\n        // We want to ignore any non-error type events, e.g. transactions or replays\n        // These should never be deduped, and also not be compared against as _previousEvent.\n        if (currentEvent.type) {\n          return currentEvent;\n        }\n\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, previousEvent)) {\n            _debugBuild.DEBUG_BUILD && _logger.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {} // eslint-disable-line no-empty\n\n        return previousEvent = currentEvent;\n      }\n    };\n  };\n\n  /**\n   * Deduplication filter.\n   */\n  const dedupeIntegration = exports.dedupeIntegration = (0, _integration.defineIntegration)(_dedupeIntegration);\n\n  /** only exported for tests. */\n  function _shouldDropEvent(currentEvent, previousEvent) {\n    if (!previousEvent) {\n      return false;\n    }\n    if (_isSameMessageEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n    if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n    return false;\n  }\n  function _isSameMessageEvent(currentEvent, previousEvent) {\n    const currentMessage = currentEvent.message;\n    const previousMessage = previousEvent.message;\n\n    // If neither event has a message property, they were both exceptions, so bail out\n    if (!currentMessage && !previousMessage) {\n      return false;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if (currentMessage && !previousMessage || !currentMessage && previousMessage) {\n      return false;\n    }\n    if (currentMessage !== previousMessage) {\n      return false;\n    }\n    if (!_isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n    if (!_isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n    return true;\n  }\n  function _isSameExceptionEvent(currentEvent, previousEvent) {\n    const previousException = _getExceptionFromEvent(previousEvent);\n    const currentException = _getExceptionFromEvent(currentEvent);\n    if (!previousException || !currentException) {\n      return false;\n    }\n    if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n      return false;\n    }\n    if (!_isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n    if (!_isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n    return true;\n  }\n  function _isSameStacktrace(currentEvent, previousEvent) {\n    let currentFrames = (0, _stacktrace.getFramesFromEvent)(currentEvent);\n    let previousFrames = (0, _stacktrace.getFramesFromEvent)(previousEvent);\n\n    // If neither event has a stacktrace, they are assumed to be the same\n    if (!currentFrames && !previousFrames) {\n      return true;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if (currentFrames && !previousFrames || !currentFrames && previousFrames) {\n      return false;\n    }\n    currentFrames = currentFrames;\n    previousFrames = previousFrames;\n\n    // If number of frames differ, they are not the same\n    if (previousFrames.length !== currentFrames.length) {\n      return false;\n    }\n\n    // Otherwise, compare the two\n    for (let i = 0; i < previousFrames.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const frameA = previousFrames[i];\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const frameB = currentFrames[i];\n      if (frameA.filename !== frameB.filename || frameA.lineno !== frameB.lineno || frameA.colno !== frameB.colno || frameA.function !== frameB.function) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function _isSameFingerprint(currentEvent, previousEvent) {\n    let currentFingerprint = currentEvent.fingerprint;\n    let previousFingerprint = previousEvent.fingerprint;\n\n    // If neither event has a fingerprint, they are assumed to be the same\n    if (!currentFingerprint && !previousFingerprint) {\n      return true;\n    }\n\n    // If only one event has a fingerprint, but not the other one, they are not the same\n    if (currentFingerprint && !previousFingerprint || !currentFingerprint && previousFingerprint) {\n      return false;\n    }\n    currentFingerprint = currentFingerprint;\n    previousFingerprint = previousFingerprint;\n\n    // Otherwise, compare the two\n    try {\n      return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n    } catch (_oO) {\n      return false;\n    }\n  }\n  function _getExceptionFromEvent(event) {\n    return event.exception && event.exception.values && event.exception.values[0];\n  }\n});","lineCount":154,"map":[[7,2,1,0],[7,6,1,0,"_integration"],[7,18,1,0],[7,21,1,0,"require"],[7,28,1,0],[7,29,1,0,"_dependencyMap"],[7,43,1,0],[8,2,2,0],[8,6,2,0,"_debugBuild"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_logger"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,4,0],[10,6,4,0,"_stacktrace"],[10,17,4,0],[10,20,4,0,"require"],[10,27,4,0],[10,28,4,0,"_dependencyMap"],[10,42,4,0],[11,2,6,0],[11,8,6,6,"INTEGRATION_NAME"],[11,24,6,22],[11,27,6,25],[11,35,6,33],[12,2,8,0],[12,8,8,6,"_dedupeIntegration"],[12,26,8,24],[12,29,8,28,"_dedupeIntegration"],[12,30,8,28],[12,35,8,34],[13,4,9,2],[13,8,9,6,"previousEvent"],[13,21,9,19],[14,4,11,2],[14,11,11,9],[15,6,12,4,"name"],[15,10,12,8],[15,12,12,10,"INTEGRATION_NAME"],[15,28,12,26],[16,6,13,4,"processEvent"],[16,18,13,16,"processEvent"],[16,19,13,17,"currentEvent"],[16,31,13,29],[16,33,13,31],[17,8,14,6],[18,8,15,6],[19,8,16,6],[19,12,16,10,"currentEvent"],[19,24,16,22],[19,25,16,23,"type"],[19,29,16,27],[19,31,16,29],[20,10,17,8],[20,17,17,15,"currentEvent"],[20,29,17,27],[21,8,18,6],[23,8,20,6],[24,8,21,6],[24,12,21,10],[25,10,22,8],[25,14,22,12,"_shouldDropEvent"],[25,30,22,28],[25,31,22,29,"currentEvent"],[25,43,22,41],[25,45,22,43,"previousEvent"],[25,58,22,56],[25,59,22,57],[25,61,22,59],[26,12,23,10,"DEBUG_BUILD"],[26,35,23,21],[26,39,23,25,"logger"],[26,53,23,31],[26,54,23,32,"warn"],[26,58,23,36],[26,59,23,37],[26,129,23,107],[26,130,23,108],[27,12,24,10],[27,19,24,17],[27,23,24,21],[28,10,25,8],[29,8,26,6],[29,9,26,7],[29,10,26,8],[29,17,26,15,"_oO"],[29,20,26,18],[29,22,26,20],[29,23,26,21],[29,24,26,22],[29,25,26,23],[31,8,28,6],[31,15,28,14,"previousEvent"],[31,28,28,27],[31,31,28,30,"currentEvent"],[31,43,28,42],[32,6,29,4],[33,4,30,2],[33,5,30,3],[34,2,31,0],[34,3,31,2],[36,2,33,0],[37,0,34,0],[38,0,35,0],[39,2,36,0],[39,8,36,6,"dedupeIntegration"],[39,25,36,23],[39,28,36,23,"exports"],[39,35,36,23],[39,36,36,23,"dedupeIntegration"],[39,53,36,23],[39,56,36,26],[39,60,36,26,"defineIntegration"],[39,90,36,43],[39,92,36,44,"_dedupeIntegration"],[39,110,36,62],[39,111,36,63],[41,2,38,0],[42,2,39,0],[42,11,39,9,"_shouldDropEvent"],[42,27,39,25,"_shouldDropEvent"],[42,28,39,26,"currentEvent"],[42,40,39,38],[42,42,39,40,"previousEvent"],[42,55,39,53],[42,57,39,55],[43,4,40,2],[43,8,40,6],[43,9,40,7,"previousEvent"],[43,22,40,20],[43,24,40,22],[44,6,41,4],[44,13,41,11],[44,18,41,16],[45,4,42,2],[46,4,44,2],[46,8,44,6,"_isSameMessageEvent"],[46,27,44,25],[46,28,44,26,"currentEvent"],[46,40,44,38],[46,42,44,40,"previousEvent"],[46,55,44,53],[46,56,44,54],[46,58,44,56],[47,6,45,4],[47,13,45,11],[47,17,45,15],[48,4,46,2],[49,4,48,2],[49,8,48,6,"_isSameExceptionEvent"],[49,29,48,27],[49,30,48,28,"currentEvent"],[49,42,48,40],[49,44,48,42,"previousEvent"],[49,57,48,55],[49,58,48,56],[49,60,48,58],[50,6,49,4],[50,13,49,11],[50,17,49,15],[51,4,50,2],[52,4,52,2],[52,11,52,9],[52,16,52,14],[53,2,53,0],[54,2,55,0],[54,11,55,9,"_isSameMessageEvent"],[54,30,55,28,"_isSameMessageEvent"],[54,31,55,29,"currentEvent"],[54,43,55,41],[54,45,55,43,"previousEvent"],[54,58,55,56],[54,60,55,58],[55,4,56,2],[55,10,56,8,"currentMessage"],[55,24,56,22],[55,27,56,25,"currentEvent"],[55,39,56,37],[55,40,56,38,"message"],[55,47,56,45],[56,4,57,2],[56,10,57,8,"previousMessage"],[56,25,57,23],[56,28,57,26,"previousEvent"],[56,41,57,39],[56,42,57,40,"message"],[56,49,57,47],[58,4,59,2],[59,4,60,2],[59,8,60,6],[59,9,60,7,"currentMessage"],[59,23,60,21],[59,27,60,25],[59,28,60,26,"previousMessage"],[59,43,60,41],[59,45,60,43],[60,6,61,4],[60,13,61,11],[60,18,61,16],[61,4,62,2],[63,4,64,2],[64,4,65,2],[64,8,65,7,"currentMessage"],[64,22,65,21],[64,26,65,25],[64,27,65,26,"previousMessage"],[64,42,65,41],[64,46,65,47],[64,47,65,48,"currentMessage"],[64,61,65,62],[64,65,65,66,"previousMessage"],[64,80,65,82],[64,82,65,84],[65,6,66,4],[65,13,66,11],[65,18,66,16],[66,4,67,2],[67,4,69,2],[67,8,69,6,"currentMessage"],[67,22,69,20],[67,27,69,25,"previousMessage"],[67,42,69,40],[67,44,69,42],[68,6,70,4],[68,13,70,11],[68,18,70,16],[69,4,71,2],[70,4,73,2],[70,8,73,6],[70,9,73,7,"_isSameFingerprint"],[70,27,73,25],[70,28,73,26,"currentEvent"],[70,40,73,38],[70,42,73,40,"previousEvent"],[70,55,73,53],[70,56,73,54],[70,58,73,56],[71,6,74,4],[71,13,74,11],[71,18,74,16],[72,4,75,2],[73,4,77,2],[73,8,77,6],[73,9,77,7,"_isSameStacktrace"],[73,26,77,24],[73,27,77,25,"currentEvent"],[73,39,77,37],[73,41,77,39,"previousEvent"],[73,54,77,52],[73,55,77,53],[73,57,77,55],[74,6,78,4],[74,13,78,11],[74,18,78,16],[75,4,79,2],[76,4,81,2],[76,11,81,9],[76,15,81,13],[77,2,82,0],[78,2,84,0],[78,11,84,9,"_isSameExceptionEvent"],[78,32,84,30,"_isSameExceptionEvent"],[78,33,84,31,"currentEvent"],[78,45,84,43],[78,47,84,45,"previousEvent"],[78,60,84,58],[78,62,84,60],[79,4,85,2],[79,10,85,8,"previousException"],[79,27,85,25],[79,30,85,28,"_getExceptionFromEvent"],[79,52,85,50],[79,53,85,51,"previousEvent"],[79,66,85,64],[79,67,85,65],[80,4,86,2],[80,10,86,8,"currentException"],[80,26,86,24],[80,29,86,27,"_getExceptionFromEvent"],[80,51,86,49],[80,52,86,50,"currentEvent"],[80,64,86,62],[80,65,86,63],[81,4,88,2],[81,8,88,6],[81,9,88,7,"previousException"],[81,26,88,24],[81,30,88,28],[81,31,88,29,"currentException"],[81,47,88,45],[81,49,88,47],[82,6,89,4],[82,13,89,11],[82,18,89,16],[83,4,90,2],[84,4,92,2],[84,8,92,6,"previousException"],[84,25,92,23],[84,26,92,24,"type"],[84,30,92,28],[84,35,92,33,"currentException"],[84,51,92,49],[84,52,92,50,"type"],[84,56,92,54],[84,60,92,58,"previousException"],[84,77,92,75],[84,78,92,76,"value"],[84,83,92,81],[84,88,92,86,"currentException"],[84,104,92,102],[84,105,92,103,"value"],[84,110,92,108],[84,112,92,110],[85,6,93,4],[85,13,93,11],[85,18,93,16],[86,4,94,2],[87,4,96,2],[87,8,96,6],[87,9,96,7,"_isSameFingerprint"],[87,27,96,25],[87,28,96,26,"currentEvent"],[87,40,96,38],[87,42,96,40,"previousEvent"],[87,55,96,53],[87,56,96,54],[87,58,96,56],[88,6,97,4],[88,13,97,11],[88,18,97,16],[89,4,98,2],[90,4,100,2],[90,8,100,6],[90,9,100,7,"_isSameStacktrace"],[90,26,100,24],[90,27,100,25,"currentEvent"],[90,39,100,37],[90,41,100,39,"previousEvent"],[90,54,100,52],[90,55,100,53],[90,57,100,55],[91,6,101,4],[91,13,101,11],[91,18,101,16],[92,4,102,2],[93,4,104,2],[93,11,104,9],[93,15,104,13],[94,2,105,0],[95,2,107,0],[95,11,107,9,"_isSameStacktrace"],[95,28,107,26,"_isSameStacktrace"],[95,29,107,27,"currentEvent"],[95,41,107,39],[95,43,107,41,"previousEvent"],[95,56,107,54],[95,58,107,56],[96,4,108,2],[96,8,108,6,"currentFrames"],[96,21,108,19],[96,24,108,22],[96,28,108,22,"getFramesFromEvent"],[96,58,108,40],[96,60,108,41,"currentEvent"],[96,72,108,53],[96,73,108,54],[97,4,109,2],[97,8,109,6,"previousFrames"],[97,22,109,20],[97,25,109,23],[97,29,109,23,"getFramesFromEvent"],[97,59,109,41],[97,61,109,42,"previousEvent"],[97,74,109,55],[97,75,109,56],[99,4,111,2],[100,4,112,2],[100,8,112,6],[100,9,112,7,"currentFrames"],[100,22,112,20],[100,26,112,24],[100,27,112,25,"previousFrames"],[100,41,112,39],[100,43,112,41],[101,6,113,4],[101,13,113,11],[101,17,113,15],[102,4,114,2],[104,4,116,2],[105,4,117,2],[105,8,117,7,"currentFrames"],[105,21,117,20],[105,25,117,24],[105,26,117,25,"previousFrames"],[105,40,117,39],[105,44,117,45],[105,45,117,46,"currentFrames"],[105,58,117,59],[105,62,117,63,"previousFrames"],[105,76,117,78],[105,78,117,80],[106,6,118,4],[106,13,118,11],[106,18,118,16],[107,4,119,2],[108,4,121,2,"currentFrames"],[108,17,121,15],[108,20,121,18,"currentFrames"],[108,33,121,31],[109,4,122,2,"previousFrames"],[109,18,122,16],[109,21,122,19,"previousFrames"],[109,35,122,33],[111,4,124,2],[112,4,125,2],[112,8,125,6,"previousFrames"],[112,22,125,20],[112,23,125,21,"length"],[112,29,125,27],[112,34,125,32,"currentFrames"],[112,47,125,45],[112,48,125,46,"length"],[112,54,125,52],[112,56,125,54],[113,6,126,4],[113,13,126,11],[113,18,126,16],[114,4,127,2],[116,4,129,2],[117,4,130,2],[117,9,130,7],[117,13,130,11,"i"],[117,14,130,12],[117,17,130,15],[117,18,130,16],[117,20,130,18,"i"],[117,21,130,19],[117,24,130,22,"previousFrames"],[117,38,130,36],[117,39,130,37,"length"],[117,45,130,43],[117,47,130,45,"i"],[117,48,130,46],[117,50,130,48],[117,52,130,50],[118,6,131,4],[119,6,132,4],[119,12,132,10,"frameA"],[119,18,132,16],[119,21,132,19,"previousFrames"],[119,35,132,33],[119,36,132,34,"i"],[119,37,132,35],[119,38,132,36],[120,6,133,4],[121,6,134,4],[121,12,134,10,"frameB"],[121,18,134,16],[121,21,134,19,"currentFrames"],[121,34,134,32],[121,35,134,33,"i"],[121,36,134,34],[121,37,134,35],[122,6,136,4],[122,10,137,6,"frameA"],[122,16,137,12],[122,17,137,13,"filename"],[122,25,137,21],[122,30,137,26,"frameB"],[122,36,137,32],[122,37,137,33,"filename"],[122,45,137,41],[122,49,138,6,"frameA"],[122,55,138,12],[122,56,138,13,"lineno"],[122,62,138,19],[122,67,138,24,"frameB"],[122,73,138,30],[122,74,138,31,"lineno"],[122,80,138,37],[122,84,139,6,"frameA"],[122,90,139,12],[122,91,139,13,"colno"],[122,96,139,18],[122,101,139,23,"frameB"],[122,107,139,29],[122,108,139,30,"colno"],[122,113,139,35],[122,117,140,6,"frameA"],[122,123,140,12],[122,124,140,13,"function"],[122,132,140,21],[122,137,140,26,"frameB"],[122,143,140,32],[122,144,140,33,"function"],[122,152,140,41],[122,154,141,6],[123,8,142,6],[123,15,142,13],[123,20,142,18],[124,6,143,4],[125,4,144,2],[126,4,146,2],[126,11,146,9],[126,15,146,13],[127,2,147,0],[128,2,149,0],[128,11,149,9,"_isSameFingerprint"],[128,29,149,27,"_isSameFingerprint"],[128,30,149,28,"currentEvent"],[128,42,149,40],[128,44,149,42,"previousEvent"],[128,57,149,55],[128,59,149,57],[129,4,150,2],[129,8,150,6,"currentFingerprint"],[129,26,150,24],[129,29,150,27,"currentEvent"],[129,41,150,39],[129,42,150,40,"fingerprint"],[129,53,150,51],[130,4,151,2],[130,8,151,6,"previousFingerprint"],[130,27,151,25],[130,30,151,28,"previousEvent"],[130,43,151,41],[130,44,151,42,"fingerprint"],[130,55,151,53],[132,4,153,2],[133,4,154,2],[133,8,154,6],[133,9,154,7,"currentFingerprint"],[133,27,154,25],[133,31,154,29],[133,32,154,30,"previousFingerprint"],[133,51,154,49],[133,53,154,51],[134,6,155,4],[134,13,155,11],[134,17,155,15],[135,4,156,2],[137,4,158,2],[138,4,159,2],[138,8,159,7,"currentFingerprint"],[138,26,159,25],[138,30,159,29],[138,31,159,30,"previousFingerprint"],[138,50,159,49],[138,54,159,55],[138,55,159,56,"currentFingerprint"],[138,73,159,74],[138,77,159,78,"previousFingerprint"],[138,96,159,98],[138,98,159,100],[139,6,160,4],[139,13,160,11],[139,18,160,16],[140,4,161,2],[141,4,163,2,"currentFingerprint"],[141,22,163,20],[141,25,163,23,"currentFingerprint"],[141,43,163,41],[142,4,164,2,"previousFingerprint"],[142,23,164,21],[142,26,164,24,"previousFingerprint"],[142,45,164,43],[144,4,166,2],[145,4,167,2],[145,8,167,6],[146,6,168,4],[146,13,168,11],[146,14,168,12],[146,16,168,14,"currentFingerprint"],[146,34,168,32],[146,35,168,33,"join"],[146,39,168,37],[146,40,168,38],[146,42,168,40],[146,43,168,41],[146,48,168,46,"previousFingerprint"],[146,67,168,65],[146,68,168,66,"join"],[146,72,168,70],[146,73,168,71],[146,75,168,73],[146,76,168,74],[146,77,168,75],[147,4,169,2],[147,5,169,3],[147,6,169,4],[147,13,169,11,"_oO"],[147,16,169,14],[147,18,169,16],[148,6,170,4],[148,13,170,11],[148,18,170,16],[149,4,171,2],[150,2,172,0],[151,2,174,0],[151,11,174,9,"_getExceptionFromEvent"],[151,33,174,31,"_getExceptionFromEvent"],[151,34,174,32,"event"],[151,39,174,37],[151,41,174,39],[152,4,175,2],[152,11,175,9,"event"],[152,16,175,14],[152,17,175,15,"exception"],[152,26,175,24],[152,30,175,28,"event"],[152,35,175,33],[152,36,175,34,"exception"],[152,45,175,43],[152,46,175,44,"values"],[152,52,175,50],[152,56,175,54,"event"],[152,61,175,59],[152,62,175,60,"exception"],[152,71,175,69],[152,72,175,70,"values"],[152,78,175,76],[152,79,175,77],[152,80,175,78],[152,81,175,79],[153,2,176,0],[154,0,176,1],[154,3]],"functionMap":{"names":["<global>","_dedupeIntegration","processEvent","_shouldDropEvent","_isSameMessageEvent","_isSameExceptionEvent","_isSameStacktrace","_isSameFingerprint","_getExceptionFromEvent"],"mappings":"AAA;4BCO;ICK;KDgB;CDE;AGQ;CHc;AIE;CJ2B;AKE;CLqB;AME;CNwC;AOE;CPuB;AQE;CRE"}},"type":"js/module"}]}