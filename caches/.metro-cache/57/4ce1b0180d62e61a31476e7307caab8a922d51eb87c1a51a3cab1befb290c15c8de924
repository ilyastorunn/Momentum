{"dependencies":[{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":38,"index":87}}],"key":"P2L0skrFzddfO2hyNVTS4ihPJoY=","exportNames":["*"]}},{"name":"../stacktrace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":88},"end":{"line":3,"column":51,"index":139}}],"key":"owAZtAwu/HCTJbko0msyOwvgNHQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addHandler = addHandler;\n  exports.maybeInstrument = maybeInstrument;\n  exports.resetInstrumentationHandlers = resetInstrumentationHandlers;\n  exports.triggerHandlers = triggerHandlers;\n  var _debugBuild = require(_dependencyMap[0], \"../debug-build.js\");\n  var _logger = require(_dependencyMap[1], \"../logger.js\");\n  var _stacktrace = require(_dependencyMap[2], \"../stacktrace.js\");\n  // We keep the handlers globally\n  const handlers = {};\n  const instrumented = {};\n\n  /** Add a handler function. */\n  function addHandler(type, handler) {\n    handlers[type] = handlers[type] || [];\n    handlers[type].push(handler);\n  }\n\n  /**\n   * Reset all instrumentation handlers.\n   * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n   */\n  function resetInstrumentationHandlers() {\n    Object.keys(handlers).forEach(key => {\n      handlers[key] = undefined;\n    });\n  }\n\n  /** Maybe run an instrumentation function, unless it was already called. */\n  function maybeInstrument(type, instrumentFn) {\n    if (!instrumented[type]) {\n      instrumented[type] = true;\n      try {\n        instrumentFn();\n      } catch (e) {\n        _debugBuild.DEBUG_BUILD && _logger.logger.error(`Error while instrumenting ${type}`, e);\n      }\n    }\n  }\n\n  /** Trigger handlers for a given instrumentation type. */\n  function triggerHandlers(type, data) {\n    const typeHandlers = type && handlers[type];\n    if (!typeHandlers) {\n      return;\n    }\n    for (const handler of typeHandlers) {\n      try {\n        handler(data);\n      } catch (e) {\n        _debugBuild.DEBUG_BUILD && _logger.logger.error(`Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0, _stacktrace.getFunctionName)(handler)}\\nError:`, e);\n      }\n    }\n  }\n});","lineCount":58,"map":[[9,2,1,0],[9,6,1,0,"_debugBuild"],[9,17,1,0],[9,20,1,0,"require"],[9,27,1,0],[9,28,1,0,"_dependencyMap"],[9,42,1,0],[10,2,2,0],[10,6,2,0,"_logger"],[10,13,2,0],[10,16,2,0,"require"],[10,23,2,0],[10,24,2,0,"_dependencyMap"],[10,38,2,0],[11,2,3,0],[11,6,3,0,"_stacktrace"],[11,17,3,0],[11,20,3,0,"require"],[11,27,3,0],[11,28,3,0,"_dependencyMap"],[11,42,3,0],[12,2,5,0],[13,2,6,0],[13,8,6,6,"handlers"],[13,16,6,14],[13,19,6,17],[13,20,6,18],[13,21,6,19],[14,2,7,0],[14,8,7,6,"instrumented"],[14,20,7,18],[14,23,7,21],[14,24,7,22],[14,25,7,23],[16,2,9,0],[17,2,10,0],[17,11,10,9,"addHandler"],[17,21,10,19,"addHandler"],[17,22,10,20,"type"],[17,26,10,24],[17,28,10,26,"handler"],[17,35,10,33],[17,37,10,35],[18,4,11,2,"handlers"],[18,12,11,10],[18,13,11,11,"type"],[18,17,11,15],[18,18,11,16],[18,21,11,19,"handlers"],[18,29,11,27],[18,30,11,28,"type"],[18,34,11,32],[18,35,11,33],[18,39,11,37],[18,41,11,39],[19,4,12,3,"handlers"],[19,12,12,11],[19,13,12,12,"type"],[19,17,12,16],[19,18,12,17],[19,19,12,20,"push"],[19,23,12,24],[19,24,12,25,"handler"],[19,31,12,32],[19,32,12,33],[20,2,13,0],[22,2,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,2,19,0],[26,11,19,9,"resetInstrumentationHandlers"],[26,39,19,37,"resetInstrumentationHandlers"],[26,40,19,37],[26,42,19,40],[27,4,20,2,"Object"],[27,10,20,8],[27,11,20,9,"keys"],[27,15,20,13],[27,16,20,14,"handlers"],[27,24,20,22],[27,25,20,23],[27,26,20,24,"forEach"],[27,33,20,31],[27,34,20,32,"key"],[27,37,20,35],[27,41,20,39],[28,6,21,4,"handlers"],[28,14,21,12],[28,15,21,13,"key"],[28,18,21,16],[28,19,21,18],[28,22,21,21,"undefined"],[28,31,21,30],[29,4,22,2],[29,5,22,3],[29,6,22,4],[30,2,23,0],[32,2,25,0],[33,2,26,0],[33,11,26,9,"maybeInstrument"],[33,26,26,24,"maybeInstrument"],[33,27,26,25,"type"],[33,31,26,29],[33,33,26,31,"instrumentFn"],[33,45,26,43],[33,47,26,45],[34,4,27,2],[34,8,27,6],[34,9,27,7,"instrumented"],[34,21,27,19],[34,22,27,20,"type"],[34,26,27,24],[34,27,27,25],[34,29,27,27],[35,6,28,4,"instrumented"],[35,18,28,16],[35,19,28,17,"type"],[35,23,28,21],[35,24,28,22],[35,27,28,25],[35,31,28,29],[36,6,29,4],[36,10,29,8],[37,8,30,6,"instrumentFn"],[37,20,30,18],[37,21,30,19],[37,22,30,20],[38,6,31,4],[38,7,31,5],[38,8,31,6],[38,15,31,13,"e"],[38,16,31,14],[38,18,31,16],[39,8,32,6,"DEBUG_BUILD"],[39,31,32,17],[39,35,32,21,"logger"],[39,49,32,27],[39,50,32,28,"error"],[39,55,32,33],[39,56,32,34],[39,85,32,63,"type"],[39,89,32,67],[39,91,32,69],[39,93,32,71,"e"],[39,94,32,72],[39,95,32,73],[40,6,33,4],[41,4,34,2],[42,2,35,0],[44,2,37,0],[45,2,38,0],[45,11,38,9,"triggerHandlers"],[45,26,38,24,"triggerHandlers"],[45,27,38,25,"type"],[45,31,38,29],[45,33,38,31,"data"],[45,37,38,35],[45,39,38,37],[46,4,39,2],[46,10,39,8,"typeHandlers"],[46,22,39,20],[46,25,39,23,"type"],[46,29,39,27],[46,33,39,31,"handlers"],[46,41,39,39],[46,42,39,40,"type"],[46,46,39,44],[46,47,39,45],[47,4,40,2],[47,8,40,6],[47,9,40,7,"typeHandlers"],[47,21,40,19],[47,23,40,21],[48,6,41,4],[49,4,42,2],[50,4,44,2],[50,9,44,7],[50,15,44,13,"handler"],[50,22,44,20],[50,26,44,24,"typeHandlers"],[50,38,44,36],[50,40,44,38],[51,6,45,4],[51,10,45,8],[52,8,46,6,"handler"],[52,15,46,13],[52,16,46,14,"data"],[52,20,46,18],[52,21,46,19],[53,6,47,4],[53,7,47,5],[53,8,47,6],[53,15,47,13,"e"],[53,16,47,14],[53,18,47,16],[54,8,48,6,"DEBUG_BUILD"],[54,31,48,17],[54,35,49,8,"logger"],[54,49,49,14],[54,50,49,15,"error"],[54,55,49,20],[54,56,50,10],[54,114,50,68,"type"],[54,118,50,72],[54,129,50,83],[54,133,50,83,"getFunctionName"],[54,160,50,98],[54,162,50,99,"handler"],[54,169,50,106],[54,170,50,107],[54,180,50,117],[54,182,51,10,"e"],[54,183,52,8],[54,184,52,9],[55,6,53,4],[56,4,54,2],[57,2,55,0],[58,0,55,1],[58,3]],"functionMap":{"names":["<global>","addHandler","resetInstrumentationHandlers","Object.keys.forEach$argument_0","maybeInstrument","triggerHandlers"],"mappings":"AAA;ACS;CDG;AEM;gCCC;GDE;CFC;AIG;CJS;AKG;CLiB"}},"type":"js/module"}]}