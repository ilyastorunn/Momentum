{"dependencies":[{"name":"../carrier.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"/CHWq5A6N7GxVM0vQJS3tsMdXuE=","exportNames":["*"]}},{"name":"./stackStrategy.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":66},"end":{"line":2,"column":66,"index":132}}],"key":"ByWHYDrz7XxXK2Zr5x3FAkp7kAc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAsyncContextStrategy = getAsyncContextStrategy;\n  exports.setAsyncContextStrategy = setAsyncContextStrategy;\n  var _carrier = require(_dependencyMap[0], \"../carrier.js\");\n  var _stackStrategy = require(_dependencyMap[1], \"./stackStrategy.js\");\n  /**\n   * @private Private API with no semver guarantees!\n   *\n   * Sets the global async context strategy\n   */\n  function setAsyncContextStrategy(strategy) {\n    // Get main carrier (global for every environment)\n    const registry = (0, _carrier.getMainCarrier)();\n    const sentry = (0, _carrier.getSentryCarrier)(registry);\n    sentry.acs = strategy;\n  }\n\n  /**\n   * Get the current async context strategy.\n   * If none has been setup, the default will be used.\n   */\n  function getAsyncContextStrategy(carrier) {\n    const sentry = (0, _carrier.getSentryCarrier)(carrier);\n    if (sentry.acs) {\n      return sentry.acs;\n    }\n\n    // Otherwise, use the default one (stack)\n    return (0, _stackStrategy.getStackAsyncContextStrategy)();\n  }\n});","lineCount":34,"map":[[7,2,1,0],[7,6,1,0,"_carrier"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"_stackStrategy"],[8,20,2,0],[8,23,2,0,"require"],[8,30,2,0],[8,31,2,0,"_dependencyMap"],[8,45,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,2,9,0],[14,11,9,9,"setAsyncContextStrategy"],[14,34,9,32,"setAsyncContextStrategy"],[14,35,9,33,"strategy"],[14,43,9,41],[14,45,9,43],[15,4,10,2],[16,4,11,2],[16,10,11,8,"registry"],[16,18,11,16],[16,21,11,19],[16,25,11,19,"getMainCarrier"],[16,48,11,33],[16,50,11,34],[16,51,11,35],[17,4,12,2],[17,10,12,8,"sentry"],[17,16,12,14],[17,19,12,17],[17,23,12,17,"getSentryCarrier"],[17,48,12,33],[17,50,12,34,"registry"],[17,58,12,42],[17,59,12,43],[18,4,13,2,"sentry"],[18,10,13,8],[18,11,13,9,"acs"],[18,14,13,12],[18,17,13,15,"strategy"],[18,25,13,23],[19,2,14,0],[21,2,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,2,20,0],[25,11,20,9,"getAsyncContextStrategy"],[25,34,20,32,"getAsyncContextStrategy"],[25,35,20,33,"carrier"],[25,42,20,40],[25,44,20,42],[26,4,21,2],[26,10,21,8,"sentry"],[26,16,21,14],[26,19,21,17],[26,23,21,17,"getSentryCarrier"],[26,48,21,33],[26,50,21,34,"carrier"],[26,57,21,41],[26,58,21,42],[27,4,23,2],[27,8,23,6,"sentry"],[27,14,23,12],[27,15,23,13,"acs"],[27,18,23,16],[27,20,23,18],[28,6,24,4],[28,13,24,11,"sentry"],[28,19,24,17],[28,20,24,18,"acs"],[28,23,24,21],[29,4,25,2],[31,4,27,2],[32,4,28,2],[32,11,28,9],[32,15,28,9,"getStackAsyncContextStrategy"],[32,58,28,37],[32,60,28,38],[32,61,28,39],[33,2,29,0],[34,0,29,1],[34,3]],"functionMap":{"names":["<global>","setAsyncContextStrategy","getAsyncContextStrategy"],"mappings":"AAA;ACQ;CDK;AEM;CFS"}},"type":"js/module"}]}