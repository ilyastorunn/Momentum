{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":179,"index":179}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":180},"end":{"line":2,"column":31,"index":211}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../utils/environment","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":246},"end":{"line":4,"column":60,"index":306}}],"key":"ZHbdf+zAJuwAaiIxqWoPGRJz4oo=","exportNames":["*"]}},{"name":"./origin","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":307},"end":{"line":5,"column":102,"index":409}}],"key":"gjqB2ZMKB4umzeBLbntsA0M0Xog=","exportNames":["*"]}},{"name":"./timetodisplaynative","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":410},"end":{"line":6,"column":89,"index":499}}],"key":"6DywP7l7wKDlTeg7Sfr1qbu3/gg=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":500},"end":{"line":7,"column":91,"index":591}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TimeToFullDisplay = TimeToFullDisplay;\n  exports.TimeToInitialDisplay = TimeToInitialDisplay;\n  exports.createTimeToFullDisplay = createTimeToFullDisplay;\n  exports.createTimeToInitialDisplay = createTimeToInitialDisplay;\n  exports.manualInitialDisplaySpans = void 0;\n  exports.startTimeToFullDisplaySpan = startTimeToFullDisplaySpan;\n  exports.startTimeToInitialDisplaySpan = startTimeToInitialDisplaySpan;\n  exports.updateInitialDisplaySpan = updateInitialDisplaySpan;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _react = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var React = _react;\n  var _environment = require(_dependencyMap[2], \"../utils/environment\");\n  var _origin = require(_dependencyMap[3], \"./origin\");\n  var _timetodisplaynative = require(_dependencyMap[4], \"./timetodisplaynative\");\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  let nativeComponentMissingLogged = false;\n  /**\n   * Flags of active spans with manual initial display.\n   */\n  const manualInitialDisplaySpans = exports.manualInitialDisplaySpans = new WeakMap();\n  /**\n   * Flag full display called before initial display for an active span.\n   */\n  const fullDisplayBeforeInitialDisplay = new WeakMap();\n  /**\n   * Component to measure time to initial display.\n   *\n   * The initial display is recorded when the component prop `record` is true.\n   *\n   * <TimeToInitialDisplay record />\n   */\n  function TimeToInitialDisplay(props) {\n    const activeSpan = (0, _core.getActiveSpan)();\n    if (activeSpan) {\n      manualInitialDisplaySpans.set(activeSpan, true);\n    }\n    const parentSpanId = activeSpan && (0, _core.spanToJSON)(activeSpan).span_id;\n    return /*#__PURE__*/React.createElement(TimeToDisplay, {\n      initialDisplay: props.record,\n      parentSpanId: parentSpanId\n    }, props.children);\n  }\n  /**\n   * Component to measure time to full display.\n   *\n   * The initial display is recorded when the component prop `record` is true.\n   *\n   * <TimeToInitialDisplay record />\n   */\n  function TimeToFullDisplay(props) {\n    const activeSpan = (0, _core.getActiveSpan)();\n    const parentSpanId = activeSpan && (0, _core.spanToJSON)(activeSpan).span_id;\n    return /*#__PURE__*/React.createElement(TimeToDisplay, {\n      fullDisplay: props.record,\n      parentSpanId: parentSpanId\n    }, props.children);\n  }\n  function TimeToDisplay(props) {\n    const RNSentryOnDrawReporter = (0, _timetodisplaynative.getRNSentryOnDrawReporter)();\n    const isNewArchitecture = (0, _environment.isTurboModuleEnabled)();\n    if (__DEV__ && (isNewArchitecture || !_timetodisplaynative.nativeComponentExists && !nativeComponentMissingLogged)) {\n      nativeComponentMissingLogged = true;\n      // Using setTimeout with a delay of 0 milliseconds to defer execution and avoid printing the React stack trace.\n      setTimeout(() => {\n        _core.logger.warn('TimeToInitialDisplay and TimeToFullDisplay are not supported on the web, Expo Go and New Architecture. Run native build or report an issue at https://github.com/getsentry/sentry-react-native');\n      }, 0);\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RNSentryOnDrawReporter, {\n      initialDisplay: props.initialDisplay,\n      fullDisplay: props.fullDisplay,\n      parentSpanId: props.parentSpanId\n    }), props.children);\n  }\n  /**\n   * Starts a new span for the initial display.\n   *\n   * Returns current span if already exists in the currently active span.\n   *\n   * @deprecated Use `<TimeToInitialDisplay record={boolean}/>` component instead.\n   */\n  function startTimeToInitialDisplaySpan(options) {\n    const activeSpan = (0, _core.getActiveSpan)();\n    if (!activeSpan) {\n      _core.logger.warn(`[TimeToDisplay] No active span found to attach ui.load.initial_display to.`);\n      return undefined;\n    }\n    const existingSpan = (0, _core.getSpanDescendants)(activeSpan).find(span => (0, _core.spanToJSON)(span).op === 'ui.load.initial_display');\n    if (existingSpan) {\n      _core.logger.debug(`[TimeToDisplay] Found existing ui.load.initial_display span.`);\n      return existingSpan;\n    }\n    const initialDisplaySpan = (0, _core.startInactiveSpan)(Object.assign({\n      op: 'ui.load.initial_display',\n      name: 'Time To Initial Display',\n      startTime: (0, _core.spanToJSON)(activeSpan).start_timestamp\n    }, options));\n    if (!initialDisplaySpan) {\n      return undefined;\n    }\n    if (options === null || options === void 0 ? void 0 : options.isAutoInstrumented) {\n      initialDisplaySpan.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, _origin.SPAN_ORIGIN_AUTO_UI_TIME_TO_DISPLAY);\n    } else {\n      manualInitialDisplaySpans.set(activeSpan, true);\n      initialDisplaySpan.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, _origin.SPAN_ORIGIN_MANUAL_UI_TIME_TO_DISPLAY);\n    }\n    return initialDisplaySpan;\n  }\n  /**\n   * Starts a new span for the full display.\n   *\n   * Returns current span if already exists in the currently active span.\n   *\n   * @deprecated Use `<TimeToFullDisplay record={boolean}/>` component instead.\n   */\n  function startTimeToFullDisplaySpan(options = {\n    timeoutMs: 30000\n  }) {\n    const activeSpan = (0, _core.getActiveSpan)();\n    if (!activeSpan) {\n      _core.logger.warn(`[TimeToDisplay] No active span found to attach ui.load.full_display to.`);\n      return undefined;\n    }\n    const descendantSpans = (0, _core.getSpanDescendants)(activeSpan);\n    const initialDisplaySpan = descendantSpans.find(span => (0, _core.spanToJSON)(span).op === 'ui.load.initial_display');\n    if (!initialDisplaySpan) {\n      _core.logger.warn(`[TimeToDisplay] No initial display span found to attach ui.load.full_display to.`);\n      return undefined;\n    }\n    const existingSpan = descendantSpans.find(span => (0, _core.spanToJSON)(span).op === 'ui.load.full_display');\n    if (existingSpan) {\n      _core.logger.debug(`[TimeToDisplay] Found existing ui.load.full_display span.`);\n      return existingSpan;\n    }\n    const fullDisplaySpan = (0, _core.startInactiveSpan)(Object.assign({\n      op: 'ui.load.full_display',\n      name: 'Time To Full Display',\n      startTime: (0, _core.spanToJSON)(initialDisplaySpan).start_timestamp\n    }, options));\n    if (!fullDisplaySpan) {\n      return undefined;\n    }\n    const timeout = setTimeout(() => {\n      if ((0, _core.spanToJSON)(fullDisplaySpan).timestamp) {\n        return;\n      }\n      fullDisplaySpan.setStatus({\n        code: _core.SPAN_STATUS_ERROR,\n        message: 'deadline_exceeded'\n      });\n      fullDisplaySpan.end((0, _core.spanToJSON)(initialDisplaySpan).timestamp);\n      (0, _utils.setSpanDurationAsMeasurement)('time_to_full_display', fullDisplaySpan);\n      _core.logger.warn(`[TimeToDisplay] Full display span deadline_exceeded.`);\n    }, options.timeoutMs);\n    (0, _core.fill)(fullDisplaySpan, 'end', originalEnd => endTimestamp => {\n      clearTimeout(timeout);\n      originalEnd.call(fullDisplaySpan, endTimestamp);\n    });\n    if (options === null || options === void 0 ? void 0 : options.isAutoInstrumented) {\n      fullDisplaySpan.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, _origin.SPAN_ORIGIN_AUTO_UI_TIME_TO_DISPLAY);\n    } else {\n      fullDisplaySpan.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, _origin.SPAN_ORIGIN_MANUAL_UI_TIME_TO_DISPLAY);\n    }\n    return fullDisplaySpan;\n  }\n  /**\n   *\n   */\n  function updateInitialDisplaySpan(frameTimestampSeconds, {\n    activeSpan = (0, _core.getActiveSpan)(),\n    span = startTimeToInitialDisplaySpan()\n  } = {}) {\n    if (!span) {\n      _core.logger.warn(`[TimeToDisplay] No span found or created, possibly performance is disabled.`);\n      return;\n    }\n    if (!activeSpan) {\n      _core.logger.warn(`[TimeToDisplay] No active span found to attach ui.load.initial_display to.`);\n      return;\n    }\n    if ((0, _core.spanToJSON)(span).parent_span_id !== (0, _core.spanToJSON)(activeSpan).span_id) {\n      _core.logger.warn(`[TimeToDisplay] Initial display span is not a child of current active span.`);\n      return;\n    }\n    if ((0, _core.spanToJSON)(span).timestamp) {\n      _core.logger.warn(`[TimeToDisplay] ${(0, _core.spanToJSON)(span).description} span already ended.`);\n      return;\n    }\n    span.end(frameTimestampSeconds);\n    span.setStatus({\n      code: _core.SPAN_STATUS_OK\n    });\n    _core.logger.debug(`[TimeToDisplay] ${(0, _core.spanToJSON)(span).description} span updated with end timestamp.`);\n    if (fullDisplayBeforeInitialDisplay.has(activeSpan)) {\n      fullDisplayBeforeInitialDisplay.delete(activeSpan);\n      _core.logger.debug(`[TimeToDisplay] Updating full display with initial display (${span.spanContext().spanId}) end.`);\n      updateFullDisplaySpan(frameTimestampSeconds, span);\n    }\n    (0, _utils.setSpanDurationAsMeasurementOnSpan)('time_to_initial_display', span, activeSpan);\n  }\n  function updateFullDisplaySpan(frameTimestampSeconds, passedInitialDisplaySpan) {\n    const activeSpan = (0, _core.getActiveSpan)();\n    if (!activeSpan) {\n      _core.logger.warn(`[TimeToDisplay] No active span found to update ui.load.full_display in.`);\n      return;\n    }\n    const existingInitialDisplaySpan = passedInitialDisplaySpan || (0, _core.getSpanDescendants)(activeSpan).find(span => (0, _core.spanToJSON)(span).op === 'ui.load.initial_display');\n    const initialDisplayEndTimestamp = existingInitialDisplaySpan && (0, _core.spanToJSON)(existingInitialDisplaySpan).timestamp;\n    if (!initialDisplayEndTimestamp) {\n      fullDisplayBeforeInitialDisplay.set(activeSpan, true);\n      _core.logger.warn(`[TimeToDisplay] Full display called before initial display for active span (${activeSpan.spanContext().spanId}).`);\n      return;\n    }\n    const span = startTimeToFullDisplaySpan({\n      isAutoInstrumented: true\n    });\n    if (!span) {\n      _core.logger.warn(`[TimeToDisplay] No TimeToFullDisplay span found or created, possibly performance is disabled.`);\n      return;\n    }\n    const spanJSON = (0, _core.spanToJSON)(span);\n    if (spanJSON.timestamp) {\n      _core.logger.warn(`[TimeToDisplay] ${spanJSON.description} (${spanJSON.span_id}) span already ended.`);\n      return;\n    }\n    if (initialDisplayEndTimestamp > frameTimestampSeconds) {\n      _core.logger.warn(`[TimeToDisplay] Using initial display end. Full display end frame timestamp is before initial display end.`);\n      span.end(initialDisplayEndTimestamp);\n    } else {\n      span.end(frameTimestampSeconds);\n    }\n    span.setStatus({\n      code: _core.SPAN_STATUS_OK\n    });\n    _core.logger.debug(`[TimeToDisplay] ${spanJSON.description} (${spanJSON.span_id}) span updated with end timestamp.`);\n    (0, _utils.setSpanDurationAsMeasurement)('time_to_full_display', span);\n  }\n  /**\n   * Creates a new TimeToFullDisplay component which triggers the full display recording every time the component is focused.\n   */\n  function createTimeToFullDisplay({\n    useFocusEffect\n  }) {\n    return createTimeToDisplay({\n      useFocusEffect,\n      Component: TimeToFullDisplay\n    });\n  }\n  /**\n   * Creates a new TimeToInitialDisplay component which triggers the initial display recording every time the component is focused.\n   */\n  function createTimeToInitialDisplay({\n    useFocusEffect\n  }) {\n    return createTimeToDisplay({\n      useFocusEffect,\n      Component: TimeToInitialDisplay\n    });\n  }\n  function createTimeToDisplay({\n    useFocusEffect,\n    Component\n  }) {\n    const TimeToDisplayWrapper = props => {\n      const [focused, setFocused] = (0, _react.useState)(false);\n      useFocusEffect(() => {\n        setFocused(true);\n        return () => {\n          setFocused(false);\n        };\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        record: focused && props.record\n      }));\n    };\n    TimeToDisplayWrapper.displayName = `TimeToDisplayWrapper`;\n    return TimeToDisplayWrapper;\n  }\n});","lineCount":283,"map":[[13,2,1,0],[13,6,1,0,"_core"],[13,11,1,0],[13,14,1,0,"require"],[13,21,1,0],[13,22,1,0,"_dependencyMap"],[13,36,1,0],[14,2,2,0],[14,6,2,0,"_react"],[14,12,2,0],[14,15,2,0,"_interopRequireWildcard"],[14,38,2,0],[14,39,2,0,"require"],[14,46,2,0],[14,47,2,0,"_dependencyMap"],[14,61,2,0],[15,2,2,31],[15,6,2,31,"React"],[15,11,2,31],[15,14,2,31,"_react"],[15,20,2,31],[16,2,4,0],[16,6,4,0,"_environment"],[16,18,4,0],[16,21,4,0,"require"],[16,28,4,0],[16,29,4,0,"_dependencyMap"],[16,43,4,0],[17,2,5,0],[17,6,5,0,"_origin"],[17,13,5,0],[17,16,5,0,"require"],[17,23,5,0],[17,24,5,0,"_dependencyMap"],[17,38,5,0],[18,2,6,0],[18,6,6,0,"_timetodisplaynative"],[18,26,6,0],[18,29,6,0,"require"],[18,36,6,0],[18,37,6,0,"_dependencyMap"],[18,51,6,0],[19,2,7,0],[19,6,7,0,"_utils"],[19,12,7,0],[19,15,7,0,"require"],[19,22,7,0],[19,23,7,0,"_dependencyMap"],[19,37,7,0],[20,2,7,91],[20,11,7,91,"_interopRequireWildcard"],[20,35,7,91,"e"],[20,36,7,91],[20,38,7,91,"t"],[20,39,7,91],[20,68,7,91,"WeakMap"],[20,75,7,91],[20,81,7,91,"r"],[20,82,7,91],[20,89,7,91,"WeakMap"],[20,96,7,91],[20,100,7,91,"n"],[20,101,7,91],[20,108,7,91,"WeakMap"],[20,115,7,91],[20,127,7,91,"_interopRequireWildcard"],[20,150,7,91],[20,162,7,91,"_interopRequireWildcard"],[20,163,7,91,"e"],[20,164,7,91],[20,166,7,91,"t"],[20,167,7,91],[20,176,7,91,"t"],[20,177,7,91],[20,181,7,91,"e"],[20,182,7,91],[20,186,7,91,"e"],[20,187,7,91],[20,188,7,91,"__esModule"],[20,198,7,91],[20,207,7,91,"e"],[20,208,7,91],[20,214,7,91,"o"],[20,215,7,91],[20,217,7,91,"i"],[20,218,7,91],[20,220,7,91,"f"],[20,221,7,91],[20,226,7,91,"__proto__"],[20,235,7,91],[20,243,7,91,"default"],[20,250,7,91],[20,252,7,91,"e"],[20,253,7,91],[20,270,7,91,"e"],[20,271,7,91],[20,294,7,91,"e"],[20,295,7,91],[20,320,7,91,"e"],[20,321,7,91],[20,330,7,91,"f"],[20,331,7,91],[20,337,7,91,"o"],[20,338,7,91],[20,341,7,91,"t"],[20,342,7,91],[20,345,7,91,"n"],[20,346,7,91],[20,349,7,91,"r"],[20,350,7,91],[20,358,7,91,"o"],[20,359,7,91],[20,360,7,91,"has"],[20,363,7,91],[20,364,7,91,"e"],[20,365,7,91],[20,375,7,91,"o"],[20,376,7,91],[20,377,7,91,"get"],[20,380,7,91],[20,381,7,91,"e"],[20,382,7,91],[20,385,7,91,"o"],[20,386,7,91],[20,387,7,91,"set"],[20,390,7,91],[20,391,7,91,"e"],[20,392,7,91],[20,394,7,91,"f"],[20,395,7,91],[20,411,7,91,"t"],[20,412,7,91],[20,416,7,91,"e"],[20,417,7,91],[20,433,7,91,"t"],[20,434,7,91],[20,441,7,91,"hasOwnProperty"],[20,455,7,91],[20,456,7,91,"call"],[20,460,7,91],[20,461,7,91,"e"],[20,462,7,91],[20,464,7,91,"t"],[20,465,7,91],[20,472,7,91,"i"],[20,473,7,91],[20,477,7,91,"o"],[20,478,7,91],[20,481,7,91,"Object"],[20,487,7,91],[20,488,7,91,"defineProperty"],[20,502,7,91],[20,507,7,91,"Object"],[20,513,7,91],[20,514,7,91,"getOwnPropertyDescriptor"],[20,538,7,91],[20,539,7,91,"e"],[20,540,7,91],[20,542,7,91,"t"],[20,543,7,91],[20,550,7,91,"i"],[20,551,7,91],[20,552,7,91,"get"],[20,555,7,91],[20,559,7,91,"i"],[20,560,7,91],[20,561,7,91,"set"],[20,564,7,91],[20,568,7,91,"o"],[20,569,7,91],[20,570,7,91,"f"],[20,571,7,91],[20,573,7,91,"t"],[20,574,7,91],[20,576,7,91,"i"],[20,577,7,91],[20,581,7,91,"f"],[20,582,7,91],[20,583,7,91,"t"],[20,584,7,91],[20,588,7,91,"e"],[20,589,7,91],[20,590,7,91,"t"],[20,591,7,91],[20,602,7,91,"f"],[20,603,7,91],[20,608,7,91,"e"],[20,609,7,91],[20,611,7,91,"t"],[20,612,7,91],[21,2,8,0],[21,6,8,4,"nativeComponentMissingLogged"],[21,34,8,32],[21,37,8,35],[21,42,8,40],[22,2,9,0],[23,0,10,0],[24,0,11,0],[25,2,12,7],[25,8,12,13,"manualInitialDisplaySpans"],[25,33,12,38],[25,36,12,38,"exports"],[25,43,12,38],[25,44,12,38,"manualInitialDisplaySpans"],[25,69,12,38],[25,72,12,41],[25,76,12,45,"WeakMap"],[25,83,12,52],[25,84,12,53],[25,85,12,54],[26,2,13,0],[27,0,14,0],[28,0,15,0],[29,2,16,0],[29,8,16,6,"fullDisplayBeforeInitialDisplay"],[29,39,16,37],[29,42,16,40],[29,46,16,44,"WeakMap"],[29,53,16,51],[29,54,16,52],[29,55,16,53],[30,2,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,0,22,0],[36,0,23,0],[37,2,24,7],[37,11,24,16,"TimeToInitialDisplay"],[37,31,24,36,"TimeToInitialDisplay"],[37,32,24,37,"props"],[37,37,24,42],[37,39,24,44],[38,4,25,4],[38,10,25,10,"activeSpan"],[38,20,25,20],[38,23,25,23],[38,27,25,23,"getActiveSpan"],[38,46,25,36],[38,48,25,37],[38,49,25,38],[39,4,26,4],[39,8,26,8,"activeSpan"],[39,18,26,18],[39,20,26,20],[40,6,27,8,"manualInitialDisplaySpans"],[40,31,27,33],[40,32,27,34,"set"],[40,35,27,37],[40,36,27,38,"activeSpan"],[40,46,27,48],[40,48,27,50],[40,52,27,54],[40,53,27,55],[41,4,28,4],[42,4,29,4],[42,10,29,10,"parentSpanId"],[42,22,29,22],[42,25,29,25,"activeSpan"],[42,35,29,35],[42,39,29,39],[42,43,29,39,"spanToJSON"],[42,59,29,49],[42,61,29,50,"activeSpan"],[42,71,29,60],[42,72,29,61],[42,73,29,62,"span_id"],[42,80,29,69],[43,4,30,4],[43,24,30,11,"React"],[43,29,30,16],[43,30,30,17,"createElement"],[43,43,30,30],[43,44,30,31,"TimeToDisplay"],[43,57,30,44],[43,59,30,46],[44,6,30,48,"initialDisplay"],[44,20,30,62],[44,22,30,64,"props"],[44,27,30,69],[44,28,30,70,"record"],[44,34,30,76],[45,6,30,78,"parentSpanId"],[45,18,30,90],[45,20,30,92,"parentSpanId"],[46,4,30,105],[46,5,30,106],[46,7,30,108,"props"],[46,12,30,113],[46,13,30,114,"children"],[46,21,30,122],[46,22,30,123],[47,2,31,0],[48,2,32,0],[49,0,33,0],[50,0,34,0],[51,0,35,0],[52,0,36,0],[53,0,37,0],[54,0,38,0],[55,2,39,7],[55,11,39,16,"TimeToFullDisplay"],[55,28,39,33,"TimeToFullDisplay"],[55,29,39,34,"props"],[55,34,39,39],[55,36,39,41],[56,4,40,4],[56,10,40,10,"activeSpan"],[56,20,40,20],[56,23,40,23],[56,27,40,23,"getActiveSpan"],[56,46,40,36],[56,48,40,37],[56,49,40,38],[57,4,41,4],[57,10,41,10,"parentSpanId"],[57,22,41,22],[57,25,41,25,"activeSpan"],[57,35,41,35],[57,39,41,39],[57,43,41,39,"spanToJSON"],[57,59,41,49],[57,61,41,50,"activeSpan"],[57,71,41,60],[57,72,41,61],[57,73,41,62,"span_id"],[57,80,41,69],[58,4,42,4],[58,24,42,11,"React"],[58,29,42,16],[58,30,42,17,"createElement"],[58,43,42,30],[58,44,42,31,"TimeToDisplay"],[58,57,42,44],[58,59,42,46],[59,6,42,48,"fullDisplay"],[59,17,42,59],[59,19,42,61,"props"],[59,24,42,66],[59,25,42,67,"record"],[59,31,42,73],[60,6,42,75,"parentSpanId"],[60,18,42,87],[60,20,42,89,"parentSpanId"],[61,4,42,102],[61,5,42,103],[61,7,42,105,"props"],[61,12,42,110],[61,13,42,111,"children"],[61,21,42,119],[61,22,42,120],[62,2,43,0],[63,2,44,0],[63,11,44,9,"TimeToDisplay"],[63,24,44,22,"TimeToDisplay"],[63,25,44,23,"props"],[63,30,44,28],[63,32,44,30],[64,4,45,4],[64,10,45,10,"RNSentryOnDrawReporter"],[64,32,45,32],[64,35,45,35],[64,39,45,35,"getRNSentryOnDrawReporter"],[64,85,45,60],[64,87,45,61],[64,88,45,62],[65,4,46,4],[65,10,46,10,"isNewArchitecture"],[65,27,46,27],[65,30,46,30],[65,34,46,30,"isTurboModuleEnabled"],[65,67,46,50],[65,69,46,51],[65,70,46,52],[66,4,47,4],[66,8,47,8,"__DEV__"],[66,15,47,15],[66,20,47,20,"isNewArchitecture"],[66,37,47,37],[66,41,47,42],[66,42,47,43,"nativeComponentExists"],[66,84,47,64],[66,88,47,68],[66,89,47,69,"nativeComponentMissingLogged"],[66,117,47,98],[66,118,47,99],[66,120,47,101],[67,6,48,8,"nativeComponentMissingLogged"],[67,34,48,36],[67,37,48,39],[67,41,48,43],[68,6,49,8],[69,6,50,8,"setTimeout"],[69,16,50,18],[69,17,50,19],[69,23,50,25],[70,8,51,12,"logger"],[70,20,51,18],[70,21,51,19,"warn"],[70,25,51,23],[70,26,51,24],[70,218,51,216],[70,219,51,217],[71,6,52,8],[71,7,52,9],[71,9,52,11],[71,10,52,12],[71,11,52,13],[72,4,53,4],[73,4,54,4],[73,24,54,12,"React"],[73,29,54,17],[73,30,54,18,"createElement"],[73,43,54,31],[73,44,54,32,"React"],[73,49,54,37],[73,50,54,38,"Fragment"],[73,58,54,46],[73,60,54,48],[73,64,54,52],[73,79,55,8,"React"],[73,84,55,13],[73,85,55,14,"createElement"],[73,98,55,27],[73,99,55,28,"RNSentryOnDrawReporter"],[73,121,55,50],[73,123,55,52],[74,6,55,54,"initialDisplay"],[74,20,55,68],[74,22,55,70,"props"],[74,27,55,75],[74,28,55,76,"initialDisplay"],[74,42,55,90],[75,6,55,92,"fullDisplay"],[75,17,55,103],[75,19,55,105,"props"],[75,24,55,110],[75,25,55,111,"fullDisplay"],[75,36,55,122],[76,6,55,124,"parentSpanId"],[76,18,55,136],[76,20,55,138,"props"],[76,25,55,143],[76,26,55,144,"parentSpanId"],[77,4,55,157],[77,5,55,158],[77,6,55,159],[77,8,56,8,"props"],[77,13,56,13],[77,14,56,14,"children"],[77,22,56,22],[77,23,56,23],[78,2,57,0],[79,2,58,0],[80,0,59,0],[81,0,60,0],[82,0,61,0],[83,0,62,0],[84,0,63,0],[85,0,64,0],[86,2,65,7],[86,11,65,16,"startTimeToInitialDisplaySpan"],[86,40,65,45,"startTimeToInitialDisplaySpan"],[86,41,65,46,"options"],[86,48,65,53],[86,50,65,55],[87,4,66,4],[87,10,66,10,"activeSpan"],[87,20,66,20],[87,23,66,23],[87,27,66,23,"getActiveSpan"],[87,46,66,36],[87,48,66,37],[87,49,66,38],[88,4,67,4],[88,8,67,8],[88,9,67,9,"activeSpan"],[88,19,67,19],[88,21,67,21],[89,6,68,8,"logger"],[89,18,68,14],[89,19,68,15,"warn"],[89,23,68,19],[89,24,68,20],[89,100,68,96],[89,101,68,97],[90,6,69,8],[90,13,69,15,"undefined"],[90,22,69,24],[91,4,70,4],[92,4,71,4],[92,10,71,10,"existingSpan"],[92,22,71,22],[92,25,71,25],[92,29,71,25,"getSpanDescendants"],[92,53,71,43],[92,55,71,44,"activeSpan"],[92,65,71,54],[92,66,71,55],[92,67,71,56,"find"],[92,71,71,60],[92,72,71,62,"span"],[92,76,71,66],[92,80,71,71],[92,84,71,71,"spanToJSON"],[92,100,71,81],[92,102,71,82,"span"],[92,106,71,86],[92,107,71,87],[92,108,71,88,"op"],[92,110,71,90],[92,115,71,95],[92,140,71,120],[92,141,71,121],[93,4,72,4],[93,8,72,8,"existingSpan"],[93,20,72,20],[93,22,72,22],[94,6,73,8,"logger"],[94,18,73,14],[94,19,73,15,"debug"],[94,24,73,20],[94,25,73,21],[94,87,73,83],[94,88,73,84],[95,6,74,8],[95,13,74,15,"existingSpan"],[95,25,74,27],[96,4,75,4],[97,4,76,4],[97,10,76,10,"initialDisplaySpan"],[97,28,76,28],[97,31,76,31],[97,35,76,31,"startInactiveSpan"],[97,58,76,48],[97,60,76,49,"Object"],[97,66,76,55],[97,67,76,56,"assign"],[97,73,76,62],[97,74,76,63],[98,6,76,65,"op"],[98,8,76,67],[98,10,76,69],[98,35,76,94],[99,6,76,96,"name"],[99,10,76,100],[99,12,76,102],[99,37,76,127],[100,6,76,129,"startTime"],[100,15,76,138],[100,17,76,140],[100,21,76,140,"spanToJSON"],[100,37,76,150],[100,39,76,151,"activeSpan"],[100,49,76,161],[100,50,76,162],[100,51,76,163,"start_timestamp"],[101,4,76,179],[101,5,76,180],[101,7,76,182,"options"],[101,14,76,189],[101,15,76,190],[101,16,76,191],[102,4,77,4],[102,8,77,8],[102,9,77,9,"initialDisplaySpan"],[102,27,77,27],[102,29,77,29],[103,6,78,8],[103,13,78,15,"undefined"],[103,22,78,24],[104,4,79,4],[105,4,80,4],[105,8,80,8,"options"],[105,15,80,15],[105,20,80,20],[105,24,80,24],[105,28,80,28,"options"],[105,35,80,35],[105,40,80,40],[105,45,80,45],[105,46,80,46],[105,49,80,49],[105,54,80,54],[105,55,80,55],[105,58,80,58,"options"],[105,65,80,65],[105,66,80,66,"isAutoInstrumented"],[105,84,80,84],[105,86,80,86],[106,6,81,8,"initialDisplaySpan"],[106,24,81,26],[106,25,81,27,"setAttribute"],[106,37,81,39],[106,38,81,40,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[106,76,81,72],[106,78,81,74,"SPAN_ORIGIN_AUTO_UI_TIME_TO_DISPLAY"],[106,121,81,109],[106,122,81,110],[107,4,82,4],[107,5,82,5],[107,11,83,9],[108,6,84,8,"manualInitialDisplaySpans"],[108,31,84,33],[108,32,84,34,"set"],[108,35,84,37],[108,36,84,38,"activeSpan"],[108,46,84,48],[108,48,84,50],[108,52,84,54],[108,53,84,55],[109,6,85,8,"initialDisplaySpan"],[109,24,85,26],[109,25,85,27,"setAttribute"],[109,37,85,39],[109,38,85,40,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[109,76,85,72],[109,78,85,74,"SPAN_ORIGIN_MANUAL_UI_TIME_TO_DISPLAY"],[109,123,85,111],[109,124,85,112],[110,4,86,4],[111,4,87,4],[111,11,87,11,"initialDisplaySpan"],[111,29,87,29],[112,2,88,0],[113,2,89,0],[114,0,90,0],[115,0,91,0],[116,0,92,0],[117,0,93,0],[118,0,94,0],[119,0,95,0],[120,2,96,7],[120,11,96,16,"startTimeToFullDisplaySpan"],[120,37,96,42,"startTimeToFullDisplaySpan"],[120,38,96,43,"options"],[120,45,96,50],[120,48,96,53],[121,4,97,4,"timeoutMs"],[121,13,97,13],[121,15,97,15],[122,2,98,0],[122,3,98,1],[122,5,98,3],[123,4,99,4],[123,10,99,10,"activeSpan"],[123,20,99,20],[123,23,99,23],[123,27,99,23,"getActiveSpan"],[123,46,99,36],[123,48,99,37],[123,49,99,38],[124,4,100,4],[124,8,100,8],[124,9,100,9,"activeSpan"],[124,19,100,19],[124,21,100,21],[125,6,101,8,"logger"],[125,18,101,14],[125,19,101,15,"warn"],[125,23,101,19],[125,24,101,20],[125,97,101,93],[125,98,101,94],[126,6,102,8],[126,13,102,15,"undefined"],[126,22,102,24],[127,4,103,4],[128,4,104,4],[128,10,104,10,"descendantSpans"],[128,25,104,25],[128,28,104,28],[128,32,104,28,"getSpanDescendants"],[128,56,104,46],[128,58,104,47,"activeSpan"],[128,68,104,57],[128,69,104,58],[129,4,105,4],[129,10,105,10,"initialDisplaySpan"],[129,28,105,28],[129,31,105,31,"descendantSpans"],[129,46,105,46],[129,47,105,47,"find"],[129,51,105,51],[129,52,105,53,"span"],[129,56,105,57],[129,60,105,62],[129,64,105,62,"spanToJSON"],[129,80,105,72],[129,82,105,73,"span"],[129,86,105,77],[129,87,105,78],[129,88,105,79,"op"],[129,90,105,81],[129,95,105,86],[129,120,105,111],[129,121,105,112],[130,4,106,4],[130,8,106,8],[130,9,106,9,"initialDisplaySpan"],[130,27,106,27],[130,29,106,29],[131,6,107,8,"logger"],[131,18,107,14],[131,19,107,15,"warn"],[131,23,107,19],[131,24,107,20],[131,106,107,102],[131,107,107,103],[132,6,108,8],[132,13,108,15,"undefined"],[132,22,108,24],[133,4,109,4],[134,4,110,4],[134,10,110,10,"existingSpan"],[134,22,110,22],[134,25,110,25,"descendantSpans"],[134,40,110,40],[134,41,110,41,"find"],[134,45,110,45],[134,46,110,47,"span"],[134,50,110,51],[134,54,110,56],[134,58,110,56,"spanToJSON"],[134,74,110,66],[134,76,110,67,"span"],[134,80,110,71],[134,81,110,72],[134,82,110,73,"op"],[134,84,110,75],[134,89,110,80],[134,111,110,102],[134,112,110,103],[135,4,111,4],[135,8,111,8,"existingSpan"],[135,20,111,20],[135,22,111,22],[136,6,112,8,"logger"],[136,18,112,14],[136,19,112,15,"debug"],[136,24,112,20],[136,25,112,21],[136,84,112,80],[136,85,112,81],[137,6,113,8],[137,13,113,15,"existingSpan"],[137,25,113,27],[138,4,114,4],[139,4,115,4],[139,10,115,10,"fullDisplaySpan"],[139,25,115,25],[139,28,115,28],[139,32,115,28,"startInactiveSpan"],[139,55,115,45],[139,57,115,46,"Object"],[139,63,115,52],[139,64,115,53,"assign"],[139,70,115,59],[139,71,115,60],[140,6,115,62,"op"],[140,8,115,64],[140,10,115,66],[140,32,115,88],[141,6,115,90,"name"],[141,10,115,94],[141,12,115,96],[141,34,115,118],[142,6,115,120,"startTime"],[142,15,115,129],[142,17,115,131],[142,21,115,131,"spanToJSON"],[142,37,115,141],[142,39,115,142,"initialDisplaySpan"],[142,57,115,160],[142,58,115,161],[142,59,115,162,"start_timestamp"],[143,4,115,178],[143,5,115,179],[143,7,115,181,"options"],[143,14,115,188],[143,15,115,189],[143,16,115,190],[144,4,116,4],[144,8,116,8],[144,9,116,9,"fullDisplaySpan"],[144,24,116,24],[144,26,116,26],[145,6,117,8],[145,13,117,15,"undefined"],[145,22,117,24],[146,4,118,4],[147,4,119,4],[147,10,119,10,"timeout"],[147,17,119,17],[147,20,119,20,"setTimeout"],[147,30,119,30],[147,31,119,31],[147,37,119,37],[148,6,120,8],[148,10,120,12],[148,14,120,12,"spanToJSON"],[148,30,120,22],[148,32,120,23,"fullDisplaySpan"],[148,47,120,38],[148,48,120,39],[148,49,120,40,"timestamp"],[148,58,120,49],[148,60,120,51],[149,8,121,12],[150,6,122,8],[151,6,123,8,"fullDisplaySpan"],[151,21,123,23],[151,22,123,24,"setStatus"],[151,31,123,33],[151,32,123,34],[152,8,123,36,"code"],[152,12,123,40],[152,14,123,42,"SPAN_STATUS_ERROR"],[152,37,123,59],[153,8,123,61,"message"],[153,15,123,68],[153,17,123,70],[154,6,123,90],[154,7,123,91],[154,8,123,92],[155,6,124,8,"fullDisplaySpan"],[155,21,124,23],[155,22,124,24,"end"],[155,25,124,27],[155,26,124,28],[155,30,124,28,"spanToJSON"],[155,46,124,38],[155,48,124,39,"initialDisplaySpan"],[155,66,124,57],[155,67,124,58],[155,68,124,59,"timestamp"],[155,77,124,68],[155,78,124,69],[156,6,125,8],[156,10,125,8,"setSpanDurationAsMeasurement"],[156,45,125,36],[156,47,125,37],[156,69,125,59],[156,71,125,61,"fullDisplaySpan"],[156,86,125,76],[156,87,125,77],[157,6,126,8,"logger"],[157,18,126,14],[157,19,126,15,"warn"],[157,23,126,19],[157,24,126,20],[157,78,126,74],[157,79,126,75],[158,4,127,4],[158,5,127,5],[158,7,127,7,"options"],[158,14,127,14],[158,15,127,15,"timeoutMs"],[158,24,127,24],[158,25,127,25],[159,4,128,4],[159,8,128,4,"fill"],[159,18,128,8],[159,20,128,9,"fullDisplaySpan"],[159,35,128,24],[159,37,128,26],[159,42,128,31],[159,44,128,34,"originalEnd"],[159,55,128,45],[159,59,128,51,"endTimestamp"],[159,71,128,63],[159,75,128,68],[160,6,129,8,"clearTimeout"],[160,18,129,20],[160,19,129,21,"timeout"],[160,26,129,28],[160,27,129,29],[161,6,130,8,"originalEnd"],[161,17,130,19],[161,18,130,20,"call"],[161,22,130,24],[161,23,130,25,"fullDisplaySpan"],[161,38,130,40],[161,40,130,42,"endTimestamp"],[161,52,130,54],[161,53,130,55],[162,4,131,4],[162,5,131,5],[162,6,131,6],[163,4,132,4],[163,8,132,8,"options"],[163,15,132,15],[163,20,132,20],[163,24,132,24],[163,28,132,28,"options"],[163,35,132,35],[163,40,132,40],[163,45,132,45],[163,46,132,46],[163,49,132,49],[163,54,132,54],[163,55,132,55],[163,58,132,58,"options"],[163,65,132,65],[163,66,132,66,"isAutoInstrumented"],[163,84,132,84],[163,86,132,86],[164,6,133,8,"fullDisplaySpan"],[164,21,133,23],[164,22,133,24,"setAttribute"],[164,34,133,36],[164,35,133,37,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[164,73,133,69],[164,75,133,71,"SPAN_ORIGIN_AUTO_UI_TIME_TO_DISPLAY"],[164,118,133,106],[164,119,133,107],[165,4,134,4],[165,5,134,5],[165,11,135,9],[166,6,136,8,"fullDisplaySpan"],[166,21,136,23],[166,22,136,24,"setAttribute"],[166,34,136,36],[166,35,136,37,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[166,73,136,69],[166,75,136,71,"SPAN_ORIGIN_MANUAL_UI_TIME_TO_DISPLAY"],[166,120,136,108],[166,121,136,109],[167,4,137,4],[168,4,138,4],[168,11,138,11,"fullDisplaySpan"],[168,26,138,26],[169,2,139,0],[170,2,140,0],[171,0,141,0],[172,0,142,0],[173,2,143,7],[173,11,143,16,"updateInitialDisplaySpan"],[173,35,143,40,"updateInitialDisplaySpan"],[173,36,143,41,"frameTimestampSeconds"],[173,57,143,62],[173,59,143,64],[174,4,143,66,"activeSpan"],[174,14,143,76],[174,17,143,79],[174,21,143,79,"getActiveSpan"],[174,40,143,92],[174,42,143,93],[174,43,143,94],[175,4,143,96,"span"],[175,8,143,100],[175,11,143,103,"startTimeToInitialDisplaySpan"],[175,40,143,132],[175,41,143,133],[176,2,143,136],[176,3,143,137],[176,6,143,140],[176,7,143,141],[176,8,143,142],[176,10,143,144],[177,4,144,4],[177,8,144,8],[177,9,144,9,"span"],[177,13,144,13],[177,15,144,15],[178,6,145,8,"logger"],[178,18,145,14],[178,19,145,15,"warn"],[178,23,145,19],[178,24,145,20],[178,101,145,97],[178,102,145,98],[179,6,146,8],[180,4,147,4],[181,4,148,4],[181,8,148,8],[181,9,148,9,"activeSpan"],[181,19,148,19],[181,21,148,21],[182,6,149,8,"logger"],[182,18,149,14],[182,19,149,15,"warn"],[182,23,149,19],[182,24,149,20],[182,100,149,96],[182,101,149,97],[183,6,150,8],[184,4,151,4],[185,4,152,4],[185,8,152,8],[185,12,152,8,"spanToJSON"],[185,28,152,18],[185,30,152,19,"span"],[185,34,152,23],[185,35,152,24],[185,36,152,25,"parent_span_id"],[185,50,152,39],[185,55,152,44],[185,59,152,44,"spanToJSON"],[185,75,152,54],[185,77,152,55,"activeSpan"],[185,87,152,65],[185,88,152,66],[185,89,152,67,"span_id"],[185,96,152,74],[185,98,152,76],[186,6,153,8,"logger"],[186,18,153,14],[186,19,153,15,"warn"],[186,23,153,19],[186,24,153,20],[186,101,153,97],[186,102,153,98],[187,6,154,8],[188,4,155,4],[189,4,156,4],[189,8,156,8],[189,12,156,8,"spanToJSON"],[189,28,156,18],[189,30,156,19,"span"],[189,34,156,23],[189,35,156,24],[189,36,156,25,"timestamp"],[189,45,156,34],[189,47,156,36],[190,6,157,8,"logger"],[190,18,157,14],[190,19,157,15,"warn"],[190,23,157,19],[190,24,157,20],[190,43,157,39],[190,47,157,39,"spanToJSON"],[190,63,157,49],[190,65,157,50,"span"],[190,69,157,54],[190,70,157,55],[190,71,157,56,"description"],[190,82,157,67],[190,104,157,89],[190,105,157,90],[191,6,158,8],[192,4,159,4],[193,4,160,4,"span"],[193,8,160,8],[193,9,160,9,"end"],[193,12,160,12],[193,13,160,13,"frameTimestampSeconds"],[193,34,160,34],[193,35,160,35],[194,4,161,4,"span"],[194,8,161,8],[194,9,161,9,"setStatus"],[194,18,161,18],[194,19,161,19],[195,6,161,21,"code"],[195,10,161,25],[195,12,161,27,"SPAN_STATUS_OK"],[196,4,161,42],[196,5,161,43],[196,6,161,44],[197,4,162,4,"logger"],[197,16,162,10],[197,17,162,11,"debug"],[197,22,162,16],[197,23,162,17],[197,42,162,36],[197,46,162,36,"spanToJSON"],[197,62,162,46],[197,64,162,47,"span"],[197,68,162,51],[197,69,162,52],[197,70,162,53,"description"],[197,81,162,64],[197,116,162,99],[197,117,162,100],[198,4,163,4],[198,8,163,8,"fullDisplayBeforeInitialDisplay"],[198,39,163,39],[198,40,163,40,"has"],[198,43,163,43],[198,44,163,44,"activeSpan"],[198,54,163,54],[198,55,163,55],[198,57,163,57],[199,6,164,8,"fullDisplayBeforeInitialDisplay"],[199,37,164,39],[199,38,164,40,"delete"],[199,44,164,46],[199,45,164,47,"activeSpan"],[199,55,164,57],[199,56,164,58],[200,6,165,8,"logger"],[200,18,165,14],[200,19,165,15,"debug"],[200,24,165,20],[200,25,165,21],[200,88,165,84,"span"],[200,92,165,88],[200,93,165,89,"spanContext"],[200,104,165,100],[200,105,165,101],[200,106,165,102],[200,107,165,103,"spanId"],[200,113,165,109],[200,121,165,117],[200,122,165,118],[201,6,166,8,"updateFullDisplaySpan"],[201,27,166,29],[201,28,166,30,"frameTimestampSeconds"],[201,49,166,51],[201,51,166,53,"span"],[201,55,166,57],[201,56,166,58],[202,4,167,4],[203,4,168,4],[203,8,168,4,"setSpanDurationAsMeasurementOnSpan"],[203,49,168,38],[203,51,168,39],[203,76,168,64],[203,78,168,66,"span"],[203,82,168,70],[203,84,168,72,"activeSpan"],[203,94,168,82],[203,95,168,83],[204,2,169,0],[205,2,170,0],[205,11,170,9,"updateFullDisplaySpan"],[205,32,170,30,"updateFullDisplaySpan"],[205,33,170,31,"frameTimestampSeconds"],[205,54,170,52],[205,56,170,54,"passedInitialDisplaySpan"],[205,80,170,78],[205,82,170,80],[206,4,171,4],[206,10,171,10,"activeSpan"],[206,20,171,20],[206,23,171,23],[206,27,171,23,"getActiveSpan"],[206,46,171,36],[206,48,171,37],[206,49,171,38],[207,4,172,4],[207,8,172,8],[207,9,172,9,"activeSpan"],[207,19,172,19],[207,21,172,21],[208,6,173,8,"logger"],[208,18,173,14],[208,19,173,15,"warn"],[208,23,173,19],[208,24,173,20],[208,97,173,93],[208,98,173,94],[209,6,174,8],[210,4,175,4],[211,4,176,4],[211,10,176,10,"existingInitialDisplaySpan"],[211,36,176,36],[211,39,176,39,"passedInitialDisplaySpan"],[211,63,176,63],[211,67,177,11],[211,71,177,11,"getSpanDescendants"],[211,95,177,29],[211,97,177,30,"activeSpan"],[211,107,177,40],[211,108,177,41],[211,109,177,42,"find"],[211,113,177,46],[211,114,177,48,"span"],[211,118,177,52],[211,122,177,57],[211,126,177,57,"spanToJSON"],[211,142,177,67],[211,144,177,68,"span"],[211,148,177,72],[211,149,177,73],[211,150,177,74,"op"],[211,152,177,76],[211,157,177,81],[211,182,177,106],[211,183,177,107],[212,4,178,4],[212,10,178,10,"initialDisplayEndTimestamp"],[212,36,178,36],[212,39,178,39,"existingInitialDisplaySpan"],[212,65,178,65],[212,69,178,69],[212,73,178,69,"spanToJSON"],[212,89,178,79],[212,91,178,80,"existingInitialDisplaySpan"],[212,117,178,106],[212,118,178,107],[212,119,178,108,"timestamp"],[212,128,178,117],[213,4,179,4],[213,8,179,8],[213,9,179,9,"initialDisplayEndTimestamp"],[213,35,179,35],[213,37,179,37],[214,6,180,8,"fullDisplayBeforeInitialDisplay"],[214,37,180,39],[214,38,180,40,"set"],[214,41,180,43],[214,42,180,44,"activeSpan"],[214,52,180,54],[214,54,180,56],[214,58,180,60],[214,59,180,61],[215,6,181,8,"logger"],[215,18,181,14],[215,19,181,15,"warn"],[215,23,181,19],[215,24,181,20],[215,103,181,99,"activeSpan"],[215,113,181,109],[215,114,181,110,"spanContext"],[215,125,181,121],[215,126,181,122],[215,127,181,123],[215,128,181,124,"spanId"],[215,134,181,130],[215,138,181,134],[215,139,181,135],[216,6,182,8],[217,4,183,4],[218,4,184,4],[218,10,184,10,"span"],[218,14,184,14],[218,17,184,17,"startTimeToFullDisplaySpan"],[218,43,184,43],[218,44,184,44],[219,6,185,8,"isAutoInstrumented"],[219,24,185,26],[219,26,185,28],[220,4,186,4],[220,5,186,5],[220,6,186,6],[221,4,187,4],[221,8,187,8],[221,9,187,9,"span"],[221,13,187,13],[221,15,187,15],[222,6,188,8,"logger"],[222,18,188,14],[222,19,188,15,"warn"],[222,23,188,19],[222,24,188,20],[222,119,188,115],[222,120,188,116],[223,6,189,8],[224,4,190,4],[225,4,191,4],[225,10,191,10,"spanJSON"],[225,18,191,18],[225,21,191,21],[225,25,191,21,"spanToJSON"],[225,41,191,31],[225,43,191,32,"span"],[225,47,191,36],[225,48,191,37],[226,4,192,4],[226,8,192,8,"spanJSON"],[226,16,192,16],[226,17,192,17,"timestamp"],[226,26,192,26],[226,28,192,28],[227,6,193,8,"logger"],[227,18,193,14],[227,19,193,15,"warn"],[227,23,193,19],[227,24,193,20],[227,43,193,39,"spanJSON"],[227,51,193,47],[227,52,193,48,"description"],[227,63,193,59],[227,68,193,64,"spanJSON"],[227,76,193,72],[227,77,193,73,"span_id"],[227,84,193,80],[227,107,193,103],[227,108,193,104],[228,6,194,8],[229,4,195,4],[230,4,196,4],[230,8,196,8,"initialDisplayEndTimestamp"],[230,34,196,34],[230,37,196,37,"frameTimestampSeconds"],[230,58,196,58],[230,60,196,60],[231,6,197,8,"logger"],[231,18,197,14],[231,19,197,15,"warn"],[231,23,197,19],[231,24,197,20],[231,132,197,128],[231,133,197,129],[232,6,198,8,"span"],[232,10,198,12],[232,11,198,13,"end"],[232,14,198,16],[232,15,198,17,"initialDisplayEndTimestamp"],[232,41,198,43],[232,42,198,44],[233,4,199,4],[233,5,199,5],[233,11,200,9],[234,6,201,8,"span"],[234,10,201,12],[234,11,201,13,"end"],[234,14,201,16],[234,15,201,17,"frameTimestampSeconds"],[234,36,201,38],[234,37,201,39],[235,4,202,4],[236,4,203,4,"span"],[236,8,203,8],[236,9,203,9,"setStatus"],[236,18,203,18],[236,19,203,19],[237,6,203,21,"code"],[237,10,203,25],[237,12,203,27,"SPAN_STATUS_OK"],[238,4,203,42],[238,5,203,43],[238,6,203,44],[239,4,204,4,"logger"],[239,16,204,10],[239,17,204,11,"debug"],[239,22,204,16],[239,23,204,17],[239,42,204,36,"spanJSON"],[239,50,204,44],[239,51,204,45,"description"],[239,62,204,56],[239,67,204,61,"spanJSON"],[239,75,204,69],[239,76,204,70,"span_id"],[239,83,204,77],[239,119,204,113],[239,120,204,114],[240,4,205,4],[240,8,205,4,"setSpanDurationAsMeasurement"],[240,43,205,32],[240,45,205,33],[240,67,205,55],[240,69,205,57,"span"],[240,73,205,61],[240,74,205,62],[241,2,206,0],[242,2,207,0],[243,0,208,0],[244,0,209,0],[245,2,210,7],[245,11,210,16,"createTimeToFullDisplay"],[245,34,210,39,"createTimeToFullDisplay"],[245,35,210,40],[246,4,210,42,"useFocusEffect"],[247,2,210,58],[247,3,210,59],[247,5,210,61],[248,4,211,4],[248,11,211,11,"createTimeToDisplay"],[248,30,211,30],[248,31,211,31],[249,6,211,33,"useFocusEffect"],[249,20,211,47],[250,6,211,49,"Component"],[250,15,211,58],[250,17,211,60,"TimeToFullDisplay"],[251,4,211,78],[251,5,211,79],[251,6,211,80],[252,2,212,0],[253,2,213,0],[254,0,214,0],[255,0,215,0],[256,2,216,7],[256,11,216,16,"createTimeToInitialDisplay"],[256,37,216,42,"createTimeToInitialDisplay"],[256,38,216,43],[257,4,216,45,"useFocusEffect"],[258,2,216,61],[258,3,216,62],[258,5,216,64],[259,4,217,4],[259,11,217,11,"createTimeToDisplay"],[259,30,217,30],[259,31,217,31],[260,6,217,33,"useFocusEffect"],[260,20,217,47],[261,6,217,49,"Component"],[261,15,217,58],[261,17,217,60,"TimeToInitialDisplay"],[262,4,217,81],[262,5,217,82],[262,6,217,83],[263,2,218,0],[264,2,219,0],[264,11,219,9,"createTimeToDisplay"],[264,30,219,28,"createTimeToDisplay"],[264,31,219,29],[265,4,219,31,"useFocusEffect"],[265,18,219,45],[266,4,219,47,"Component"],[267,2,219,58],[267,3,219,59],[267,5,219,61],[268,4,220,4],[268,10,220,10,"TimeToDisplayWrapper"],[268,30,220,30],[268,33,220,34,"props"],[268,38,220,39],[268,42,220,44],[269,6,221,8],[269,12,221,14],[269,13,221,15,"focused"],[269,20,221,22],[269,22,221,24,"setFocused"],[269,32,221,34],[269,33,221,35],[269,36,221,38],[269,40,221,38,"useState"],[269,55,221,46],[269,57,221,47],[269,62,221,52],[269,63,221,53],[270,6,222,8,"useFocusEffect"],[270,20,222,22],[270,21,222,23],[270,27,222,29],[271,8,223,12,"setFocused"],[271,18,223,22],[271,19,223,23],[271,23,223,27],[271,24,223,28],[272,8,224,12],[272,15,224,19],[272,21,224,25],[273,10,225,16,"setFocused"],[273,20,225,26],[273,21,225,27],[273,26,225,32],[273,27,225,33],[274,8,226,12],[274,9,226,13],[275,6,227,8],[275,7,227,9],[275,8,227,10],[276,6,228,8],[276,26,228,15,"React"],[276,31,228,20],[276,32,228,21,"createElement"],[276,45,228,34],[276,46,228,35,"Component"],[276,55,228,44],[276,57,228,46,"Object"],[276,63,228,52],[276,64,228,53,"assign"],[276,70,228,59],[276,71,228,60],[276,72,228,61],[276,73,228,62],[276,75,228,64,"props"],[276,80,228,69],[276,82,228,71],[277,8,228,73,"record"],[277,14,228,79],[277,16,228,81,"focused"],[277,23,228,88],[277,27,228,92,"props"],[277,32,228,97],[277,33,228,98,"record"],[278,6,228,105],[278,7,228,106],[278,8,228,107],[278,9,228,108],[279,4,229,4],[279,5,229,5],[280,4,230,4,"TimeToDisplayWrapper"],[280,24,230,24],[280,25,230,25,"displayName"],[280,36,230,36],[280,39,230,39],[280,61,230,61],[281,4,231,4],[281,11,231,11,"TimeToDisplayWrapper"],[281,31,231,31],[282,2,232,0],[283,0,232,1],[283,3]],"functionMap":{"names":["<global>","TimeToInitialDisplay","TimeToFullDisplay","TimeToDisplay","setTimeout$argument_0","startTimeToInitialDisplaySpan","getSpanDescendants.find$argument_0","startTimeToFullDisplaySpan","descendantSpans.find$argument_0","fill$argument_2","<anonymous>","updateInitialDisplaySpan","updateFullDisplaySpan","createTimeToFullDisplay","createTimeToInitialDisplay","createTimeToDisplay","TimeToDisplayWrapper","useFocusEffect$argument_0"],"mappings":"AAA;OCuB;CDO;OEQ;CFI;AGC;mBCM;SDE;CHK;OKQ;6DCM,2DD;CLiB;OOQ;oDCS,2DD;8CCK,wDD;+BHS;KGQ;iCEC,iBC;KHG;CPQ;OWI;CX0B;AYC;+CNO,2DM;CZ6B;OaI;CbE;OcI;CdE;AeC;iCCC;uBCE;mBPE;aOE;SDC;KDE;CfG"}},"type":"js/module"}]}