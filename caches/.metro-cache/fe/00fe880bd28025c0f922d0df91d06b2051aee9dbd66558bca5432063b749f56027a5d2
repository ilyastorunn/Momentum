{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":58,"index":739}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../../utils/AsyncExpiringMap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":740},"end":{"line":11,"column":64,"index":804}}],"key":"wX/+pyhPdiVIAjUD6/tqvcAtmG8=","exportNames":["*"]}},{"name":"../../utils/span","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":805},"end":{"line":12,"column":46,"index":851}}],"key":"jhPoHliZ6ZEw7FF55IpVbRP9XdE=","exportNames":["*"]}},{"name":"../../wrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":852},"end":{"line":13,"column":39,"index":891}}],"key":"zzWB7jlK9qMH8lQSK3ZTzm4O3ng=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nativeFramesIntegration = exports.createNativeFramesIntegrations = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _AsyncExpiringMap = require(_dependencyMap[1], \"../../utils/AsyncExpiringMap\");\n  var _span = require(_dependencyMap[2], \"../../utils/span\");\n  var _wrapper = require(_dependencyMap[3], \"../../wrapper\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  /**\n   * Timeout from the start of a span to fetching the associated native frames.\n   */\n  const FETCH_FRAMES_TIMEOUT_MS = 2000;\n  /**\n   * This is the time end frames data from the native layer will be\n   * kept in memory and waiting for the event processing. This ensures that spans\n   * which are never processed are not leaking memory.\n   */\n  const END_FRAMES_TIMEOUT_MS = 2000;\n  /**\n   * This is the time start frames data from the native layer will be\n   * kept in memory and waiting for span end. This ensures that spans\n   * which never end or are not processed are not leaking memory.\n   */\n  const START_FRAMES_TIMEOUT_MS = 60000;\n  /**\n   * A margin of error of 50ms is allowed for the async native bridge call.\n   * Anything larger would reduce the accuracy of our frames measurements.\n   */\n  const MARGIN_OF_ERROR_SECONDS = 0.05;\n  const INTEGRATION_NAME = 'NativeFrames';\n  const createNativeFramesIntegrations = enable => {\n    if (!enable && _wrapper.NATIVE.enableNative) {\n      // On Android this will free up resource when JS reloaded (native modules stay) and thus JS side of the SDK reinitialized.\n      _wrapper.NATIVE.disableNativeFramesTracking();\n      return undefined;\n    }\n    return nativeFramesIntegration();\n  };\n  /**\n   * Instrumentation to add native slow/frozen frames measurements onto transactions.\n   */\n  exports.createNativeFramesIntegrations = createNativeFramesIntegrations;\n  const nativeFramesIntegration = () => {\n    /** The native frames at the finish time of the most recent span. */\n    let _lastChildSpanEndFrames = null;\n    const _spanToNativeFramesAtStartMap = new _AsyncExpiringMap.AsyncExpiringMap({\n      ttl: START_FRAMES_TIMEOUT_MS\n    });\n    const _spanToNativeFramesAtEndMap = new _AsyncExpiringMap.AsyncExpiringMap({\n      ttl: END_FRAMES_TIMEOUT_MS\n    });\n    /**\n     * Hooks into the client start and end span events.\n     */\n    const setup = client => {\n      if (!_wrapper.NATIVE.enableNative) {\n        _core.logger.warn(`[${INTEGRATION_NAME}] This is not available on the Web, Expo Go and other platforms without native modules.`);\n        return undefined;\n      }\n      _wrapper.NATIVE.enableNativeFramesTracking();\n      client.on('spanStart', fetchStartFramesForSpan);\n      client.on('spanEnd', fetchEndFramesForSpan);\n    };\n    const fetchStartFramesForSpan = rootSpan => {\n      if (!(0, _span.isRootSpan)(rootSpan)) {\n        return;\n      }\n      const spanId = rootSpan.spanContext().spanId;\n      _core.logger.debug(`[${INTEGRATION_NAME}] Fetching frames for root span start (${spanId}).`);\n      _spanToNativeFramesAtStartMap.set(spanId, new Promise(resolve => {\n        fetchNativeFrames().then(frames => resolve(frames)).then(undefined, error => {\n          _core.logger.debug(`[${INTEGRATION_NAME}] Error while fetching native frames.`, error);\n          resolve(null);\n        });\n      }));\n    };\n    const fetchEndFramesForSpan = span => {\n      const timestamp = (0, _core.timestampInSeconds)();\n      const spanId = span.spanContext().spanId;\n      if ((0, _span.isRootSpan)(span)) {\n        const hasStartFrames = _spanToNativeFramesAtStartMap.has(spanId);\n        if (!hasStartFrames) {\n          // We don't have start frames, won't be able to calculate the difference.\n          return;\n        }\n        _core.logger.debug(`[${INTEGRATION_NAME}] Fetch frames for root span end (${spanId}).`);\n        _spanToNativeFramesAtEndMap.set(spanId, new Promise(resolve => {\n          fetchNativeFrames().then(frames => {\n            resolve({\n              timestamp,\n              nativeFrames: frames\n            });\n          }).then(undefined, error => {\n            _core.logger.debug(`[${INTEGRATION_NAME}] Error while fetching native frames.`, error);\n            resolve(null);\n          });\n        }));\n        return undefined;\n      } else {\n        _core.logger.debug(`[${INTEGRATION_NAME}] Fetch frames for child span end (${spanId}).`);\n        fetchNativeFrames().then(frames => {\n          _lastChildSpanEndFrames = {\n            timestamp,\n            nativeFrames: frames\n          };\n        }).catch(error => _core.logger.debug(`[${INTEGRATION_NAME}] Error while fetching native frames.`, error));\n      }\n    };\n    const processEvent = event => __awaiter(void 0, void 0, void 0, function* () {\n      var _a;\n      if (event.type !== 'transaction' || !event.transaction || !event.contexts || !event.contexts.trace || !event.timestamp || !event.contexts.trace.span_id) {\n        return event;\n      }\n      const traceOp = event.contexts.trace.op;\n      const spanId = event.contexts.trace.span_id;\n      const startFrames = yield _spanToNativeFramesAtStartMap.pop(spanId);\n      if (!startFrames) {\n        _core.logger.warn(`[${INTEGRATION_NAME}] Start frames of transaction ${event.transaction} (eventId, ${event.event_id}) are missing, but the transaction already ended.`);\n        return event;\n      }\n      const endFrames = yield _spanToNativeFramesAtEndMap.pop(spanId);\n      let finalEndFrames;\n      if (endFrames && isClose(endFrames.timestamp, event.timestamp)) {\n        // Must be in the margin of error of the actual transaction finish time (finalEndTimestamp)\n        _core.logger.debug(`[${INTEGRATION_NAME}] Using frames from root span end (spanId, ${spanId}).`);\n        finalEndFrames = endFrames.nativeFrames;\n      } else if (_lastChildSpanEndFrames && isClose(_lastChildSpanEndFrames.timestamp, event.timestamp)) {\n        // Fallback to the last span finish if it is within the margin of error of the actual finish timestamp.\n        // This should be the case for trimEnd.\n        _core.logger.debug(`[${INTEGRATION_NAME}] Using native frames from last child span end (spanId, ${spanId}).`);\n        finalEndFrames = _lastChildSpanEndFrames.nativeFrames;\n      } else {\n        _core.logger.warn(`[${INTEGRATION_NAME}] Frames were collected within larger than margin of error delay for spanId (${spanId}). Dropping the inaccurate values.`);\n        return event;\n      }\n      const measurements = {\n        frames_total: {\n          value: finalEndFrames.totalFrames - startFrames.totalFrames,\n          unit: 'none'\n        },\n        frames_frozen: {\n          value: finalEndFrames.frozenFrames - startFrames.frozenFrames,\n          unit: 'none'\n        },\n        frames_slow: {\n          value: finalEndFrames.slowFrames - startFrames.slowFrames,\n          unit: 'none'\n        }\n      };\n      if (measurements.frames_frozen.value <= 0 && measurements.frames_slow.value <= 0 && measurements.frames_total.value <= 0) {\n        _core.logger.warn(`[${INTEGRATION_NAME}] Detected zero slow or frozen frames. Not adding measurements to spanId (${spanId}).`);\n        return event;\n      }\n      _core.logger.log(`[${INTEGRATION_NAME}] Adding measurements to ${traceOp} transaction ${event.transaction}: ${JSON.stringify(measurements, undefined, 2)}`);\n      event.measurements = Object.assign(Object.assign({}, (_a = event.measurements) !== null && _a !== void 0 ? _a : {}), measurements);\n      return event;\n    });\n    return {\n      name: INTEGRATION_NAME,\n      setup,\n      processEvent\n    };\n  };\n  exports.nativeFramesIntegration = nativeFramesIntegration;\n  function fetchNativeFrames() {\n    return new Promise((resolve, reject) => {\n      _wrapper.NATIVE.fetchNativeFrames().then(value => {\n        if (!value) {\n          reject('Native frames response is null.');\n          return;\n        }\n        resolve(value);\n      }).then(undefined, error => {\n        reject(error);\n      });\n      setTimeout(() => {\n        reject('Fetching native frames took too long. Dropping frames.');\n      }, FETCH_FRAMES_TIMEOUT_MS);\n    });\n  }\n  function isClose(t1, t2) {\n    return Math.abs(t1 - t2) < MARGIN_OF_ERROR_SECONDS;\n  }\n});","lineCount":212,"map":[[6,2,10,0],[6,6,10,0,"_core"],[6,11,10,0],[6,14,10,0,"require"],[6,21,10,0],[6,22,10,0,"_dependencyMap"],[6,36,10,0],[7,2,11,0],[7,6,11,0,"_AsyncExpiringMap"],[7,23,11,0],[7,26,11,0,"require"],[7,33,11,0],[7,34,11,0,"_dependencyMap"],[7,48,11,0],[8,2,12,0],[8,6,12,0,"_span"],[8,11,12,0],[8,14,12,0,"require"],[8,21,12,0],[8,22,12,0,"_dependencyMap"],[8,36,12,0],[9,2,13,0],[9,6,13,0,"_wrapper"],[9,14,13,0],[9,17,13,0,"require"],[9,24,13,0],[9,25,13,0,"_dependencyMap"],[9,39,13,0],[10,2,1,0],[10,6,1,4,"__awaiter"],[10,15,1,13],[10,18,1,17],[10,22,1,21],[10,26,1,25],[10,30,1,29],[10,31,1,30,"__awaiter"],[10,40,1,39],[10,44,1,44],[10,54,1,54,"thisArg"],[10,61,1,61],[10,63,1,63,"_arguments"],[10,73,1,73],[10,75,1,75,"P"],[10,76,1,76],[10,78,1,78,"generator"],[10,87,1,87],[10,89,1,89],[11,4,2,4],[11,13,2,13,"adopt"],[11,18,2,18,"adopt"],[11,19,2,19,"value"],[11,24,2,24],[11,26,2,26],[12,6,2,28],[12,13,2,35,"value"],[12,18,2,40],[12,30,2,52,"P"],[12,31,2,53],[12,34,2,56,"value"],[12,39,2,61],[12,42,2,64],[12,46,2,68,"P"],[12,47,2,69],[12,48,2,70],[12,58,2,80,"resolve"],[12,65,2,87],[12,67,2,89],[13,8,2,91,"resolve"],[13,15,2,98],[13,16,2,99,"value"],[13,21,2,104],[13,22,2,105],[14,6,2,107],[14,7,2,108],[14,8,2,109],[15,4,2,111],[16,4,3,4],[16,11,3,11],[16,16,3,16,"P"],[16,17,3,17],[16,22,3,22,"P"],[16,23,3,23],[16,26,3,26,"Promise"],[16,33,3,33],[16,34,3,34],[16,36,3,36],[16,46,3,46,"resolve"],[16,53,3,53],[16,55,3,55,"reject"],[16,61,3,61],[16,63,3,63],[17,6,4,8],[17,15,4,17,"fulfilled"],[17,24,4,26,"fulfilled"],[17,25,4,27,"value"],[17,30,4,32],[17,32,4,34],[18,8,4,36],[18,12,4,40],[19,10,4,42,"step"],[19,14,4,46],[19,15,4,47,"generator"],[19,24,4,56],[19,25,4,57,"next"],[19,29,4,61],[19,30,4,62,"value"],[19,35,4,67],[19,36,4,68],[19,37,4,69],[20,8,4,71],[20,9,4,72],[20,10,4,73],[20,17,4,80,"e"],[20,18,4,81],[20,20,4,83],[21,10,4,85,"reject"],[21,16,4,91],[21,17,4,92,"e"],[21,18,4,93],[21,19,4,94],[22,8,4,96],[23,6,4,98],[24,6,5,8],[24,15,5,17,"rejected"],[24,23,5,25,"rejected"],[24,24,5,26,"value"],[24,29,5,31],[24,31,5,33],[25,8,5,35],[25,12,5,39],[26,10,5,41,"step"],[26,14,5,45],[26,15,5,46,"generator"],[26,24,5,55],[26,25,5,56],[26,32,5,63],[26,33,5,64],[26,34,5,65,"value"],[26,39,5,70],[26,40,5,71],[26,41,5,72],[27,8,5,74],[27,9,5,75],[27,10,5,76],[27,17,5,83,"e"],[27,18,5,84],[27,20,5,86],[28,10,5,88,"reject"],[28,16,5,94],[28,17,5,95,"e"],[28,18,5,96],[28,19,5,97],[29,8,5,99],[30,6,5,101],[31,6,6,8],[31,15,6,17,"step"],[31,19,6,21,"step"],[31,20,6,22,"result"],[31,26,6,28],[31,28,6,30],[32,8,6,32,"result"],[32,14,6,38],[32,15,6,39,"done"],[32,19,6,43],[32,22,6,46,"resolve"],[32,29,6,53],[32,30,6,54,"result"],[32,36,6,60],[32,37,6,61,"value"],[32,42,6,66],[32,43,6,67],[32,46,6,70,"adopt"],[32,51,6,75],[32,52,6,76,"result"],[32,58,6,82],[32,59,6,83,"value"],[32,64,6,88],[32,65,6,89],[32,66,6,90,"then"],[32,70,6,94],[32,71,6,95,"fulfilled"],[32,80,6,104],[32,82,6,106,"rejected"],[32,90,6,114],[32,91,6,115],[33,6,6,117],[34,6,7,8,"step"],[34,10,7,12],[34,11,7,13],[34,12,7,14,"generator"],[34,21,7,23],[34,24,7,26,"generator"],[34,33,7,35],[34,34,7,36,"apply"],[34,39,7,41],[34,40,7,42,"thisArg"],[34,47,7,49],[34,49,7,51,"_arguments"],[34,59,7,61],[34,63,7,65],[34,65,7,67],[34,66,7,68],[34,68,7,70,"next"],[34,72,7,74],[34,73,7,75],[34,74,7,76],[34,75,7,77],[35,4,8,4],[35,5,8,5],[35,6,8,6],[36,2,9,0],[36,3,9,1],[37,2,14,0],[38,0,15,0],[39,0,16,0],[40,2,17,0],[40,8,17,6,"FETCH_FRAMES_TIMEOUT_MS"],[40,31,17,29],[40,34,17,32],[40,38,17,36],[41,2,18,0],[42,0,19,0],[43,0,20,0],[44,0,21,0],[45,0,22,0],[46,2,23,0],[46,8,23,6,"END_FRAMES_TIMEOUT_MS"],[46,29,23,27],[46,32,23,30],[46,36,23,34],[47,2,24,0],[48,0,25,0],[49,0,26,0],[50,0,27,0],[51,0,28,0],[52,2,29,0],[52,8,29,6,"START_FRAMES_TIMEOUT_MS"],[52,31,29,29],[52,34,29,32],[52,39,29,37],[53,2,30,0],[54,0,31,0],[55,0,32,0],[56,0,33,0],[57,2,34,0],[57,8,34,6,"MARGIN_OF_ERROR_SECONDS"],[57,31,34,29],[57,34,34,32],[57,38,34,36],[58,2,35,0],[58,8,35,6,"INTEGRATION_NAME"],[58,24,35,22],[58,27,35,25],[58,41,35,39],[59,2,36,7],[59,8,36,13,"createNativeFramesIntegrations"],[59,38,36,43],[59,41,36,47,"enable"],[59,47,36,53],[59,51,36,58],[60,4,37,4],[60,8,37,8],[60,9,37,9,"enable"],[60,15,37,15],[60,19,37,19,"NATIVE"],[60,34,37,25],[60,35,37,26,"enableNative"],[60,47,37,38],[60,49,37,40],[61,6,38,8],[62,6,39,8,"NATIVE"],[62,21,39,14],[62,22,39,15,"disableNativeFramesTracking"],[62,49,39,42],[62,50,39,43],[62,51,39,44],[63,6,40,8],[63,13,40,15,"undefined"],[63,22,40,24],[64,4,41,4],[65,4,42,4],[65,11,42,11,"nativeFramesIntegration"],[65,34,42,34],[65,35,42,35],[65,36,42,36],[66,2,43,0],[66,3,43,1],[67,2,44,0],[68,0,45,0],[69,0,46,0],[70,2,44,0,"exports"],[70,9,44,0],[70,10,44,0,"createNativeFramesIntegrations"],[70,40,44,0],[70,43,44,0,"createNativeFramesIntegrations"],[70,73,44,0],[71,2,47,7],[71,8,47,13,"nativeFramesIntegration"],[71,31,47,36],[71,34,47,39,"nativeFramesIntegration"],[71,35,47,39],[71,40,47,45],[72,4,48,4],[73,4,49,4],[73,8,49,8,"_lastChildSpanEndFrames"],[73,31,49,31],[73,34,49,34],[73,38,49,38],[74,4,50,4],[74,10,50,10,"_spanToNativeFramesAtStartMap"],[74,39,50,39],[74,42,50,42],[74,46,50,46,"AsyncExpiringMap"],[74,80,50,62],[74,81,50,63],[75,6,51,8,"ttl"],[75,9,51,11],[75,11,51,13,"START_FRAMES_TIMEOUT_MS"],[76,4,52,4],[76,5,52,5],[76,6,52,6],[77,4,53,4],[77,10,53,10,"_spanToNativeFramesAtEndMap"],[77,37,53,37],[77,40,53,40],[77,44,53,44,"AsyncExpiringMap"],[77,78,53,60],[77,79,53,61],[78,6,53,63,"ttl"],[78,9,53,66],[78,11,53,68,"END_FRAMES_TIMEOUT_MS"],[79,4,53,90],[79,5,53,91],[79,6,53,92],[80,4,54,4],[81,0,55,0],[82,0,56,0],[83,4,57,4],[83,10,57,10,"setup"],[83,15,57,15],[83,18,57,19,"client"],[83,24,57,25],[83,28,57,30],[84,6,58,8],[84,10,58,12],[84,11,58,13,"NATIVE"],[84,26,58,19],[84,27,58,20,"enableNative"],[84,39,58,32],[84,41,58,34],[85,8,59,12,"logger"],[85,20,59,18],[85,21,59,19,"warn"],[85,25,59,23],[85,26,59,24],[85,30,59,28,"INTEGRATION_NAME"],[85,46,59,44],[85,135,59,133],[85,136,59,134],[86,8,60,12],[86,15,60,19,"undefined"],[86,24,60,28],[87,6,61,8],[88,6,62,8,"NATIVE"],[88,21,62,14],[88,22,62,15,"enableNativeFramesTracking"],[88,48,62,41],[88,49,62,42],[88,50,62,43],[89,6,63,8,"client"],[89,12,63,14],[89,13,63,15,"on"],[89,15,63,17],[89,16,63,18],[89,27,63,29],[89,29,63,31,"fetchStartFramesForSpan"],[89,52,63,54],[89,53,63,55],[90,6,64,8,"client"],[90,12,64,14],[90,13,64,15,"on"],[90,15,64,17],[90,16,64,18],[90,25,64,27],[90,27,64,29,"fetchEndFramesForSpan"],[90,48,64,50],[90,49,64,51],[91,4,65,4],[91,5,65,5],[92,4,66,4],[92,10,66,10,"fetchStartFramesForSpan"],[92,33,66,33],[92,36,66,37,"rootSpan"],[92,44,66,45],[92,48,66,50],[93,6,67,8],[93,10,67,12],[93,11,67,13],[93,15,67,13,"isRootSpan"],[93,31,67,23],[93,33,67,24,"rootSpan"],[93,41,67,32],[93,42,67,33],[93,44,67,35],[94,8,68,12],[95,6,69,8],[96,6,70,8],[96,12,70,14,"spanId"],[96,18,70,20],[96,21,70,23,"rootSpan"],[96,29,70,31],[96,30,70,32,"spanContext"],[96,41,70,43],[96,42,70,44],[96,43,70,45],[96,44,70,46,"spanId"],[96,50,70,52],[97,6,71,8,"logger"],[97,18,71,14],[97,19,71,15,"debug"],[97,24,71,20],[97,25,71,21],[97,29,71,25,"INTEGRATION_NAME"],[97,45,71,41],[97,87,71,83,"spanId"],[97,93,71,89],[97,97,71,93],[97,98,71,94],[98,6,72,8,"_spanToNativeFramesAtStartMap"],[98,35,72,37],[98,36,72,38,"set"],[98,39,72,41],[98,40,72,42,"spanId"],[98,46,72,48],[98,48,72,50],[98,52,72,54,"Promise"],[98,59,72,61],[98,60,72,62,"resolve"],[98,67,72,69],[98,71,72,73],[99,8,73,12,"fetchNativeFrames"],[99,25,73,29],[99,26,73,30],[99,27,73,31],[99,28,74,17,"then"],[99,32,74,21],[99,33,74,22,"frames"],[99,39,74,28],[99,43,74,32,"resolve"],[99,50,74,39],[99,51,74,40,"frames"],[99,57,74,46],[99,58,74,47],[99,59,74,48],[99,60,75,17,"then"],[99,64,75,21],[99,65,75,22,"undefined"],[99,74,75,31],[99,76,75,33,"error"],[99,81,75,38],[99,85,75,42],[100,10,76,16,"logger"],[100,22,76,22],[100,23,76,23,"debug"],[100,28,76,28],[100,29,76,29],[100,33,76,33,"INTEGRATION_NAME"],[100,49,76,49],[100,88,76,88],[100,90,76,90,"error"],[100,95,76,95],[100,96,76,96],[101,10,77,16,"resolve"],[101,17,77,23],[101,18,77,24],[101,22,77,28],[101,23,77,29],[102,8,78,12],[102,9,78,13],[102,10,78,14],[103,6,79,8],[103,7,79,9],[103,8,79,10],[103,9,79,11],[104,4,80,4],[104,5,80,5],[105,4,81,4],[105,10,81,10,"fetchEndFramesForSpan"],[105,31,81,31],[105,34,81,35,"span"],[105,38,81,39],[105,42,81,44],[106,6,82,8],[106,12,82,14,"timestamp"],[106,21,82,23],[106,24,82,26],[106,28,82,26,"timestampInSeconds"],[106,52,82,44],[106,54,82,45],[106,55,82,46],[107,6,83,8],[107,12,83,14,"spanId"],[107,18,83,20],[107,21,83,23,"span"],[107,25,83,27],[107,26,83,28,"spanContext"],[107,37,83,39],[107,38,83,40],[107,39,83,41],[107,40,83,42,"spanId"],[107,46,83,48],[108,6,84,8],[108,10,84,12],[108,14,84,12,"isRootSpan"],[108,30,84,22],[108,32,84,23,"span"],[108,36,84,27],[108,37,84,28],[108,39,84,30],[109,8,85,12],[109,14,85,18,"hasStartFrames"],[109,28,85,32],[109,31,85,35,"_spanToNativeFramesAtStartMap"],[109,60,85,64],[109,61,85,65,"has"],[109,64,85,68],[109,65,85,69,"spanId"],[109,71,85,75],[109,72,85,76],[110,8,86,12],[110,12,86,16],[110,13,86,17,"hasStartFrames"],[110,27,86,31],[110,29,86,33],[111,10,87,16],[112,10,88,16],[113,8,89,12],[114,8,90,12,"logger"],[114,20,90,18],[114,21,90,19,"debug"],[114,26,90,24],[114,27,90,25],[114,31,90,29,"INTEGRATION_NAME"],[114,47,90,45],[114,84,90,82,"spanId"],[114,90,90,88],[114,94,90,92],[114,95,90,93],[115,8,91,12,"_spanToNativeFramesAtEndMap"],[115,35,91,39],[115,36,91,40,"set"],[115,39,91,43],[115,40,91,44,"spanId"],[115,46,91,50],[115,48,91,52],[115,52,91,56,"Promise"],[115,59,91,63],[115,60,91,64,"resolve"],[115,67,91,71],[115,71,91,75],[116,10,92,16,"fetchNativeFrames"],[116,27,92,33],[116,28,92,34],[116,29,92,35],[116,30,93,21,"then"],[116,34,93,25],[116,35,93,26,"frames"],[116,41,93,32],[116,45,93,36],[117,12,94,20,"resolve"],[117,19,94,27],[117,20,94,28],[118,14,95,24,"timestamp"],[118,23,95,33],[119,14,96,24,"nativeFrames"],[119,26,96,36],[119,28,96,38,"frames"],[120,12,97,20],[120,13,97,21],[120,14,97,22],[121,10,98,16],[121,11,98,17],[121,12,98,18],[121,13,99,21,"then"],[121,17,99,25],[121,18,99,26,"undefined"],[121,27,99,35],[121,29,99,37,"error"],[121,34,99,42],[121,38,99,46],[122,12,100,20,"logger"],[122,24,100,26],[122,25,100,27,"debug"],[122,30,100,32],[122,31,100,33],[122,35,100,37,"INTEGRATION_NAME"],[122,51,100,53],[122,90,100,92],[122,92,100,94,"error"],[122,97,100,99],[122,98,100,100],[123,12,101,20,"resolve"],[123,19,101,27],[123,20,101,28],[123,24,101,32],[123,25,101,33],[124,10,102,16],[124,11,102,17],[124,12,102,18],[125,8,103,12],[125,9,103,13],[125,10,103,14],[125,11,103,15],[126,8,104,12],[126,15,104,19,"undefined"],[126,24,104,28],[127,6,105,8],[127,7,105,9],[127,13,106,13],[128,8,107,12,"logger"],[128,20,107,18],[128,21,107,19,"debug"],[128,26,107,24],[128,27,107,25],[128,31,107,29,"INTEGRATION_NAME"],[128,47,107,45],[128,85,107,83,"spanId"],[128,91,107,89],[128,95,107,93],[128,96,107,94],[129,8,108,12,"fetchNativeFrames"],[129,25,108,29],[129,26,108,30],[129,27,108,31],[129,28,109,17,"then"],[129,32,109,21],[129,33,109,22,"frames"],[129,39,109,28],[129,43,109,32],[130,10,110,16,"_lastChildSpanEndFrames"],[130,33,110,39],[130,36,110,42],[131,12,111,20,"timestamp"],[131,21,111,29],[132,12,112,20,"nativeFrames"],[132,24,112,32],[132,26,112,34,"frames"],[133,10,113,16],[133,11,113,17],[134,8,114,12],[134,9,114,13],[134,10,114,14],[134,11,115,17,"catch"],[134,16,115,22],[134,17,115,23,"error"],[134,22,115,28],[134,26,115,32,"logger"],[134,38,115,38],[134,39,115,39,"debug"],[134,44,115,44],[134,45,115,45],[134,49,115,49,"INTEGRATION_NAME"],[134,65,115,65],[134,104,115,104],[134,106,115,106,"error"],[134,111,115,111],[134,112,115,112],[134,113,115,113],[135,6,116,8],[136,4,117,4],[136,5,117,5],[137,4,118,4],[137,10,118,10,"processEvent"],[137,22,118,22],[137,25,118,26,"event"],[137,30,118,31],[137,34,118,36,"__awaiter"],[137,43,118,45],[137,44,118,46],[137,49,118,51],[137,50,118,52],[137,52,118,54],[137,57,118,59],[137,58,118,60],[137,60,118,62],[137,65,118,67],[137,66,118,68],[137,68,118,70],[137,81,118,83],[138,6,119,8],[138,10,119,12,"_a"],[138,12,119,14],[139,6,120,8],[139,10,120,12,"event"],[139,15,120,17],[139,16,120,18,"type"],[139,20,120,22],[139,25,120,27],[139,38,120,40],[139,42,121,12],[139,43,121,13,"event"],[139,48,121,18],[139,49,121,19,"transaction"],[139,60,121,30],[139,64,122,12],[139,65,122,13,"event"],[139,70,122,18],[139,71,122,19,"contexts"],[139,79,122,27],[139,83,123,12],[139,84,123,13,"event"],[139,89,123,18],[139,90,123,19,"contexts"],[139,98,123,27],[139,99,123,28,"trace"],[139,104,123,33],[139,108,124,12],[139,109,124,13,"event"],[139,114,124,18],[139,115,124,19,"timestamp"],[139,124,124,28],[139,128,125,12],[139,129,125,13,"event"],[139,134,125,18],[139,135,125,19,"contexts"],[139,143,125,27],[139,144,125,28,"trace"],[139,149,125,33],[139,150,125,34,"span_id"],[139,157,125,41],[139,159,125,43],[140,8,126,12],[140,15,126,19,"event"],[140,20,126,24],[141,6,127,8],[142,6,128,8],[142,12,128,14,"traceOp"],[142,19,128,21],[142,22,128,24,"event"],[142,27,128,29],[142,28,128,30,"contexts"],[142,36,128,38],[142,37,128,39,"trace"],[142,42,128,44],[142,43,128,45,"op"],[142,45,128,47],[143,6,129,8],[143,12,129,14,"spanId"],[143,18,129,20],[143,21,129,23,"event"],[143,26,129,28],[143,27,129,29,"contexts"],[143,35,129,37],[143,36,129,38,"trace"],[143,41,129,43],[143,42,129,44,"span_id"],[143,49,129,51],[144,6,130,8],[144,12,130,14,"startFrames"],[144,23,130,25],[144,26,130,28],[144,32,130,34,"_spanToNativeFramesAtStartMap"],[144,61,130,63],[144,62,130,64,"pop"],[144,65,130,67],[144,66,130,68,"spanId"],[144,72,130,74],[144,73,130,75],[145,6,131,8],[145,10,131,12],[145,11,131,13,"startFrames"],[145,22,131,24],[145,24,131,26],[146,8,132,12,"logger"],[146,20,132,18],[146,21,132,19,"warn"],[146,25,132,23],[146,26,132,24],[146,30,132,28,"INTEGRATION_NAME"],[146,46,132,44],[146,79,132,77,"event"],[146,84,132,82],[146,85,132,83,"transaction"],[146,96,132,94],[146,110,132,108,"event"],[146,115,132,113],[146,116,132,114,"event_id"],[146,124,132,122],[146,175,132,173],[146,176,132,174],[147,8,133,12],[147,15,133,19,"event"],[147,20,133,24],[148,6,134,8],[149,6,135,8],[149,12,135,14,"endFrames"],[149,21,135,23],[149,24,135,26],[149,30,135,32,"_spanToNativeFramesAtEndMap"],[149,57,135,59],[149,58,135,60,"pop"],[149,61,135,63],[149,62,135,64,"spanId"],[149,68,135,70],[149,69,135,71],[150,6,136,8],[150,10,136,12,"finalEndFrames"],[150,24,136,26],[151,6,137,8],[151,10,137,12,"endFrames"],[151,19,137,21],[151,23,137,25,"isClose"],[151,30,137,32],[151,31,137,33,"endFrames"],[151,40,137,42],[151,41,137,43,"timestamp"],[151,50,137,52],[151,52,137,54,"event"],[151,57,137,59],[151,58,137,60,"timestamp"],[151,67,137,69],[151,68,137,70],[151,70,137,72],[152,8,138,12],[153,8,139,12,"logger"],[153,20,139,18],[153,21,139,19,"debug"],[153,26,139,24],[153,27,139,25],[153,31,139,29,"INTEGRATION_NAME"],[153,47,139,45],[153,93,139,91,"spanId"],[153,99,139,97],[153,103,139,101],[153,104,139,102],[154,8,140,12,"finalEndFrames"],[154,22,140,26],[154,25,140,29,"endFrames"],[154,34,140,38],[154,35,140,39,"nativeFrames"],[154,47,140,51],[155,6,141,8],[155,7,141,9],[155,13,142,13],[155,17,142,17,"_lastChildSpanEndFrames"],[155,40,142,40],[155,44,142,44,"isClose"],[155,51,142,51],[155,52,142,52,"_lastChildSpanEndFrames"],[155,75,142,75],[155,76,142,76,"timestamp"],[155,85,142,85],[155,87,142,87,"event"],[155,92,142,92],[155,93,142,93,"timestamp"],[155,102,142,102],[155,103,142,103],[155,105,142,105],[156,8,143,12],[157,8,144,12],[158,8,145,12,"logger"],[158,20,145,18],[158,21,145,19,"debug"],[158,26,145,24],[158,27,145,25],[158,31,145,29,"INTEGRATION_NAME"],[158,47,145,45],[158,106,145,104,"spanId"],[158,112,145,110],[158,116,145,114],[158,117,145,115],[159,8,146,12,"finalEndFrames"],[159,22,146,26],[159,25,146,29,"_lastChildSpanEndFrames"],[159,48,146,52],[159,49,146,53,"nativeFrames"],[159,61,146,65],[160,6,147,8],[160,7,147,9],[160,13,148,13],[161,8,149,12,"logger"],[161,20,149,18],[161,21,149,19,"warn"],[161,25,149,23],[161,26,149,24],[161,30,149,28,"INTEGRATION_NAME"],[161,46,149,44],[161,126,149,124,"spanId"],[161,132,149,130],[161,168,149,166],[161,169,149,167],[162,8,150,12],[162,15,150,19,"event"],[162,20,150,24],[163,6,151,8],[164,6,152,8],[164,12,152,14,"measurements"],[164,24,152,26],[164,27,152,29],[165,8,153,12,"frames_total"],[165,20,153,24],[165,22,153,26],[166,10,154,16,"value"],[166,15,154,21],[166,17,154,23,"finalEndFrames"],[166,31,154,37],[166,32,154,38,"totalFrames"],[166,43,154,49],[166,46,154,52,"startFrames"],[166,57,154,63],[166,58,154,64,"totalFrames"],[166,69,154,75],[167,10,155,16,"unit"],[167,14,155,20],[167,16,155,22],[168,8,156,12],[168,9,156,13],[169,8,157,12,"frames_frozen"],[169,21,157,25],[169,23,157,27],[170,10,158,16,"value"],[170,15,158,21],[170,17,158,23,"finalEndFrames"],[170,31,158,37],[170,32,158,38,"frozenFrames"],[170,44,158,50],[170,47,158,53,"startFrames"],[170,58,158,64],[170,59,158,65,"frozenFrames"],[170,71,158,77],[171,10,159,16,"unit"],[171,14,159,20],[171,16,159,22],[172,8,160,12],[172,9,160,13],[173,8,161,12,"frames_slow"],[173,19,161,23],[173,21,161,25],[174,10,162,16,"value"],[174,15,162,21],[174,17,162,23,"finalEndFrames"],[174,31,162,37],[174,32,162,38,"slowFrames"],[174,42,162,48],[174,45,162,51,"startFrames"],[174,56,162,62],[174,57,162,63,"slowFrames"],[174,67,162,73],[175,10,163,16,"unit"],[175,14,163,20],[175,16,163,22],[176,8,164,12],[177,6,165,8],[177,7,165,9],[178,6,166,8],[178,10,166,12,"measurements"],[178,22,166,24],[178,23,166,25,"frames_frozen"],[178,36,166,38],[178,37,166,39,"value"],[178,42,166,44],[178,46,166,48],[178,47,166,49],[178,51,167,12,"measurements"],[178,63,167,24],[178,64,167,25,"frames_slow"],[178,75,167,36],[178,76,167,37,"value"],[178,81,167,42],[178,85,167,46],[178,86,167,47],[178,90,168,12,"measurements"],[178,102,168,24],[178,103,168,25,"frames_total"],[178,115,168,37],[178,116,168,38,"value"],[178,121,168,43],[178,125,168,47],[178,126,168,48],[178,128,168,50],[179,8,169,12,"logger"],[179,20,169,18],[179,21,169,19,"warn"],[179,25,169,23],[179,26,169,24],[179,30,169,28,"INTEGRATION_NAME"],[179,46,169,44],[179,123,169,121,"spanId"],[179,129,169,127],[179,133,169,131],[179,134,169,132],[180,8,170,12],[180,15,170,19,"event"],[180,20,170,24],[181,6,171,8],[182,6,172,8,"logger"],[182,18,172,14],[182,19,172,15,"log"],[182,22,172,18],[182,23,172,19],[182,27,172,23,"INTEGRATION_NAME"],[182,43,172,39],[182,71,172,67,"traceOp"],[182,78,172,74],[182,94,172,90,"event"],[182,99,172,95],[182,100,172,96,"transaction"],[182,111,172,107],[182,116,172,112,"JSON"],[182,120,172,116],[182,121,172,117,"stringify"],[182,130,172,126],[182,131,172,127,"measurements"],[182,143,172,139],[182,145,172,141,"undefined"],[182,154,172,150],[182,156,172,152],[182,157,172,153],[182,158,172,154],[182,160,172,156],[182,161,172,157],[183,6,173,8,"event"],[183,11,173,13],[183,12,173,14,"measurements"],[183,24,173,26],[183,27,173,29,"Object"],[183,33,173,35],[183,34,173,36,"assign"],[183,40,173,42],[183,41,173,43,"Object"],[183,47,173,49],[183,48,173,50,"assign"],[183,54,173,56],[183,55,173,57],[183,56,173,58],[183,57,173,59],[183,59,173,62],[183,60,173,63,"_a"],[183,62,173,65],[183,65,173,68,"event"],[183,70,173,73],[183,71,173,74,"measurements"],[183,83,173,86],[183,89,173,92],[183,93,173,96],[183,97,173,100,"_a"],[183,99,173,102],[183,104,173,107],[183,109,173,112],[183,110,173,113],[183,113,173,116,"_a"],[183,115,173,118],[183,118,173,121],[183,119,173,122],[183,120,173,124],[183,121,173,125],[183,123,173,127,"measurements"],[183,135,173,139],[183,136,173,140],[184,6,174,8],[184,13,174,15,"event"],[184,18,174,20],[185,4,175,4],[185,5,175,5],[185,6,175,6],[186,4,176,4],[186,11,176,11],[187,6,177,8,"name"],[187,10,177,12],[187,12,177,14,"INTEGRATION_NAME"],[187,28,177,30],[188,6,178,8,"setup"],[188,11,178,13],[189,6,179,8,"processEvent"],[190,4,180,4],[190,5,180,5],[191,2,181,0],[191,3,181,1],[192,2,181,2,"exports"],[192,9,181,2],[192,10,181,2,"nativeFramesIntegration"],[192,33,181,2],[192,36,181,2,"nativeFramesIntegration"],[192,59,181,2],[193,2,182,0],[193,11,182,9,"fetchNativeFrames"],[193,28,182,26,"fetchNativeFrames"],[193,29,182,26],[193,31,182,29],[194,4,183,4],[194,11,183,11],[194,15,183,15,"Promise"],[194,22,183,22],[194,23,183,23],[194,24,183,24,"resolve"],[194,31,183,31],[194,33,183,33,"reject"],[194,39,183,39],[194,44,183,44],[195,6,184,8,"NATIVE"],[195,21,184,14],[195,22,184,15,"fetchNativeFrames"],[195,39,184,32],[195,40,184,33],[195,41,184,34],[195,42,185,13,"then"],[195,46,185,17],[195,47,185,18,"value"],[195,52,185,23],[195,56,185,27],[196,8,186,12],[196,12,186,16],[196,13,186,17,"value"],[196,18,186,22],[196,20,186,24],[197,10,187,16,"reject"],[197,16,187,22],[197,17,187,23],[197,50,187,56],[197,51,187,57],[198,10,188,16],[199,8,189,12],[200,8,190,12,"resolve"],[200,15,190,19],[200,16,190,20,"value"],[200,21,190,25],[200,22,190,26],[201,6,191,8],[201,7,191,9],[201,8,191,10],[201,9,192,13,"then"],[201,13,192,17],[201,14,192,18,"undefined"],[201,23,192,27],[201,25,192,29,"error"],[201,30,192,34],[201,34,192,38],[202,8,193,12,"reject"],[202,14,193,18],[202,15,193,19,"error"],[202,20,193,24],[202,21,193,25],[203,6,194,8],[203,7,194,9],[203,8,194,10],[204,6,195,8,"setTimeout"],[204,16,195,18],[204,17,195,19],[204,23,195,25],[205,8,196,12,"reject"],[205,14,196,18],[205,15,196,19],[205,71,196,75],[205,72,196,76],[206,6,197,8],[206,7,197,9],[206,9,197,11,"FETCH_FRAMES_TIMEOUT_MS"],[206,32,197,34],[206,33,197,35],[207,4,198,4],[207,5,198,5],[207,6,198,6],[208,2,199,0],[209,2,200,0],[209,11,200,9,"isClose"],[209,18,200,16,"isClose"],[209,19,200,17,"t1"],[209,21,200,19],[209,23,200,21,"t2"],[209,25,200,23],[209,27,200,25],[210,4,201,4],[210,11,201,11,"Math"],[210,15,201,15],[210,16,201,16,"abs"],[210,19,201,19],[210,20,201,20,"t1"],[210,22,201,22],[210,25,201,25,"t2"],[210,27,201,27],[210,28,201,28],[210,31,201,31,"MARGIN_OF_ERROR_SECONDS"],[210,54,201,54],[211,2,202,0],[212,0,202,1],[212,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","createNativeFramesIntegrations","nativeFramesIntegration","setup","fetchStartFramesForSpan","Promise$argument_0","fetchNativeFrames.then$argument_0","fetchNativeFrames.then.then$argument_1","fetchEndFramesForSpan","fetchNativeFrames.then._catch$argument_0","processEvent","__awaiter$argument_3","fetchNativeFrames","NATIVE.fetchNativeFrames.then$argument_0","NATIVE.fetchNativeFrames.then.then$argument_1","setTimeout$argument_0","isClose"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;8CO2B;CPO;uCQI;kBCU;KDQ;oCEC;8DCM;sBCE,yBD;iCEC;aFG;SDC;KFC;kCMC;gEHU;0BCE;iBDK;qCEC;iBFG;aGC;sBFM;aEK;uBCC,yFD;KNE;yBQC,6CC;KDyD,CR;CRM;AkBC;uBPC;kBQE;SRM;6BSC;STE;mBUC;SVE;KOC;ClBC;AsBC;CtBE"}},"type":"js/module"}]}