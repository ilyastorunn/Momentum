{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":19},"end":{"line":2,"column":53,"index":72}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"../Skia","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"5eRJ3Y/mp/EEiynYa3WwzXcSMXc=","exportNames":["*"]}},{"name":"../types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":37,"index":143}}],"key":"SiqkZ9nARqNkdXfcIWbBgsKp5Yo=","exportNames":["*"]}},{"name":"../../Platform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":216},"end":{"line":7,"column":42,"index":258}}],"key":"AXHAxFjlDdeq1JxYZnWn+aHYhYU=","exportNames":["*"]}},{"name":"./Typeface","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":347},"end":{"line":10,"column":41,"index":388}}],"key":"T7PcoThZRvZLszyHdGWlQbNTLZw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useFonts = exports.useFont = exports.matchFont = exports.listFontFamilies = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  var _Skia = require(_dependencyMap[3], \"../Skia\");\n  var _types = require(_dependencyMap[4], \"../types\");\n  var _Platform = require(_dependencyMap[5], \"../../Platform\");\n  var _Typeface = require(_dependencyMap[6], \"./Typeface\");\n  /*global SkiaApi*/\n\n  var defaultFontSize = 14;\n\n  /**\n   * Returns a Skia Font object\n   * */\n  var useFont = function (font) {\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFontSize;\n    var onError = arguments.length > 2 ? arguments[2] : undefined;\n    var typeface = (0, _Typeface.useTypeface)(font, onError);\n    return (0, _react.useMemo)(() => {\n      if (typeface) {\n        return _Skia.Skia.Font(typeface, size);\n      } else {\n        return null;\n      }\n    }, [size, typeface]);\n  };\n  exports.useFont = useFont;\n  var defaultFontStyle = {\n    fontFamily: \"System\",\n    fontSize: defaultFontSize,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\"\n  };\n  var slant = s => {\n    if (s === \"italic\") {\n      return _types.FontSlant.Italic;\n    } else if (s === \"oblique\") {\n      return _types.FontSlant.Oblique;\n    } else {\n      return _types.FontSlant.Upright;\n    }\n  };\n  var weight = fontWeight => {\n    switch (fontWeight) {\n      case \"normal\":\n        return 400;\n      case \"bold\":\n        return 700;\n      default:\n        return parseInt(fontWeight, 10);\n    }\n  };\n  var matchFont = function () {\n    var inputStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var fontMgr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Skia.Skia.FontMgr.System();\n    var fontStyle = {\n      ...defaultFontStyle,\n      ...inputStyle\n    };\n    var style = {\n      weight: weight(fontStyle.fontWeight),\n      width: 5,\n      slant: slant(fontStyle.fontStyle)\n    };\n    var typeface = fontMgr.matchFamilyStyle(fontStyle.fontFamily, style);\n    return _Skia.Skia.Font(typeface, fontStyle.fontSize);\n  };\n  exports.matchFont = matchFont;\n  var listFontFamilies = function () {\n    var fontMgr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Skia.Skia.FontMgr.System();\n    return new Array(fontMgr.countFamilies()).fill(0).map((_, i) => fontMgr.getFamilyName(i));\n  };\n  exports.listFontFamilies = listFontFamilies;\n  var loadTypefaces = typefacesToLoad => {\n    var promises = Object.keys(typefacesToLoad).flatMap(familyName => {\n      return typefacesToLoad[familyName].map(typefaceToLoad => {\n        return _Skia.Skia.Data.fromURI(_Platform.Platform.resolveAsset(typefaceToLoad)).then(data => {\n          var tf = _Skia.Skia.Typeface.MakeFreeTypeFaceFromData(data);\n          if (tf === null) {\n            throw new Error(`Couldn't create typeface for ${familyName}`);\n          }\n          return [familyName, tf];\n        });\n      });\n    });\n    return Promise.all(promises);\n  };\n  var useFonts = sources => {\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      fontMgr = _useState2[0],\n      setFontMgr = _useState2[1];\n    (0, _react.useEffect)(() => {\n      loadTypefaces(sources).then(result => {\n        var fMgr = _Skia.Skia.TypefaceFontProvider.Make();\n        result.forEach(_ref => {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n            familyName = _ref2[0],\n            typeface = _ref2[1];\n          fMgr.registerFont(typeface, familyName);\n        });\n        setFontMgr(fMgr);\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return fontMgr;\n  };\n  exports.useFonts = useFonts;\n});","lineCount":114,"map":[[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"require"],[8,22,2,0],[8,23,2,0,"_dependencyMap"],[8,37,2,0],[9,2,4,0],[9,6,4,0,"_Skia"],[9,11,4,0],[9,14,4,0,"require"],[9,21,4,0],[9,22,4,0,"_dependencyMap"],[9,36,4,0],[10,2,5,0],[10,6,5,0,"_types"],[10,12,5,0],[10,15,5,0,"require"],[10,22,5,0],[10,23,5,0,"_dependencyMap"],[10,37,5,0],[11,2,7,0],[11,6,7,0,"_Platform"],[11,15,7,0],[11,18,7,0,"require"],[11,25,7,0],[11,26,7,0,"_dependencyMap"],[11,40,7,0],[12,2,10,0],[12,6,10,0,"_Typeface"],[12,15,10,0],[12,18,10,0,"require"],[12,25,10,0],[12,26,10,0,"_dependencyMap"],[12,40,10,0],[13,2,1,0],[15,2,12,0],[15,6,12,6,"defaultFontSize"],[15,21,12,21],[15,24,12,24],[15,26,12,26],[17,2,14,0],[18,0,15,0],[19,0,16,0],[20,2,17,7],[20,6,17,13,"useFont"],[20,13,17,20],[20,16,17,23],[20,25,17,23,"useFont"],[20,26,18,2,"font"],[20,30,18,23],[20,32,21,5],[21,4,21,5],[21,8,19,2,"size"],[21,12,19,6],[21,15,19,6,"arguments"],[21,24,19,6],[21,25,19,6,"length"],[21,31,19,6],[21,39,19,6,"arguments"],[21,48,19,6],[21,56,19,6,"undefined"],[21,65,19,6],[21,68,19,6,"arguments"],[21,77,19,6],[21,83,19,9,"defaultFontSize"],[21,98,19,24],[22,4,19,24],[22,8,20,2,"onError"],[22,15,20,32],[22,18,20,32,"arguments"],[22,27,20,32],[22,28,20,32,"length"],[22,34,20,32],[22,41,20,32,"arguments"],[22,50,20,32],[22,56,20,32,"undefined"],[22,65,20,32],[23,4,22,2],[23,8,22,8,"typeface"],[23,16,22,16],[23,19,22,19],[23,23,22,19,"useTypeface"],[23,44,22,30],[23,46,22,31,"font"],[23,50,22,35],[23,52,22,37,"onError"],[23,59,22,44],[23,60,22,45],[24,4,23,2],[24,11,23,9],[24,15,23,9,"useMemo"],[24,29,23,16],[24,31,23,17],[24,37,23,23],[25,6,24,4],[25,10,24,8,"typeface"],[25,18,24,16],[25,20,24,18],[26,8,25,6],[26,15,25,13,"Skia"],[26,25,25,17],[26,26,25,18,"Font"],[26,30,25,22],[26,31,25,23,"typeface"],[26,39,25,31],[26,41,25,33,"size"],[26,45,25,37],[26,46,25,38],[27,6,26,4],[27,7,26,5],[27,13,26,11],[28,8,27,6],[28,15,27,13],[28,19,27,17],[29,6,28,4],[30,4,29,2],[30,5,29,3],[30,7,29,5],[30,8,29,6,"size"],[30,12,29,10],[30,14,29,12,"typeface"],[30,22,29,20],[30,23,29,21],[30,24,29,22],[31,2,30,0],[31,3,30,1],[32,2,30,2,"exports"],[32,9,30,2],[32,10,30,2,"useFont"],[32,17,30,2],[32,20,30,2,"useFont"],[32,27,30,2],[33,2,53,0],[33,6,53,6,"defaultFontStyle"],[33,22,53,35],[33,25,53,38],[34,4,54,2,"fontFamily"],[34,14,54,12],[34,16,54,14],[34,24,54,22],[35,4,55,2,"fontSize"],[35,12,55,10],[35,14,55,12,"defaultFontSize"],[35,29,55,27],[36,4,56,2,"fontStyle"],[36,13,56,11],[36,15,56,13],[36,23,56,21],[37,4,57,2,"fontWeight"],[37,14,57,12],[37,16,57,14],[38,2,58,0],[38,3,58,1],[39,2,60,0],[39,6,60,6,"slant"],[39,11,60,11],[39,14,60,15,"s"],[39,15,60,23],[39,19,60,28],[40,4,61,2],[40,8,61,6,"s"],[40,9,61,7],[40,14,61,12],[40,22,61,20],[40,24,61,22],[41,6,62,4],[41,13,62,11,"FontSlant"],[41,29,62,20],[41,30,62,21,"Italic"],[41,36,62,27],[42,4,63,2],[42,5,63,3],[42,11,63,9],[42,15,63,13,"s"],[42,16,63,14],[42,21,63,19],[42,30,63,28],[42,32,63,30],[43,6,64,4],[43,13,64,11,"FontSlant"],[43,29,64,20],[43,30,64,21,"Oblique"],[43,37,64,28],[44,4,65,2],[44,5,65,3],[44,11,65,9],[45,6,66,4],[45,13,66,11,"FontSlant"],[45,29,66,20],[45,30,66,21,"Upright"],[45,37,66,28],[46,4,67,2],[47,2,68,0],[47,3,68,1],[48,2,70,0],[48,6,70,6,"weight"],[48,12,70,12],[48,15,70,16,"fontWeight"],[48,25,70,34],[48,29,70,39],[49,4,71,2],[49,12,71,10,"fontWeight"],[49,22,71,20],[50,6,72,4],[50,11,72,9],[50,19,72,17],[51,8,73,6],[51,15,73,13],[51,18,73,16],[52,6,74,4],[52,11,74,9],[52,17,74,15],[53,8,75,6],[53,15,75,13],[53,18,75,16],[54,6,76,4],[55,8,77,6],[55,15,77,13,"parseInt"],[55,23,77,21],[55,24,77,22,"fontWeight"],[55,34,77,32],[55,36,77,34],[55,38,77,36],[55,39,77,37],[56,4,78,2],[57,2,79,0],[57,3,79,1],[58,2,81,7],[58,6,81,13,"matchFont"],[58,15,81,22],[58,18,81,25],[58,27,81,25,"matchFont"],[58,28,81,25],[58,30,84,5],[59,4,84,5],[59,8,82,2,"inputStyle"],[59,18,82,34],[59,21,82,34,"arguments"],[59,30,82,34],[59,31,82,34,"length"],[59,37,82,34],[59,45,82,34,"arguments"],[59,54,82,34],[59,62,82,34,"undefined"],[59,71,82,34],[59,74,82,34,"arguments"],[59,83,82,34],[59,89,82,37],[59,90,82,38],[59,91,82,39],[60,4,82,39],[60,8,83,2,"fontMgr"],[60,15,83,20],[60,18,83,20,"arguments"],[60,27,83,20],[60,28,83,20,"length"],[60,34,83,20],[60,42,83,20,"arguments"],[60,51,83,20],[60,59,83,20,"undefined"],[60,68,83,20],[60,71,83,20,"arguments"],[60,80,83,20],[60,86,83,23,"Skia"],[60,96,83,27],[60,97,83,28,"FontMgr"],[60,104,83,35],[60,105,83,36,"System"],[60,111,83,42],[60,112,83,43],[60,113,83,44],[61,4,85,2],[61,8,85,8,"fontStyle"],[61,17,85,17],[61,20,85,20],[62,6,86,4],[62,9,86,7,"defaultFontStyle"],[62,25,86,23],[63,6,87,4],[63,9,87,7,"inputStyle"],[64,4,88,2],[64,5,88,3],[65,4,89,2],[65,8,89,8,"style"],[65,13,89,13],[65,16,89,16],[66,6,90,4,"weight"],[66,12,90,10],[66,14,90,12,"weight"],[66,20,90,18],[66,21,90,19,"fontStyle"],[66,30,90,28],[66,31,90,29,"fontWeight"],[66,41,90,39],[66,42,90,40],[67,6,91,4,"width"],[67,11,91,9],[67,13,91,11],[67,14,91,12],[68,6,92,4,"slant"],[68,11,92,9],[68,13,92,11,"slant"],[68,18,92,16],[68,19,92,17,"fontStyle"],[68,28,92,26],[68,29,92,27,"fontStyle"],[68,38,92,36],[69,4,93,2],[69,5,93,3],[70,4,94,2],[70,8,94,8,"typeface"],[70,16,94,16],[70,19,94,19,"fontMgr"],[70,26,94,26],[70,27,94,27,"matchFamilyStyle"],[70,43,94,43],[70,44,94,44,"fontStyle"],[70,53,94,53],[70,54,94,54,"fontFamily"],[70,64,94,64],[70,66,94,66,"style"],[70,71,94,71],[70,72,94,72],[71,4,95,2],[71,11,95,9,"Skia"],[71,21,95,13],[71,22,95,14,"Font"],[71,26,95,18],[71,27,95,19,"typeface"],[71,35,95,27],[71,37,95,29,"fontStyle"],[71,46,95,38],[71,47,95,39,"fontSize"],[71,55,95,47],[71,56,95,48],[72,2,96,0],[72,3,96,1],[73,2,96,2,"exports"],[73,9,96,2],[73,10,96,2,"matchFont"],[73,19,96,2],[73,22,96,2,"matchFont"],[73,31,96,2],[74,2,98,7],[74,6,98,13,"listFontFamilies"],[74,22,98,29],[74,25,98,32],[74,34,98,32,"listFontFamilies"],[74,35,98,32],[75,4,98,32],[75,8,98,33,"fontMgr"],[75,15,98,51],[75,18,98,51,"arguments"],[75,27,98,51],[75,28,98,51,"length"],[75,34,98,51],[75,42,98,51,"arguments"],[75,51,98,51],[75,59,98,51,"undefined"],[75,68,98,51],[75,71,98,51,"arguments"],[75,80,98,51],[75,86,98,54,"Skia"],[75,96,98,58],[75,97,98,59,"FontMgr"],[75,104,98,66],[75,105,98,67,"System"],[75,111,98,73],[75,112,98,74],[75,113,98,75],[76,4,98,75],[76,11,99,2],[76,15,99,6,"Array"],[76,20,99,11],[76,21,99,12,"fontMgr"],[76,28,99,19],[76,29,99,20,"countFamilies"],[76,42,99,33],[76,43,99,34],[76,44,99,35],[76,45,99,36],[76,46,100,5,"fill"],[76,50,100,9],[76,51,100,10],[76,52,100,11],[76,53,100,12],[76,54,101,5,"map"],[76,57,101,8],[76,58,101,9],[76,59,101,10,"_"],[76,60,101,11],[76,62,101,13,"i"],[76,63,101,14],[76,68,101,19,"fontMgr"],[76,75,101,26],[76,76,101,27,"getFamilyName"],[76,89,101,40],[76,90,101,41,"i"],[76,91,101,42],[76,92,101,43],[76,93,101,44],[77,2,101,44],[78,2,101,45,"exports"],[78,9,101,45],[78,10,101,45,"listFontFamilies"],[78,26,101,45],[78,29,101,45,"listFontFamilies"],[78,45,101,45],[79,2,103,0],[79,6,103,6,"loadTypefaces"],[79,19,103,19],[79,22,103,23,"typefacesToLoad"],[79,37,103,68],[79,41,103,73],[80,4,104,2],[80,8,104,8,"promises"],[80,16,104,16],[80,19,104,19,"Object"],[80,25,104,25],[80,26,104,26,"keys"],[80,30,104,30],[80,31,104,31,"typefacesToLoad"],[80,46,104,46],[80,47,104,47],[80,48,104,48,"flatMap"],[80,55,104,55],[80,56,104,57,"familyName"],[80,66,104,67],[80,70,104,72],[81,6,105,4],[81,13,105,11,"typefacesToLoad"],[81,28,105,26],[81,29,105,27,"familyName"],[81,39,105,37],[81,40,105,38],[81,41,105,39,"map"],[81,44,105,42],[81,45,105,44,"typefaceToLoad"],[81,59,105,58],[81,63,105,63],[82,8,106,6],[82,15,106,13,"Skia"],[82,25,106,17],[82,26,106,18,"Data"],[82,30,106,22],[82,31,106,23,"fromURI"],[82,38,106,30],[82,39,106,31,"Platform"],[82,57,106,39],[82,58,106,40,"resolveAsset"],[82,70,106,52],[82,71,106,53,"typefaceToLoad"],[82,85,106,67],[82,86,106,68],[82,87,106,69],[82,88,106,70,"then"],[82,92,106,74],[82,93,107,9,"data"],[82,97,107,13],[82,101,107,18],[83,10,108,10],[83,14,108,16,"tf"],[83,16,108,18],[83,19,108,21,"Skia"],[83,29,108,25],[83,30,108,26,"Typeface"],[83,38,108,34],[83,39,108,35,"MakeFreeTypeFaceFromData"],[83,63,108,59],[83,64,108,60,"data"],[83,68,108,64],[83,69,108,65],[84,10,109,10],[84,14,109,14,"tf"],[84,16,109,16],[84,21,109,21],[84,25,109,25],[84,27,109,27],[85,12,110,12],[85,18,110,18],[85,22,110,22,"Error"],[85,27,110,27],[85,28,110,28],[85,60,110,60,"familyName"],[85,70,110,70],[85,72,110,72],[85,73,110,73],[86,10,111,10],[87,10,112,10],[87,17,112,17],[87,18,112,18,"familyName"],[87,28,112,28],[87,30,112,30,"tf"],[87,32,112,32],[87,33,112,33],[88,8,113,8],[88,9,114,6],[88,10,114,7],[89,6,115,4],[89,7,115,5],[89,8,115,6],[90,4,116,2],[90,5,116,3],[90,6,116,4],[91,4,117,2],[91,11,117,9,"Promise"],[91,18,117,16],[91,19,117,17,"all"],[91,22,117,20],[91,23,117,21,"promises"],[91,31,117,29],[91,32,117,30],[92,2,118,0],[92,3,118,1],[93,2,120,7],[93,6,120,13,"useFonts"],[93,14,120,21],[93,17,120,25,"sources"],[93,24,120,62],[93,28,120,67],[94,4,121,2],[94,8,121,2,"_useState"],[94,17,121,2],[94,20,121,32],[94,24,121,32,"useState"],[94,39,121,40],[94,41,121,72],[94,45,121,76],[94,46,121,77],[95,6,121,77,"_useState2"],[95,16,121,77],[95,23,121,77,"_slicedToArray2"],[95,38,121,77],[95,39,121,77,"default"],[95,46,121,77],[95,48,121,77,"_useState"],[95,57,121,77],[96,6,121,9,"fontMgr"],[96,13,121,16],[96,16,121,16,"_useState2"],[96,26,121,16],[97,6,121,18,"setFontMgr"],[97,16,121,28],[97,19,121,28,"_useState2"],[97,29,121,28],[98,4,123,2],[98,8,123,2,"useEffect"],[98,24,123,11],[98,26,123,12],[98,32,123,18],[99,6,124,4,"loadTypefaces"],[99,19,124,17],[99,20,124,18,"sources"],[99,27,124,25],[99,28,124,26],[99,29,124,27,"then"],[99,33,124,31],[99,34,124,33,"result"],[99,40,124,39],[99,44,124,44],[100,8,125,6],[100,12,125,12,"fMgr"],[100,16,125,16],[100,19,125,19,"Skia"],[100,29,125,23],[100,30,125,24,"TypefaceFontProvider"],[100,50,125,44],[100,51,125,45,"Make"],[100,55,125,49],[100,56,125,50],[100,57,125,51],[101,8,126,6,"result"],[101,14,126,12],[101,15,126,13,"forEach"],[101,22,126,20],[101,23,126,21,"_ref"],[101,27,126,21],[101,31,126,49],[102,10,126,49],[102,14,126,49,"_ref2"],[102,19,126,49],[102,26,126,49,"_slicedToArray2"],[102,41,126,49],[102,42,126,49,"default"],[102,49,126,49],[102,51,126,49,"_ref"],[102,55,126,49],[103,12,126,23,"familyName"],[103,22,126,33],[103,25,126,33,"_ref2"],[103,30,126,33],[104,12,126,35,"typeface"],[104,20,126,43],[104,23,126,43,"_ref2"],[104,28,126,43],[105,10,127,8,"fMgr"],[105,14,127,12],[105,15,127,13,"registerFont"],[105,27,127,25],[105,28,127,26,"typeface"],[105,36,127,34],[105,38,127,36,"familyName"],[105,48,127,46],[105,49,127,47],[106,8,128,6],[106,9,128,7],[106,10,128,8],[107,8,129,6,"setFontMgr"],[107,18,129,16],[107,19,129,17,"fMgr"],[107,23,129,21],[107,24,129,22],[108,6,130,4],[108,7,130,5],[108,8,130,6],[109,6,131,4],[110,4,132,2],[110,5,132,3],[110,7,132,5],[110,9,132,7],[110,10,132,8],[111,4,133,2],[111,11,133,9,"fontMgr"],[111,18,133,16],[112,2,134,0],[112,3,134,1],[113,2,134,2,"exports"],[113,9,134,2],[113,10,134,2,"useFonts"],[113,18,134,2],[113,21,134,2,"useFonts"],[113,29,134,2],[114,0,134,2],[114,3]],"functionMap":{"names":["<global>","useFont","useMemo$argument_0","slant","weight","matchFont","listFontFamilies","Array.fill.map$argument_0","loadTypefaces","Object.keys.flatMap$argument_0","typefacesToLoad.familyName.map$argument_0","Skia.Data.fromURI.then$argument_0","useFonts","useEffect$argument_0","loadTypefaces.then$argument_0","result.forEach$argument_0"],"mappings":"AAA;uBCgB;iBCM;GDM;CDC;cG8B;CHQ;eIE;CJS;yBKE;CLe;gCME;SCG,kCD,CN;sBQE;wDCC;2CCC;QCE;SDM;KDE;GDC;CRE;wBYE;YCG;gCCC;qBCE;ODE;KDE;GDE;CZE"}},"type":"js/module"}]}