{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":188,"index":188}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":189},"end":{"line":2,"column":48,"index":237}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":238},"end":{"line":3,"column":39,"index":277}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MAX_PROFILE_DURATION_MS = void 0;\n  exports.addProfileToGlobalCache = addProfileToGlobalCache;\n  exports.addProfilesToEnvelope = addProfilesToEnvelope;\n  exports.applyDebugMetadata = applyDebugMetadata;\n  exports.convertJSSelfProfileToSampledFormat = convertJSSelfProfileToSampledFormat;\n  exports.createProfilePayload = createProfilePayload;\n  exports.createProfilingEvent = createProfilingEvent;\n  exports.enrichWithThreadInformation = enrichWithThreadInformation;\n  exports.findProfiledTransactionsFromEnvelope = findProfiledTransactionsFromEnvelope;\n  exports.getActiveProfilesCount = getActiveProfilesCount;\n  exports.isAutomatedPageLoadSpan = isAutomatedPageLoadSpan;\n  exports.isValidSampleRate = isValidSampleRate;\n  exports.shouldProfileSpan = shouldProfileSpan;\n  exports.startJSSelfProfile = startJSSelfProfile;\n  exports.takeProfileFromGlobalCache = takeProfileFromGlobalCache;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _debugBuild = require(_dependencyMap[1], \"../debug-build.js\");\n  var _helpers = require(_dependencyMap[2], \"../helpers.js\");\n  const MS_TO_NS = 1e6;\n  // Use 0 as main thread id which is identical to threadId in node:worker_threads\n  // where main logs 0 and workers seem to log in increments of 1\n  const THREAD_ID_STRING = String(0);\n  const THREAD_NAME = 'main';\n\n  // Machine properties (eval only once)\n  let OS_PLATFORM = '';\n  let OS_PLATFORM_VERSION = '';\n  let OS_ARCH = '';\n  let OS_BROWSER = _helpers.WINDOW.navigator && _helpers.WINDOW.navigator.userAgent || '';\n  let OS_MODEL = '';\n  const OS_LOCALE = _helpers.WINDOW.navigator && _helpers.WINDOW.navigator.language || _helpers.WINDOW.navigator && _helpers.WINDOW.navigator.languages && _helpers.WINDOW.navigator.languages[0] || '';\n  function isUserAgentData(data) {\n    return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n  }\n\n  // @ts-expect-error userAgentData is not part of the navigator interface yet\n  const userAgentData = _helpers.WINDOW.navigator && _helpers.WINDOW.navigator.userAgentData;\n  if (isUserAgentData(userAgentData)) {\n    userAgentData.getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList']).then(ua => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    }).catch(e => void e);\n  }\n  function isProcessedJSSelfProfile(profile) {\n    return !('thread_metadata' in profile);\n  }\n\n  // Enriches the profile with threadId of the current thread.\n  // This is done in node as we seem to not be able to get the info from C native code.\n  /**\n   *\n   */\n  function enrichWithThreadInformation(profile) {\n    if (!isProcessedJSSelfProfile(profile)) {\n      return profile;\n    }\n    return convertJSSelfProfileToSampledFormat(profile);\n  }\n\n  // Profile is marked as optional because it is deleted from the metadata\n  // by the integration before the event is processed by other integrations.\n\n  function getTraceId(event) {\n    const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n    // Log a warning if the profile has an invalid traceId (should be uuidv4).\n    // All profiles and transactions are rejected if this is the case and we want to\n    // warn users that this is happening if they enable debug flag\n    if (typeof traceId === 'string' && traceId.length !== 32) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n      }\n    }\n    if (typeof traceId !== 'string') {\n      return '';\n    }\n    return traceId;\n  }\n  /**\n   * Creates a profiling event envelope from a Sentry event. If profile does not pass\n   * validation, returns null.\n   * @param event\n   * @param dsn\n   * @param metadata\n   * @param tunnel\n   * @returns {EventEnvelope | null}\n   */\n\n  /**\n   * Creates a profiling event envelope from a Sentry event.\n   */\n  function createProfilePayload(profile_id, start_timestamp, processed_profile, event) {\n    if (event.type !== 'transaction') {\n      // createProfilingEventEnvelope should only be called for transactions,\n      // we type guard this behavior with isProfiledTransactionEvent.\n      throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n    }\n    if (processed_profile === undefined || processed_profile === null) {\n      throw new TypeError(`Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`);\n    }\n    const traceId = getTraceId(event);\n    const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n    const transactionStartMs = start_timestamp ? start_timestamp : typeof event.start_timestamp === 'number' ? event.start_timestamp * 1000 : (0, _core.timestampInSeconds)() * 1000;\n    const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : (0, _core.timestampInSeconds)() * 1000;\n    const profile = {\n      event_id: profile_id,\n      timestamp: new Date(transactionStartMs).toISOString(),\n      platform: 'javascript',\n      version: '1',\n      release: event.release || '',\n      environment: event.environment || _core.DEFAULT_ENVIRONMENT,\n      runtime: {\n        name: 'javascript',\n        version: _helpers.WINDOW.navigator.userAgent\n      },\n      os: {\n        name: OS_PLATFORM,\n        version: OS_PLATFORM_VERSION,\n        build_number: OS_BROWSER\n      },\n      device: {\n        locale: OS_LOCALE,\n        model: OS_MODEL,\n        manufacturer: OS_BROWSER,\n        architecture: OS_ARCH,\n        is_emulator: false\n      },\n      debug_meta: {\n        images: applyDebugMetadata(processed_profile.resources)\n      },\n      profile: enrichedThreadProfile,\n      transactions: [{\n        name: event.transaction || '',\n        id: event.event_id || (0, _core.uuid4)(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0)\n      }]\n    };\n    return profile;\n  }\n\n  /*\n    See packages/browser-utils/src/browser/router.ts\n  */\n  /**\n   *\n   */\n  function isAutomatedPageLoadSpan(span) {\n    return (0, _core.spanToJSON)(span).op === 'pageload';\n  }\n\n  /**\n   * Converts a JSSelfProfile to a our sampled format.\n   * Does not currently perform stack indexing.\n   */\n  function convertJSSelfProfileToSampledFormat(input) {\n    let EMPTY_STACK_ID = undefined;\n    let STACK_ID = 0;\n\n    // Initialize the profile that we will fill with data\n    const profile = {\n      samples: [],\n      stacks: [],\n      frames: [],\n      thread_metadata: {\n        [THREAD_ID_STRING]: {\n          name: THREAD_NAME\n        }\n      }\n    };\n    const firstSample = input.samples[0];\n    if (!firstSample) {\n      return profile;\n    }\n\n    // We assert samples.length > 0 above and timestamp should always be present\n    const start = firstSample.timestamp;\n    // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n    // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n    // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n    // the drift between the SDK selected value and our profile time origin.\n    const origin = typeof performance.timeOrigin === 'number' ? performance.timeOrigin : _core.browserPerformanceTimeOrigin || 0;\n    const adjustForOriginChange = origin - (_core.browserPerformanceTimeOrigin || origin);\n    input.samples.forEach((jsSample, i) => {\n      // If sample has no stack, add an empty sample\n      if (jsSample.stackId === undefined) {\n        if (EMPTY_STACK_ID === undefined) {\n          EMPTY_STACK_ID = STACK_ID;\n          profile.stacks[EMPTY_STACK_ID] = [];\n          STACK_ID++;\n        }\n        profile['samples'][i] = {\n          // convert ms timestamp to ns\n          elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n          stack_id: EMPTY_STACK_ID,\n          thread_id: THREAD_ID_STRING\n        };\n        return;\n      }\n      let stackTop = input.stacks[jsSample.stackId];\n\n      // Functions in top->down order (root is last)\n      // We follow the stackTop.parentId trail and collect each visited frameId\n      const stack = [];\n      while (stackTop) {\n        stack.push(stackTop.frameId);\n        const frame = input.frames[stackTop.frameId];\n\n        // If our frame has not been indexed yet, index it\n        if (frame && profile.frames[stackTop.frameId] === undefined) {\n          profile.frames[stackTop.frameId] = {\n            function: frame.name,\n            abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n            lineno: frame.line,\n            colno: frame.column\n          };\n        }\n        stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n      }\n      const sample = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: STACK_ID,\n        thread_id: THREAD_ID_STRING\n      };\n      profile['stacks'][STACK_ID] = stack;\n      profile['samples'][i] = sample;\n      STACK_ID++;\n    });\n    return profile;\n  }\n\n  /**\n   * Adds items to envelope if they are not already present - mutates the envelope.\n   * @param envelope\n   */\n  function addProfilesToEnvelope(envelope, profiles) {\n    if (!profiles.length) {\n      return envelope;\n    }\n    for (const profile of profiles) {\n      envelope[1].push([{\n        type: 'profile'\n      }, profile]);\n    }\n    return envelope;\n  }\n\n  /**\n   * Finds transactions with profile_id context in the envelope\n   * @param envelope\n   * @returns\n   */\n  function findProfiledTransactionsFromEnvelope(envelope) {\n    const events = [];\n    (0, _core.forEachEnvelopeItem)(envelope, (item, type) => {\n      if (type !== 'transaction') {\n        return;\n      }\n      for (let j = 1; j < item.length; j++) {\n        const event = item[j];\n        if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n          events.push(item[j]);\n        }\n      }\n    });\n    return events;\n  }\n\n  /**\n   * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n   */\n  function applyDebugMetadata(resource_paths) {\n    const client = (0, _core.getClient)();\n    const options = client && client.getOptions();\n    const stackParser = options && options.stackParser;\n    if (!stackParser) {\n      return [];\n    }\n    return (0, _core.getDebugImagesForResources)(stackParser, resource_paths);\n  }\n\n  /**\n   * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n   */\n  function isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    if (typeof rate !== 'number' && typeof rate !== 'boolean' || typeof rate === 'number' && isNaN(rate)) {\n      _debugBuild.DEBUG_BUILD && _core.logger.warn(`[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(rate)} of type ${JSON.stringify(typeof rate)}.`);\n      return false;\n    }\n\n    // Boolean sample rates are always valid\n    if (rate === true || rate === false) {\n      return true;\n    }\n\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n      _debugBuild.DEBUG_BUILD && _core.logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n      return false;\n    }\n    return true;\n  }\n  function isValidProfile(profile) {\n    if (profile.samples.length < 2) {\n      if (_debugBuild.DEBUG_BUILD) {\n        // Log a warning if the profile has less than 2 samples so users can know why\n        // they are not seeing any profiling data and we cant avoid the back and forth\n        // of asking them to provide us with a dump of the profile data.\n        _core.logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n      }\n      return false;\n    }\n    if (!profile.frames.length) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log('[Profiling] Discarding profile because it contains no frames');\n      }\n      return false;\n    }\n    return true;\n  }\n\n  // Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n  // once, it will always fail and this allows us to early return.\n  let PROFILING_CONSTRUCTOR_FAILED = false;\n  const MAX_PROFILE_DURATION_MS = exports.MAX_PROFILE_DURATION_MS = 30000;\n\n  /**\n   * Check if profiler constructor is available.\n   * @param maybeProfiler\n   */\n  function isJSProfilerSupported(maybeProfiler) {\n    return typeof maybeProfiler === 'function';\n  }\n\n  /**\n   * Starts the profiler and returns the profiler instance.\n   */\n  function startJSSelfProfile() {\n    // Feature support check first\n    const JSProfilerConstructor = _helpers.WINDOW.Profiler;\n    if (!isJSProfilerSupported(JSProfilerConstructor)) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log('[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.');\n      }\n      return;\n    }\n\n    // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n    const samplingIntervalMS = 10;\n    // Start the profiler\n    const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n    // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n    // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n    // as we risk breaking the user's application, so just disable profiling and log an error.\n    try {\n      return new JSProfilerConstructor({\n        sampleInterval: samplingIntervalMS,\n        maxBufferSize: maxSamples\n      });\n    } catch (e) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log(\"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\");\n        _core.logger.log('[Profiling] Disabling profiling for current user session.');\n      }\n      PROFILING_CONSTRUCTOR_FAILED = true;\n    }\n    return;\n  }\n\n  /**\n   * Determine if a profile should be profiled.\n   */\n  function shouldProfileSpan(span) {\n    // If constructor failed once, it will always fail, so we can early return.\n    if (PROFILING_CONSTRUCTOR_FAILED) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n      }\n      return false;\n    }\n    if (!span.isRecording()) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _core.logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n      }\n      return false;\n    }\n    const client = (0, _core.getClient)();\n    const options = client && client.getOptions();\n    if (!options) {\n      _debugBuild.DEBUG_BUILD && _core.logger.log('[Profiling] Profiling disabled, no options found.');\n      return false;\n    }\n\n    // @ts-expect-error profilesSampleRate is not part of the browser options yet\n    const profilesSampleRate = options.profilesSampleRate;\n\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(profilesSampleRate)) {\n      _debugBuild.DEBUG_BUILD && _core.logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n      return false;\n    }\n\n    // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n    if (!profilesSampleRate) {\n      _debugBuild.DEBUG_BUILD && _core.logger.log('[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0');\n      return false;\n    }\n\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n    // Check if we should sample this profile\n    if (!sampled) {\n      _debugBuild.DEBUG_BUILD && _core.logger.log(`[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(profilesSampleRate)})`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n   * @param event\n   * @returns {Profile | null}\n   */\n  function createProfilingEvent(profile_id, start_timestamp, profile, event) {\n    if (!isValidProfile(profile)) {\n      return null;\n    }\n    return createProfilePayload(profile_id, start_timestamp, profile, event);\n  }\n\n  // TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n  // but we don't have access to this map because importing this map would\n  // cause a circular dependency. We need to resolve this in v8.\n  const PROFILE_MAP = new Map();\n  /**\n   *\n   */\n  function getActiveProfilesCount() {\n    return PROFILE_MAP.size;\n  }\n\n  /**\n   * Retrieves profile from global cache and removes it.\n   */\n  function takeProfileFromGlobalCache(profile_id) {\n    const profile = PROFILE_MAP.get(profile_id);\n    if (profile) {\n      PROFILE_MAP.delete(profile_id);\n    }\n    return profile;\n  }\n  /**\n   * Adds profile to global cache and evicts the oldest profile if the cache is full.\n   */\n  function addProfileToGlobalCache(profile_id, profile) {\n    PROFILE_MAP.set(profile_id, profile);\n    if (PROFILE_MAP.size > 30) {\n      const last = PROFILE_MAP.keys().next().value;\n      PROFILE_MAP.delete(last);\n    }\n  }\n});","lineCount":479,"map":[[20,2,1,0],[20,6,1,0,"_core"],[20,11,1,0],[20,14,1,0,"require"],[20,21,1,0],[20,22,1,0,"_dependencyMap"],[20,36,1,0],[21,2,2,0],[21,6,2,0,"_debugBuild"],[21,17,2,0],[21,20,2,0,"require"],[21,27,2,0],[21,28,2,0,"_dependencyMap"],[21,42,2,0],[22,2,3,0],[22,6,3,0,"_helpers"],[22,14,3,0],[22,17,3,0,"require"],[22,24,3,0],[22,25,3,0,"_dependencyMap"],[22,39,3,0],[23,2,5,0],[23,8,5,6,"MS_TO_NS"],[23,16,5,14],[23,19,5,17],[23,22,5,20],[24,2,6,0],[25,2,7,0],[26,2,8,0],[26,8,8,6,"THREAD_ID_STRING"],[26,24,8,22],[26,27,8,25,"String"],[26,33,8,31],[26,34,8,32],[26,35,8,33],[26,36,8,34],[27,2,9,0],[27,8,9,6,"THREAD_NAME"],[27,19,9,17],[27,22,9,20],[27,28,9,26],[29,2,11,0],[30,2,12,0],[30,6,12,4,"OS_PLATFORM"],[30,17,12,15],[30,20,12,18],[30,22,12,20],[31,2,13,0],[31,6,13,4,"OS_PLATFORM_VERSION"],[31,25,13,23],[31,28,13,26],[31,30,13,28],[32,2,14,0],[32,6,14,4,"OS_ARCH"],[32,13,14,11],[32,16,14,14],[32,18,14,16],[33,2,15,0],[33,6,15,4,"OS_BROWSER"],[33,16,15,14],[33,19,15,18,"WINDOW"],[33,34,15,24],[33,35,15,25,"navigator"],[33,44,15,34],[33,48,15,38,"WINDOW"],[33,63,15,44],[33,64,15,45,"navigator"],[33,73,15,54],[33,74,15,55,"userAgent"],[33,83,15,64],[33,87,15,69],[33,89,15,71],[34,2,16,0],[34,6,16,4,"OS_MODEL"],[34,14,16,12],[34,17,16,15],[34,19,16,17],[35,2,17,0],[35,8,17,6,"OS_LOCALE"],[35,17,17,15],[35,20,18,3,"WINDOW"],[35,35,18,9],[35,36,18,10,"navigator"],[35,45,18,19],[35,49,18,23,"WINDOW"],[35,64,18,29],[35,65,18,30,"navigator"],[35,74,18,39],[35,75,18,40,"language"],[35,83,18,48],[35,87,19,3,"WINDOW"],[35,102,19,9],[35,103,19,10,"navigator"],[35,112,19,19],[35,116,19,23,"WINDOW"],[35,131,19,29],[35,132,19,30,"navigator"],[35,141,19,39],[35,142,19,40,"languages"],[35,151,19,49],[35,155,19,53,"WINDOW"],[35,170,19,59],[35,171,19,60,"navigator"],[35,180,19,69],[35,181,19,70,"languages"],[35,190,19,79],[35,191,19,80],[35,192,19,81],[35,193,19,83],[35,197,20,2],[35,199,20,4],[36,2,22,0],[36,11,22,9,"isUserAgentData"],[36,26,22,24,"isUserAgentData"],[36,27,22,25,"data"],[36,31,22,29],[36,33,22,31],[37,4,23,2],[37,11,23,9],[37,18,23,16,"data"],[37,22,23,20],[37,27,23,25],[37,35,23,33],[37,39,23,37,"data"],[37,43,23,41],[37,48,23,46],[37,52,23,50],[37,56,23,54],[37,78,23,76],[37,82,23,80,"data"],[37,86,23,84],[38,2,24,0],[40,2,26,0],[41,2,27,0],[41,8,27,6,"userAgentData"],[41,21,27,19],[41,24,27,22,"WINDOW"],[41,39,27,28],[41,40,27,29,"navigator"],[41,49,27,38],[41,53,27,42,"WINDOW"],[41,68,27,48],[41,69,27,49,"navigator"],[41,78,27,58],[41,79,27,59,"userAgentData"],[41,92,27,72],[42,2,29,0],[42,6,29,4,"isUserAgentData"],[42,21,29,19],[42,22,29,20,"userAgentData"],[42,35,29,33],[42,36,29,34],[42,38,29,36],[43,4,30,2,"userAgentData"],[43,17,30,15],[43,18,31,5,"getHighEntropyValues"],[43,38,31,25],[43,39,31,26],[43,40,31,27],[43,54,31,41],[43,56,31,43],[43,63,31,50],[43,65,31,52],[43,75,31,62],[43,77,31,64],[43,94,31,81],[43,96,31,83],[43,113,31,100],[43,114,31,101],[43,115,31,102],[43,116,32,5,"then"],[43,120,32,9],[43,121,32,11,"ua"],[43,123,32,13],[43,127,32,18],[44,6,33,6,"OS_PLATFORM"],[44,17,33,17],[44,20,33,20,"ua"],[44,22,33,22],[44,23,33,23,"platform"],[44,31,33,31],[44,35,33,35],[44,37,33,37],[45,6,34,6,"OS_ARCH"],[45,13,34,13],[45,16,34,16,"ua"],[45,18,34,18],[45,19,34,19,"architecture"],[45,31,34,31],[45,35,34,35],[45,37,34,37],[46,6,35,6,"OS_MODEL"],[46,14,35,14],[46,17,35,17,"ua"],[46,19,35,19],[46,20,35,20,"model"],[46,25,35,25],[46,29,35,29],[46,31,35,31],[47,6,36,6,"OS_PLATFORM_VERSION"],[47,25,36,25],[47,28,36,28,"ua"],[47,30,36,30],[47,31,36,31,"platformVersion"],[47,46,36,46],[47,50,36,50],[47,52,36,52],[48,6,38,6],[48,10,38,10,"ua"],[48,12,38,12],[48,13,38,13,"fullVersionList"],[48,28,38,28],[48,32,38,32,"ua"],[48,34,38,34],[48,35,38,35,"fullVersionList"],[48,50,38,50],[48,51,38,51,"length"],[48,57,38,57],[48,60,38,60],[48,61,38,61],[48,63,38,63],[49,8,39,8],[50,8,40,8],[50,14,40,14,"firstUa"],[50,21,40,21],[50,24,40,24,"ua"],[50,26,40,26],[50,27,40,27,"fullVersionList"],[50,42,40,42],[50,43,40,43,"ua"],[50,45,40,45],[50,46,40,46,"fullVersionList"],[50,61,40,61],[50,62,40,62,"length"],[50,68,40,68],[50,71,40,71],[50,72,40,72],[50,73,40,73],[51,8,41,8,"OS_BROWSER"],[51,18,41,18],[51,21,41,21],[51,24,41,24,"firstUa"],[51,31,41,31],[51,32,41,32,"brand"],[51,37,41,37],[51,41,41,41,"firstUa"],[51,48,41,48],[51,49,41,49,"version"],[51,56,41,56],[51,58,41,58],[52,6,42,6],[53,4,43,4],[53,5,43,5],[53,6,43,6],[53,7,44,5,"catch"],[53,12,44,10],[53,13,44,11,"e"],[53,14,44,12],[53,18,44,16],[53,23,44,21,"e"],[53,24,44,22],[53,25,44,23],[54,2,45,0],[55,2,47,0],[55,11,47,9,"isProcessedJSSelfProfile"],[55,35,47,33,"isProcessedJSSelfProfile"],[55,36,47,34,"profile"],[55,43,47,41],[55,45,47,43],[56,4,48,2],[56,11,48,9],[56,13,48,11],[56,30,48,28],[56,34,48,32,"profile"],[56,41,48,39],[56,42,48,40],[57,2,49,0],[59,2,51,0],[60,2,52,0],[61,2,53,0],[62,0,54,0],[63,0,55,0],[64,2,56,0],[64,11,56,9,"enrichWithThreadInformation"],[64,38,56,36,"enrichWithThreadInformation"],[64,39,56,37,"profile"],[64,46,56,44],[64,48,56,46],[65,4,57,2],[65,8,57,6],[65,9,57,7,"isProcessedJSSelfProfile"],[65,33,57,31],[65,34,57,32,"profile"],[65,41,57,39],[65,42,57,40],[65,44,57,42],[66,6,58,4],[66,13,58,11,"profile"],[66,20,58,18],[67,4,59,2],[68,4,61,2],[68,11,61,9,"convertJSSelfProfileToSampledFormat"],[68,46,61,44],[68,47,61,45,"profile"],[68,54,61,52],[68,55,61,53],[69,2,62,0],[71,2,64,0],[72,2,65,0],[74,2,67,0],[74,11,67,9,"getTraceId"],[74,21,67,19,"getTraceId"],[74,22,67,20,"event"],[74,27,67,25],[74,29,67,27],[75,4,68,2],[75,10,68,8,"traceId"],[75,17,68,15],[75,20,68,18,"event"],[75,25,68,23],[75,29,68,27,"event"],[75,34,68,32],[75,35,68,33,"contexts"],[75,43,68,41],[75,47,68,45,"event"],[75,52,68,50],[75,53,68,51,"contexts"],[75,61,68,59],[75,62,68,60],[75,69,68,67],[75,70,68,68],[75,74,68,72,"event"],[75,79,68,77],[75,80,68,78,"contexts"],[75,88,68,86],[75,89,68,87],[75,96,68,94],[75,97,68,95],[75,98,68,96],[75,108,68,106],[75,109,68,107],[76,4,69,2],[77,4,70,2],[78,4,71,2],[79,4,72,2],[79,8,72,6],[79,15,72,13,"traceId"],[79,22,72,20],[79,27,72,25],[79,35,72,33],[79,39,72,37,"traceId"],[79,46,72,44],[79,47,72,45,"length"],[79,53,72,51],[79,58,72,56],[79,60,72,58],[79,62,72,60],[80,6,73,4],[80,10,73,8,"DEBUG_BUILD"],[80,33,73,19],[80,35,73,21],[81,8,74,6,"logger"],[81,20,74,12],[81,21,74,13,"log"],[81,24,74,16],[81,25,74,17],[81,57,74,49,"traceId"],[81,64,74,56],[81,84,74,76],[81,85,74,77],[82,6,75,4],[83,4,76,2],[84,4,77,2],[84,8,77,6],[84,15,77,13,"traceId"],[84,22,77,20],[84,27,77,25],[84,35,77,33],[84,37,77,35],[85,6,78,4],[85,13,78,11],[85,15,78,13],[86,4,79,2],[87,4,81,2],[87,11,81,9,"traceId"],[87,18,81,16],[88,2,82,0],[89,2,83,0],[90,0,84,0],[91,0,85,0],[92,0,86,0],[93,0,87,0],[94,0,88,0],[95,0,89,0],[96,0,90,0],[97,0,91,0],[99,2,93,0],[100,0,94,0],[101,0,95,0],[102,2,96,0],[102,11,96,9,"createProfilePayload"],[102,31,96,29,"createProfilePayload"],[102,32,97,2,"profile_id"],[102,42,97,12],[102,44,98,2,"start_timestamp"],[102,59,98,17],[102,61,99,2,"processed_profile"],[102,78,99,19],[102,80,100,2,"event"],[102,85,100,7],[102,87,101,2],[103,4,102,2],[103,8,102,6,"event"],[103,13,102,11],[103,14,102,12,"type"],[103,18,102,16],[103,23,102,21],[103,36,102,34],[103,38,102,36],[104,6,103,4],[105,6,104,4],[106,6,105,4],[106,12,105,10],[106,16,105,14,"TypeError"],[106,25,105,23],[106,26,105,24],[106,107,105,105],[106,108,105,106],[107,4,106,2],[108,4,108,2],[108,8,108,6,"processed_profile"],[108,25,108,23],[108,30,108,28,"undefined"],[108,39,108,37],[108,43,108,41,"processed_profile"],[108,60,108,58],[108,65,108,63],[108,69,108,67],[108,71,108,69],[109,6,109,4],[109,12,109,10],[109,16,109,14,"TypeError"],[109,25,109,23],[109,26,110,6],[109,100,110,80,"processed_profile"],[109,117,110,97],[109,128,111,4],[109,129,111,5],[110,4,112,2],[111,4,114,2],[111,10,114,8,"traceId"],[111,17,114,15],[111,20,114,18,"getTraceId"],[111,30,114,28],[111,31,114,29,"event"],[111,36,114,34],[111,37,114,35],[112,4,115,2],[112,10,115,8,"enrichedThreadProfile"],[112,31,115,29],[112,34,115,32,"enrichWithThreadInformation"],[112,61,115,59],[112,62,115,60,"processed_profile"],[112,79,115,77],[112,80,115,78],[113,4,116,2],[113,10,116,8,"transactionStartMs"],[113,28,116,26],[113,31,116,29,"start_timestamp"],[113,46,116,44],[113,49,117,6,"start_timestamp"],[113,64,117,21],[113,67,118,6],[113,74,118,13,"event"],[113,79,118,18],[113,80,118,19,"start_timestamp"],[113,95,118,34],[113,100,118,39],[113,108,118,47],[113,111,119,8,"event"],[113,116,119,13],[113,117,119,14,"start_timestamp"],[113,132,119,29],[113,135,119,32],[113,139,119,36],[113,142,120,8],[113,146,120,8,"timestampInSeconds"],[113,170,120,26],[113,172,120,27],[113,173,120,28],[113,176,120,31],[113,180,120,35],[114,4,121,2],[114,10,121,8,"transactionEndMs"],[114,26,121,24],[114,29,121,27],[114,36,121,34,"event"],[114,41,121,39],[114,42,121,40,"timestamp"],[114,51,121,49],[114,56,121,54],[114,64,121,62],[114,67,121,65,"event"],[114,72,121,70],[114,73,121,71,"timestamp"],[114,82,121,80],[114,85,121,83],[114,89,121,87],[114,92,121,90],[114,96,121,90,"timestampInSeconds"],[114,120,121,108],[114,122,121,109],[114,123,121,110],[114,126,121,113],[114,130,121,117],[115,4,123,2],[115,10,123,8,"profile"],[115,17,123,15],[115,20,123,18],[116,6,124,4,"event_id"],[116,14,124,12],[116,16,124,14,"profile_id"],[116,26,124,24],[117,6,125,4,"timestamp"],[117,15,125,13],[117,17,125,15],[117,21,125,19,"Date"],[117,25,125,23],[117,26,125,24,"transactionStartMs"],[117,44,125,42],[117,45,125,43],[117,46,125,44,"toISOString"],[117,57,125,55],[117,58,125,56],[117,59,125,57],[118,6,126,4,"platform"],[118,14,126,12],[118,16,126,14],[118,28,126,26],[119,6,127,4,"version"],[119,13,127,11],[119,15,127,13],[119,18,127,16],[120,6,128,4,"release"],[120,13,128,11],[120,15,128,13,"event"],[120,20,128,18],[120,21,128,19,"release"],[120,28,128,26],[120,32,128,30],[120,34,128,32],[121,6,129,4,"environment"],[121,17,129,15],[121,19,129,17,"event"],[121,24,129,22],[121,25,129,23,"environment"],[121,36,129,34],[121,40,129,38,"DEFAULT_ENVIRONMENT"],[121,65,129,57],[122,6,130,4,"runtime"],[122,13,130,11],[122,15,130,13],[123,8,131,6,"name"],[123,12,131,10],[123,14,131,12],[123,26,131,24],[124,8,132,6,"version"],[124,15,132,13],[124,17,132,15,"WINDOW"],[124,32,132,21],[124,33,132,22,"navigator"],[124,42,132,31],[124,43,132,32,"userAgent"],[125,6,133,4],[125,7,133,5],[126,6,134,4,"os"],[126,8,134,6],[126,10,134,8],[127,8,135,6,"name"],[127,12,135,10],[127,14,135,12,"OS_PLATFORM"],[127,25,135,23],[128,8,136,6,"version"],[128,15,136,13],[128,17,136,15,"OS_PLATFORM_VERSION"],[128,36,136,34],[129,8,137,6,"build_number"],[129,20,137,18],[129,22,137,20,"OS_BROWSER"],[130,6,138,4],[130,7,138,5],[131,6,139,4,"device"],[131,12,139,10],[131,14,139,12],[132,8,140,6,"locale"],[132,14,140,12],[132,16,140,14,"OS_LOCALE"],[132,25,140,23],[133,8,141,6,"model"],[133,13,141,11],[133,15,141,13,"OS_MODEL"],[133,23,141,21],[134,8,142,6,"manufacturer"],[134,20,142,18],[134,22,142,20,"OS_BROWSER"],[134,32,142,30],[135,8,143,6,"architecture"],[135,20,143,18],[135,22,143,20,"OS_ARCH"],[135,29,143,27],[136,8,144,6,"is_emulator"],[136,19,144,17],[136,21,144,19],[137,6,145,4],[137,7,145,5],[138,6,146,4,"debug_meta"],[138,16,146,14],[138,18,146,16],[139,8,147,6,"images"],[139,14,147,12],[139,16,147,14,"applyDebugMetadata"],[139,34,147,32],[139,35,147,33,"processed_profile"],[139,52,147,50],[139,53,147,51,"resources"],[139,62,147,60],[140,6,148,4],[140,7,148,5],[141,6,149,4,"profile"],[141,13,149,11],[141,15,149,13,"enrichedThreadProfile"],[141,36,149,34],[142,6,150,4,"transactions"],[142,18,150,16],[142,20,150,18],[142,21,151,6],[143,8,152,8,"name"],[143,12,152,12],[143,14,152,14,"event"],[143,19,152,19],[143,20,152,20,"transaction"],[143,31,152,31],[143,35,152,35],[143,37,152,37],[144,8,153,8,"id"],[144,10,153,10],[144,12,153,12,"event"],[144,17,153,17],[144,18,153,18,"event_id"],[144,26,153,26],[144,30,153,30],[144,34,153,30,"uuid4"],[144,45,153,35],[144,47,153,36],[144,48,153,37],[145,8,154,8,"trace_id"],[145,16,154,16],[145,18,154,18,"traceId"],[145,25,154,25],[146,8,155,8,"active_thread_id"],[146,24,155,24],[146,26,155,26,"THREAD_ID_STRING"],[146,42,155,42],[147,8,156,8,"relative_start_ns"],[147,25,156,25],[147,27,156,27],[147,30,156,30],[148,8,157,8,"relative_end_ns"],[148,23,157,23],[148,25,157,25],[148,26,157,26],[148,27,157,27,"transactionEndMs"],[148,43,157,43],[148,46,157,46,"transactionStartMs"],[148,64,157,64],[148,68,157,68],[148,71,157,71],[148,73,157,73,"toFixed"],[148,80,157,80],[148,81,157,81],[148,82,157,82],[149,6,158,6],[149,7,158,7],[150,4,160,2],[150,5,160,3],[151,4,162,2],[151,11,162,9,"profile"],[151,18,162,16],[152,2,163,0],[154,2,165,0],[155,0,166,0],[156,0,167,0],[157,2,168,0],[158,0,169,0],[159,0,170,0],[160,2,171,0],[160,11,171,9,"isAutomatedPageLoadSpan"],[160,34,171,32,"isAutomatedPageLoadSpan"],[160,35,171,33,"span"],[160,39,171,37],[160,41,171,39],[161,4,172,2],[161,11,172,9],[161,15,172,9,"spanToJSON"],[161,31,172,19],[161,33,172,20,"span"],[161,37,172,24],[161,38,172,25],[161,39,172,26,"op"],[161,41,172,28],[161,46,172,33],[161,56,172,43],[162,2,173,0],[164,2,175,0],[165,0,176,0],[166,0,177,0],[167,0,178,0],[168,2,179,0],[168,11,179,9,"convertJSSelfProfileToSampledFormat"],[168,46,179,44,"convertJSSelfProfileToSampledFormat"],[168,47,179,45,"input"],[168,52,179,50],[168,54,179,52],[169,4,180,2],[169,8,180,6,"EMPTY_STACK_ID"],[169,22,180,20],[169,25,180,23,"undefined"],[169,34,180,32],[170,4,181,2],[170,8,181,6,"STACK_ID"],[170,16,181,14],[170,19,181,17],[170,20,181,18],[172,4,183,2],[173,4,184,2],[173,10,184,8,"profile"],[173,17,184,15],[173,20,184,18],[174,6,185,4,"samples"],[174,13,185,11],[174,15,185,13],[174,17,185,15],[175,6,186,4,"stacks"],[175,12,186,10],[175,14,186,12],[175,16,186,14],[176,6,187,4,"frames"],[176,12,187,10],[176,14,187,12],[176,16,187,14],[177,6,188,4,"thread_metadata"],[177,21,188,19],[177,23,188,21],[178,8,189,6],[178,9,189,7,"THREAD_ID_STRING"],[178,25,189,23],[178,28,189,26],[179,10,189,28,"name"],[179,14,189,32],[179,16,189,34,"THREAD_NAME"],[180,8,189,46],[181,6,190,4],[182,4,191,2],[182,5,191,3],[183,4,193,2],[183,10,193,8,"firstSample"],[183,21,193,19],[183,24,193,22,"input"],[183,29,193,27],[183,30,193,28,"samples"],[183,37,193,35],[183,38,193,36],[183,39,193,37],[183,40,193,38],[184,4,194,2],[184,8,194,6],[184,9,194,7,"firstSample"],[184,20,194,18],[184,22,194,20],[185,6,195,4],[185,13,195,11,"profile"],[185,20,195,18],[186,4,196,2],[188,4,198,2],[189,4,199,2],[189,10,199,8,"start"],[189,15,199,13],[189,18,199,16,"firstSample"],[189,29,199,27],[189,30,199,28,"timestamp"],[189,39,199,37],[190,4,200,2],[191,4,201,2],[192,4,202,2],[193,4,203,2],[194,4,204,2],[194,10,204,8,"origin"],[194,16,204,14],[194,19,205,4],[194,26,205,11,"performance"],[194,37,205,22],[194,38,205,23,"timeOrigin"],[194,48,205,33],[194,53,205,38],[194,61,205,46],[194,64,205,49,"performance"],[194,75,205,60],[194,76,205,61,"timeOrigin"],[194,86,205,71],[194,89,205,74,"browserPerformanceTimeOrigin"],[194,123,205,102],[194,127,205,106],[194,128,205,107],[195,4,206,2],[195,10,206,8,"adjustForOriginChange"],[195,31,206,29],[195,34,206,32,"origin"],[195,40,206,38],[195,44,206,42,"browserPerformanceTimeOrigin"],[195,78,206,70],[195,82,206,74,"origin"],[195,88,206,80],[195,89,206,81],[196,4,208,2,"input"],[196,9,208,7],[196,10,208,8,"samples"],[196,17,208,15],[196,18,208,16,"forEach"],[196,25,208,23],[196,26,208,24],[196,27,208,25,"jsSample"],[196,35,208,33],[196,37,208,35,"i"],[196,38,208,36],[196,43,208,41],[197,6,209,4],[198,6,210,4],[198,10,210,8,"jsSample"],[198,18,210,16],[198,19,210,17,"stackId"],[198,26,210,24],[198,31,210,29,"undefined"],[198,40,210,38],[198,42,210,40],[199,8,211,6],[199,12,211,10,"EMPTY_STACK_ID"],[199,26,211,24],[199,31,211,29,"undefined"],[199,40,211,38],[199,42,211,40],[200,10,212,8,"EMPTY_STACK_ID"],[200,24,212,22],[200,27,212,25,"STACK_ID"],[200,35,212,33],[201,10,213,8,"profile"],[201,17,213,15],[201,18,213,16,"stacks"],[201,24,213,22],[201,25,213,23,"EMPTY_STACK_ID"],[201,39,213,37],[201,40,213,38],[201,43,213,41],[201,45,213,43],[202,10,214,8,"STACK_ID"],[202,18,214,16],[202,20,214,18],[203,8,215,6],[204,8,217,6,"profile"],[204,15,217,13],[204,16,217,14],[204,25,217,23],[204,26,217,24],[204,27,217,25,"i"],[204,28,217,26],[204,29,217,27],[204,32,217,30],[205,10,218,8],[206,10,219,8,"elapsed_since_start_ns"],[206,32,219,30],[206,34,219,32],[206,35,219,33],[206,36,219,34,"jsSample"],[206,44,219,42],[206,45,219,43,"timestamp"],[206,54,219,52],[206,57,219,55,"adjustForOriginChange"],[206,78,219,76],[206,81,219,79,"start"],[206,86,219,84],[206,90,219,88,"MS_TO_NS"],[206,98,219,96],[206,100,219,98,"toFixed"],[206,107,219,105],[206,108,219,106],[206,109,219,107],[206,110,219,108],[207,10,220,8,"stack_id"],[207,18,220,16],[207,20,220,18,"EMPTY_STACK_ID"],[207,34,220,32],[208,10,221,8,"thread_id"],[208,19,221,17],[208,21,221,19,"THREAD_ID_STRING"],[209,8,222,6],[209,9,222,7],[210,8,223,6],[211,6,224,4],[212,6,226,4],[212,10,226,8,"stackTop"],[212,18,226,16],[212,21,226,19,"input"],[212,26,226,24],[212,27,226,25,"stacks"],[212,33,226,31],[212,34,226,32,"jsSample"],[212,42,226,40],[212,43,226,41,"stackId"],[212,50,226,48],[212,51,226,49],[214,6,228,4],[215,6,229,4],[216,6,230,4],[216,12,230,10,"stack"],[216,17,230,15],[216,20,230,18],[216,22,230,20],[217,6,232,4],[217,13,232,11,"stackTop"],[217,21,232,19],[217,23,232,21],[218,8,233,6,"stack"],[218,13,233,11],[218,14,233,12,"push"],[218,18,233,16],[218,19,233,17,"stackTop"],[218,27,233,25],[218,28,233,26,"frameId"],[218,35,233,33],[218,36,233,34],[219,8,235,6],[219,14,235,12,"frame"],[219,19,235,17],[219,22,235,20,"input"],[219,27,235,25],[219,28,235,26,"frames"],[219,34,235,32],[219,35,235,33,"stackTop"],[219,43,235,41],[219,44,235,42,"frameId"],[219,51,235,49],[219,52,235,50],[221,8,237,6],[222,8,238,6],[222,12,238,10,"frame"],[222,17,238,15],[222,21,238,19,"profile"],[222,28,238,26],[222,29,238,27,"frames"],[222,35,238,33],[222,36,238,34,"stackTop"],[222,44,238,42],[222,45,238,43,"frameId"],[222,52,238,50],[222,53,238,51],[222,58,238,56,"undefined"],[222,67,238,65],[222,69,238,67],[223,10,239,8,"profile"],[223,17,239,15],[223,18,239,16,"frames"],[223,24,239,22],[223,25,239,23,"stackTop"],[223,33,239,31],[223,34,239,32,"frameId"],[223,41,239,39],[223,42,239,40],[223,45,239,43],[224,12,240,10,"function"],[224,20,240,18],[224,22,240,20,"frame"],[224,27,240,25],[224,28,240,26,"name"],[224,32,240,30],[225,12,241,10,"abs_path"],[225,20,241,18],[225,22,241,20],[225,29,241,27,"frame"],[225,34,241,32],[225,35,241,33,"resourceId"],[225,45,241,43],[225,50,241,48],[225,58,241,56],[225,61,241,59,"input"],[225,66,241,64],[225,67,241,65,"resources"],[225,76,241,74],[225,77,241,75,"frame"],[225,82,241,80],[225,83,241,81,"resourceId"],[225,93,241,91],[225,94,241,92],[225,97,241,95,"undefined"],[225,106,241,104],[226,12,242,10,"lineno"],[226,18,242,16],[226,20,242,18,"frame"],[226,25,242,23],[226,26,242,24,"line"],[226,30,242,28],[227,12,243,10,"colno"],[227,17,243,15],[227,19,243,17,"frame"],[227,24,243,22],[227,25,243,23,"column"],[228,10,244,8],[228,11,244,9],[229,8,245,6],[230,8,247,6,"stackTop"],[230,16,247,14],[230,19,247,17,"stackTop"],[230,27,247,25],[230,28,247,26,"parentId"],[230,36,247,34],[230,41,247,39,"undefined"],[230,50,247,48],[230,53,247,51,"undefined"],[230,62,247,60],[230,65,247,63,"input"],[230,70,247,68],[230,71,247,69,"stacks"],[230,77,247,75],[230,78,247,76,"stackTop"],[230,86,247,84],[230,87,247,85,"parentId"],[230,95,247,93],[230,96,247,94],[231,6,248,4],[232,6,250,4],[232,12,250,10,"sample"],[232,18,250,16],[232,21,250,19],[233,8,251,6],[234,8,252,6,"elapsed_since_start_ns"],[234,30,252,28],[234,32,252,30],[234,33,252,31],[234,34,252,32,"jsSample"],[234,42,252,40],[234,43,252,41,"timestamp"],[234,52,252,50],[234,55,252,53,"adjustForOriginChange"],[234,76,252,74],[234,79,252,77,"start"],[234,84,252,82],[234,88,252,86,"MS_TO_NS"],[234,96,252,94],[234,98,252,96,"toFixed"],[234,105,252,103],[234,106,252,104],[234,107,252,105],[234,108,252,106],[235,8,253,6,"stack_id"],[235,16,253,14],[235,18,253,16,"STACK_ID"],[235,26,253,24],[236,8,254,6,"thread_id"],[236,17,254,15],[236,19,254,17,"THREAD_ID_STRING"],[237,6,255,4],[237,7,255,5],[238,6,257,4,"profile"],[238,13,257,11],[238,14,257,12],[238,22,257,20],[238,23,257,21],[238,24,257,22,"STACK_ID"],[238,32,257,30],[238,33,257,31],[238,36,257,34,"stack"],[238,41,257,39],[239,6,258,4,"profile"],[239,13,258,11],[239,14,258,12],[239,23,258,21],[239,24,258,22],[239,25,258,23,"i"],[239,26,258,24],[239,27,258,25],[239,30,258,28,"sample"],[239,36,258,34],[240,6,259,4,"STACK_ID"],[240,14,259,12],[240,16,259,14],[241,4,260,2],[241,5,260,3],[241,6,260,4],[242,4,262,2],[242,11,262,9,"profile"],[242,18,262,16],[243,2,263,0],[245,2,265,0],[246,0,266,0],[247,0,267,0],[248,0,268,0],[249,2,269,0],[249,11,269,9,"addProfilesToEnvelope"],[249,32,269,30,"addProfilesToEnvelope"],[249,33,269,31,"envelope"],[249,41,269,39],[249,43,269,41,"profiles"],[249,51,269,49],[249,53,269,51],[250,4,270,2],[250,8,270,6],[250,9,270,7,"profiles"],[250,17,270,15],[250,18,270,16,"length"],[250,24,270,22],[250,26,270,24],[251,6,271,4],[251,13,271,11,"envelope"],[251,21,271,19],[252,4,272,2],[253,4,274,2],[253,9,274,7],[253,15,274,13,"profile"],[253,22,274,20],[253,26,274,24,"profiles"],[253,34,274,32],[253,36,274,34],[254,6,275,4,"envelope"],[254,14,275,12],[254,15,275,13],[254,16,275,14],[254,17,275,15],[254,18,275,16,"push"],[254,22,275,20],[254,23,275,21],[254,24,275,22],[255,8,275,24,"type"],[255,12,275,28],[255,14,275,30],[256,6,275,40],[256,7,275,41],[256,9,275,43,"profile"],[256,16,275,50],[256,17,275,51],[256,18,275,52],[257,4,276,2],[258,4,277,2],[258,11,277,9,"envelope"],[258,19,277,17],[259,2,278,0],[261,2,280,0],[262,0,281,0],[263,0,282,0],[264,0,283,0],[265,0,284,0],[266,2,285,0],[266,11,285,9,"findProfiledTransactionsFromEnvelope"],[266,47,285,45,"findProfiledTransactionsFromEnvelope"],[266,48,285,46,"envelope"],[266,56,285,54],[266,58,285,56],[267,4,286,2],[267,10,286,8,"events"],[267,16,286,14],[267,19,286,17],[267,21,286,19],[268,4,288,2],[268,8,288,2,"forEachEnvelopeItem"],[268,33,288,21],[268,35,288,22,"envelope"],[268,43,288,30],[268,45,288,32],[268,46,288,33,"item"],[268,50,288,37],[268,52,288,39,"type"],[268,56,288,43],[268,61,288,48],[269,6,289,4],[269,10,289,8,"type"],[269,14,289,12],[269,19,289,17],[269,32,289,30],[269,34,289,32],[270,8,290,6],[271,6,291,4],[272,6,293,4],[272,11,293,9],[272,15,293,13,"j"],[272,16,293,14],[272,19,293,17],[272,20,293,18],[272,22,293,20,"j"],[272,23,293,21],[272,26,293,24,"item"],[272,30,293,28],[272,31,293,29,"length"],[272,37,293,35],[272,39,293,37,"j"],[272,40,293,38],[272,42,293,40],[272,44,293,42],[273,8,294,6],[273,14,294,12,"event"],[273,19,294,17],[273,22,294,20,"item"],[273,26,294,24],[273,27,294,25,"j"],[273,28,294,26],[273,29,294,27],[274,8,296,6],[274,12,296,10,"event"],[274,17,296,15],[274,21,296,19,"event"],[274,26,296,24],[274,27,296,25,"contexts"],[274,35,296,33],[274,39,296,37,"event"],[274,44,296,42],[274,45,296,43,"contexts"],[274,53,296,51],[274,54,296,52],[274,63,296,61],[274,64,296,62],[274,68,296,66,"event"],[274,73,296,71],[274,74,296,72,"contexts"],[274,82,296,80],[274,83,296,81],[274,92,296,90],[274,93,296,91],[274,94,296,92],[274,106,296,104],[274,107,296,105],[274,109,296,107],[275,10,297,8,"events"],[275,16,297,14],[275,17,297,15,"push"],[275,21,297,19],[275,22,297,20,"item"],[275,26,297,24],[275,27,297,25,"j"],[275,28,297,26],[275,29,297,28],[275,30,297,29],[276,8,298,6],[277,6,299,4],[278,4,300,2],[278,5,300,3],[278,6,300,4],[279,4,302,2],[279,11,302,9,"events"],[279,17,302,15],[280,2,303,0],[282,2,305,0],[283,0,306,0],[284,0,307,0],[285,2,308,0],[285,11,308,9,"applyDebugMetadata"],[285,29,308,27,"applyDebugMetadata"],[285,30,308,28,"resource_paths"],[285,44,308,42],[285,46,308,44],[286,4,309,2],[286,10,309,8,"client"],[286,16,309,14],[286,19,309,17],[286,23,309,17,"getClient"],[286,38,309,26],[286,40,309,27],[286,41,309,28],[287,4,310,2],[287,10,310,8,"options"],[287,17,310,15],[287,20,310,18,"client"],[287,26,310,24],[287,30,310,28,"client"],[287,36,310,34],[287,37,310,35,"getOptions"],[287,47,310,45],[287,48,310,46],[287,49,310,47],[288,4,311,2],[288,10,311,8,"stackParser"],[288,21,311,19],[288,24,311,22,"options"],[288,31,311,29],[288,35,311,33,"options"],[288,42,311,40],[288,43,311,41,"stackParser"],[288,54,311,52],[289,4,313,2],[289,8,313,6],[289,9,313,7,"stackParser"],[289,20,313,18],[289,22,313,20],[290,6,314,4],[290,13,314,11],[290,15,314,13],[291,4,315,2],[292,4,317,2],[292,11,317,9],[292,15,317,9,"getDebugImagesForResources"],[292,47,317,35],[292,49,317,36,"stackParser"],[292,60,317,47],[292,62,317,49,"resource_paths"],[292,76,317,63],[292,77,317,64],[293,2,318,0],[295,2,320,0],[296,0,321,0],[297,0,322,0],[298,2,323,0],[298,11,323,9,"isValidSampleRate"],[298,28,323,26,"isValidSampleRate"],[298,29,323,27,"rate"],[298,33,323,31],[298,35,323,33],[299,4,324,2],[300,4,325,2],[300,8,325,7],[300,15,325,14,"rate"],[300,19,325,18],[300,24,325,23],[300,32,325,31],[300,36,325,35],[300,43,325,42,"rate"],[300,47,325,46],[300,52,325,51],[300,61,325,60],[300,65,325,66],[300,72,325,73,"rate"],[300,76,325,77],[300,81,325,82],[300,89,325,90],[300,93,325,94,"isNaN"],[300,98,325,99],[300,99,325,100,"rate"],[300,103,325,104],[300,104,325,106],[300,106,325,108],[301,6,326,4,"DEBUG_BUILD"],[301,29,326,15],[301,33,327,6,"logger"],[301,45,327,12],[301,46,327,13,"warn"],[301,50,327,17],[301,51,328,8],[301,150,328,107,"JSON"],[301,154,328,111],[301,155,328,112,"stringify"],[301,164,328,121],[301,165,329,10,"rate"],[301,169,330,8],[301,170,330,9],[301,182,330,21,"JSON"],[301,186,330,25],[301,187,330,26,"stringify"],[301,196,330,35],[301,197,330,36],[301,204,330,43,"rate"],[301,208,330,47],[301,209,330,48],[301,212,331,6],[301,213,331,7],[302,6,332,4],[302,13,332,11],[302,18,332,16],[303,4,333,2],[305,4,335,2],[306,4,336,2],[306,8,336,6,"rate"],[306,12,336,10],[306,17,336,15],[306,21,336,19],[306,25,336,23,"rate"],[306,29,336,27],[306,34,336,32],[306,39,336,37],[306,41,336,39],[307,6,337,4],[307,13,337,11],[307,17,337,15],[308,4,338,2],[310,4,340,2],[311,4,341,2],[311,8,341,6,"rate"],[311,12,341,10],[311,15,341,13],[311,16,341,14],[311,20,341,18,"rate"],[311,24,341,22],[311,27,341,25],[311,28,341,26],[311,30,341,28],[312,6,342,4,"DEBUG_BUILD"],[312,29,342,15],[312,33,342,19,"logger"],[312,45,342,25],[312,46,342,26,"warn"],[312,50,342,30],[312,51,342,31],[312,128,342,108,"rate"],[312,132,342,112],[312,135,342,115],[312,136,342,116],[313,6,343,4],[313,13,343,11],[313,18,343,16],[314,4,344,2],[315,4,345,2],[315,11,345,9],[315,15,345,13],[316,2,346,0],[317,2,348,0],[317,11,348,9,"isValidProfile"],[317,25,348,23,"isValidProfile"],[317,26,348,24,"profile"],[317,33,348,31],[317,35,348,33],[318,4,349,2],[318,8,349,6,"profile"],[318,15,349,13],[318,16,349,14,"samples"],[318,23,349,21],[318,24,349,22,"length"],[318,30,349,28],[318,33,349,31],[318,34,349,32],[318,36,349,34],[319,6,350,4],[319,10,350,8,"DEBUG_BUILD"],[319,33,350,19],[319,35,350,21],[320,8,351,6],[321,8,352,6],[322,8,353,6],[323,8,354,6,"logger"],[323,20,354,12],[323,21,354,13,"log"],[323,24,354,16],[323,25,354,17],[323,97,354,89],[323,98,354,90],[324,6,355,4],[325,6,356,4],[325,13,356,11],[325,18,356,16],[326,4,357,2],[327,4,359,2],[327,8,359,6],[327,9,359,7,"profile"],[327,16,359,14],[327,17,359,15,"frames"],[327,23,359,21],[327,24,359,22,"length"],[327,30,359,28],[327,32,359,30],[328,6,360,4],[328,10,360,8,"DEBUG_BUILD"],[328,33,360,19],[328,35,360,21],[329,8,361,6,"logger"],[329,20,361,12],[329,21,361,13,"log"],[329,24,361,16],[329,25,361,17],[329,87,361,79],[329,88,361,80],[330,6,362,4],[331,6,363,4],[331,13,363,11],[331,18,363,16],[332,4,364,2],[333,4,366,2],[333,11,366,9],[333,15,366,13],[334,2,367,0],[336,2,369,0],[337,2,370,0],[338,2,371,0],[338,6,371,4,"PROFILING_CONSTRUCTOR_FAILED"],[338,34,371,32],[338,37,371,35],[338,42,371,40],[339,2,372,0],[339,8,372,6,"MAX_PROFILE_DURATION_MS"],[339,31,372,29],[339,34,372,29,"exports"],[339,41,372,29],[339,42,372,29,"MAX_PROFILE_DURATION_MS"],[339,65,372,29],[339,68,372,32],[339,73,372,37],[341,2,374,0],[342,0,375,0],[343,0,376,0],[344,0,377,0],[345,2,378,0],[345,11,378,9,"isJSProfilerSupported"],[345,32,378,30,"isJSProfilerSupported"],[345,33,378,31,"maybeProfiler"],[345,46,378,44],[345,48,378,46],[346,4,379,2],[346,11,379,9],[346,18,379,16,"maybeProfiler"],[346,31,379,29],[346,36,379,34],[346,46,379,44],[347,2,380,0],[349,2,382,0],[350,0,383,0],[351,0,384,0],[352,2,385,0],[352,11,385,9,"startJSSelfProfile"],[352,29,385,27,"startJSSelfProfile"],[352,30,385,27],[352,32,385,30],[353,4,386,2],[354,4,387,2],[354,10,387,8,"JSProfilerConstructor"],[354,31,387,29],[354,34,387,32,"WINDOW"],[354,49,387,38],[354,50,387,39,"Profiler"],[354,58,387,47],[355,4,389,2],[355,8,389,6],[355,9,389,7,"isJSProfilerSupported"],[355,30,389,28],[355,31,389,29,"JSProfilerConstructor"],[355,52,389,50],[355,53,389,51],[355,55,389,53],[356,6,390,4],[356,10,390,8,"DEBUG_BUILD"],[356,33,390,19],[356,35,390,21],[357,8,391,6,"logger"],[357,20,391,12],[357,21,391,13,"log"],[357,24,391,16],[357,25,392,8],[357,127,393,6],[357,128,393,7],[358,6,394,4],[359,6,395,4],[360,4,396,2],[362,4,398,2],[363,4,399,2],[363,10,399,8,"samplingIntervalMS"],[363,28,399,26],[363,31,399,29],[363,33,399,31],[364,4,400,2],[365,4,401,2],[365,10,401,8,"maxSamples"],[365,20,401,18],[365,23,401,21,"Math"],[365,27,401,25],[365,28,401,26,"floor"],[365,33,401,31],[365,34,401,32,"MAX_PROFILE_DURATION_MS"],[365,57,401,55],[365,60,401,58,"samplingIntervalMS"],[365,78,401,76],[365,79,401,77],[367,4,403,2],[368,4,404,2],[369,4,405,2],[370,4,406,2],[370,8,406,6],[371,6,407,4],[371,13,407,11],[371,17,407,15,"JSProfilerConstructor"],[371,38,407,36],[371,39,407,37],[372,8,407,39,"sampleInterval"],[372,22,407,53],[372,24,407,55,"samplingIntervalMS"],[372,42,407,73],[373,8,407,75,"maxBufferSize"],[373,21,407,88],[373,23,407,90,"maxSamples"],[374,6,407,101],[374,7,407,102],[374,8,407,103],[375,4,408,2],[375,5,408,3],[375,6,408,4],[375,13,408,11,"e"],[375,14,408,12],[375,16,408,14],[376,6,409,4],[376,10,409,8,"DEBUG_BUILD"],[376,33,409,19],[376,35,409,21],[377,8,410,6,"logger"],[377,20,410,12],[377,21,410,13,"log"],[377,24,410,16],[377,25,411,8],[377,160,412,6],[377,161,412,7],[378,8,413,6,"logger"],[378,20,413,12],[378,21,413,13,"log"],[378,24,413,16],[378,25,413,17],[378,84,413,76],[378,85,413,77],[379,6,414,4],[380,6,415,4,"PROFILING_CONSTRUCTOR_FAILED"],[380,34,415,32],[380,37,415,35],[380,41,415,39],[381,4,416,2],[382,4,418,2],[383,2,419,0],[385,2,421,0],[386,0,422,0],[387,0,423,0],[388,2,424,0],[388,11,424,9,"shouldProfileSpan"],[388,28,424,26,"shouldProfileSpan"],[388,29,424,27,"span"],[388,33,424,31],[388,35,424,33],[389,4,425,2],[390,4,426,2],[390,8,426,6,"PROFILING_CONSTRUCTOR_FAILED"],[390,36,426,34],[390,38,426,36],[391,6,427,4],[391,10,427,8,"DEBUG_BUILD"],[391,33,427,19],[391,35,427,21],[392,8,428,6,"logger"],[392,20,428,12],[392,21,428,13,"log"],[392,24,428,16],[392,25,428,17],[392,112,428,104],[392,113,428,105],[393,6,429,4],[394,6,430,4],[394,13,430,11],[394,18,430,16],[395,4,431,2],[396,4,433,2],[396,8,433,6],[396,9,433,7,"span"],[396,13,433,11],[396,14,433,12,"isRecording"],[396,25,433,23],[396,26,433,24],[396,27,433,25],[396,29,433,27],[397,6,434,4],[397,10,434,8,"DEBUG_BUILD"],[397,33,434,19],[397,35,434,21],[398,8,435,6,"logger"],[398,20,435,12],[398,21,435,13,"log"],[398,24,435,16],[398,25,435,17],[398,94,435,86],[398,95,435,87],[399,6,436,4],[400,6,437,4],[400,13,437,11],[400,18,437,16],[401,4,438,2],[402,4,440,2],[402,10,440,8,"client"],[402,16,440,14],[402,19,440,17],[402,23,440,17,"getClient"],[402,38,440,26],[402,40,440,27],[402,41,440,28],[403,4,441,2],[403,10,441,8,"options"],[403,17,441,15],[403,20,441,18,"client"],[403,26,441,24],[403,30,441,28,"client"],[403,36,441,34],[403,37,441,35,"getOptions"],[403,47,441,45],[403,48,441,46],[403,49,441,47],[404,4,442,2],[404,8,442,6],[404,9,442,7,"options"],[404,16,442,14],[404,18,442,16],[405,6,443,4,"DEBUG_BUILD"],[405,29,443,15],[405,33,443,19,"logger"],[405,45,443,25],[405,46,443,26,"log"],[405,49,443,29],[405,50,443,30],[405,101,443,81],[405,102,443,82],[406,6,444,4],[406,13,444,11],[406,18,444,16],[407,4,445,2],[409,4,447,2],[410,4,448,2],[410,10,448,8,"profilesSampleRate"],[410,28,448,26],[410,31,448,29,"options"],[410,38,448,36],[410,39,448,37,"profilesSampleRate"],[410,57,448,55],[412,4,450,2],[413,4,451,2],[414,4,452,2],[414,8,452,6],[414,9,452,7,"isValidSampleRate"],[414,26,452,24],[414,27,452,25,"profilesSampleRate"],[414,45,452,43],[414,46,452,44],[414,48,452,46],[415,6,453,4,"DEBUG_BUILD"],[415,29,453,15],[415,33,453,19,"logger"],[415,45,453,25],[415,46,453,26,"warn"],[415,50,453,30],[415,51,453,31],[415,115,453,95],[415,116,453,96],[416,6,454,4],[416,13,454,11],[416,18,454,16],[417,4,455,2],[419,4,457,2],[420,4,458,2],[420,8,458,6],[420,9,458,7,"profilesSampleRate"],[420,27,458,25],[420,29,458,27],[421,6,459,4,"DEBUG_BUILD"],[421,29,459,15],[421,33,460,6,"logger"],[421,45,460,12],[421,46,460,13,"log"],[421,49,460,16],[421,50,461,8],[421,166,462,6],[421,167,462,7],[422,6,463,4],[422,13,463,11],[422,18,463,16],[423,4,464,2],[425,4,466,2],[426,4,467,2],[427,4,468,2],[427,10,468,8,"sampled"],[427,17,468,15],[427,20,468,18,"profilesSampleRate"],[427,38,468,36],[427,43,468,41],[427,47,468,45],[427,50,468,48],[427,54,468,52],[427,57,468,55,"Math"],[427,61,468,59],[427,62,468,60,"random"],[427,68,468,66],[427,69,468,67],[427,70,468,68],[427,73,468,71,"profilesSampleRate"],[427,91,468,89],[428,4,469,2],[429,4,470,2],[429,8,470,6],[429,9,470,7,"sampled"],[429,16,470,14],[429,18,470,16],[430,6,471,4,"DEBUG_BUILD"],[430,29,471,15],[430,33,472,6,"logger"],[430,45,472,12],[430,46,472,13,"log"],[430,49,472,16],[430,50,473,8],[430,148,473,106,"Number"],[430,154,473,112],[430,155,474,10,"profilesSampleRate"],[430,173,475,8],[430,174,475,9],[430,177,476,6],[430,178,476,7],[431,6,477,4],[431,13,477,11],[431,18,477,16],[432,4,478,2],[433,4,480,2],[433,11,480,9],[433,15,480,13],[434,2,481,0],[436,2,483,0],[437,0,484,0],[438,0,485,0],[439,0,486,0],[440,0,487,0],[441,2,488,0],[441,11,488,9,"createProfilingEvent"],[441,31,488,29,"createProfilingEvent"],[441,32,489,2,"profile_id"],[441,42,489,12],[441,44,490,2,"start_timestamp"],[441,59,490,17],[441,61,491,2,"profile"],[441,68,491,9],[441,70,492,2,"event"],[441,75,492,7],[441,77,493,2],[442,4,494,2],[442,8,494,6],[442,9,494,7,"isValidProfile"],[442,23,494,21],[442,24,494,22,"profile"],[442,31,494,29],[442,32,494,30],[442,34,494,32],[443,6,495,4],[443,13,495,11],[443,17,495,15],[444,4,496,2],[445,4,498,2],[445,11,498,9,"createProfilePayload"],[445,31,498,29],[445,32,498,30,"profile_id"],[445,42,498,40],[445,44,498,42,"start_timestamp"],[445,59,498,57],[445,61,498,59,"profile"],[445,68,498,66],[445,70,498,68,"event"],[445,75,498,73],[445,76,498,74],[446,2,499,0],[448,2,501,0],[449,2,502,0],[450,2,503,0],[451,2,504,0],[451,8,504,6,"PROFILE_MAP"],[451,19,504,17],[451,22,504,20],[451,26,504,24,"Map"],[451,29,504,27],[451,30,504,28],[451,31,504,29],[452,2,505,0],[453,0,506,0],[454,0,507,0],[455,2,508,0],[455,11,508,9,"getActiveProfilesCount"],[455,33,508,31,"getActiveProfilesCount"],[455,34,508,31],[455,36,508,34],[456,4,509,2],[456,11,509,9,"PROFILE_MAP"],[456,22,509,20],[456,23,509,21,"size"],[456,27,509,25],[457,2,510,0],[459,2,512,0],[460,0,513,0],[461,0,514,0],[462,2,515,0],[462,11,515,9,"takeProfileFromGlobalCache"],[462,37,515,35,"takeProfileFromGlobalCache"],[462,38,515,36,"profile_id"],[462,48,515,46],[462,50,515,48],[463,4,516,2],[463,10,516,8,"profile"],[463,17,516,15],[463,20,516,18,"PROFILE_MAP"],[463,31,516,29],[463,32,516,30,"get"],[463,35,516,33],[463,36,516,34,"profile_id"],[463,46,516,44],[463,47,516,45],[464,4,517,2],[464,8,517,6,"profile"],[464,15,517,13],[464,17,517,15],[465,6,518,4,"PROFILE_MAP"],[465,17,518,15],[465,18,518,16,"delete"],[465,24,518,22],[465,25,518,23,"profile_id"],[465,35,518,33],[465,36,518,34],[466,4,519,2],[467,4,520,2],[467,11,520,9,"profile"],[467,18,520,16],[468,2,521,0],[469,2,522,0],[470,0,523,0],[471,0,524,0],[472,2,525,0],[472,11,525,9,"addProfileToGlobalCache"],[472,34,525,32,"addProfileToGlobalCache"],[472,35,525,33,"profile_id"],[472,45,525,43],[472,47,525,45,"profile"],[472,54,525,52],[472,56,525,54],[473,4,526,2,"PROFILE_MAP"],[473,15,526,13],[473,16,526,14,"set"],[473,19,526,17],[473,20,526,18,"profile_id"],[473,30,526,28],[473,32,526,30,"profile"],[473,39,526,37],[473,40,526,38],[474,4,528,2],[474,8,528,6,"PROFILE_MAP"],[474,19,528,17],[474,20,528,18,"size"],[474,24,528,22],[474,27,528,25],[474,29,528,27],[474,31,528,29],[475,6,529,4],[475,12,529,10,"last"],[475,16,529,14],[475,19,529,17,"PROFILE_MAP"],[475,30,529,28],[475,31,529,29,"keys"],[475,35,529,33],[475,36,529,34],[475,37,529,35],[475,38,529,36,"next"],[475,42,529,40],[475,43,529,41],[475,44,529,42],[475,45,529,43,"value"],[475,50,529,48],[476,6,530,4,"PROFILE_MAP"],[476,17,530,15],[476,18,530,16,"delete"],[476,24,530,22],[476,25,530,23,"last"],[476,29,530,27],[476,30,530,28],[477,4,531,2],[478,2,532,0],[479,0,532,1],[479,3]],"functionMap":{"names":["<global>","isUserAgentData","userAgentData.getHighEntropyValues.then$argument_0","userAgentData.getHighEntropyValues.then._catch$argument_0","isProcessedJSSelfProfile","enrichWithThreadInformation","getTraceId","createProfilePayload","isAutomatedPageLoadSpan","convertJSSelfProfileToSampledFormat","input.samples.forEach$argument_0","addProfilesToEnvelope","findProfiledTransactionsFromEnvelope","forEachEnvelopeItem$argument_1","applyDebugMetadata","isValidSampleRate","isValidProfile","isJSProfilerSupported","startJSSelfProfile","shouldProfileSpan","createProfilingEvent","getActiveProfilesCount","takeProfileFromGlobalCache","addProfileToGlobalCache"],"mappings":"AAA;ACqB;CDE;UEQ;KFW;WGC,WH;AIG;CJE;AKO;CLM;AMK;CNe;AOc;CPmE;AQQ;CRE;ASM;wBC6B;GDoD;CTG;AWM;CXS;AYO;gCCG;GDY;CZG;AcK;CdU;AeK;CfuB;AgBE;ChBmB;AiBW;CjBE;AkBK;ClBkC;AmBK;CnByD;AoBO;CpBW;AqBS;CrBE;AsBK;CtBM;AuBI;CvBO"}},"type":"js/module"}]}