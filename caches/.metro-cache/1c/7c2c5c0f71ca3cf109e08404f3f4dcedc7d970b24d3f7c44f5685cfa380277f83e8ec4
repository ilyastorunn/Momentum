{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.mergeOutcomes = mergeOutcomes;\n  /**\n   * Merges buffer with new outcomes.\n   */\n  function mergeOutcomes(...merge) {\n    const map = new Map();\n    const process = outcome => {\n      const key = `${outcome.reason}:${outcome.category}`;\n      const existing = map.get(key);\n      if (existing) {\n        existing.quantity += outcome.quantity;\n      } else {\n        map.set(key, outcome);\n      }\n    };\n    merge.forEach(outcomes => outcomes.forEach(process));\n    return [...map.values()];\n  }\n});","lineCount":23,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,2,4,7],[9,11,4,16,"mergeOutcomes"],[9,24,4,29,"mergeOutcomes"],[9,25,4,30],[9,28,4,33,"merge"],[9,33,4,38],[9,35,4,40],[10,4,5,4],[10,10,5,10,"map"],[10,13,5,13],[10,16,5,16],[10,20,5,20,"Map"],[10,23,5,23],[10,24,5,24],[10,25,5,25],[11,4,6,4],[11,10,6,10,"process"],[11,17,6,17],[11,20,6,21,"outcome"],[11,27,6,28],[11,31,6,33],[12,6,7,8],[12,12,7,14,"key"],[12,15,7,17],[12,18,7,20],[12,21,7,23,"outcome"],[12,28,7,30],[12,29,7,31,"reason"],[12,35,7,37],[12,39,7,41,"outcome"],[12,46,7,48],[12,47,7,49,"category"],[12,55,7,57],[12,57,7,59],[13,6,8,8],[13,12,8,14,"existing"],[13,20,8,22],[13,23,8,25,"map"],[13,26,8,28],[13,27,8,29,"get"],[13,30,8,32],[13,31,8,33,"key"],[13,34,8,36],[13,35,8,37],[14,6,9,8],[14,10,9,12,"existing"],[14,18,9,20],[14,20,9,22],[15,8,10,12,"existing"],[15,16,10,20],[15,17,10,21,"quantity"],[15,25,10,29],[15,29,10,33,"outcome"],[15,36,10,40],[15,37,10,41,"quantity"],[15,45,10,49],[16,6,11,8],[16,7,11,9],[16,13,12,13],[17,8,13,12,"map"],[17,11,13,15],[17,12,13,16,"set"],[17,15,13,19],[17,16,13,20,"key"],[17,19,13,23],[17,21,13,25,"outcome"],[17,28,13,32],[17,29,13,33],[18,6,14,8],[19,4,15,4],[19,5,15,5],[20,4,16,4,"merge"],[20,9,16,9],[20,10,16,10,"forEach"],[20,17,16,17],[20,18,16,18,"outcomes"],[20,26,16,26],[20,30,16,30,"outcomes"],[20,38,16,38],[20,39,16,39,"forEach"],[20,46,16,46],[20,47,16,47,"process"],[20,54,16,54],[20,55,16,55],[20,56,16,56],[21,4,17,4],[21,11,17,11],[21,12,17,12],[21,15,17,15,"map"],[21,18,17,18],[21,19,17,19,"values"],[21,25,17,25],[21,26,17,26],[21,27,17,27],[21,28,17,28],[22,2,18,0],[23,0,18,1],[23,3]],"functionMap":{"names":["<global>","mergeOutcomes","process","merge.forEach$argument_0"],"mappings":"AAA;OCG;oBCE;KDS;kBEC,qCF;CDE"}},"type":"js/module"}]}