{"dependencies":[{"name":"@sentry-internal/browser-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":264,"index":264}}],"key":"NhwjGxy6N7nYR3SR4JfgASTvmbA=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":265},"end":{"line":2,"column":466,"index":731}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":732},"end":{"line":3,"column":48,"index":780}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":781},"end":{"line":4,"column":39,"index":820}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}},{"name":"./backgroundtab.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":821},"end":{"line":5,"column":68,"index":889}}],"key":"hAWXT7iuWh19lbedjrAdyuwKBVI=","exportNames":["*"]}},{"name":"./request.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":890},"end":{"line":6,"column":96,"index":986}}],"key":"dUs/n6PxkLP9TE+WUojZt9x7F8s=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.browserTracingIntegration = exports.BROWSER_TRACING_INTEGRATION_ID = void 0;\n  exports.getMetaContent = getMetaContent;\n  exports.startBrowserTracingNavigationSpan = startBrowserTracingNavigationSpan;\n  exports.startBrowserTracingPageLoadSpan = startBrowserTracingPageLoadSpan;\n  var _browserUtils = require(_dependencyMap[0], \"@sentry-internal/browser-utils\");\n  var _core = require(_dependencyMap[1], \"@sentry/core\");\n  var _debugBuild = require(_dependencyMap[2], \"../debug-build.js\");\n  var _helpers = require(_dependencyMap[3], \"../helpers.js\");\n  var _backgroundtab = require(_dependencyMap[4], \"./backgroundtab.js\");\n  var _request = require(_dependencyMap[5], \"./request.js\");\n  /* eslint-disable max-lines */\n\n  const BROWSER_TRACING_INTEGRATION_ID = exports.BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n  const DEFAULT_BROWSER_TRACING_OPTIONS = {\n    ..._core.TRACING_DEFAULTS,\n    instrumentNavigation: true,\n    instrumentPageLoad: true,\n    markBackgroundSpan: true,\n    enableLongTask: true,\n    enableLongAnimationFrame: true,\n    enableInp: true,\n    _experiments: {},\n    ..._request.defaultRequestInstrumentationOptions\n  };\n\n  /**\n   * The Browser Tracing integration automatically instruments browser pageload/navigation\n   * actions as transactions, and captures requests, metrics and errors as spans.\n   *\n   * The integration can be configured with a variety of options, and can be extended to use\n   * any routing library.\n   *\n   * We explicitly export the proper type here, as this has to be extended in some cases.\n   */\n  const browserTracingIntegration = (_options = {}) => {\n    (0, _core.registerSpanErrorInstrumentation)();\n    const {\n      enableInp,\n      enableLongTask,\n      enableLongAnimationFrame,\n      _experiments: {\n        enableInteractions,\n        enableStandaloneClsSpans\n      },\n      beforeStartSpan,\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      markBackgroundSpan,\n      traceFetch,\n      traceXHR,\n      trackFetchStreamPerformance,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      instrumentPageLoad,\n      instrumentNavigation\n    } = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options\n    };\n    const _collectWebVitals = (0, _browserUtils.startTrackingWebVitals)({\n      recordClsStandaloneSpans: enableStandaloneClsSpans || false\n    });\n    if (enableInp) {\n      (0, _browserUtils.startTrackingINP)();\n    }\n    if (enableLongAnimationFrame && _core.GLOBAL_OBJ.PerformanceObserver && PerformanceObserver.supportedEntryTypes && PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')) {\n      (0, _browserUtils.startTrackingLongAnimationFrames)();\n    } else if (enableLongTask) {\n      (0, _browserUtils.startTrackingLongTasks)();\n    }\n    if (enableInteractions) {\n      (0, _browserUtils.startTrackingInteractions)();\n    }\n    const latestRoute = {\n      name: undefined,\n      source: undefined\n    };\n\n    /** Create routing idle transaction. */\n    function _createRouteSpan(client, startSpanOptions) {\n      const isPageloadTransaction = startSpanOptions.op === 'pageload';\n      const finalStartSpanOptions = beforeStartSpan ? beforeStartSpan(startSpanOptions) : startSpanOptions;\n      const attributes = finalStartSpanOptions.attributes || {};\n\n      // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n      // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n      if (startSpanOptions.name !== finalStartSpanOptions.name) {\n        attributes[_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n        finalStartSpanOptions.attributes = attributes;\n      }\n      latestRoute.name = finalStartSpanOptions.name;\n      latestRoute.source = attributes[_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n      const idleSpan = (0, _core.startIdleSpan)(finalStartSpanOptions, {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n        // should wait for finish signal if it's a pageload transaction\n        disableAutoFinish: isPageloadTransaction,\n        beforeSpanEnd: span => {\n          _collectWebVitals();\n          (0, _browserUtils.addPerformanceEntries)(span, {\n            recordClsOnPageloadSpan: !enableStandaloneClsSpans\n          });\n        }\n      });\n      function emitFinish() {\n        if (['interactive', 'complete'].includes(_helpers.WINDOW.document.readyState)) {\n          client.emit('idleSpanEnableAutoFinish', idleSpan);\n        }\n      }\n      if (isPageloadTransaction && _helpers.WINDOW.document) {\n        _helpers.WINDOW.document.addEventListener('readystatechange', () => {\n          emitFinish();\n        });\n        emitFinish();\n      }\n      return idleSpan;\n    }\n    return {\n      name: BROWSER_TRACING_INTEGRATION_ID,\n      afterAllSetup(client) {\n        let activeSpan;\n        let startingUrl = _helpers.WINDOW.location && _helpers.WINDOW.location.href;\n        function maybeEndActiveSpan() {\n          if (activeSpan && !(0, _core.spanToJSON)(activeSpan).timestamp) {\n            _debugBuild.DEBUG_BUILD && _core.logger.log(`[Tracing] Finishing current active span with op: ${(0, _core.spanToJSON)(activeSpan).op}`);\n            // If there's an open active span, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n        }\n        client.on('startNavigationSpan', startSpanOptions => {\n          if ((0, _core.getClient)() !== client) {\n            return;\n          }\n          maybeEndActiveSpan();\n          activeSpan = _createRouteSpan(client, {\n            op: 'navigation',\n            ...startSpanOptions\n          });\n        });\n        client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n          if ((0, _core.getClient)() !== client) {\n            return;\n          }\n          maybeEndActiveSpan();\n          const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n          const baggage = traceOptions.baggage || getMetaContent('baggage');\n          const propagationContext = (0, _core.propagationContextFromHeaders)(sentryTrace, baggage);\n          (0, _core.getCurrentScope)().setPropagationContext(propagationContext);\n          activeSpan = _createRouteSpan(client, {\n            op: 'pageload',\n            ...startSpanOptions\n          });\n        });\n\n        // A trace should to stay the consistent over the entire time span of one route.\n        // Therefore, when the initial pageload or navigation root span ends, we update the\n        // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n        // the dynamic sampling context valid, even after the root span has ended.\n        // This ensures that the trace data is consistent for the entire duration of the route.\n        client.on('spanEnd', span => {\n          const op = (0, _core.spanToJSON)(span).op;\n          if (span !== (0, _core.getRootSpan)(span) || op !== 'navigation' && op !== 'pageload') {\n            return;\n          }\n          const scope = (0, _core.getCurrentScope)();\n          const oldPropagationContext = scope.getPropagationContext();\n          scope.setPropagationContext({\n            ...oldPropagationContext,\n            sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : (0, _core.spanIsSampled)(span),\n            dsc: oldPropagationContext.dsc || (0, _core.getDynamicSamplingContextFromSpan)(span)\n          });\n        });\n        if (_helpers.WINDOW.location) {\n          if (instrumentPageLoad) {\n            startBrowserTracingPageLoadSpan(client, {\n              name: _helpers.WINDOW.location.pathname,\n              // pageload should always start at timeOrigin (and needs to be in s, not ms)\n              startTime: _core.browserPerformanceTimeOrigin ? _core.browserPerformanceTimeOrigin / 1000 : undefined,\n              attributes: {\n                [_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser'\n              }\n            });\n          }\n          if (instrumentNavigation) {\n            (0, _browserUtils.addHistoryInstrumentationHandler)(({\n              to,\n              from\n            }) => {\n              /**\n               * This early return is there to account for some cases where a navigation transaction starts right after\n               * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n               * create an uneccessary navigation transaction.\n               *\n               * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n               * only be caused in certain development environments where the usage of a hot module reloader is causing\n               * errors.\n               */\n              if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                startingUrl = undefined;\n                return;\n              }\n              if (from !== to) {\n                startingUrl = undefined;\n                startBrowserTracingNavigationSpan(client, {\n                  name: _helpers.WINDOW.location.pathname,\n                  attributes: {\n                    [_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                    [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser'\n                  }\n                });\n              }\n            });\n          }\n        }\n        if (markBackgroundSpan) {\n          (0, _backgroundtab.registerBackgroundTabDetection)();\n        }\n        if (enableInteractions) {\n          registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n        }\n        if (enableInp) {\n          (0, _browserUtils.registerInpInteractionListener)();\n        }\n        (0, _request.instrumentOutgoingRequests)(client, {\n          traceFetch,\n          traceXHR,\n          trackFetchStreamPerformance,\n          tracePropagationTargets: client.getOptions().tracePropagationTargets,\n          shouldCreateSpanForRequest,\n          enableHTTPTimings\n        });\n      }\n    };\n  };\n\n  /**\n   * Manually start a page load span.\n   * This will only do something if a browser tracing integration integration has been setup.\n   *\n   * If you provide a custom `traceOptions` object, it will be used to continue the trace\n   * instead of the default behavior, which is to look it up on the <meta> tags.\n   */\n  exports.browserTracingIntegration = browserTracingIntegration;\n  function startBrowserTracingPageLoadSpan(client, spanOptions, traceOptions) {\n    client.emit('startPageLoadSpan', spanOptions, traceOptions);\n    (0, _core.getCurrentScope)().setTransactionName(spanOptions.name);\n    const span = (0, _core.getActiveSpan)();\n    const op = span && (0, _core.spanToJSON)(span).op;\n    return op === 'pageload' ? span : undefined;\n  }\n\n  /**\n   * Manually start a navigation span.\n   * This will only do something if a browser tracing integration has been setup.\n   */\n  function startBrowserTracingNavigationSpan(client, spanOptions) {\n    (0, _core.getIsolationScope)().setPropagationContext({\n      traceId: (0, _core.generateTraceId)()\n    });\n    (0, _core.getCurrentScope)().setPropagationContext({\n      traceId: (0, _core.generateTraceId)()\n    });\n    client.emit('startNavigationSpan', spanOptions);\n    (0, _core.getCurrentScope)().setTransactionName(spanOptions.name);\n    const span = (0, _core.getActiveSpan)();\n    const op = span && (0, _core.spanToJSON)(span).op;\n    return op === 'navigation' ? span : undefined;\n  }\n\n  /** Returns the value of a meta tag */\n  function getMetaContent(metaName) {\n    // Can't specify generic to `getDomElement` because tracing can be used\n    // in a variety of environments, have to disable `no-unsafe-member-access`\n    // as a result.\n    // eslint-disable-next-line deprecation/deprecation\n    const metaTag = (0, _core.getDomElement)(`meta[name=${metaName}]`);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return metaTag ? metaTag.getAttribute('content') : undefined;\n  }\n\n  /** Start listener for interaction transactions */\n  function registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute) {\n    let inflightInteractionSpan;\n    const registerInteractionTransaction = () => {\n      const op = 'ui.action.click';\n      const activeSpan = (0, _core.getActiveSpan)();\n      const rootSpan = activeSpan && (0, _core.getRootSpan)(activeSpan);\n      if (rootSpan) {\n        const currentRootSpanOp = (0, _core.spanToJSON)(rootSpan).op;\n        if (['navigation', 'pageload'].includes(currentRootSpanOp)) {\n          _debugBuild.DEBUG_BUILD && _core.logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n          return undefined;\n        }\n      }\n      if (inflightInteractionSpan) {\n        inflightInteractionSpan.setAttribute(_core.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n        inflightInteractionSpan.end();\n        inflightInteractionSpan = undefined;\n      }\n      if (!latestRoute.name) {\n        _debugBuild.DEBUG_BUILD && _core.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n      inflightInteractionSpan = (0, _core.startIdleSpan)({\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url'\n        }\n      }, {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout\n      });\n    };\n    if (_helpers.WINDOW.document) {\n      addEventListener('click', registerInteractionTransaction, {\n        once: false,\n        capture: true\n      });\n    }\n  }\n});","lineCount":330,"map":[[9,2,1,0],[9,6,1,0,"_browserUtils"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_core"],[10,11,2,0],[10,14,2,0,"require"],[10,21,2,0],[10,22,2,0,"_dependencyMap"],[10,36,2,0],[11,2,3,0],[11,6,3,0,"_debugBuild"],[11,17,3,0],[11,20,3,0,"require"],[11,27,3,0],[11,28,3,0,"_dependencyMap"],[11,42,3,0],[12,2,4,0],[12,6,4,0,"_helpers"],[12,14,4,0],[12,17,4,0,"require"],[12,24,4,0],[12,25,4,0,"_dependencyMap"],[12,39,4,0],[13,2,5,0],[13,6,5,0,"_backgroundtab"],[13,20,5,0],[13,23,5,0,"require"],[13,30,5,0],[13,31,5,0,"_dependencyMap"],[13,45,5,0],[14,2,6,0],[14,6,6,0,"_request"],[14,14,6,0],[14,17,6,0,"require"],[14,24,6,0],[14,25,6,0,"_dependencyMap"],[14,39,6,0],[15,2,8,0],[17,2,10,0],[17,8,10,6,"BROWSER_TRACING_INTEGRATION_ID"],[17,38,10,36],[17,41,10,36,"exports"],[17,48,10,36],[17,49,10,36,"BROWSER_TRACING_INTEGRATION_ID"],[17,79,10,36],[17,82,10,39],[17,98,10,55],[18,2,12,0],[18,8,12,6,"DEFAULT_BROWSER_TRACING_OPTIONS"],[18,39,12,37],[18,42,12,40],[19,4,13,2],[19,7,13,5,"TRACING_DEFAULTS"],[19,29,13,21],[20,4,14,2,"instrumentNavigation"],[20,24,14,22],[20,26,14,24],[20,30,14,28],[21,4,15,2,"instrumentPageLoad"],[21,22,15,20],[21,24,15,22],[21,28,15,26],[22,4,16,2,"markBackgroundSpan"],[22,22,16,20],[22,24,16,22],[22,28,16,26],[23,4,17,2,"enableLongTask"],[23,18,17,16],[23,20,17,18],[23,24,17,22],[24,4,18,2,"enableLongAnimationFrame"],[24,28,18,26],[24,30,18,28],[24,34,18,32],[25,4,19,2,"enableInp"],[25,13,19,11],[25,15,19,13],[25,19,19,17],[26,4,20,2,"_experiments"],[26,16,20,14],[26,18,20,16],[26,19,20,17],[26,20,20,18],[27,4,21,2],[27,7,21,5,"defaultRequestInstrumentationOptions"],[28,2,22,0],[28,3,22,1],[30,2,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,2,33,0],[39,8,33,6,"browserTracingIntegration"],[39,33,33,31],[39,36,33,35,"browserTracingIntegration"],[39,37,33,36,"_options"],[39,45,33,44],[39,48,33,47],[39,49,33,48],[39,50,33,49],[39,55,33,54],[40,4,34,2],[40,8,34,2,"registerSpanErrorInstrumentation"],[40,46,34,34],[40,48,34,35],[40,49,34,36],[41,4,36,2],[41,10,36,8],[42,6,37,4,"enableInp"],[42,15,37,13],[43,6,38,4,"enableLongTask"],[43,20,38,18],[44,6,39,4,"enableLongAnimationFrame"],[44,30,39,28],[45,6,40,4,"_experiments"],[45,18,40,16],[45,20,40,18],[46,8,40,20,"enableInteractions"],[46,26,40,38],[47,8,40,40,"enableStandaloneClsSpans"],[48,6,40,65],[48,7,40,66],[49,6,41,4,"beforeStartSpan"],[49,21,41,19],[50,6,42,4,"idleTimeout"],[50,17,42,15],[51,6,43,4,"finalTimeout"],[51,18,43,16],[52,6,44,4,"childSpanTimeout"],[52,22,44,20],[53,6,45,4,"markBackgroundSpan"],[53,24,45,22],[54,6,46,4,"traceFetch"],[54,16,46,14],[55,6,47,4,"traceXHR"],[55,14,47,12],[56,6,48,4,"trackFetchStreamPerformance"],[56,33,48,31],[57,6,49,4,"shouldCreateSpanForRequest"],[57,32,49,30],[58,6,50,4,"enableHTTPTimings"],[58,23,50,21],[59,6,51,4,"instrumentPageLoad"],[59,24,51,22],[60,6,52,4,"instrumentNavigation"],[61,4,53,2],[61,5,53,3],[61,8,53,6],[62,6,54,4],[62,9,54,7,"DEFAULT_BROWSER_TRACING_OPTIONS"],[62,40,54,38],[63,6,55,4],[63,9,55,7,"_options"],[64,4,56,2],[64,5,56,3],[65,4,58,2],[65,10,58,8,"_collectWebVitals"],[65,27,58,25],[65,30,58,28],[65,34,58,28,"startTrackingWebVitals"],[65,70,58,50],[65,72,58,51],[66,6,58,53,"recordClsStandaloneSpans"],[66,30,58,77],[66,32,58,79,"enableStandaloneClsSpans"],[66,56,58,103],[66,60,58,107],[67,4,58,113],[67,5,58,114],[67,6,58,115],[68,4,60,2],[68,8,60,6,"enableInp"],[68,17,60,15],[68,19,60,17],[69,6,61,4],[69,10,61,4,"startTrackingINP"],[69,40,61,20],[69,42,61,21],[69,43,61,22],[70,4,62,2],[71,4,64,2],[71,8,65,4,"enableLongAnimationFrame"],[71,32,65,28],[71,36,66,4,"GLOBAL_OBJ"],[71,52,66,14],[71,53,66,15,"PerformanceObserver"],[71,72,66,34],[71,76,67,4,"PerformanceObserver"],[71,95,67,23],[71,96,67,24,"supportedEntryTypes"],[71,115,67,43],[71,119,68,4,"PerformanceObserver"],[71,138,68,23],[71,139,68,24,"supportedEntryTypes"],[71,158,68,43],[71,159,68,44,"includes"],[71,167,68,52],[71,168,68,53],[71,190,68,75],[71,191,68,76],[71,193,69,4],[72,6,70,4],[72,10,70,4,"startTrackingLongAnimationFrames"],[72,56,70,36],[72,58,70,37],[72,59,70,38],[73,4,71,2],[73,5,71,3],[73,11,71,9],[73,15,71,13,"enableLongTask"],[73,29,71,27],[73,31,71,29],[74,6,72,4],[74,10,72,4,"startTrackingLongTasks"],[74,46,72,26],[74,48,72,27],[74,49,72,28],[75,4,73,2],[76,4,75,2],[76,8,75,6,"enableInteractions"],[76,26,75,24],[76,28,75,26],[77,6,76,4],[77,10,76,4,"startTrackingInteractions"],[77,49,76,29],[77,51,76,30],[77,52,76,31],[78,4,77,2],[79,4,79,2],[79,10,79,8,"latestRoute"],[79,21,79,19],[79,24,79,22],[80,6,80,4,"name"],[80,10,80,8],[80,12,80,10,"undefined"],[80,21,80,19],[81,6,81,4,"source"],[81,12,81,10],[81,14,81,12,"undefined"],[82,4,82,2],[82,5,82,3],[84,4,84,2],[85,4,85,2],[85,13,85,11,"_createRouteSpan"],[85,29,85,27,"_createRouteSpan"],[85,30,85,28,"client"],[85,36,85,34],[85,38,85,36,"startSpanOptions"],[85,54,85,52],[85,56,85,54],[86,6,86,4],[86,12,86,10,"isPageloadTransaction"],[86,33,86,31],[86,36,86,34,"startSpanOptions"],[86,52,86,50],[86,53,86,51,"op"],[86,55,86,53],[86,60,86,58],[86,70,86,68],[87,6,88,4],[87,12,88,10,"finalStartSpanOptions"],[87,33,88,31],[87,36,88,34,"beforeStartSpan"],[87,51,88,49],[87,54,89,8,"beforeStartSpan"],[87,69,89,23],[87,70,89,24,"startSpanOptions"],[87,86,89,40],[87,87,89,41],[87,90,90,8,"startSpanOptions"],[87,106,90,24],[88,6,92,4],[88,12,92,10,"attributes"],[88,22,92,20],[88,25,92,23,"finalStartSpanOptions"],[88,46,92,44],[88,47,92,45,"attributes"],[88,57,92,55],[88,61,92,59],[88,62,92,60],[88,63,92,61],[90,6,94,4],[91,6,95,4],[92,6,96,4],[92,10,96,8,"startSpanOptions"],[92,26,96,24],[92,27,96,25,"name"],[92,31,96,29],[92,36,96,34,"finalStartSpanOptions"],[92,57,96,55],[92,58,96,56,"name"],[92,62,96,60],[92,64,96,62],[93,8,97,6,"attributes"],[93,18,97,16],[93,19,97,17,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[93,57,97,49],[93,58,97,50],[93,61,97,53],[93,69,97,61],[94,8,98,6,"finalStartSpanOptions"],[94,29,98,27],[94,30,98,28,"attributes"],[94,40,98,38],[94,43,98,41,"attributes"],[94,53,98,51],[95,6,99,4],[96,6,101,4,"latestRoute"],[96,17,101,15],[96,18,101,16,"name"],[96,22,101,20],[96,25,101,23,"finalStartSpanOptions"],[96,46,101,44],[96,47,101,45,"name"],[96,51,101,49],[97,6,102,4,"latestRoute"],[97,17,102,15],[97,18,102,16,"source"],[97,24,102,22],[97,27,102,25,"attributes"],[97,37,102,35],[97,38,102,36,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[97,76,102,68],[97,77,102,69],[98,6,104,4],[98,12,104,10,"idleSpan"],[98,20,104,18],[98,23,104,21],[98,27,104,21,"startIdleSpan"],[98,46,104,34],[98,48,104,35,"finalStartSpanOptions"],[98,69,104,56],[98,71,104,58],[99,8,105,6,"idleTimeout"],[99,19,105,17],[100,8,106,6,"finalTimeout"],[100,20,106,18],[101,8,107,6,"childSpanTimeout"],[101,24,107,22],[102,8,108,6],[103,8,109,6,"disableAutoFinish"],[103,25,109,23],[103,27,109,25,"isPageloadTransaction"],[103,48,109,46],[104,8,110,6,"beforeSpanEnd"],[104,21,110,19],[104,23,110,21,"span"],[104,27,110,25],[104,31,110,29],[105,10,111,8,"_collectWebVitals"],[105,27,111,25],[105,28,111,26],[105,29,111,27],[106,10,112,8],[106,14,112,8,"addPerformanceEntries"],[106,49,112,29],[106,51,112,30,"span"],[106,55,112,34],[106,57,112,36],[107,12,112,38,"recordClsOnPageloadSpan"],[107,35,112,61],[107,37,112,63],[107,38,112,64,"enableStandaloneClsSpans"],[108,10,112,89],[108,11,112,90],[108,12,112,91],[109,8,113,6],[110,6,114,4],[110,7,114,5],[110,8,114,6],[111,6,116,4],[111,15,116,13,"emitFinish"],[111,25,116,23,"emitFinish"],[111,26,116,23],[111,28,116,26],[112,8,117,6],[112,12,117,10],[112,13,117,11],[112,26,117,24],[112,28,117,26],[112,38,117,36],[112,39,117,37],[112,40,117,38,"includes"],[112,48,117,46],[112,49,117,47,"WINDOW"],[112,64,117,53],[112,65,117,54,"document"],[112,73,117,62],[112,74,117,63,"readyState"],[112,84,117,73],[112,85,117,74],[112,87,117,76],[113,10,118,8,"client"],[113,16,118,14],[113,17,118,15,"emit"],[113,21,118,19],[113,22,118,20],[113,48,118,46],[113,50,118,48,"idleSpan"],[113,58,118,56],[113,59,118,57],[114,8,119,6],[115,6,120,4],[116,6,122,4],[116,10,122,8,"isPageloadTransaction"],[116,31,122,29],[116,35,122,33,"WINDOW"],[116,50,122,39],[116,51,122,40,"document"],[116,59,122,48],[116,61,122,50],[117,8,123,6,"WINDOW"],[117,23,123,12],[117,24,123,13,"document"],[117,32,123,21],[117,33,123,22,"addEventListener"],[117,49,123,38],[117,50,123,39],[117,68,123,57],[117,70,123,59],[117,76,123,65],[118,10,124,8,"emitFinish"],[118,20,124,18],[118,21,124,19],[118,22,124,20],[119,8,125,6],[119,9,125,7],[119,10,125,8],[120,8,127,6,"emitFinish"],[120,18,127,16],[120,19,127,17],[120,20,127,18],[121,6,128,4],[122,6,130,4],[122,13,130,11,"idleSpan"],[122,21,130,19],[123,4,131,2],[124,4,133,2],[124,11,133,9],[125,6,134,4,"name"],[125,10,134,8],[125,12,134,10,"BROWSER_TRACING_INTEGRATION_ID"],[125,42,134,40],[126,6,135,4,"afterAllSetup"],[126,19,135,17,"afterAllSetup"],[126,20,135,18,"client"],[126,26,135,24],[126,28,135,26],[127,8,136,6],[127,12,136,10,"activeSpan"],[127,22,136,20],[128,8,137,6],[128,12,137,10,"startingUrl"],[128,23,137,21],[128,26,137,24,"WINDOW"],[128,41,137,30],[128,42,137,31,"location"],[128,50,137,39],[128,54,137,43,"WINDOW"],[128,69,137,49],[128,70,137,50,"location"],[128,78,137,58],[128,79,137,59,"href"],[128,83,137,63],[129,8,139,6],[129,17,139,15,"maybeEndActiveSpan"],[129,35,139,33,"maybeEndActiveSpan"],[129,36,139,33],[129,38,139,36],[130,10,140,8],[130,14,140,12,"activeSpan"],[130,24,140,22],[130,28,140,26],[130,29,140,27],[130,33,140,27,"spanToJSON"],[130,49,140,37],[130,51,140,38,"activeSpan"],[130,61,140,48],[130,62,140,49],[130,63,140,50,"timestamp"],[130,72,140,59],[130,74,140,61],[131,12,141,10,"DEBUG_BUILD"],[131,35,141,21],[131,39,141,25,"logger"],[131,51,141,31],[131,52,141,32,"log"],[131,55,141,35],[131,56,141,36],[131,108,141,88],[131,112,141,88,"spanToJSON"],[131,128,141,98],[131,130,141,99,"activeSpan"],[131,140,141,109],[131,141,141,110],[131,142,141,111,"op"],[131,144,141,113],[131,146,141,115],[131,147,141,116],[132,12,142,10],[133,12,143,10,"activeSpan"],[133,22,143,20],[133,23,143,21,"end"],[133,26,143,24],[133,27,143,25],[133,28,143,26],[134,10,144,8],[135,8,145,6],[136,8,147,6,"client"],[136,14,147,12],[136,15,147,13,"on"],[136,17,147,15],[136,18,147,16],[136,39,147,37],[136,41,147,39,"startSpanOptions"],[136,57,147,55],[136,61,147,59],[137,10,148,8],[137,14,148,12],[137,18,148,12,"getClient"],[137,33,148,21],[137,35,148,22],[137,36,148,23],[137,41,148,28,"client"],[137,47,148,34],[137,49,148,36],[138,12,149,10],[139,10,150,8],[140,10,152,8,"maybeEndActiveSpan"],[140,28,152,26],[140,29,152,27],[140,30,152,28],[141,10,154,8,"activeSpan"],[141,20,154,18],[141,23,154,21,"_createRouteSpan"],[141,39,154,37],[141,40,154,38,"client"],[141,46,154,44],[141,48,154,46],[142,12,155,10,"op"],[142,14,155,12],[142,16,155,14],[142,28,155,26],[143,12,156,10],[143,15,156,13,"startSpanOptions"],[144,10,157,8],[144,11,157,9],[144,12,157,10],[145,8,158,6],[145,9,158,7],[145,10,158,8],[146,8,160,6,"client"],[146,14,160,12],[146,15,160,13,"on"],[146,17,160,15],[146,18,160,16],[146,37,160,35],[146,39,160,37],[146,40,160,38,"startSpanOptions"],[146,56,160,54],[146,58,160,56,"traceOptions"],[146,70,160,68],[146,73,160,71],[146,74,160,72],[146,75,160,73],[146,80,160,78],[147,10,161,8],[147,14,161,12],[147,18,161,12,"getClient"],[147,33,161,21],[147,35,161,22],[147,36,161,23],[147,41,161,28,"client"],[147,47,161,34],[147,49,161,36],[148,12,162,10],[149,10,163,8],[150,10,164,8,"maybeEndActiveSpan"],[150,28,164,26],[150,29,164,27],[150,30,164,28],[151,10,166,8],[151,16,166,14,"sentryTrace"],[151,27,166,25],[151,30,166,28,"traceOptions"],[151,42,166,40],[151,43,166,41,"sentryTrace"],[151,54,166,52],[151,58,166,56,"getMetaContent"],[151,72,166,70],[151,73,166,71],[151,87,166,85],[151,88,166,86],[152,10,167,8],[152,16,167,14,"baggage"],[152,23,167,21],[152,26,167,24,"traceOptions"],[152,38,167,36],[152,39,167,37,"baggage"],[152,46,167,44],[152,50,167,48,"getMetaContent"],[152,64,167,62],[152,65,167,63],[152,74,167,72],[152,75,167,73],[153,10,169,8],[153,16,169,14,"propagationContext"],[153,34,169,32],[153,37,169,35],[153,41,169,35,"propagationContextFromHeaders"],[153,76,169,64],[153,78,169,65,"sentryTrace"],[153,89,169,76],[153,91,169,78,"baggage"],[153,98,169,85],[153,99,169,86],[154,10,170,8],[154,14,170,8,"getCurrentScope"],[154,35,170,23],[154,37,170,24],[154,38,170,25],[154,39,170,26,"setPropagationContext"],[154,60,170,47],[154,61,170,48,"propagationContext"],[154,79,170,66],[154,80,170,67],[155,10,172,8,"activeSpan"],[155,20,172,18],[155,23,172,21,"_createRouteSpan"],[155,39,172,37],[155,40,172,38,"client"],[155,46,172,44],[155,48,172,46],[156,12,173,10,"op"],[156,14,173,12],[156,16,173,14],[156,26,173,24],[157,12,174,10],[157,15,174,13,"startSpanOptions"],[158,10,175,8],[158,11,175,9],[158,12,175,10],[159,8,176,6],[159,9,176,7],[159,10,176,8],[161,8,178,6],[162,8,179,6],[163,8,180,6],[164,8,181,6],[165,8,182,6],[166,8,183,6,"client"],[166,14,183,12],[166,15,183,13,"on"],[166,17,183,15],[166,18,183,16],[166,27,183,25],[166,29,183,27,"span"],[166,33,183,31],[166,37,183,35],[167,10,184,8],[167,16,184,14,"op"],[167,18,184,16],[167,21,184,19],[167,25,184,19,"spanToJSON"],[167,41,184,29],[167,43,184,30,"span"],[167,47,184,34],[167,48,184,35],[167,49,184,36,"op"],[167,51,184,38],[168,10,185,8],[168,14,185,12,"span"],[168,18,185,16],[168,23,185,21],[168,27,185,21,"getRootSpan"],[168,44,185,32],[168,46,185,33,"span"],[168,50,185,37],[168,51,185,38],[168,55,185,43,"op"],[168,57,185,45],[168,62,185,50],[168,74,185,62],[168,78,185,66,"op"],[168,80,185,68],[168,85,185,73],[168,95,185,84],[168,97,185,86],[169,12,186,10],[170,10,187,8],[171,10,189,8],[171,16,189,14,"scope"],[171,21,189,19],[171,24,189,22],[171,28,189,22,"getCurrentScope"],[171,49,189,37],[171,51,189,38],[171,52,189,39],[172,10,190,8],[172,16,190,14,"oldPropagationContext"],[172,37,190,35],[172,40,190,38,"scope"],[172,45,190,43],[172,46,190,44,"getPropagationContext"],[172,67,190,65],[172,68,190,66],[172,69,190,67],[173,10,192,8,"scope"],[173,15,192,13],[173,16,192,14,"setPropagationContext"],[173,37,192,35],[173,38,192,36],[174,12,193,10],[174,15,193,13,"oldPropagationContext"],[174,36,193,34],[175,12,194,10,"sampled"],[175,19,194,17],[175,21,194,19,"oldPropagationContext"],[175,42,194,40],[175,43,194,41,"sampled"],[175,50,194,48],[175,55,194,53,"undefined"],[175,64,194,62],[175,67,194,65,"oldPropagationContext"],[175,88,194,86],[175,89,194,87,"sampled"],[175,96,194,94],[175,99,194,97],[175,103,194,97,"spanIsSampled"],[175,122,194,110],[175,124,194,111,"span"],[175,128,194,115],[175,129,194,116],[176,12,195,10,"dsc"],[176,15,195,13],[176,17,195,15,"oldPropagationContext"],[176,38,195,36],[176,39,195,37,"dsc"],[176,42,195,40],[176,46,195,44],[176,50,195,44,"getDynamicSamplingContextFromSpan"],[176,89,195,77],[176,91,195,78,"span"],[176,95,195,82],[177,10,196,8],[177,11,196,9],[177,12,196,10],[178,8,197,6],[178,9,197,7],[178,10,197,8],[179,8,199,6],[179,12,199,10,"WINDOW"],[179,27,199,16],[179,28,199,17,"location"],[179,36,199,25],[179,38,199,27],[180,10,200,8],[180,14,200,12,"instrumentPageLoad"],[180,32,200,30],[180,34,200,32],[181,12,201,10,"startBrowserTracingPageLoadSpan"],[181,43,201,41],[181,44,201,42,"client"],[181,50,201,48],[181,52,201,50],[182,14,202,12,"name"],[182,18,202,16],[182,20,202,18,"WINDOW"],[182,35,202,24],[182,36,202,25,"location"],[182,44,202,33],[182,45,202,34,"pathname"],[182,53,202,42],[183,14,203,12],[184,14,204,12,"startTime"],[184,23,204,21],[184,25,204,23,"browserPerformanceTimeOrigin"],[184,59,204,51],[184,62,204,54,"browserPerformanceTimeOrigin"],[184,96,204,82],[184,99,204,85],[184,103,204,89],[184,106,204,92,"undefined"],[184,115,204,101],[185,14,205,12,"attributes"],[185,24,205,22],[185,26,205,24],[186,16,206,14],[186,17,206,15,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[186,55,206,47],[186,58,206,50],[186,63,206,55],[187,16,207,14],[187,17,207,15,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[187,55,207,47],[187,58,207,50],[188,14,208,12],[189,12,209,10],[189,13,209,11],[189,14,209,12],[190,10,210,8],[191,10,212,8],[191,14,212,12,"instrumentNavigation"],[191,34,212,32],[191,36,212,34],[192,12,213,10],[192,16,213,10,"addHistoryInstrumentationHandler"],[192,62,213,42],[192,64,213,43],[192,65,213,44],[193,14,213,46,"to"],[193,16,213,48],[194,14,213,50,"from"],[195,12,213,55],[195,13,213,56],[195,18,213,61],[196,14,214,12],[197,0,215,0],[198,0,216,0],[199,0,217,0],[200,0,218,0],[201,0,219,0],[202,0,220,0],[203,0,221,0],[204,0,222,0],[205,14,223,12],[205,18,223,16,"from"],[205,22,223,20],[205,27,223,25,"undefined"],[205,36,223,34],[205,40,223,38,"startingUrl"],[205,51,223,49],[205,55,223,53,"startingUrl"],[205,66,223,64],[205,67,223,65,"indexOf"],[205,74,223,72],[205,75,223,73,"to"],[205,77,223,75],[205,78,223,76],[205,83,223,81],[205,84,223,82],[205,85,223,83],[205,87,223,85],[206,16,224,14,"startingUrl"],[206,27,224,25],[206,30,224,28,"undefined"],[206,39,224,37],[207,16,225,14],[208,14,226,12],[209,14,228,12],[209,18,228,16,"from"],[209,22,228,20],[209,27,228,25,"to"],[209,29,228,27],[209,31,228,29],[210,16,229,14,"startingUrl"],[210,27,229,25],[210,30,229,28,"undefined"],[210,39,229,37],[211,16,230,14,"startBrowserTracingNavigationSpan"],[211,49,230,47],[211,50,230,48,"client"],[211,56,230,54],[211,58,230,56],[212,18,231,16,"name"],[212,22,231,20],[212,24,231,22,"WINDOW"],[212,39,231,28],[212,40,231,29,"location"],[212,48,231,37],[212,49,231,38,"pathname"],[212,57,231,46],[213,18,232,16,"attributes"],[213,28,232,26],[213,30,232,28],[214,20,233,18],[214,21,233,19,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[214,59,233,51],[214,62,233,54],[214,67,233,59],[215,20,234,18],[215,21,234,19,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[215,59,234,51],[215,62,234,54],[216,18,235,16],[217,16,236,14],[217,17,236,15],[217,18,236,16],[218,14,237,12],[219,12,238,10],[219,13,238,11],[219,14,238,12],[220,10,239,8],[221,8,240,6],[222,8,242,6],[222,12,242,10,"markBackgroundSpan"],[222,30,242,28],[222,32,242,30],[223,10,243,8],[223,14,243,8,"registerBackgroundTabDetection"],[223,59,243,38],[223,61,243,39],[223,62,243,40],[224,8,244,6],[225,8,246,6],[225,12,246,10,"enableInteractions"],[225,30,246,28],[225,32,246,30],[226,10,247,8,"registerInteractionListener"],[226,37,247,35],[226,38,247,36,"idleTimeout"],[226,49,247,47],[226,51,247,49,"finalTimeout"],[226,63,247,61],[226,65,247,63,"childSpanTimeout"],[226,81,247,79],[226,83,247,81,"latestRoute"],[226,94,247,92],[226,95,247,93],[227,8,248,6],[228,8,250,6],[228,12,250,10,"enableInp"],[228,21,250,19],[228,23,250,21],[229,10,251,8],[229,14,251,8,"registerInpInteractionListener"],[229,58,251,38],[229,60,251,39],[229,61,251,40],[230,8,252,6],[231,8,254,6],[231,12,254,6,"instrumentOutgoingRequests"],[231,47,254,32],[231,49,254,33,"client"],[231,55,254,39],[231,57,254,41],[232,10,255,8,"traceFetch"],[232,20,255,18],[233,10,256,8,"traceXHR"],[233,18,256,16],[234,10,257,8,"trackFetchStreamPerformance"],[234,37,257,35],[235,10,258,8,"tracePropagationTargets"],[235,33,258,31],[235,35,258,33,"client"],[235,41,258,39],[235,42,258,40,"getOptions"],[235,52,258,50],[235,53,258,51],[235,54,258,52],[235,55,258,53,"tracePropagationTargets"],[235,78,258,76],[236,10,259,8,"shouldCreateSpanForRequest"],[236,36,259,34],[237,10,260,8,"enableHTTPTimings"],[238,8,261,6],[238,9,261,7],[238,10,261,8],[239,6,262,4],[240,4,263,2],[240,5,263,3],[241,2,264,0],[241,3,264,2],[243,2,266,0],[244,0,267,0],[245,0,268,0],[246,0,269,0],[247,0,270,0],[248,0,271,0],[249,0,272,0],[250,2,266,0,"exports"],[250,9,266,0],[250,10,266,0,"browserTracingIntegration"],[250,35,266,0],[250,38,266,0,"browserTracingIntegration"],[250,63,266,0],[251,2,273,0],[251,11,273,9,"startBrowserTracingPageLoadSpan"],[251,42,273,40,"startBrowserTracingPageLoadSpan"],[251,43,274,2,"client"],[251,49,274,8],[251,51,275,2,"spanOptions"],[251,62,275,13],[251,64,276,2,"traceOptions"],[251,76,276,14],[251,78,277,2],[252,4,278,2,"client"],[252,10,278,8],[252,11,278,9,"emit"],[252,15,278,13],[252,16,278,14],[252,35,278,33],[252,37,278,35,"spanOptions"],[252,48,278,46],[252,50,278,48,"traceOptions"],[252,62,278,60],[252,63,278,61],[253,4,280,2],[253,8,280,2,"getCurrentScope"],[253,29,280,17],[253,31,280,18],[253,32,280,19],[253,33,280,20,"setTransactionName"],[253,51,280,38],[253,52,280,39,"spanOptions"],[253,63,280,50],[253,64,280,51,"name"],[253,68,280,55],[253,69,280,56],[254,4,282,2],[254,10,282,8,"span"],[254,14,282,12],[254,17,282,15],[254,21,282,15,"getActiveSpan"],[254,40,282,28],[254,42,282,29],[254,43,282,30],[255,4,283,2],[255,10,283,8,"op"],[255,12,283,10],[255,15,283,13,"span"],[255,19,283,17],[255,23,283,21],[255,27,283,21,"spanToJSON"],[255,43,283,31],[255,45,283,32,"span"],[255,49,283,36],[255,50,283,37],[255,51,283,38,"op"],[255,53,283,40],[256,4,284,2],[256,11,284,9,"op"],[256,13,284,11],[256,18,284,16],[256,28,284,26],[256,31,284,29,"span"],[256,35,284,33],[256,38,284,36,"undefined"],[256,47,284,45],[257,2,285,0],[259,2,287,0],[260,0,288,0],[261,0,289,0],[262,0,290,0],[263,2,291,0],[263,11,291,9,"startBrowserTracingNavigationSpan"],[263,44,291,42,"startBrowserTracingNavigationSpan"],[263,45,291,43,"client"],[263,51,291,49],[263,53,291,51,"spanOptions"],[263,64,291,62],[263,66,291,64],[264,4,292,2],[264,8,292,2,"getIsolationScope"],[264,31,292,19],[264,33,292,20],[264,34,292,21],[264,35,292,22,"setPropagationContext"],[264,56,292,43],[264,57,292,44],[265,6,292,46,"traceId"],[265,13,292,53],[265,15,292,55],[265,19,292,55,"generateTraceId"],[265,40,292,70],[265,42,292,71],[266,4,292,73],[266,5,292,74],[266,6,292,75],[267,4,293,2],[267,8,293,2,"getCurrentScope"],[267,29,293,17],[267,31,293,18],[267,32,293,19],[267,33,293,20,"setPropagationContext"],[267,54,293,41],[267,55,293,42],[268,6,293,44,"traceId"],[268,13,293,51],[268,15,293,53],[268,19,293,53,"generateTraceId"],[268,40,293,68],[268,42,293,69],[269,4,293,71],[269,5,293,72],[269,6,293,73],[270,4,295,2,"client"],[270,10,295,8],[270,11,295,9,"emit"],[270,15,295,13],[270,16,295,14],[270,37,295,35],[270,39,295,37,"spanOptions"],[270,50,295,48],[270,51,295,49],[271,4,297,2],[271,8,297,2,"getCurrentScope"],[271,29,297,17],[271,31,297,18],[271,32,297,19],[271,33,297,20,"setTransactionName"],[271,51,297,38],[271,52,297,39,"spanOptions"],[271,63,297,50],[271,64,297,51,"name"],[271,68,297,55],[271,69,297,56],[272,4,299,2],[272,10,299,8,"span"],[272,14,299,12],[272,17,299,15],[272,21,299,15,"getActiveSpan"],[272,40,299,28],[272,42,299,29],[272,43,299,30],[273,4,300,2],[273,10,300,8,"op"],[273,12,300,10],[273,15,300,13,"span"],[273,19,300,17],[273,23,300,21],[273,27,300,21,"spanToJSON"],[273,43,300,31],[273,45,300,32,"span"],[273,49,300,36],[273,50,300,37],[273,51,300,38,"op"],[273,53,300,40],[274,4,301,2],[274,11,301,9,"op"],[274,13,301,11],[274,18,301,16],[274,30,301,28],[274,33,301,31,"span"],[274,37,301,35],[274,40,301,38,"undefined"],[274,49,301,47],[275,2,302,0],[277,2,304,0],[278,2,305,0],[278,11,305,9,"getMetaContent"],[278,25,305,23,"getMetaContent"],[278,26,305,24,"metaName"],[278,34,305,32],[278,36,305,34],[279,4,306,2],[280,4,307,2],[281,4,308,2],[282,4,309,2],[283,4,310,2],[283,10,310,8,"metaTag"],[283,17,310,15],[283,20,310,18],[283,24,310,18,"getDomElement"],[283,43,310,31],[283,45,310,32],[283,58,310,45,"metaName"],[283,66,310,53],[283,69,310,56],[283,70,310,57],[284,4,311,2],[285,4,312,2],[285,11,312,9,"metaTag"],[285,18,312,16],[285,21,312,19,"metaTag"],[285,28,312,26],[285,29,312,27,"getAttribute"],[285,41,312,39],[285,42,312,40],[285,51,312,49],[285,52,312,50],[285,55,312,53,"undefined"],[285,64,312,62],[286,2,313,0],[288,2,315,0],[289,2,316,0],[289,11,316,9,"registerInteractionListener"],[289,38,316,36,"registerInteractionListener"],[289,39,317,2,"idleTimeout"],[289,50,317,13],[289,52,318,2,"finalTimeout"],[289,64,318,14],[289,66,319,2,"childSpanTimeout"],[289,82,319,18],[289,84,320,2,"latestRoute"],[289,95,320,13],[289,97,321,2],[290,4,322,2],[290,8,322,6,"inflightInteractionSpan"],[290,31,322,29],[291,4,323,2],[291,10,323,8,"registerInteractionTransaction"],[291,40,323,38],[291,43,323,41,"registerInteractionTransaction"],[291,44,323,41],[291,49,323,47],[292,6,324,4],[292,12,324,10,"op"],[292,14,324,12],[292,17,324,15],[292,34,324,32],[293,6,326,4],[293,12,326,10,"activeSpan"],[293,22,326,20],[293,25,326,23],[293,29,326,23,"getActiveSpan"],[293,48,326,36],[293,50,326,37],[293,51,326,38],[294,6,327,4],[294,12,327,10,"rootSpan"],[294,20,327,18],[294,23,327,21,"activeSpan"],[294,33,327,31],[294,37,327,35],[294,41,327,35,"getRootSpan"],[294,58,327,46],[294,60,327,47,"activeSpan"],[294,70,327,57],[294,71,327,58],[295,6,328,4],[295,10,328,8,"rootSpan"],[295,18,328,16],[295,20,328,18],[296,8,329,6],[296,14,329,12,"currentRootSpanOp"],[296,31,329,29],[296,34,329,32],[296,38,329,32,"spanToJSON"],[296,54,329,42],[296,56,329,43,"rootSpan"],[296,64,329,51],[296,65,329,52],[296,66,329,53,"op"],[296,68,329,55],[297,8,330,6],[297,12,330,10],[297,13,330,11],[297,25,330,23],[297,27,330,25],[297,37,330,35],[297,38,330,36],[297,39,330,37,"includes"],[297,47,330,45],[297,48,330,46,"currentRootSpanOp"],[297,65,330,64],[297,66,330,65],[297,68,330,67],[298,10,331,8,"DEBUG_BUILD"],[298,33,331,19],[298,37,332,10,"logger"],[298,49,332,16],[298,50,332,17,"warn"],[298,54,332,21],[298,55,332,22],[298,83,332,50,"op"],[298,85,332,52],[298,146,332,113],[298,147,332,114],[299,10,333,8],[299,17,333,15,"undefined"],[299,26,333,24],[300,8,334,6],[301,6,335,4],[302,6,337,4],[302,10,337,8,"inflightInteractionSpan"],[302,33,337,31],[302,35,337,33],[303,8,338,6,"inflightInteractionSpan"],[303,31,338,29],[303,32,338,30,"setAttribute"],[303,44,338,42],[303,45,338,43,"SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON"],[303,100,338,92],[303,102,338,94],[303,126,338,118],[303,127,338,119],[304,8,339,6,"inflightInteractionSpan"],[304,31,339,29],[304,32,339,30,"end"],[304,35,339,33],[304,36,339,34],[304,37,339,35],[305,8,340,6,"inflightInteractionSpan"],[305,31,340,29],[305,34,340,32,"undefined"],[305,43,340,41],[306,6,341,4],[307,6,343,4],[307,10,343,8],[307,11,343,9,"latestRoute"],[307,22,343,20],[307,23,343,21,"name"],[307,27,343,25],[307,29,343,27],[308,8,344,6,"DEBUG_BUILD"],[308,31,344,17],[308,35,344,21,"logger"],[308,47,344,27],[308,48,344,28,"warn"],[308,52,344,32],[308,53,344,33],[308,81,344,61,"op"],[308,83,344,63],[308,134,344,114],[308,135,344,115],[309,8,345,6],[309,15,345,13,"undefined"],[309,24,345,22],[310,6,346,4],[311,6,348,4,"inflightInteractionSpan"],[311,29,348,27],[311,32,348,30],[311,36,348,30,"startIdleSpan"],[311,55,348,43],[311,57,349,6],[312,8,350,8,"name"],[312,12,350,12],[312,14,350,14,"latestRoute"],[312,25,350,25],[312,26,350,26,"name"],[312,30,350,30],[313,8,351,8,"op"],[313,10,351,10],[314,8,352,8,"attributes"],[314,18,352,18],[314,20,352,20],[315,10,353,10],[315,11,353,11,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[315,49,353,43],[315,52,353,46,"latestRoute"],[315,63,353,57],[315,64,353,58,"source"],[315,70,353,64],[315,74,353,68],[316,8,354,8],[317,6,355,6],[317,7,355,7],[317,9,356,6],[318,8,357,8,"idleTimeout"],[318,19,357,19],[319,8,358,8,"finalTimeout"],[319,20,358,20],[320,8,359,8,"childSpanTimeout"],[321,6,360,6],[321,7,361,4],[321,8,361,5],[322,4,362,2],[322,5,362,3],[323,4,364,2],[323,8,364,6,"WINDOW"],[323,23,364,12],[323,24,364,13,"document"],[323,32,364,21],[323,34,364,23],[324,6,365,4,"addEventListener"],[324,22,365,20],[324,23,365,21],[324,30,365,28],[324,32,365,30,"registerInteractionTransaction"],[324,62,365,60],[324,64,365,62],[325,8,365,64,"once"],[325,12,365,68],[325,14,365,70],[325,19,365,75],[326,8,365,77,"capture"],[326,15,365,84],[326,17,365,86],[327,6,365,91],[327,7,365,92],[327,8,365,93],[328,4,366,2],[329,2,367,0],[330,0,367,1],[330,3]],"functionMap":{"names":["<global>","browserTracingIntegration","_createRouteSpan","startIdleSpan$argument_1.beforeSpanEnd","emitFinish","WINDOW.document.addEventListener$argument_1","afterAllSetup","maybeEndActiveSpan","client.on$argument_1","addHistoryInstrumentationHandler$argument_0","startBrowserTracingPageLoadSpan","startBrowserTracingNavigationSpan","getMetaContent","registerInteractionListener","registerInteractionTransaction"],"mappings":"AAA;mCCgC;ECoD;qBCyB;ODG;IEG;KFI;2DGG;OHE;GDM;IKI;MCI;ODM;uCEE;OFW;qCEE;OFgB;2BEO;OFc;2CGgB;WHyB;KLwB;CDE;AUS;CVY;AWM;CXW;AYG;CZQ;AaG;yCCO;GDuC;CbK"}},"type":"js/module"}]}