{"dependencies":[{"name":"./aggregator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"sbS2g25KAaHnZ2/7fmzwNknnTUE=","exportNames":["*"]}},{"name":"./exports.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":39,"index":92}}],"key":"t/+6jF6bamLhGLo72Jouy5+wt/Q=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.metricsDefault = void 0;\n  var _aggregator = require(_dependencyMap[0], \"./aggregator.js\");\n  var _exports = require(_dependencyMap[1], \"./exports.js\");\n  /**\n   * Adds a value to a counter metric\n   *\n   * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n   */\n  function increment(name, value = 1, data) {\n    // eslint-disable-next-line deprecation/deprecation\n    _exports.metrics.increment(_aggregator.MetricsAggregator, name, value, data);\n  }\n\n  /**\n   * Adds a value to a distribution metric\n   *\n   * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n   */\n  function distribution(name, value, data) {\n    // eslint-disable-next-line deprecation/deprecation\n    _exports.metrics.distribution(_aggregator.MetricsAggregator, name, value, data);\n  }\n\n  /**\n   * Adds a value to a set metric. Value must be a string or integer.\n   *\n   * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n   */\n  function set(name, value, data) {\n    // eslint-disable-next-line deprecation/deprecation\n    _exports.metrics.set(_aggregator.MetricsAggregator, name, value, data);\n  }\n\n  /**\n   * Adds a value to a gauge metric\n   *\n   * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n   */\n  function gauge(name, value, data) {\n    // eslint-disable-next-line deprecation/deprecation\n    _exports.metrics.gauge(_aggregator.MetricsAggregator, name, value, data);\n  }\n\n  /**\n   * Adds a timing metric.\n   * The metric is added as a distribution metric.\n   *\n   * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n   * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n   *\n   * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n   */\n\n  function timing(name, value, unit = 'second', data) {\n    // eslint-disable-next-line deprecation/deprecation\n    return _exports.metrics.timing(_aggregator.MetricsAggregator, name, value, unit, data);\n  }\n\n  /**\n   * Returns the metrics aggregator for a given client.\n   */\n  function getMetricsAggregatorForClient(client) {\n    // eslint-disable-next-line deprecation/deprecation\n    return _exports.metrics.getMetricsAggregatorForClient(client, _aggregator.MetricsAggregator);\n  }\n\n  /**\n   * The metrics API is used to capture custom metrics in Sentry.\n   *\n   * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n   */\n  const metricsDefault = exports.metricsDefault = {\n    increment,\n    distribution,\n    set,\n    gauge,\n    timing,\n    /**\n     * @ignore This is for internal use only.\n     */\n    getMetricsAggregatorForClient\n  };\n});","lineCount":87,"map":[[6,2,1,0],[6,6,1,0,"_aggregator"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_exports"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,2,9,0],[13,11,9,9,"increment"],[13,20,9,18,"increment"],[13,21,9,19,"name"],[13,25,9,23],[13,27,9,25,"value"],[13,32,9,30],[13,35,9,33],[13,36,9,34],[13,38,9,36,"data"],[13,42,9,40],[13,44,9,42],[14,4,10,2],[15,4,11,2,"metrics"],[15,20,11,9],[15,21,11,10,"increment"],[15,30,11,19],[15,31,11,20,"MetricsAggregator"],[15,60,11,37],[15,62,11,39,"name"],[15,66,11,43],[15,68,11,45,"value"],[15,73,11,50],[15,75,11,52,"data"],[15,79,11,56],[15,80,11,57],[16,2,12,0],[18,2,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,2,19,0],[23,11,19,9,"distribution"],[23,23,19,21,"distribution"],[23,24,19,22,"name"],[23,28,19,26],[23,30,19,28,"value"],[23,35,19,33],[23,37,19,35,"data"],[23,41,19,39],[23,43,19,41],[24,4,20,2],[25,4,21,2,"metrics"],[25,20,21,9],[25,21,21,10,"distribution"],[25,33,21,22],[25,34,21,23,"MetricsAggregator"],[25,63,21,40],[25,65,21,42,"name"],[25,69,21,46],[25,71,21,48,"value"],[25,76,21,53],[25,78,21,55,"data"],[25,82,21,59],[25,83,21,60],[26,2,22,0],[28,2,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,2,29,0],[33,11,29,9,"set"],[33,14,29,12,"set"],[33,15,29,13,"name"],[33,19,29,17],[33,21,29,19,"value"],[33,26,29,24],[33,28,29,26,"data"],[33,32,29,30],[33,34,29,32],[34,4,30,2],[35,4,31,2,"metrics"],[35,20,31,9],[35,21,31,10,"set"],[35,24,31,13],[35,25,31,14,"MetricsAggregator"],[35,54,31,31],[35,56,31,33,"name"],[35,60,31,37],[35,62,31,39,"value"],[35,67,31,44],[35,69,31,46,"data"],[35,73,31,50],[35,74,31,51],[36,2,32,0],[38,2,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,2,39,0],[43,11,39,9,"gauge"],[43,16,39,14,"gauge"],[43,17,39,15,"name"],[43,21,39,19],[43,23,39,21,"value"],[43,28,39,26],[43,30,39,28,"data"],[43,34,39,32],[43,36,39,34],[44,4,40,2],[45,4,41,2,"metrics"],[45,20,41,9],[45,21,41,10,"gauge"],[45,26,41,15],[45,27,41,16,"MetricsAggregator"],[45,56,41,33],[45,58,41,35,"name"],[45,62,41,39],[45,64,41,41,"value"],[45,69,41,46],[45,71,41,48,"data"],[45,75,41,52],[45,76,41,53],[46,2,42,0],[48,2,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[58,2,54,0],[58,11,54,9,"timing"],[58,17,54,15,"timing"],[58,18,55,2,"name"],[58,22,55,6],[58,24,56,2,"value"],[58,29,56,7],[58,31,57,2,"unit"],[58,35,57,6],[58,38,57,9],[58,46,57,17],[58,48,58,2,"data"],[58,52,58,6],[58,54,59,2],[59,4,60,2],[60,4,61,2],[60,11,61,9,"metrics"],[60,27,61,16],[60,28,61,17,"timing"],[60,34,61,23],[60,35,61,24,"MetricsAggregator"],[60,64,61,41],[60,66,61,43,"name"],[60,70,61,47],[60,72,61,49,"value"],[60,77,61,54],[60,79,61,56,"unit"],[60,83,61,60],[60,85,61,62,"data"],[60,89,61,66],[60,90,61,67],[61,2,62,0],[63,2,64,0],[64,0,65,0],[65,0,66,0],[66,2,67,0],[66,11,67,9,"getMetricsAggregatorForClient"],[66,40,67,38,"getMetricsAggregatorForClient"],[66,41,67,39,"client"],[66,47,67,45],[66,49,67,47],[67,4,68,2],[68,4,69,2],[68,11,69,9,"metrics"],[68,27,69,16],[68,28,69,17,"getMetricsAggregatorForClient"],[68,57,69,46],[68,58,69,47,"client"],[68,64,69,53],[68,66,69,55,"MetricsAggregator"],[68,95,69,72],[68,96,69,73],[69,2,70,0],[71,2,72,0],[72,0,73,0],[73,0,74,0],[74,0,75,0],[75,0,76,0],[76,2,77,0],[76,8,77,6,"metricsDefault"],[76,22,77,20],[76,25,77,20,"exports"],[76,32,77,20],[76,33,77,20,"metricsDefault"],[76,47,77,20],[76,50,79,3],[77,4,80,2,"increment"],[77,13,80,11],[78,4,81,2,"distribution"],[78,16,81,14],[79,4,82,2,"set"],[79,7,82,5],[80,4,83,2,"gauge"],[80,9,83,7],[81,4,84,2,"timing"],[81,10,84,8],[82,4,85,2],[83,0,86,0],[84,0,87,0],[85,4,88,2,"getMetricsAggregatorForClient"],[86,2,89,0],[86,3,89,1],[87,0,89,2],[87,3]],"functionMap":{"names":["<global>","increment","distribution","set","gauge","timing","getMetricsAggregatorForClient"],"mappings":"AAA;ACQ;CDG;AEO;CFG;AGO;CHG;AIO;CJG;AKY;CLQ;AMK;CNG"}},"type":"js/module"}]}