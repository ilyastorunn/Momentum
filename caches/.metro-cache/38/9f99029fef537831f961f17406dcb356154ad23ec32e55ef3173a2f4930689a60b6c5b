{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PROFILE_QUEUE = void 0;\n  const PROFILE_QUEUE = exports.PROFILE_QUEUE = makeFifoCache(20);\n  /**\n   * Creates a cache that evicts keys in fifo order\n   * @param size {Number}\n   */\n  function makeFifoCache(size) {\n    // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n    let evictionOrder = [];\n    let cache = {};\n    return {\n      add(key, value) {\n        while (evictionOrder.length >= size) {\n          // shift is O(n) but this is small size and only happens if we are\n          // exceeding the cache size so it should be fine.\n          const evictCandidate = evictionOrder.shift();\n          if (evictCandidate !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete cache[evictCandidate];\n          }\n        }\n        // in case we have a collision, delete the old key.\n        if (cache[key]) {\n          this.delete(key);\n        }\n        evictionOrder.push(key);\n        cache[key] = value;\n      },\n      clear() {\n        cache = {};\n        evictionOrder = [];\n      },\n      get(key) {\n        return cache[key];\n      },\n      size() {\n        return evictionOrder.length;\n      },\n      // Delete cache key and return true if it existed, false otherwise.\n      delete(key) {\n        if (!cache[key]) {\n          return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete cache[key];\n        for (let i = 0; i < evictionOrder.length; i++) {\n          if (evictionOrder[i] === key) {\n            evictionOrder.splice(i, 1);\n            break;\n          }\n        }\n        return true;\n      }\n    };\n  }\n});","lineCount":60,"map":[[6,2,1,7],[6,8,1,13,"PROFILE_QUEUE"],[6,21,1,26],[6,24,1,26,"exports"],[6,31,1,26],[6,32,1,26,"PROFILE_QUEUE"],[6,45,1,26],[6,48,1,29,"makeFifoCache"],[6,61,1,42],[6,62,1,43],[6,64,1,45],[6,65,1,46],[7,2,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,2,6,0],[11,11,6,9,"makeFifoCache"],[11,24,6,22,"makeFifoCache"],[11,25,6,23,"size"],[11,29,6,27],[11,31,6,29],[12,4,7,4],[13,4,8,4],[13,8,8,8,"evictionOrder"],[13,21,8,21],[13,24,8,24],[13,26,8,26],[14,4,9,4],[14,8,9,8,"cache"],[14,13,9,13],[14,16,9,16],[14,17,9,17],[14,18,9,18],[15,4,10,4],[15,11,10,11],[16,6,11,8,"add"],[16,9,11,11,"add"],[16,10,11,12,"key"],[16,13,11,15],[16,15,11,17,"value"],[16,20,11,22],[16,22,11,24],[17,8,12,12],[17,15,12,19,"evictionOrder"],[17,28,12,32],[17,29,12,33,"length"],[17,35,12,39],[17,39,12,43,"size"],[17,43,12,47],[17,45,12,49],[18,10,13,16],[19,10,14,16],[20,10,15,16],[20,16,15,22,"evictCandidate"],[20,30,15,36],[20,33,15,39,"evictionOrder"],[20,46,15,52],[20,47,15,53,"shift"],[20,52,15,58],[20,53,15,59],[20,54,15,60],[21,10,16,16],[21,14,16,20,"evictCandidate"],[21,28,16,34],[21,33,16,39,"undefined"],[21,42,16,48],[21,44,16,50],[22,12,17,20],[23,12,18,20],[23,19,18,27,"cache"],[23,24,18,32],[23,25,18,33,"evictCandidate"],[23,39,18,47],[23,40,18,48],[24,10,19,16],[25,8,20,12],[26,8,21,12],[27,8,22,12],[27,12,22,16,"cache"],[27,17,22,21],[27,18,22,22,"key"],[27,21,22,25],[27,22,22,26],[27,24,22,28],[28,10,23,16],[28,14,23,20],[28,15,23,21,"delete"],[28,21,23,27],[28,22,23,28,"key"],[28,25,23,31],[28,26,23,32],[29,8,24,12],[30,8,25,12,"evictionOrder"],[30,21,25,25],[30,22,25,26,"push"],[30,26,25,30],[30,27,25,31,"key"],[30,30,25,34],[30,31,25,35],[31,8,26,12,"cache"],[31,13,26,17],[31,14,26,18,"key"],[31,17,26,21],[31,18,26,22],[31,21,26,25,"value"],[31,26,26,30],[32,6,27,8],[32,7,27,9],[33,6,28,8,"clear"],[33,11,28,13,"clear"],[33,12,28,13],[33,14,28,16],[34,8,29,12,"cache"],[34,13,29,17],[34,16,29,20],[34,17,29,21],[34,18,29,22],[35,8,30,12,"evictionOrder"],[35,21,30,25],[35,24,30,28],[35,26,30,30],[36,6,31,8],[36,7,31,9],[37,6,32,8,"get"],[37,9,32,11,"get"],[37,10,32,12,"key"],[37,13,32,15],[37,15,32,17],[38,8,33,12],[38,15,33,19,"cache"],[38,20,33,24],[38,21,33,25,"key"],[38,24,33,28],[38,25,33,29],[39,6,34,8],[39,7,34,9],[40,6,35,8,"size"],[40,10,35,12,"size"],[40,11,35,12],[40,13,35,15],[41,8,36,12],[41,15,36,19,"evictionOrder"],[41,28,36,32],[41,29,36,33,"length"],[41,35,36,39],[42,6,37,8],[42,7,37,9],[43,6,38,8],[44,6,39,8,"delete"],[44,12,39,14,"delete"],[44,13,39,15,"key"],[44,16,39,18],[44,18,39,20],[45,8,40,12],[45,12,40,16],[45,13,40,17,"cache"],[45,18,40,22],[45,19,40,23,"key"],[45,22,40,26],[45,23,40,27],[45,25,40,29],[46,10,41,16],[46,17,41,23],[46,22,41,28],[47,8,42,12],[48,8,43,12],[49,8,44,12],[49,15,44,19,"cache"],[49,20,44,24],[49,21,44,25,"key"],[49,24,44,28],[49,25,44,29],[50,8,45,12],[50,13,45,17],[50,17,45,21,"i"],[50,18,45,22],[50,21,45,25],[50,22,45,26],[50,24,45,28,"i"],[50,25,45,29],[50,28,45,32,"evictionOrder"],[50,41,45,45],[50,42,45,46,"length"],[50,48,45,52],[50,50,45,54,"i"],[50,51,45,55],[50,53,45,57],[50,55,45,59],[51,10,46,16],[51,14,46,20,"evictionOrder"],[51,27,46,33],[51,28,46,34,"i"],[51,29,46,35],[51,30,46,36],[51,35,46,41,"key"],[51,38,46,44],[51,40,46,46],[52,12,47,20,"evictionOrder"],[52,25,47,33],[52,26,47,34,"splice"],[52,32,47,40],[52,33,47,41,"i"],[52,34,47,42],[52,36,47,44],[52,37,47,45],[52,38,47,46],[53,12,48,20],[54,10,49,16],[55,8,50,12],[56,8,51,12],[56,15,51,19],[56,19,51,23],[57,6,52,8],[58,4,53,4],[58,5,53,5],[59,2,54,0],[60,0,54,1],[60,3]],"functionMap":{"names":["<global>","makeFifoCache","add","clear","get","size","_delete"],"mappings":"AAA;ACK;QCK;SDgB;QEC;SFG;QGC;SHE;QIC;SJE;QKE;SLa;CDE"}},"type":"js/module"}]}