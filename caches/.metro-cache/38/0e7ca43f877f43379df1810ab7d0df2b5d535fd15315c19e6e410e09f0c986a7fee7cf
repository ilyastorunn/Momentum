{"dependencies":[{"name":"./currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"K7iI+PRtR1yDAq2Cd5P/ht8ORfQ=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":57,"index":124}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":125},"end":{"line":3,"column":63,"index":188}}],"key":"CDYXZ+Iu2qXN5epbbNjMwVJRDIA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addBreadcrumb = addBreadcrumb;\n  var _currentScopes = require(_dependencyMap[0], \"./currentScopes.js\");\n  var _logger = require(_dependencyMap[1], \"./utils-hoist/logger.js\");\n  var _time = require(_dependencyMap[2], \"./utils-hoist/time.js\");\n  /**\n   * Default maximum number of breadcrumbs added to an event. Can be overwritten\n   * with {@link Options.maxBreadcrumbs}.\n   */\n  const DEFAULT_BREADCRUMBS = 100;\n\n  /**\n   * Records a new breadcrumb which will be attached to future events.\n   *\n   * Breadcrumbs will be added to subsequent events to provide more context on\n   * user's actions prior to an error or crash.\n   */\n  function addBreadcrumb(breadcrumb, hint) {\n    const client = (0, _currentScopes.getClient)();\n    const isolationScope = (0, _currentScopes.getIsolationScope)();\n    if (!client) return;\n    const {\n      beforeBreadcrumb = null,\n      maxBreadcrumbs = DEFAULT_BREADCRUMBS\n    } = client.getOptions();\n    if (maxBreadcrumbs <= 0) return;\n    const timestamp = (0, _time.dateTimestampInSeconds)();\n    const mergedBreadcrumb = {\n      timestamp,\n      ...breadcrumb\n    };\n    const finalBreadcrumb = beforeBreadcrumb ? (0, _logger.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) : mergedBreadcrumb;\n    if (finalBreadcrumb === null) return;\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n    isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n});","lineCount":42,"map":[[6,2,1,0],[6,6,1,0,"_currentScopes"],[6,20,1,0],[6,23,1,0,"require"],[6,30,1,0],[6,31,1,0,"_dependencyMap"],[6,45,1,0],[7,2,2,0],[7,6,2,0,"_logger"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,3,0],[8,6,3,0,"_time"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,2,9,0],[13,8,9,6,"DEFAULT_BREADCRUMBS"],[13,27,9,25],[13,30,9,28],[13,33,9,31],[15,2,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,2,17,0],[21,11,17,9,"addBreadcrumb"],[21,24,17,22,"addBreadcrumb"],[21,25,17,23,"breadcrumb"],[21,35,17,33],[21,37,17,35,"hint"],[21,41,17,39],[21,43,17,41],[22,4,18,2],[22,10,18,8,"client"],[22,16,18,14],[22,19,18,17],[22,23,18,17,"getClient"],[22,47,18,26],[22,49,18,27],[22,50,18,28],[23,4,19,2],[23,10,19,8,"isolationScope"],[23,24,19,22],[23,27,19,25],[23,31,19,25,"getIsolationScope"],[23,63,19,42],[23,65,19,43],[23,66,19,44],[24,4,21,2],[24,8,21,6],[24,9,21,7,"client"],[24,15,21,13],[24,17,21,15],[25,4,23,2],[25,10,23,8],[26,6,23,10,"beforeBreadcrumb"],[26,22,23,26],[26,25,23,29],[26,29,23,33],[27,6,23,35,"maxBreadcrumbs"],[27,20,23,49],[27,23,23,52,"DEFAULT_BREADCRUMBS"],[28,4,23,72],[28,5,23,73],[28,8,23,76,"client"],[28,14,23,82],[28,15,23,83,"getOptions"],[28,25,23,93],[28,26,23,94],[28,27,23,95],[29,4,25,2],[29,8,25,6,"maxBreadcrumbs"],[29,22,25,20],[29,26,25,24],[29,27,25,25],[29,29,25,27],[30,4,27,2],[30,10,27,8,"timestamp"],[30,19,27,17],[30,22,27,20],[30,26,27,20,"dateTimestampInSeconds"],[30,54,27,42],[30,56,27,43],[30,57,27,44],[31,4,28,2],[31,10,28,8,"mergedBreadcrumb"],[31,26,28,24],[31,29,28,27],[32,6,28,29,"timestamp"],[32,15,28,38],[33,6,28,40],[33,9,28,43,"breadcrumb"],[34,4,28,54],[34,5,28,55],[35,4,29,2],[35,10,29,8,"finalBreadcrumb"],[35,25,29,23],[35,28,29,26,"beforeBreadcrumb"],[35,44,29,42],[35,47,30,7],[35,51,30,7,"consoleSandbox"],[35,73,30,21],[35,75,30,22],[35,81,30,28,"beforeBreadcrumb"],[35,97,30,44],[35,98,30,45,"mergedBreadcrumb"],[35,114,30,61],[35,116,30,63,"hint"],[35,120,30,67],[35,121,30,68],[35,122,30,69],[35,125,31,6,"mergedBreadcrumb"],[35,141,31,22],[36,4,33,2],[36,8,33,6,"finalBreadcrumb"],[36,23,33,21],[36,28,33,26],[36,32,33,30],[36,34,33,32],[37,4,35,2],[37,8,35,6,"client"],[37,14,35,12],[37,15,35,13,"emit"],[37,19,35,17],[37,21,35,19],[38,6,36,4,"client"],[38,12,36,10],[38,13,36,11,"emit"],[38,17,36,15],[38,18,36,16],[38,39,36,37],[38,41,36,39,"finalBreadcrumb"],[38,56,36,54],[38,58,36,56,"hint"],[38,62,36,60],[38,63,36,61],[39,4,37,2],[40,4,39,2,"isolationScope"],[40,18,39,16],[40,19,39,17,"addBreadcrumb"],[40,32,39,30],[40,33,39,31,"finalBreadcrumb"],[40,48,39,46],[40,50,39,48,"maxBreadcrumbs"],[40,64,39,62],[40,65,39,63],[41,2,40,0],[42,0,40,1],[42,3]],"functionMap":{"names":["<global>","addBreadcrumb","consoleSandbox$argument_0"],"mappings":"AAA;ACgB;sBCa,8CD;CDU"}},"type":"js/module"}]}