{"dependencies":[{"name":"../utils-hoist/propagationContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":87,"index":87}}],"key":"acTMSbYB3Ip99hQ+0SCJ99493GM=","exportNames":["*"]}},{"name":"../utils/spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":88},"end":{"line":2,"column":56,"index":144}}],"key":"UzLeGx1bDOwqjtebNy27AzwV/PI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SentryNonRecordingSpan = void 0;\n  var _propagationContext = require(_dependencyMap[0], \"../utils-hoist/propagationContext.js\");\n  var _spanUtils = require(_dependencyMap[1], \"../utils/spanUtils.js\");\n  /**\n   * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n   */\n  class SentryNonRecordingSpan {\n    constructor(spanContext = {}) {\n      this._traceId = spanContext.traceId || (0, _propagationContext.generateTraceId)();\n      this._spanId = spanContext.spanId || (0, _propagationContext.generateSpanId)();\n    }\n\n    /** @inheritdoc */\n    spanContext() {\n      return {\n        spanId: this._spanId,\n        traceId: this._traceId,\n        traceFlags: _spanUtils.TRACE_FLAG_NONE\n      };\n    }\n\n    /** @inheritdoc */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    end(_timestamp) {}\n\n    /** @inheritdoc */\n    setAttribute(_key, _value) {\n      return this;\n    }\n\n    /** @inheritdoc */\n    setAttributes(_values) {\n      return this;\n    }\n\n    /** @inheritdoc */\n    setStatus(_status) {\n      return this;\n    }\n\n    /** @inheritdoc */\n    updateName(_name) {\n      return this;\n    }\n\n    /** @inheritdoc */\n    isRecording() {\n      return false;\n    }\n\n    /** @inheritdoc */\n    addEvent(_name, _attributesOrStartTime, _startTime) {\n      return this;\n    }\n\n    /**\n     * This should generally not be used,\n     * but we need it for being compliant with the OTEL Span interface.\n     *\n     * @hidden\n     * @internal\n     */\n    addLink(_link) {\n      return this;\n    }\n\n    /**\n     * This should generally not be used,\n     * but we need it for being compliant with the OTEL Span interface.\n     *\n     * @hidden\n     * @internal\n     */\n    addLinks(_links) {\n      return this;\n    }\n\n    /**\n     * This should generally not be used,\n     * but we need it for being compliant with the OTEL Span interface.\n     *\n     * @hidden\n     * @internal\n     */\n    recordException(_exception, _time) {\n      // noop\n    }\n  }\n  exports.SentryNonRecordingSpan = SentryNonRecordingSpan;\n});","lineCount":94,"map":[[6,2,1,0],[6,6,1,0,"_propagationContext"],[6,25,1,0],[6,28,1,0,"require"],[6,35,1,0],[6,36,1,0,"_dependencyMap"],[6,50,1,0],[7,2,2,0],[7,6,2,0,"_spanUtils"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,2,7,0],[11,8,7,6,"SentryNonRecordingSpan"],[11,30,7,28],[11,31,7,30],[12,4,9,3,"constructor"],[12,15,9,14,"constructor"],[12,16,9,15,"spanContext"],[12,27,9,26],[12,30,9,29],[12,31,9,30],[12,32,9,31],[12,34,9,33],[13,6,10,4],[13,10,10,8],[13,11,10,9,"_traceId"],[13,19,10,17],[13,22,10,20,"spanContext"],[13,33,10,31],[13,34,10,32,"traceId"],[13,41,10,39],[13,45,10,43],[13,49,10,43,"generateTraceId"],[13,84,10,58],[13,86,10,59],[13,87,10,60],[14,6,11,4],[14,10,11,8],[14,11,11,9,"_spanId"],[14,18,11,16],[14,21,11,19,"spanContext"],[14,32,11,30],[14,33,11,31,"spanId"],[14,39,11,37],[14,43,11,41],[14,47,11,41,"generateSpanId"],[14,81,11,55],[14,83,11,56],[14,84,11,57],[15,4,12,2],[17,4,14,2],[18,4,15,3,"spanContext"],[18,15,15,14,"spanContext"],[18,16,15,14],[18,18,15,17],[19,6,16,4],[19,13,16,11],[20,8,17,6,"spanId"],[20,14,17,12],[20,16,17,14],[20,20,17,18],[20,21,17,19,"_spanId"],[20,28,17,26],[21,8,18,6,"traceId"],[21,15,18,13],[21,17,18,15],[21,21,18,19],[21,22,18,20,"_traceId"],[21,30,18,28],[22,8,19,6,"traceFlags"],[22,18,19,16],[22,20,19,18,"TRACE_FLAG_NONE"],[23,6,20,4],[23,7,20,5],[24,4,21,2],[26,4,23,2],[27,4,24,2],[28,4,25,3,"end"],[28,7,25,6,"end"],[28,8,25,7,"_timestamp"],[28,18,25,17],[28,20,25,19],[28,21,25,20],[30,4,27,2],[31,4,28,3,"setAttribute"],[31,16,28,15,"setAttribute"],[31,17,28,16,"_key"],[31,21,28,20],[31,23,28,22,"_value"],[31,29,28,28],[31,31,28,30],[32,6,29,4],[32,13,29,11],[32,17,29,15],[33,4,30,2],[35,4,32,2],[36,4,33,3,"setAttributes"],[36,17,33,16,"setAttributes"],[36,18,33,17,"_values"],[36,25,33,24],[36,27,33,26],[37,6,34,4],[37,13,34,11],[37,17,34,15],[38,4,35,2],[40,4,37,2],[41,4,38,3,"setStatus"],[41,13,38,12,"setStatus"],[41,14,38,13,"_status"],[41,21,38,20],[41,23,38,22],[42,6,39,4],[42,13,39,11],[42,17,39,15],[43,4,40,2],[45,4,42,2],[46,4,43,3,"updateName"],[46,14,43,13,"updateName"],[46,15,43,14,"_name"],[46,20,43,19],[46,22,43,21],[47,6,44,4],[47,13,44,11],[47,17,44,15],[48,4,45,2],[50,4,47,2],[51,4,48,3,"isRecording"],[51,15,48,14,"isRecording"],[51,16,48,14],[51,18,48,17],[52,6,49,4],[52,13,49,11],[52,18,49,16],[53,4,50,2],[55,4,52,2],[56,4,53,3,"addEvent"],[56,12,53,11,"addEvent"],[56,13,54,4,"_name"],[56,18,54,9],[56,20,55,4,"_attributesOrStartTime"],[56,42,55,26],[56,44,56,4,"_startTime"],[56,54,56,14],[56,56,57,4],[57,6,58,4],[57,13,58,11],[57,17,58,15],[58,4,59,2],[60,4,61,2],[61,0,62,0],[62,0,63,0],[63,0,64,0],[64,0,65,0],[65,0,66,0],[66,0,67,0],[67,4,68,3,"addLink"],[67,11,68,10,"addLink"],[67,12,68,11,"_link"],[67,17,68,16],[67,19,68,18],[68,6,69,4],[68,13,69,11],[68,17,69,15],[69,4,70,2],[71,4,72,2],[72,0,73,0],[73,0,74,0],[74,0,75,0],[75,0,76,0],[76,0,77,0],[77,0,78,0],[78,4,79,3,"addLinks"],[78,12,79,11,"addLinks"],[78,13,79,12,"_links"],[78,19,79,18],[78,21,79,20],[79,6,80,4],[79,13,80,11],[79,17,80,15],[80,4,81,2],[82,4,83,2],[83,0,84,0],[84,0,85,0],[85,0,86,0],[86,0,87,0],[87,0,88,0],[88,0,89,0],[89,4,90,3,"recordException"],[89,19,90,18,"recordException"],[89,20,90,19,"_exception"],[89,30,90,29],[89,32,90,31,"_time"],[89,37,90,36],[89,39,90,38],[90,6,91,4],[91,4,91,4],[92,2,93,0],[93,2,93,1,"exports"],[93,9,93,1],[93,10,93,1,"SentryNonRecordingSpan"],[93,32,93,1],[93,35,93,1,"SentryNonRecordingSpan"],[93,57,93,1],[94,0,93,1],[94,3]],"functionMap":{"names":["<global>","SentryNonRecordingSpan","SentryNonRecordingSpan#constructor","SentryNonRecordingSpan#spanContext","SentryNonRecordingSpan#end","SentryNonRecordingSpan#setAttribute","SentryNonRecordingSpan#setAttributes","SentryNonRecordingSpan#setStatus","SentryNonRecordingSpan#updateName","SentryNonRecordingSpan#isRecording","SentryNonRecordingSpan#addEvent","SentryNonRecordingSpan#addLink","SentryNonRecordingSpan#addLinks","SentryNonRecordingSpan#recordException"],"mappings":"AAA;ACM;GCE;GDG;GEG;GFM;GGI,kBH;GIG;GJE;GKG;GLE;GMG;GNE;GOG;GPE;GQG;GRE;GSG;GTM;GUS;GVE;GWS;GXE;GYS;GZE;CDC"}},"type":"js/module"}]}