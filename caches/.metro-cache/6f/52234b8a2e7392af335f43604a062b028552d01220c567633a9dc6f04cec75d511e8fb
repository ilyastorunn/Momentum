{"dependencies":[{"name":"./worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"LZlrQCVO4H3zUFIdbw1eEy4GKGE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getDebugImagesForResources = getDebugImagesForResources;\n  exports.getFilenameToDebugIdMap = getFilenameToDebugIdMap;\n  var _worldwide = require(_dependencyMap[0], \"./worldwide.js\");\n  let parsedStackResults;\n  let lastKeysCount;\n  let cachedFilenameDebugIds;\n\n  /**\n   * Returns a map of filenames to debug identifiers.\n   */\n  function getFilenameToDebugIdMap(stackParser) {\n    const debugIdMap = _worldwide.GLOBAL_OBJ._sentryDebugIds;\n    if (!debugIdMap) {\n      return {};\n    }\n    const debugIdKeys = Object.keys(debugIdMap);\n\n    // If the count of registered globals hasn't changed since the last call, we\n    // can just return the cached result.\n    if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n      return cachedFilenameDebugIds;\n    }\n    lastKeysCount = debugIdKeys.length;\n\n    // Build a map of filename -> debug_id.\n    cachedFilenameDebugIds = debugIdKeys.reduce((acc, stackKey) => {\n      if (!parsedStackResults) {\n        parsedStackResults = {};\n      }\n      const result = parsedStackResults[stackKey];\n      if (result) {\n        acc[result[0]] = result[1];\n      } else {\n        const parsedStack = stackParser(stackKey);\n        for (let i = parsedStack.length - 1; i >= 0; i--) {\n          const stackFrame = parsedStack[i];\n          const filename = stackFrame && stackFrame.filename;\n          const debugId = debugIdMap[stackKey];\n          if (filename && debugId) {\n            acc[filename] = debugId;\n            parsedStackResults[stackKey] = [filename, debugId];\n            break;\n          }\n        }\n      }\n      return acc;\n    }, {});\n    return cachedFilenameDebugIds;\n  }\n\n  /**\n   * Returns a list of debug images for the given resources.\n   */\n  function getDebugImagesForResources(stackParser, resource_paths) {\n    const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n    if (!filenameDebugIdMap) {\n      return [];\n    }\n    const images = [];\n    for (const path of resource_paths) {\n      if (path && filenameDebugIdMap[path]) {\n        images.push({\n          type: 'sourcemap',\n          code_file: path,\n          debug_id: filenameDebugIdMap[path]\n        });\n      }\n    }\n    return images;\n  }\n});","lineCount":75,"map":[[7,2,1,0],[7,6,1,0,"_worldwide"],[7,16,1,0],[7,19,1,0,"require"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,3,0],[8,6,3,4,"parsedStackResults"],[8,24,3,22],[9,2,4,0],[9,6,4,4,"lastKeysCount"],[9,19,4,17],[10,2,5,0],[10,6,5,4,"cachedFilenameDebugIds"],[10,28,5,26],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,2,10,0],[15,11,10,9,"getFilenameToDebugIdMap"],[15,34,10,32,"getFilenameToDebugIdMap"],[15,35,10,33,"stackParser"],[15,46,10,44],[15,48,10,46],[16,4,11,2],[16,10,11,8,"debugIdMap"],[16,20,11,18],[16,23,11,21,"GLOBAL_OBJ"],[16,44,11,31],[16,45,11,32,"_sentryDebugIds"],[16,60,11,47],[17,4,12,2],[17,8,12,6],[17,9,12,7,"debugIdMap"],[17,19,12,17],[17,21,12,19],[18,6,13,4],[18,13,13,11],[18,14,13,12],[18,15,13,13],[19,4,14,2],[20,4,16,2],[20,10,16,8,"debugIdKeys"],[20,21,16,19],[20,24,16,22,"Object"],[20,30,16,28],[20,31,16,29,"keys"],[20,35,16,33],[20,36,16,34,"debugIdMap"],[20,46,16,44],[20,47,16,45],[22,4,18,2],[23,4,19,2],[24,4,20,2],[24,8,20,6,"cachedFilenameDebugIds"],[24,30,20,28],[24,34,20,32,"debugIdKeys"],[24,45,20,43],[24,46,20,44,"length"],[24,52,20,50],[24,57,20,55,"lastKeysCount"],[24,70,20,68],[24,72,20,70],[25,6,21,4],[25,13,21,11,"cachedFilenameDebugIds"],[25,35,21,33],[26,4,22,2],[27,4,24,2,"lastKeysCount"],[27,17,24,15],[27,20,24,18,"debugIdKeys"],[27,31,24,29],[27,32,24,30,"length"],[27,38,24,36],[29,4,26,2],[30,4,27,2,"cachedFilenameDebugIds"],[30,26,27,24],[30,29,27,27,"debugIdKeys"],[30,40,27,38],[30,41,27,39,"reduce"],[30,47,27,45],[30,48,27,46],[30,49,27,47,"acc"],[30,52,27,50],[30,54,27,52,"stackKey"],[30,62,27,60],[30,67,27,65],[31,6,28,4],[31,10,28,8],[31,11,28,9,"parsedStackResults"],[31,29,28,27],[31,31,28,29],[32,8,29,6,"parsedStackResults"],[32,26,29,24],[32,29,29,27],[32,30,29,28],[32,31,29,29],[33,6,30,4],[34,6,32,4],[34,12,32,10,"result"],[34,18,32,16],[34,21,32,19,"parsedStackResults"],[34,39,32,37],[34,40,32,38,"stackKey"],[34,48,32,46],[34,49,32,47],[35,6,34,4],[35,10,34,8,"result"],[35,16,34,14],[35,18,34,16],[36,8,35,6,"acc"],[36,11,35,9],[36,12,35,10,"result"],[36,18,35,16],[36,19,35,17],[36,20,35,18],[36,21,35,19],[36,22,35,20],[36,25,35,23,"result"],[36,31,35,29],[36,32,35,30],[36,33,35,31],[36,34,35,32],[37,6,36,4],[37,7,36,5],[37,13,36,11],[38,8,37,6],[38,14,37,12,"parsedStack"],[38,25,37,23],[38,28,37,26,"stackParser"],[38,39,37,37],[38,40,37,38,"stackKey"],[38,48,37,46],[38,49,37,47],[39,8,39,6],[39,13,39,11],[39,17,39,15,"i"],[39,18,39,16],[39,21,39,19,"parsedStack"],[39,32,39,30],[39,33,39,31,"length"],[39,39,39,37],[39,42,39,40],[39,43,39,41],[39,45,39,43,"i"],[39,46,39,44],[39,50,39,48],[39,51,39,49],[39,53,39,51,"i"],[39,54,39,52],[39,56,39,54],[39,58,39,56],[40,10,40,8],[40,16,40,14,"stackFrame"],[40,26,40,24],[40,29,40,27,"parsedStack"],[40,40,40,38],[40,41,40,39,"i"],[40,42,40,40],[40,43,40,41],[41,10,41,8],[41,16,41,14,"filename"],[41,24,41,22],[41,27,41,25,"stackFrame"],[41,37,41,35],[41,41,41,39,"stackFrame"],[41,51,41,49],[41,52,41,50,"filename"],[41,60,41,58],[42,10,42,8],[42,16,42,14,"debugId"],[42,23,42,21],[42,26,42,24,"debugIdMap"],[42,36,42,34],[42,37,42,35,"stackKey"],[42,45,42,43],[42,46,42,44],[43,10,44,8],[43,14,44,12,"filename"],[43,22,44,20],[43,26,44,24,"debugId"],[43,33,44,31],[43,35,44,33],[44,12,45,10,"acc"],[44,15,45,13],[44,16,45,14,"filename"],[44,24,45,22],[44,25,45,23],[44,28,45,26,"debugId"],[44,35,45,33],[45,12,46,10,"parsedStackResults"],[45,30,46,28],[45,31,46,29,"stackKey"],[45,39,46,37],[45,40,46,38],[45,43,46,41],[45,44,46,42,"filename"],[45,52,46,50],[45,54,46,52,"debugId"],[45,61,46,59],[45,62,46,60],[46,12,47,10],[47,10,48,8],[48,8,49,6],[49,6,50,4],[50,6,52,4],[50,13,52,11,"acc"],[50,16,52,14],[51,4,53,2],[51,5,53,3],[51,7,53,5],[51,8,53,6],[51,9,53,7],[51,10,53,8],[52,4,55,2],[52,11,55,9,"cachedFilenameDebugIds"],[52,33,55,31],[53,2,56,0],[55,2,58,0],[56,0,59,0],[57,0,60,0],[58,2,61,0],[58,11,61,9,"getDebugImagesForResources"],[58,37,61,35,"getDebugImagesForResources"],[58,38,62,2,"stackParser"],[58,49,62,13],[58,51,63,2,"resource_paths"],[58,65,63,16],[58,67,64,2],[59,4,65,2],[59,10,65,8,"filenameDebugIdMap"],[59,28,65,26],[59,31,65,29,"getFilenameToDebugIdMap"],[59,54,65,52],[59,55,65,53,"stackParser"],[59,66,65,64],[59,67,65,65],[60,4,67,2],[60,8,67,6],[60,9,67,7,"filenameDebugIdMap"],[60,27,67,25],[60,29,67,27],[61,6,68,4],[61,13,68,11],[61,15,68,13],[62,4,69,2],[63,4,71,2],[63,10,71,8,"images"],[63,16,71,14],[63,19,71,17],[63,21,71,19],[64,4,72,2],[64,9,72,7],[64,15,72,13,"path"],[64,19,72,17],[64,23,72,21,"resource_paths"],[64,37,72,35],[64,39,72,37],[65,6,73,4],[65,10,73,8,"path"],[65,14,73,12],[65,18,73,16,"filenameDebugIdMap"],[65,36,73,34],[65,37,73,35,"path"],[65,41,73,39],[65,42,73,40],[65,44,73,42],[66,8,74,6,"images"],[66,14,74,12],[66,15,74,13,"push"],[66,19,74,17],[66,20,74,18],[67,10,75,8,"type"],[67,14,75,12],[67,16,75,14],[67,27,75,25],[68,10,76,8,"code_file"],[68,19,76,17],[68,21,76,19,"path"],[68,25,76,23],[69,10,77,8,"debug_id"],[69,18,77,16],[69,20,77,18,"filenameDebugIdMap"],[69,38,77,36],[69,39,77,37,"path"],[69,43,77,41],[70,8,78,6],[70,9,78,7],[70,10,78,8],[71,6,79,4],[72,4,80,2],[73,4,82,2],[73,11,82,9,"images"],[73,17,82,15],[74,2,83,0],[75,0,83,1],[75,3]],"functionMap":{"names":["<global>","getFilenameToDebugIdMap","debugIdKeys.reduce$argument_0","getDebugImagesForResources"],"mappings":"AAA;ACS;8CCiB;GD0B;CDG;AGK;CHsB"}},"type":"js/module"}]}