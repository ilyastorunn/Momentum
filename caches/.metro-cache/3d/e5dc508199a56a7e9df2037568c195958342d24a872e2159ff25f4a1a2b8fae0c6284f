{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../../../utils/featureFlags.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":94,"index":144}}],"key":"rZi75susrW6b4U5MRcW9aF3kKeg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.openFeatureIntegration = exports.OpenFeatureIntegrationHook = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _featureFlags = require(_dependencyMap[1], \"../../../utils/featureFlags.js\");\n  const openFeatureIntegration = exports.openFeatureIntegration = (0, _core.defineIntegration)(() => {\n    return {\n      name: 'OpenFeature',\n      processEvent(event, _hint, _client) {\n        return (0, _featureFlags.copyFlagsFromScopeToEvent)(event);\n      }\n    };\n  });\n\n  /**\n   * OpenFeature Hook class implementation.\n   */\n  class OpenFeatureIntegrationHook {\n    /**\n     * Successful evaluation result.\n     */\n    after(_hookContext, evaluationDetails) {\n      (0, _featureFlags.insertFlagToScope)(evaluationDetails.flagKey, evaluationDetails.value);\n    }\n\n    /**\n     * On error evaluation result.\n     */\n    error(hookContext, _error, _hookHints) {\n      (0, _featureFlags.insertFlagToScope)(hookContext.flagKey, hookContext.defaultValue);\n    }\n  }\n  exports.OpenFeatureIntegrationHook = OpenFeatureIntegrationHook;\n});","lineCount":36,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,0,"_featureFlags"],[7,19,2,0],[7,22,2,0,"require"],[7,29,2,0],[7,30,2,0,"_dependencyMap"],[7,44,2,0],[8,2,4,0],[8,8,4,6,"openFeatureIntegration"],[8,30,4,28],[8,33,4,28,"exports"],[8,40,4,28],[8,41,4,28,"openFeatureIntegration"],[8,63,4,28],[8,66,4,31],[8,70,4,31,"defineIntegration"],[8,93,4,48],[8,95,4,49],[8,101,4,55],[9,4,5,2],[9,11,5,9],[10,6,6,4,"name"],[10,10,6,8],[10,12,6,10],[10,25,6,23],[11,6,8,4,"processEvent"],[11,18,8,16,"processEvent"],[11,19,8,17,"event"],[11,24,8,22],[11,26,8,24,"_hint"],[11,31,8,29],[11,33,8,31,"_client"],[11,40,8,38],[11,42,8,40],[12,8,9,6],[12,15,9,13],[12,19,9,13,"copyFlagsFromScopeToEvent"],[12,58,9,38],[12,60,9,39,"event"],[12,65,9,44],[12,66,9,45],[13,6,10,4],[14,4,11,2],[14,5,11,3],[15,2,12,0],[15,3,12,1],[15,4,12,2],[17,2,14,0],[18,0,15,0],[19,0,16,0],[20,2,17,0],[20,8,17,6,"OpenFeatureIntegrationHook"],[20,34,17,32],[20,35,17,34],[21,4,18,2],[22,0,19,0],[23,0,20,0],[24,4,21,3,"after"],[24,9,21,8,"after"],[24,10,21,9,"_hookContext"],[24,22,21,21],[24,24,21,23,"evaluationDetails"],[24,41,21,40],[24,43,21,42],[25,6,22,4],[25,10,22,4,"insertFlagToScope"],[25,41,22,21],[25,43,22,22,"evaluationDetails"],[25,60,22,39],[25,61,22,40,"flagKey"],[25,68,22,47],[25,70,22,49,"evaluationDetails"],[25,87,22,66],[25,88,22,67,"value"],[25,93,22,72],[25,94,22,73],[26,4,23,2],[28,4,25,2],[29,0,26,0],[30,0,27,0],[31,4,28,3,"error"],[31,9,28,8,"error"],[31,10,28,9,"hookContext"],[31,21,28,20],[31,23,28,22,"_error"],[31,29,28,28],[31,31,28,30,"_hookHints"],[31,41,28,40],[31,43,28,42],[32,6,29,4],[32,10,29,4,"insertFlagToScope"],[32,41,29,21],[32,43,29,22,"hookContext"],[32,54,29,33],[32,55,29,34,"flagKey"],[32,62,29,41],[32,64,29,43,"hookContext"],[32,75,29,54],[32,76,29,55,"defaultValue"],[32,88,29,67],[32,89,29,68],[33,4,30,2],[34,2,31,0],[35,2,31,1,"exports"],[35,9,31,1],[35,10,31,1,"OpenFeatureIntegrationHook"],[35,36,31,1],[35,39,31,1,"OpenFeatureIntegrationHook"],[35,65,31,1],[36,0,31,1],[36,3]],"functionMap":{"names":["<global>","defineIntegration$argument_0","processEvent","OpenFeatureIntegrationHook","OpenFeatureIntegrationHook#after","OpenFeatureIntegrationHook#error"],"mappings":"AAA;iDCG;ICI;KDE;CDE;AGK;GCI;GDE;GEK;GFE;CHC"}},"type":"js/module"}]}