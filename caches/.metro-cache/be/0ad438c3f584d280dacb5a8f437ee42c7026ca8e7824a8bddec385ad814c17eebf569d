{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"../../dom/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":61},"end":{"line":3,"column":43,"index":104}}],"key":"sExY87SNUbbJtOx4ghJnWxzXqE0=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":568},"end":{"line":31,"column":41,"index":609}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../Node","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":610},"end":{"line":32,"column":79,"index":689}}],"key":"629oO5tQuU3DWlSfXJ8iqlt7cNE=","exportNames":["*"]}},{"name":"./Core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":754},"end":{"line":35,"column":37,"index":791}}],"key":"dny1ljGekIf+viLKNae+kH0CgzE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Recorder = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _types = require(_dependencyMap[3], \"../../dom/types\");\n  var _utils = require(_dependencyMap[4], \"../utils\");\n  var _Node = require(_dependencyMap[5], \"../Node\");\n  var _Core = require(_dependencyMap[6], \"./Core\");\n  var Recorder = exports.Recorder = /*#__PURE__*/function () {\n    function Recorder() {\n      (0, _classCallCheck2.default)(this, Recorder);\n      this.commands = [];\n      this.cursors = [];\n      this.animationValues = new Set();\n      this.cursors.push(this.commands);\n    }\n    return (0, _createClass2.default)(Recorder, [{\n      key: \"getRecording\",\n      value: function getRecording() {\n        return {\n          commands: this.commands,\n          paintPool: [],\n          animationValues: this.animationValues\n        };\n      }\n    }, {\n      key: \"processProps\",\n      value: function processProps(props) {\n        var animatedProps = {};\n        var hasAnimatedProps = false;\n        for (var key in props) {\n          var prop = props[key];\n          if ((0, _utils.isSharedValue)(prop)) {\n            this.animationValues.add(prop);\n            animatedProps[key] = prop;\n            hasAnimatedProps = true;\n          }\n        }\n        return {\n          props,\n          animatedProps: hasAnimatedProps ? animatedProps : undefined\n        };\n      }\n    }, {\n      key: \"add\",\n      value: function add(command) {\n        if (command.props) {\n          var _this$processProps = this.processProps(command.props),\n            animatedProps = _this$processProps.animatedProps;\n          if (animatedProps) {\n            command.animatedProps = animatedProps;\n          }\n        }\n        this.cursors[this.cursors.length - 1].push(command);\n      }\n    }, {\n      key: \"saveGroup\",\n      value: function saveGroup() {\n        var children = [];\n        this.add({\n          type: _Core.CommandType.Group,\n          children\n        });\n        this.cursors.push(children);\n      }\n    }, {\n      key: \"restoreGroup\",\n      value: function restoreGroup() {\n        this.cursors.pop();\n      }\n    }, {\n      key: \"savePaint\",\n      value: function savePaint(props) {\n        this.add({\n          type: _Core.CommandType.SavePaint,\n          props\n        });\n      }\n    }, {\n      key: \"restorePaint\",\n      value: function restorePaint() {\n        this.add({\n          type: _Core.CommandType.RestorePaint\n        });\n      }\n    }, {\n      key: \"restorePaintDeclaration\",\n      value: function restorePaintDeclaration() {\n        this.add({\n          type: _Core.CommandType.RestorePaintDeclaration\n        });\n      }\n    }, {\n      key: \"materializePaint\",\n      value: function materializePaint() {\n        this.add({\n          type: _Core.CommandType.MaterializePaint\n        });\n      }\n    }, {\n      key: \"pushPathEffect\",\n      value: function pushPathEffect(pathEffectType, props) {\n        if (!(0, _Node.isPathEffect)(pathEffectType)) {\n          throw new Error(\"Invalid color filter type: \" + pathEffectType);\n        }\n        this.add({\n          type: _Core.CommandType.PushPathEffect,\n          pathEffectType,\n          props\n        });\n      }\n    }, {\n      key: \"pushImageFilter\",\n      value: function pushImageFilter(imageFilterType, props) {\n        if (!(0, _Node.isImageFilter)(imageFilterType)) {\n          throw new Error(\"Invalid color filter type: \" + imageFilterType);\n        }\n        this.add({\n          type: _Core.CommandType.PushImageFilter,\n          imageFilterType,\n          props\n        });\n      }\n    }, {\n      key: \"pushColorFilter\",\n      value: function pushColorFilter(colorFilterType, props) {\n        if (!(0, _Node.isColorFilter)(colorFilterType)) {\n          throw new Error(\"Invalid color filter type: \" + colorFilterType);\n        }\n        this.add({\n          type: _Core.CommandType.PushColorFilter,\n          colorFilterType,\n          props\n        });\n      }\n    }, {\n      key: \"pushShader\",\n      value: function pushShader(shaderType, props) {\n        if (!(0, _Node.isShader)(shaderType) && !(shaderType === _types.NodeType.Blend)) {\n          throw new Error(\"Invalid color filter type: \" + shaderType);\n        }\n        this.add({\n          type: _Core.CommandType.PushShader,\n          shaderType,\n          props\n        });\n      }\n    }, {\n      key: \"pushBlurMaskFilter\",\n      value: function pushBlurMaskFilter(props) {\n        this.add({\n          type: _Core.CommandType.PushBlurMaskFilter,\n          props\n        });\n      }\n    }, {\n      key: \"composePathEffect\",\n      value: function composePathEffect() {\n        this.add({\n          type: _Core.CommandType.ComposePathEffect\n        });\n      }\n    }, {\n      key: \"composeColorFilter\",\n      value: function composeColorFilter() {\n        this.add({\n          type: _Core.CommandType.ComposeColorFilter\n        });\n      }\n    }, {\n      key: \"composeImageFilter\",\n      value: function composeImageFilter() {\n        this.add({\n          type: _Core.CommandType.ComposeImageFilter\n        });\n      }\n    }, {\n      key: \"saveCTM\",\n      value: function saveCTM(props) {\n        this.add({\n          type: _Core.CommandType.SaveCTM,\n          props\n        });\n      }\n    }, {\n      key: \"restoreCTM\",\n      value: function restoreCTM() {\n        this.add({\n          type: _Core.CommandType.RestoreCTM\n        });\n      }\n    }, {\n      key: \"drawPaint\",\n      value: function drawPaint() {\n        this.add({\n          type: _Core.CommandType.DrawPaint\n        });\n      }\n    }, {\n      key: \"saveLayer\",\n      value: function saveLayer() {\n        this.add({\n          type: _Core.CommandType.SaveLayer\n        });\n      }\n    }, {\n      key: \"saveBackdropFilter\",\n      value: function saveBackdropFilter() {\n        this.add({\n          type: _Core.CommandType.SaveBackdropFilter\n        });\n      }\n    }, {\n      key: \"drawBox\",\n      value: function drawBox(boxProps, shadows) {\n        shadows.forEach(shadow => {\n          if (shadow.props) {\n            if (shadow.props) {\n              var _this$processProps2 = this.processProps(shadow.props),\n                animatedProps = _this$processProps2.animatedProps;\n              if (animatedProps) {\n                shadow.animatedProps = animatedProps;\n              }\n            }\n          }\n        });\n        this.add({\n          type: _Core.CommandType.DrawBox,\n          props: boxProps,\n          shadows\n        });\n      }\n    }, {\n      key: \"drawImage\",\n      value: function drawImage(props) {\n        this.add({\n          type: _Core.CommandType.DrawImage,\n          props\n        });\n      }\n    }, {\n      key: \"drawCircle\",\n      value: function drawCircle(props) {\n        this.add({\n          type: _Core.CommandType.DrawCircle,\n          props\n        });\n      }\n    }, {\n      key: \"drawPoints\",\n      value: function drawPoints(props) {\n        this.add({\n          type: _Core.CommandType.DrawPoints,\n          props\n        });\n      }\n    }, {\n      key: \"drawPath\",\n      value: function drawPath(props) {\n        this.add({\n          type: _Core.CommandType.DrawPath,\n          props\n        });\n      }\n    }, {\n      key: \"drawRect\",\n      value: function drawRect(props) {\n        this.add({\n          type: _Core.CommandType.DrawRect,\n          props\n        });\n      }\n    }, {\n      key: \"drawRRect\",\n      value: function drawRRect(props) {\n        this.add({\n          type: _Core.CommandType.DrawRRect,\n          props\n        });\n      }\n    }, {\n      key: \"drawOval\",\n      value: function drawOval(props) {\n        this.add({\n          type: _Core.CommandType.DrawOval,\n          props\n        });\n      }\n    }, {\n      key: \"drawLine\",\n      value: function drawLine(props) {\n        this.add({\n          type: _Core.CommandType.DrawLine,\n          props\n        });\n      }\n    }, {\n      key: \"drawPatch\",\n      value: function drawPatch(props) {\n        this.add({\n          type: _Core.CommandType.DrawPatch,\n          props\n        });\n      }\n    }, {\n      key: \"drawVertices\",\n      value: function drawVertices(props) {\n        this.add({\n          type: _Core.CommandType.DrawVertices,\n          props\n        });\n      }\n    }, {\n      key: \"drawDiffRect\",\n      value: function drawDiffRect(props) {\n        this.add({\n          type: _Core.CommandType.DrawDiffRect,\n          props\n        });\n      }\n    }, {\n      key: \"drawText\",\n      value: function drawText(props) {\n        this.add({\n          type: _Core.CommandType.DrawText,\n          props\n        });\n      }\n    }, {\n      key: \"drawTextPath\",\n      value: function drawTextPath(props) {\n        this.add({\n          type: _Core.CommandType.DrawTextPath,\n          props\n        });\n      }\n    }, {\n      key: \"drawTextBlob\",\n      value: function drawTextBlob(props) {\n        this.add({\n          type: _Core.CommandType.DrawTextBlob,\n          props\n        });\n      }\n    }, {\n      key: \"drawGlyphs\",\n      value: function drawGlyphs(props) {\n        this.add({\n          type: _Core.CommandType.DrawGlyphs,\n          props\n        });\n      }\n    }, {\n      key: \"drawPicture\",\n      value: function drawPicture(props) {\n        this.add({\n          type: _Core.CommandType.DrawPicture,\n          props\n        });\n      }\n    }, {\n      key: \"drawImageSVG\",\n      value: function drawImageSVG(props) {\n        this.add({\n          type: _Core.CommandType.DrawImageSVG,\n          props\n        });\n      }\n    }, {\n      key: \"drawParagraph\",\n      value: function drawParagraph(props) {\n        this.add({\n          type: _Core.CommandType.DrawParagraph,\n          props\n        });\n      }\n    }, {\n      key: \"drawAtlas\",\n      value: function drawAtlas(props) {\n        this.add({\n          type: _Core.CommandType.DrawAtlas,\n          props\n        });\n      }\n    }]);\n  }();\n});","lineCount":391,"map":[[9,2,3,0],[9,6,3,0,"_types"],[9,12,3,0],[9,15,3,0,"require"],[9,22,3,0],[9,23,3,0,"_dependencyMap"],[9,37,3,0],[10,2,31,0],[10,6,31,0,"_utils"],[10,12,31,0],[10,15,31,0,"require"],[10,22,31,0],[10,23,31,0,"_dependencyMap"],[10,37,31,0],[11,2,32,0],[11,6,32,0,"_Node"],[11,11,32,0],[11,14,32,0,"require"],[11,21,32,0],[11,22,32,0,"_dependencyMap"],[11,36,32,0],[12,2,35,0],[12,6,35,0,"_Core"],[12,11,35,0],[12,14,35,0,"require"],[12,21,35,0],[12,22,35,0,"_dependencyMap"],[12,36,35,0],[13,2,35,37],[13,6,47,13,"Recorder"],[13,14,47,21],[13,17,47,21,"exports"],[13,24,47,21],[13,25,47,21,"Recorder"],[13,33,47,21],[14,4,52,2],[14,13,52,2,"Recorder"],[14,22,52,2],[14,24,52,16],[15,6,52,16],[15,10,52,16,"_classCallCheck2"],[15,26,52,16],[15,27,52,16,"default"],[15,34,52,16],[15,42,52,16,"Recorder"],[15,50,52,16],[16,6,52,16],[16,11,48,2,"commands"],[16,19,48,10],[16,22,48,24],[16,24,48,26],[17,6,48,26],[17,11,49,2,"cursors"],[17,18,49,9],[17,21,49,25],[17,23,49,27],[18,6,49,27],[18,11,50,2,"animationValues"],[18,26,50,17],[18,29,50,47],[18,33,50,51,"Set"],[18,36,50,54],[18,37,50,55],[18,38,50,56],[19,6,53,4],[19,10,53,8],[19,11,53,9,"cursors"],[19,18,53,16],[19,19,53,17,"push"],[19,23,53,21],[19,24,53,22],[19,28,53,26],[19,29,53,27,"commands"],[19,37,53,35],[19,38,53,36],[20,4,54,2],[21,4,54,3],[21,15,54,3,"_createClass2"],[21,28,54,3],[21,29,54,3,"default"],[21,36,54,3],[21,38,54,3,"Recorder"],[21,46,54,3],[22,6,54,3,"key"],[22,9,54,3],[23,6,54,3,"value"],[23,11,54,3],[23,13,56,2],[23,22,56,2,"getRecording"],[23,34,56,14,"getRecording"],[23,35,56,14],[23,37,56,46],[24,8,57,4],[24,15,57,11],[25,10,58,6,"commands"],[25,18,58,14],[25,20,58,16],[25,24,58,20],[25,25,58,21,"commands"],[25,33,58,29],[26,10,59,6,"paintPool"],[26,19,59,15],[26,21,59,17],[26,23,59,19],[27,10,60,6,"animationValues"],[27,25,60,21],[27,27,60,23],[27,31,60,27],[27,32,60,28,"animationValues"],[28,8,61,4],[28,9,61,5],[29,6,62,2],[30,4,62,3],[31,6,62,3,"key"],[31,9,62,3],[32,6,62,3,"value"],[32,11,62,3],[32,13,64,2],[32,22,64,10,"processProps"],[32,34,64,22,"processProps"],[32,35,64,23,"props"],[32,40,64,53],[32,42,64,55],[33,8,65,4],[33,12,65,10,"animatedProps"],[33,25,65,61],[33,28,65,64],[33,29,65,65],[33,30,65,66],[34,8,66,4],[34,12,66,8,"hasAnimatedProps"],[34,28,66,24],[34,31,66,27],[34,36,66,32],[35,8,68,4],[35,13,68,9],[35,17,68,15,"key"],[35,20,68,18],[35,24,68,22,"props"],[35,29,68,27],[35,31,68,29],[36,10,69,6],[36,14,69,12,"prop"],[36,18,69,16],[36,21,69,19,"props"],[36,26,69,24],[36,27,69,25,"key"],[36,30,69,28],[36,31,69,29],[37,10,70,6],[37,14,70,10],[37,18,70,10,"isSharedValue"],[37,38,70,23],[37,40,70,24,"prop"],[37,44,70,28],[37,45,70,29],[37,47,70,31],[38,12,71,8],[38,16,71,12],[38,17,71,13,"animationValues"],[38,32,71,28],[38,33,71,29,"add"],[38,36,71,32],[38,37,71,33,"prop"],[38,41,71,37],[38,42,71,38],[39,12,72,8,"animatedProps"],[39,25,72,21],[39,26,72,22,"key"],[39,29,72,25],[39,30,72,26],[39,33,72,29,"prop"],[39,37,72,33],[40,12,73,8,"hasAnimatedProps"],[40,28,73,24],[40,31,73,27],[40,35,73,31],[41,10,74,6],[42,8,75,4],[43,8,77,4],[43,15,77,11],[44,10,78,6,"props"],[44,15,78,11],[45,10,79,6,"animatedProps"],[45,23,79,19],[45,25,79,21,"hasAnimatedProps"],[45,41,79,37],[45,44,79,40,"animatedProps"],[45,57,79,53],[45,60,79,56,"undefined"],[46,8,80,4],[46,9,80,5],[47,6,81,2],[48,4,81,3],[49,6,81,3,"key"],[49,9,81,3],[50,6,81,3,"value"],[50,11,81,3],[50,13,83,2],[50,22,83,10,"add"],[50,25,83,13,"add"],[50,26,83,14,"command"],[50,33,83,30],[50,35,83,32],[51,8,84,4],[51,12,84,8,"command"],[51,19,84,15],[51,20,84,16,"props"],[51,25,84,21],[51,27,84,23],[52,10,85,6],[52,14,85,6,"_this$processProps"],[52,32,85,6],[52,35,85,32],[52,39,85,36],[52,40,85,37,"processProps"],[52,52,85,49],[52,53,86,8,"command"],[52,60,86,15],[52,61,86,16,"props"],[52,66,87,6],[52,67,87,7],[53,12,85,14,"animatedProps"],[53,25,85,27],[53,28,85,27,"_this$processProps"],[53,46,85,27],[53,47,85,14,"animatedProps"],[53,60,85,27],[54,10,88,6],[54,14,88,10,"animatedProps"],[54,27,88,23],[54,29,88,25],[55,12,89,8,"command"],[55,19,89,15],[55,20,89,16,"animatedProps"],[55,33,89,29],[55,36,89,32,"animatedProps"],[55,49,89,45],[56,10,90,6],[57,8,91,4],[58,8,92,4],[58,12,92,8],[58,13,92,9,"cursors"],[58,20,92,16],[58,21,92,17],[58,25,92,21],[58,26,92,22,"cursors"],[58,33,92,29],[58,34,92,30,"length"],[58,40,92,36],[58,43,92,39],[58,44,92,40],[58,45,92,41],[58,46,92,42,"push"],[58,50,92,46],[58,51,92,47,"command"],[58,58,92,54],[58,59,92,55],[59,6,93,2],[60,4,93,3],[61,6,93,3,"key"],[61,9,93,3],[62,6,93,3,"value"],[62,11,93,3],[62,13,95,2],[62,22,95,2,"saveGroup"],[62,31,95,11,"saveGroup"],[62,32,95,11],[62,34,95,14],[63,8,96,4],[63,12,96,10,"children"],[63,20,96,29],[63,23,96,32],[63,25,96,34],[64,8,97,4],[64,12,97,8],[64,13,97,9,"add"],[64,16,97,12],[64,17,97,13],[65,10,97,15,"type"],[65,14,97,19],[65,16,97,21,"CommandType"],[65,33,97,32],[65,34,97,33,"Group"],[65,39,97,38],[66,10,97,40,"children"],[67,8,97,49],[67,9,97,50],[67,10,97,51],[68,8,98,4],[68,12,98,8],[68,13,98,9,"cursors"],[68,20,98,16],[68,21,98,17,"push"],[68,25,98,21],[68,26,98,22,"children"],[68,34,98,30],[68,35,98,31],[69,6,99,2],[70,4,99,3],[71,6,99,3,"key"],[71,9,99,3],[72,6,99,3,"value"],[72,11,99,3],[72,13,101,2],[72,22,101,2,"restoreGroup"],[72,34,101,14,"restoreGroup"],[72,35,101,14],[72,37,101,17],[73,8,102,4],[73,12,102,8],[73,13,102,9,"cursors"],[73,20,102,16],[73,21,102,17,"pop"],[73,24,102,20],[73,25,102,21],[73,26,102,22],[74,6,103,2],[75,4,103,3],[76,6,103,3,"key"],[76,9,103,3],[77,6,103,3,"value"],[77,11,103,3],[77,13,105,2],[77,22,105,2,"savePaint"],[77,31,105,11,"savePaint"],[77,32,105,12,"props"],[77,37,105,44],[77,39,105,46],[78,8,106,4],[78,12,106,8],[78,13,106,9,"add"],[78,16,106,12],[78,17,106,13],[79,10,106,15,"type"],[79,14,106,19],[79,16,106,21,"CommandType"],[79,33,106,32],[79,34,106,33,"SavePaint"],[79,43,106,42],[80,10,106,44,"props"],[81,8,106,50],[81,9,106,51],[81,10,106,52],[82,6,107,2],[83,4,107,3],[84,6,107,3,"key"],[84,9,107,3],[85,6,107,3,"value"],[85,11,107,3],[85,13,109,2],[85,22,109,2,"restorePaint"],[85,34,109,14,"restorePaint"],[85,35,109,14],[85,37,109,17],[86,8,110,4],[86,12,110,8],[86,13,110,9,"add"],[86,16,110,12],[86,17,110,13],[87,10,110,15,"type"],[87,14,110,19],[87,16,110,21,"CommandType"],[87,33,110,32],[87,34,110,33,"RestorePaint"],[88,8,110,46],[88,9,110,47],[88,10,110,48],[89,6,111,2],[90,4,111,3],[91,6,111,3,"key"],[91,9,111,3],[92,6,111,3,"value"],[92,11,111,3],[92,13,113,2],[92,22,113,2,"restorePaintDeclaration"],[92,45,113,25,"restorePaintDeclaration"],[92,46,113,25],[92,48,113,28],[93,8,114,4],[93,12,114,8],[93,13,114,9,"add"],[93,16,114,12],[93,17,114,13],[94,10,114,15,"type"],[94,14,114,19],[94,16,114,21,"CommandType"],[94,33,114,32],[94,34,114,33,"RestorePaintDeclaration"],[95,8,114,57],[95,9,114,58],[95,10,114,59],[96,6,115,2],[97,4,115,3],[98,6,115,3,"key"],[98,9,115,3],[99,6,115,3,"value"],[99,11,115,3],[99,13,117,2],[99,22,117,2,"materializePaint"],[99,38,117,18,"materializePaint"],[99,39,117,18],[99,41,117,21],[100,8,118,4],[100,12,118,8],[100,13,118,9,"add"],[100,16,118,12],[100,17,118,13],[101,10,118,15,"type"],[101,14,118,19],[101,16,118,21,"CommandType"],[101,33,118,32],[101,34,118,33,"MaterializePaint"],[102,8,118,50],[102,9,118,51],[102,10,118,52],[103,6,119,2],[104,4,119,3],[105,6,119,3,"key"],[105,9,119,3],[106,6,119,3,"value"],[106,11,119,3],[106,13,121,2],[106,22,121,2,"pushPathEffect"],[106,36,121,16,"pushPathEffect"],[106,37,121,17,"pathEffectType"],[106,51,121,41],[106,53,121,43,"props"],[106,58,121,72],[106,60,121,74],[107,8,122,4],[107,12,122,8],[107,13,122,9],[107,17,122,9,"isPathEffect"],[107,35,122,21],[107,37,122,22,"pathEffectType"],[107,51,122,36],[107,52,122,37],[107,54,122,39],[108,10,123,6],[108,16,123,12],[108,20,123,16,"Error"],[108,25,123,21],[108,26,123,22],[108,55,123,51],[108,58,123,54,"pathEffectType"],[108,72,123,68],[108,73,123,69],[109,8,124,4],[110,8,125,4],[110,12,125,8],[110,13,125,9,"add"],[110,16,125,12],[110,17,125,13],[111,10,126,6,"type"],[111,14,126,10],[111,16,126,12,"CommandType"],[111,33,126,23],[111,34,126,24,"PushPathEffect"],[111,48,126,38],[112,10,127,6,"pathEffectType"],[112,24,127,20],[113,10,128,6,"props"],[114,8,129,4],[114,9,129,5],[114,10,129,6],[115,6,130,2],[116,4,130,3],[117,6,130,3,"key"],[117,9,130,3],[118,6,130,3,"value"],[118,11,130,3],[118,13,132,2],[118,22,132,2,"pushImageFilter"],[118,37,132,17,"pushImageFilter"],[118,38,132,18,"imageFilterType"],[118,53,132,43],[118,55,132,45,"props"],[118,60,132,74],[118,62,132,76],[119,8,133,4],[119,12,133,8],[119,13,133,9],[119,17,133,9,"isImageFilter"],[119,36,133,22],[119,38,133,23,"imageFilterType"],[119,53,133,38],[119,54,133,39],[119,56,133,41],[120,10,134,6],[120,16,134,12],[120,20,134,16,"Error"],[120,25,134,21],[120,26,134,22],[120,55,134,51],[120,58,134,54,"imageFilterType"],[120,73,134,69],[120,74,134,70],[121,8,135,4],[122,8,136,4],[122,12,136,8],[122,13,136,9,"add"],[122,16,136,12],[122,17,136,13],[123,10,137,6,"type"],[123,14,137,10],[123,16,137,12,"CommandType"],[123,33,137,23],[123,34,137,24,"PushImageFilter"],[123,49,137,39],[124,10,138,6,"imageFilterType"],[124,25,138,21],[125,10,139,6,"props"],[126,8,140,4],[126,9,140,5],[126,10,140,6],[127,6,141,2],[128,4,141,3],[129,6,141,3,"key"],[129,9,141,3],[130,6,141,3,"value"],[130,11,141,3],[130,13,143,2],[130,22,143,2,"pushColorFilter"],[130,37,143,17,"pushColorFilter"],[130,38,143,18,"colorFilterType"],[130,53,143,43],[130,55,143,45,"props"],[130,60,143,74],[130,62,143,76],[131,8,144,4],[131,12,144,8],[131,13,144,9],[131,17,144,9,"isColorFilter"],[131,36,144,22],[131,38,144,23,"colorFilterType"],[131,53,144,38],[131,54,144,39],[131,56,144,41],[132,10,145,6],[132,16,145,12],[132,20,145,16,"Error"],[132,25,145,21],[132,26,145,22],[132,55,145,51],[132,58,145,54,"colorFilterType"],[132,73,145,69],[132,74,145,70],[133,8,146,4],[134,8,147,4],[134,12,147,8],[134,13,147,9,"add"],[134,16,147,12],[134,17,147,13],[135,10,148,6,"type"],[135,14,148,10],[135,16,148,12,"CommandType"],[135,33,148,23],[135,34,148,24,"PushColorFilter"],[135,49,148,39],[136,10,149,6,"colorFilterType"],[136,25,149,21],[137,10,150,6,"props"],[138,8,151,4],[138,9,151,5],[138,10,151,6],[139,6,152,2],[140,4,152,3],[141,6,152,3,"key"],[141,9,152,3],[142,6,152,3,"value"],[142,11,152,3],[142,13,154,2],[142,22,154,2,"pushShader"],[142,32,154,12,"pushShader"],[142,33,154,13,"shaderType"],[142,43,154,33],[142,45,154,35,"props"],[142,50,154,64],[142,52,154,66],[143,8,155,4],[143,12,155,8],[143,13,155,9],[143,17,155,9,"isShader"],[143,31,155,17],[143,33,155,18,"shaderType"],[143,43,155,28],[143,44,155,29],[143,48,155,33],[143,50,155,35,"shaderType"],[143,60,155,45],[143,65,155,50,"NodeType"],[143,80,155,58],[143,81,155,59,"Blend"],[143,86,155,64],[143,87,155,65],[143,89,155,67],[144,10,156,6],[144,16,156,12],[144,20,156,16,"Error"],[144,25,156,21],[144,26,156,22],[144,55,156,51],[144,58,156,54,"shaderType"],[144,68,156,64],[144,69,156,65],[145,8,157,4],[146,8,158,4],[146,12,158,8],[146,13,158,9,"add"],[146,16,158,12],[146,17,158,13],[147,10,158,15,"type"],[147,14,158,19],[147,16,158,21,"CommandType"],[147,33,158,32],[147,34,158,33,"PushShader"],[147,44,158,43],[148,10,158,45,"shaderType"],[148,20,158,55],[149,10,158,57,"props"],[150,8,158,63],[150,9,158,64],[150,10,158,65],[151,6,159,2],[152,4,159,3],[153,6,159,3,"key"],[153,9,159,3],[154,6,159,3,"value"],[154,11,159,3],[154,13,161,2],[154,22,161,2,"pushBlurMaskFilter"],[154,40,161,20,"pushBlurMaskFilter"],[154,41,161,21,"props"],[154,46,161,62],[154,48,161,64],[155,8,162,4],[155,12,162,8],[155,13,162,9,"add"],[155,16,162,12],[155,17,162,13],[156,10,162,15,"type"],[156,14,162,19],[156,16,162,21,"CommandType"],[156,33,162,32],[156,34,162,33,"PushBlurMaskFilter"],[156,52,162,51],[157,10,162,53,"props"],[158,8,162,59],[158,9,162,60],[158,10,162,61],[159,6,163,2],[160,4,163,3],[161,6,163,3,"key"],[161,9,163,3],[162,6,163,3,"value"],[162,11,163,3],[162,13,165,2],[162,22,165,2,"composePathEffect"],[162,39,165,19,"composePathEffect"],[162,40,165,19],[162,42,165,22],[163,8,166,4],[163,12,166,8],[163,13,166,9,"add"],[163,16,166,12],[163,17,166,13],[164,10,166,15,"type"],[164,14,166,19],[164,16,166,21,"CommandType"],[164,33,166,32],[164,34,166,33,"ComposePathEffect"],[165,8,166,51],[165,9,166,52],[165,10,166,53],[166,6,167,2],[167,4,167,3],[168,6,167,3,"key"],[168,9,167,3],[169,6,167,3,"value"],[169,11,167,3],[169,13,169,2],[169,22,169,2,"composeColorFilter"],[169,40,169,20,"composeColorFilter"],[169,41,169,20],[169,43,169,23],[170,8,170,4],[170,12,170,8],[170,13,170,9,"add"],[170,16,170,12],[170,17,170,13],[171,10,170,15,"type"],[171,14,170,19],[171,16,170,21,"CommandType"],[171,33,170,32],[171,34,170,33,"ComposeColorFilter"],[172,8,170,52],[172,9,170,53],[172,10,170,54],[173,6,171,2],[174,4,171,3],[175,6,171,3,"key"],[175,9,171,3],[176,6,171,3,"value"],[176,11,171,3],[176,13,173,2],[176,22,173,2,"composeImageFilter"],[176,40,173,20,"composeImageFilter"],[176,41,173,20],[176,43,173,23],[177,8,174,4],[177,12,174,8],[177,13,174,9,"add"],[177,16,174,12],[177,17,174,13],[178,10,174,15,"type"],[178,14,174,19],[178,16,174,21,"CommandType"],[178,33,174,32],[178,34,174,33,"ComposeImageFilter"],[179,8,174,52],[179,9,174,53],[179,10,174,54],[180,6,175,2],[181,4,175,3],[182,6,175,3,"key"],[182,9,175,3],[183,6,175,3,"value"],[183,11,175,3],[183,13,177,2],[183,22,177,2,"saveCTM"],[183,29,177,9,"saveCTM"],[183,30,177,10,"props"],[183,35,177,40],[183,37,177,42],[184,8,178,4],[184,12,178,8],[184,13,178,9,"add"],[184,16,178,12],[184,17,178,13],[185,10,178,15,"type"],[185,14,178,19],[185,16,178,21,"CommandType"],[185,33,178,32],[185,34,178,33,"SaveCTM"],[185,41,178,40],[186,10,178,42,"props"],[187,8,178,48],[187,9,178,49],[187,10,178,50],[188,6,179,2],[189,4,179,3],[190,6,179,3,"key"],[190,9,179,3],[191,6,179,3,"value"],[191,11,179,3],[191,13,181,2],[191,22,181,2,"restoreCTM"],[191,32,181,12,"restoreCTM"],[191,33,181,12],[191,35,181,15],[192,8,182,4],[192,12,182,8],[192,13,182,9,"add"],[192,16,182,12],[192,17,182,13],[193,10,182,15,"type"],[193,14,182,19],[193,16,182,21,"CommandType"],[193,33,182,32],[193,34,182,33,"RestoreCTM"],[194,8,182,44],[194,9,182,45],[194,10,182,46],[195,6,183,2],[196,4,183,3],[197,6,183,3,"key"],[197,9,183,3],[198,6,183,3,"value"],[198,11,183,3],[198,13,185,2],[198,22,185,2,"drawPaint"],[198,31,185,11,"drawPaint"],[198,32,185,11],[198,34,185,14],[199,8,186,4],[199,12,186,8],[199,13,186,9,"add"],[199,16,186,12],[199,17,186,13],[200,10,186,15,"type"],[200,14,186,19],[200,16,186,21,"CommandType"],[200,33,186,32],[200,34,186,33,"DrawPaint"],[201,8,186,43],[201,9,186,44],[201,10,186,45],[202,6,187,2],[203,4,187,3],[204,6,187,3,"key"],[204,9,187,3],[205,6,187,3,"value"],[205,11,187,3],[205,13,189,2],[205,22,189,2,"saveLayer"],[205,31,189,11,"saveLayer"],[205,32,189,11],[205,34,189,14],[206,8,190,4],[206,12,190,8],[206,13,190,9,"add"],[206,16,190,12],[206,17,190,13],[207,10,190,15,"type"],[207,14,190,19],[207,16,190,21,"CommandType"],[207,33,190,32],[207,34,190,33,"SaveLayer"],[208,8,190,43],[208,9,190,44],[208,10,190,45],[209,6,191,2],[210,4,191,3],[211,6,191,3,"key"],[211,9,191,3],[212,6,191,3,"value"],[212,11,191,3],[212,13,193,2],[212,22,193,2,"saveBackdropFilter"],[212,40,193,20,"saveBackdropFilter"],[212,41,193,20],[212,43,193,23],[213,8,194,4],[213,12,194,8],[213,13,194,9,"add"],[213,16,194,12],[213,17,194,13],[214,10,194,15,"type"],[214,14,194,19],[214,16,194,21,"CommandType"],[214,33,194,32],[214,34,194,33,"SaveBackdropFilter"],[215,8,194,52],[215,9,194,53],[215,10,194,54],[216,6,195,2],[217,4,195,3],[218,6,195,3,"key"],[218,9,195,3],[219,6,195,3,"value"],[219,11,195,3],[219,13,197,2],[219,22,197,2,"drawBox"],[219,29,197,9,"drawBox"],[219,30,198,4,"boxProps"],[219,38,198,37],[219,40,199,4,"shadows"],[219,47,202,7],[219,49,203,4],[220,8,204,4,"shadows"],[220,15,204,11],[220,16,204,12,"forEach"],[220,23,204,19],[220,24,204,21,"shadow"],[220,30,204,27],[220,34,204,32],[221,10,205,6],[221,14,205,10,"shadow"],[221,20,205,16],[221,21,205,17,"props"],[221,26,205,22],[221,28,205,24],[222,12,206,8],[222,16,206,12,"shadow"],[222,22,206,18],[222,23,206,19,"props"],[222,28,206,24],[222,30,206,26],[223,14,207,10],[223,18,207,10,"_this$processProps2"],[223,37,207,10],[223,40,207,36],[223,44,207,40],[223,45,207,41,"processProps"],[223,57,207,53],[223,58,208,12,"shadow"],[223,64,208,18],[223,65,208,19,"props"],[223,70,209,10],[223,71,209,11],[224,16,207,18,"animatedProps"],[224,29,207,31],[224,32,207,31,"_this$processProps2"],[224,51,207,31],[224,52,207,18,"animatedProps"],[224,65,207,31],[225,14,210,10],[225,18,210,14,"animatedProps"],[225,31,210,27],[225,33,210,29],[226,16,211,12,"shadow"],[226,22,211,18],[226,23,211,19,"animatedProps"],[226,36,211,32],[226,39,211,35,"animatedProps"],[226,52,211,48],[227,14,212,10],[228,12,213,8],[229,10,214,6],[230,8,215,4],[230,9,215,5],[230,10,215,6],[231,8,216,4],[231,12,216,8],[231,13,216,9,"add"],[231,16,216,12],[231,17,216,13],[232,10,216,15,"type"],[232,14,216,19],[232,16,216,21,"CommandType"],[232,33,216,32],[232,34,216,33,"DrawBox"],[232,41,216,40],[233,10,216,42,"props"],[233,15,216,47],[233,17,216,49,"boxProps"],[233,25,216,57],[234,10,216,59,"shadows"],[235,8,216,67],[235,9,216,68],[235,10,216,69],[236,6,217,2],[237,4,217,3],[238,6,217,3,"key"],[238,9,217,3],[239,6,217,3,"value"],[239,11,217,3],[239,13,219,2],[239,22,219,2,"drawImage"],[239,31,219,11,"drawImage"],[239,32,219,12,"props"],[239,37,219,44],[239,39,219,46],[240,8,220,4],[240,12,220,8],[240,13,220,9,"add"],[240,16,220,12],[240,17,220,13],[241,10,220,15,"type"],[241,14,220,19],[241,16,220,21,"CommandType"],[241,33,220,32],[241,34,220,33,"DrawImage"],[241,43,220,42],[242,10,220,44,"props"],[243,8,220,50],[243,9,220,51],[243,10,220,52],[244,6,221,2],[245,4,221,3],[246,6,221,3,"key"],[246,9,221,3],[247,6,221,3,"value"],[247,11,221,3],[247,13,223,2],[247,22,223,2,"drawCircle"],[247,32,223,12,"drawCircle"],[247,33,223,13,"props"],[247,38,223,46],[247,40,223,48],[248,8,224,4],[248,12,224,8],[248,13,224,9,"add"],[248,16,224,12],[248,17,224,13],[249,10,224,15,"type"],[249,14,224,19],[249,16,224,21,"CommandType"],[249,33,224,32],[249,34,224,33,"DrawCircle"],[249,44,224,43],[250,10,224,45,"props"],[251,8,224,51],[251,9,224,52],[251,10,224,53],[252,6,225,2],[253,4,225,3],[254,6,225,3,"key"],[254,9,225,3],[255,6,225,3,"value"],[255,11,225,3],[255,13,226,2],[255,22,226,2,"drawPoints"],[255,32,226,12,"drawPoints"],[255,33,226,13,"props"],[255,38,226,46],[255,40,226,48],[256,8,227,4],[256,12,227,8],[256,13,227,9,"add"],[256,16,227,12],[256,17,227,13],[257,10,227,15,"type"],[257,14,227,19],[257,16,227,21,"CommandType"],[257,33,227,32],[257,34,227,33,"DrawPoints"],[257,44,227,43],[258,10,227,45,"props"],[259,8,227,51],[259,9,227,52],[259,10,227,53],[260,6,228,2],[261,4,228,3],[262,6,228,3,"key"],[262,9,228,3],[263,6,228,3,"value"],[263,11,228,3],[263,13,230,2],[263,22,230,2,"drawPath"],[263,30,230,10,"drawPath"],[263,31,230,11,"props"],[263,36,230,42],[263,38,230,44],[264,8,231,4],[264,12,231,8],[264,13,231,9,"add"],[264,16,231,12],[264,17,231,13],[265,10,231,15,"type"],[265,14,231,19],[265,16,231,21,"CommandType"],[265,33,231,32],[265,34,231,33,"DrawPath"],[265,42,231,41],[266,10,231,43,"props"],[267,8,231,49],[267,9,231,50],[267,10,231,51],[268,6,232,2],[269,4,232,3],[270,6,232,3,"key"],[270,9,232,3],[271,6,232,3,"value"],[271,11,232,3],[271,13,234,2],[271,22,234,2,"drawRect"],[271,30,234,10,"drawRect"],[271,31,234,11,"props"],[271,36,234,42],[271,38,234,44],[272,8,235,4],[272,12,235,8],[272,13,235,9,"add"],[272,16,235,12],[272,17,235,13],[273,10,235,15,"type"],[273,14,235,19],[273,16,235,21,"CommandType"],[273,33,235,32],[273,34,235,33,"DrawRect"],[273,42,235,41],[274,10,235,43,"props"],[275,8,235,49],[275,9,235,50],[275,10,235,51],[276,6,236,2],[277,4,236,3],[278,6,236,3,"key"],[278,9,236,3],[279,6,236,3,"value"],[279,11,236,3],[279,13,238,2],[279,22,238,2,"drawRRect"],[279,31,238,11,"drawRRect"],[279,32,238,12,"props"],[279,37,238,50],[279,39,238,52],[280,8,239,4],[280,12,239,8],[280,13,239,9,"add"],[280,16,239,12],[280,17,239,13],[281,10,239,15,"type"],[281,14,239,19],[281,16,239,21,"CommandType"],[281,33,239,32],[281,34,239,33,"DrawRRect"],[281,43,239,42],[282,10,239,44,"props"],[283,8,239,50],[283,9,239,51],[283,10,239,52],[284,6,240,2],[285,4,240,3],[286,6,240,3,"key"],[286,9,240,3],[287,6,240,3,"value"],[287,11,240,3],[287,13,242,2],[287,22,242,2,"drawOval"],[287,30,242,10,"drawOval"],[287,31,242,11,"props"],[287,36,242,42],[287,38,242,44],[288,8,243,4],[288,12,243,8],[288,13,243,9,"add"],[288,16,243,12],[288,17,243,13],[289,10,243,15,"type"],[289,14,243,19],[289,16,243,21,"CommandType"],[289,33,243,32],[289,34,243,33,"DrawOval"],[289,42,243,41],[290,10,243,43,"props"],[291,8,243,49],[291,9,243,50],[291,10,243,51],[292,6,244,2],[293,4,244,3],[294,6,244,3,"key"],[294,9,244,3],[295,6,244,3,"value"],[295,11,244,3],[295,13,246,2],[295,22,246,2,"drawLine"],[295,30,246,10,"drawLine"],[295,31,246,11,"props"],[295,36,246,42],[295,38,246,44],[296,8,247,4],[296,12,247,8],[296,13,247,9,"add"],[296,16,247,12],[296,17,247,13],[297,10,247,15,"type"],[297,14,247,19],[297,16,247,21,"CommandType"],[297,33,247,32],[297,34,247,33,"DrawLine"],[297,42,247,41],[298,10,247,43,"props"],[299,8,247,49],[299,9,247,50],[299,10,247,51],[300,6,248,2],[301,4,248,3],[302,6,248,3,"key"],[302,9,248,3],[303,6,248,3,"value"],[303,11,248,3],[303,13,250,2],[303,22,250,2,"drawPatch"],[303,31,250,11,"drawPatch"],[303,32,250,12,"props"],[303,37,250,44],[303,39,250,46],[304,8,251,4],[304,12,251,8],[304,13,251,9,"add"],[304,16,251,12],[304,17,251,13],[305,10,251,15,"type"],[305,14,251,19],[305,16,251,21,"CommandType"],[305,33,251,32],[305,34,251,33,"DrawPatch"],[305,43,251,42],[306,10,251,44,"props"],[307,8,251,50],[307,9,251,51],[307,10,251,52],[308,6,252,2],[309,4,252,3],[310,6,252,3,"key"],[310,9,252,3],[311,6,252,3,"value"],[311,11,252,3],[311,13,254,2],[311,22,254,2,"drawVertices"],[311,34,254,14,"drawVertices"],[311,35,254,15,"props"],[311,40,254,50],[311,42,254,52],[312,8,255,4],[312,12,255,8],[312,13,255,9,"add"],[312,16,255,12],[312,17,255,13],[313,10,255,15,"type"],[313,14,255,19],[313,16,255,21,"CommandType"],[313,33,255,32],[313,34,255,33,"DrawVertices"],[313,46,255,45],[314,10,255,47,"props"],[315,8,255,53],[315,9,255,54],[315,10,255,55],[316,6,256,2],[317,4,256,3],[318,6,256,3,"key"],[318,9,256,3],[319,6,256,3,"value"],[319,11,256,3],[319,13,258,2],[319,22,258,2,"drawDiffRect"],[319,34,258,14,"drawDiffRect"],[319,35,258,15,"props"],[319,40,258,50],[319,42,258,52],[320,8,259,4],[320,12,259,8],[320,13,259,9,"add"],[320,16,259,12],[320,17,259,13],[321,10,259,15,"type"],[321,14,259,19],[321,16,259,21,"CommandType"],[321,33,259,32],[321,34,259,33,"DrawDiffRect"],[321,46,259,45],[322,10,259,47,"props"],[323,8,259,53],[323,9,259,54],[323,10,259,55],[324,6,260,2],[325,4,260,3],[326,6,260,3,"key"],[326,9,260,3],[327,6,260,3,"value"],[327,11,260,3],[327,13,262,2],[327,22,262,2,"drawText"],[327,30,262,10,"drawText"],[327,31,262,11,"props"],[327,36,262,42],[327,38,262,44],[328,8,263,4],[328,12,263,8],[328,13,263,9,"add"],[328,16,263,12],[328,17,263,13],[329,10,263,15,"type"],[329,14,263,19],[329,16,263,21,"CommandType"],[329,33,263,32],[329,34,263,33,"DrawText"],[329,42,263,41],[330,10,263,43,"props"],[331,8,263,49],[331,9,263,50],[331,10,263,51],[332,6,264,2],[333,4,264,3],[334,6,264,3,"key"],[334,9,264,3],[335,6,264,3,"value"],[335,11,264,3],[335,13,266,2],[335,22,266,2,"drawTextPath"],[335,34,266,14,"drawTextPath"],[335,35,266,15,"props"],[335,40,266,50],[335,42,266,52],[336,8,267,4],[336,12,267,8],[336,13,267,9,"add"],[336,16,267,12],[336,17,267,13],[337,10,267,15,"type"],[337,14,267,19],[337,16,267,21,"CommandType"],[337,33,267,32],[337,34,267,33,"DrawTextPath"],[337,46,267,45],[338,10,267,47,"props"],[339,8,267,53],[339,9,267,54],[339,10,267,55],[340,6,268,2],[341,4,268,3],[342,6,268,3,"key"],[342,9,268,3],[343,6,268,3,"value"],[343,11,268,3],[343,13,270,2],[343,22,270,2,"drawTextBlob"],[343,34,270,14,"drawTextBlob"],[343,35,270,15,"props"],[343,40,270,50],[343,42,270,52],[344,8,271,4],[344,12,271,8],[344,13,271,9,"add"],[344,16,271,12],[344,17,271,13],[345,10,271,15,"type"],[345,14,271,19],[345,16,271,21,"CommandType"],[345,33,271,32],[345,34,271,33,"DrawTextBlob"],[345,46,271,45],[346,10,271,47,"props"],[347,8,271,53],[347,9,271,54],[347,10,271,55],[348,6,272,2],[349,4,272,3],[350,6,272,3,"key"],[350,9,272,3],[351,6,272,3,"value"],[351,11,272,3],[351,13,274,2],[351,22,274,2,"drawGlyphs"],[351,32,274,12,"drawGlyphs"],[351,33,274,13,"props"],[351,38,274,46],[351,40,274,48],[352,8,275,4],[352,12,275,8],[352,13,275,9,"add"],[352,16,275,12],[352,17,275,13],[353,10,275,15,"type"],[353,14,275,19],[353,16,275,21,"CommandType"],[353,33,275,32],[353,34,275,33,"DrawGlyphs"],[353,44,275,43],[354,10,275,45,"props"],[355,8,275,51],[355,9,275,52],[355,10,275,53],[356,6,276,2],[357,4,276,3],[358,6,276,3,"key"],[358,9,276,3],[359,6,276,3,"value"],[359,11,276,3],[359,13,278,2],[359,22,278,2,"drawPicture"],[359,33,278,13,"drawPicture"],[359,34,278,14,"props"],[359,39,278,48],[359,41,278,50],[360,8,279,4],[360,12,279,8],[360,13,279,9,"add"],[360,16,279,12],[360,17,279,13],[361,10,279,15,"type"],[361,14,279,19],[361,16,279,21,"CommandType"],[361,33,279,32],[361,34,279,33,"DrawPicture"],[361,45,279,44],[362,10,279,46,"props"],[363,8,279,52],[363,9,279,53],[363,10,279,54],[364,6,280,2],[365,4,280,3],[366,6,280,3,"key"],[366,9,280,3],[367,6,280,3,"value"],[367,11,280,3],[367,13,282,2],[367,22,282,2,"drawImageSVG"],[367,34,282,14,"drawImageSVG"],[367,35,282,15,"props"],[367,40,282,50],[367,42,282,52],[368,8,283,4],[368,12,283,8],[368,13,283,9,"add"],[368,16,283,12],[368,17,283,13],[369,10,283,15,"type"],[369,14,283,19],[369,16,283,21,"CommandType"],[369,33,283,32],[369,34,283,33,"DrawImageSVG"],[369,46,283,45],[370,10,283,47,"props"],[371,8,283,53],[371,9,283,54],[371,10,283,55],[372,6,284,2],[373,4,284,3],[374,6,284,3,"key"],[374,9,284,3],[375,6,284,3,"value"],[375,11,284,3],[375,13,286,2],[375,22,286,2,"drawParagraph"],[375,35,286,15,"drawParagraph"],[375,36,286,16,"props"],[375,41,286,52],[375,43,286,54],[376,8,287,4],[376,12,287,8],[376,13,287,9,"add"],[376,16,287,12],[376,17,287,13],[377,10,287,15,"type"],[377,14,287,19],[377,16,287,21,"CommandType"],[377,33,287,32],[377,34,287,33,"DrawParagraph"],[377,47,287,46],[378,10,287,48,"props"],[379,8,287,54],[379,9,287,55],[379,10,287,56],[380,6,288,2],[381,4,288,3],[382,6,288,3,"key"],[382,9,288,3],[383,6,288,3,"value"],[383,11,288,3],[383,13,290,2],[383,22,290,2,"drawAtlas"],[383,31,290,11,"drawAtlas"],[383,32,290,12,"props"],[383,37,290,44],[383,39,290,46],[384,8,291,4],[384,12,291,8],[384,13,291,9,"add"],[384,16,291,12],[384,17,291,13],[385,10,291,15,"type"],[385,14,291,19],[385,16,291,21,"CommandType"],[385,33,291,32],[385,34,291,33,"DrawAtlas"],[385,43,291,42],[386,10,291,44,"props"],[387,8,291,50],[387,9,291,51],[387,10,291,52],[388,6,292,2],[389,4,292,3],[390,2,292,3],[391,0,292,3],[391,3]],"functionMap":{"names":["<global>","Recorder","constructor","getRecording","processProps","add","saveGroup","restoreGroup","savePaint","restorePaint","restorePaintDeclaration","materializePaint","pushPathEffect","pushImageFilter","pushColorFilter","pushShader","pushBlurMaskFilter","composePathEffect","composeColorFilter","composeImageFilter","saveCTM","restoreCTM","drawPaint","saveLayer","saveBackdropFilter","drawBox","shadows.forEach$argument_0","drawImage","drawCircle","drawPoints","drawPath","drawRect","drawRRect","drawOval","drawLine","drawPatch","drawVertices","drawDiffRect","drawText","drawTextPath","drawTextBlob","drawGlyphs","drawPicture","drawImageSVG","drawParagraph","drawAtlas"],"mappings":"AAA;OC8C;ECK;GDE;EEE;GFM;EGE;GHiB;EIE;GJU;EKE;GLI;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXS;EYE;GZS;EaE;GbS;EcE;GdK;EeE;GfE;EgBE;GhBE;EiBE;GjBE;EkBE;GlBE;EmBE;GnBE;EoBE;GpBE;EqBE;GrBE;EsBE;GtBE;EuBE;GvBE;EwBE;oBCO;KDW;GxBE;E0BE;G1BE;E2BE;G3BE;E4BC;G5BE;E6BE;G7BE;E8BE;G9BE;E+BE;G/BE;EgCE;GhCE;EiCE;GjCE;EkCE;GlCE;EmCE;GnCE;EoCE;GpCE;EqCE;GrCE;EsCE;GtCE;EuCE;GvCE;EwCE;GxCE;EyCE;GzCE;E0CE;G1CE;E2CE;G3CE;E4CE;G5CE;CDC"}},"type":"js/module"}]}