{"dependencies":[{"name":"../integration.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"B8aKvpmafw58aWtupuC7GWTMiwo=","exportNames":["*"]}},{"name":"../metadata.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":88,"index":143}}],"key":"e+GcWU7PM4jYDq7rLAthu62vi9g=","exportNames":["*"]}},{"name":"../utils-hoist/envelope.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":144},"end":{"line":3,"column":65,"index":209}}],"key":"/wcaZSbu8ehBqhp+Lmxp451SsSA=","exportNames":["*"]}},{"name":"../utils-hoist/stacktrace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":210},"end":{"line":4,"column":66,"index":276}}],"key":"2lBxHbvYEHUBOpG3/Vvqo+tY2+M=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.thirdPartyErrorFilterIntegration = void 0;\n  var _integration = require(_dependencyMap[0], \"../integration.js\");\n  var _metadata = require(_dependencyMap[1], \"../metadata.js\");\n  var _envelope = require(_dependencyMap[2], \"../utils-hoist/envelope.js\");\n  var _stacktrace = require(_dependencyMap[3], \"../utils-hoist/stacktrace.js\");\n  /**\n   * This integration allows you to filter out, or tag error events that do not come from user code marked with a bundle key via the Sentry bundler plugins.\n   */\n  const thirdPartyErrorFilterIntegration = exports.thirdPartyErrorFilterIntegration = (0, _integration.defineIntegration)(options => {\n    return {\n      name: 'ThirdPartyErrorsFilter',\n      setup(client) {\n        // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n        // TODO(lforst): Move this cleanup logic into a more central place in the SDK.\n        client.on('beforeEnvelope', envelope => {\n          (0, _envelope.forEachEnvelopeItem)(envelope, (item, type) => {\n            if (type === 'event') {\n              const event = Array.isArray(item) ? item[1] : undefined;\n              if (event) {\n                (0, _metadata.stripMetadataFromStackFrames)(event);\n                item[1] = event;\n              }\n            }\n          });\n        });\n        client.on('applyFrameMetadata', event => {\n          // Only apply stack frame metadata to error events\n          if (event.type) {\n            return;\n          }\n          const stackParser = client.getOptions().stackParser;\n          (0, _metadata.addMetadataToStackFrames)(stackParser, event);\n        });\n      },\n      processEvent(event) {\n        const frameKeys = getBundleKeysForAllFramesWithFilenames(event);\n        if (frameKeys) {\n          const arrayMethod = options.behaviour === 'drop-error-if-contains-third-party-frames' || options.behaviour === 'apply-tag-if-contains-third-party-frames' ? 'some' : 'every';\n          const behaviourApplies = frameKeys[arrayMethod](keys => !keys.some(key => options.filterKeys.includes(key)));\n          if (behaviourApplies) {\n            const shouldDrop = options.behaviour === 'drop-error-if-contains-third-party-frames' || options.behaviour === 'drop-error-if-exclusively-contains-third-party-frames';\n            if (shouldDrop) {\n              return null;\n            } else {\n              event.tags = {\n                ...event.tags,\n                third_party_code: true\n              };\n            }\n          }\n        }\n        return event;\n      }\n    };\n  });\n  function getBundleKeysForAllFramesWithFilenames(event) {\n    const frames = (0, _stacktrace.getFramesFromEvent)(event);\n    if (!frames) {\n      return undefined;\n    }\n    return frames\n    // Exclude frames without a filename since these are likely native code or built-ins\n    .filter(frame => !!frame.filename).map(frame => {\n      if (frame.module_metadata) {\n        return Object.keys(frame.module_metadata).filter(key => key.startsWith(BUNDLER_PLUGIN_APP_KEY_PREFIX)).map(key => key.slice(BUNDLER_PLUGIN_APP_KEY_PREFIX.length));\n      }\n      return [];\n    });\n  }\n  const BUNDLER_PLUGIN_APP_KEY_PREFIX = '_sentryBundlerPluginAppKey:';\n});","lineCount":75,"map":[[6,2,1,0],[6,6,1,0,"_integration"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,2,0],[7,6,2,0,"_metadata"],[7,15,2,0],[7,18,2,0,"require"],[7,25,2,0],[7,26,2,0,"_dependencyMap"],[7,40,2,0],[8,2,3,0],[8,6,3,0,"_envelope"],[8,15,3,0],[8,18,3,0,"require"],[8,25,3,0],[8,26,3,0,"_dependencyMap"],[8,40,3,0],[9,2,4,0],[9,6,4,0,"_stacktrace"],[9,17,4,0],[9,20,4,0,"require"],[9,27,4,0],[9,28,4,0,"_dependencyMap"],[9,42,4,0],[10,2,6,0],[11,0,7,0],[12,0,8,0],[13,2,9,0],[13,8,9,6,"thirdPartyErrorFilterIntegration"],[13,40,9,38],[13,43,9,38,"exports"],[13,50,9,38],[13,51,9,38,"thirdPartyErrorFilterIntegration"],[13,83,9,38],[13,86,9,41],[13,90,9,41,"defineIntegration"],[13,120,9,58],[13,122,9,60,"options"],[13,129,9,67],[13,133,9,72],[14,4,10,2],[14,11,10,9],[15,6,11,4,"name"],[15,10,11,8],[15,12,11,10],[15,36,11,34],[16,6,12,4,"setup"],[16,11,12,9,"setup"],[16,12,12,10,"client"],[16,18,12,16],[16,20,12,18],[17,8,13,6],[18,8,14,6],[19,8,15,6,"client"],[19,14,15,12],[19,15,15,13,"on"],[19,17,15,15],[19,18,15,16],[19,34,15,32],[19,36,15,34,"envelope"],[19,44,15,42],[19,48,15,46],[20,10,16,8],[20,14,16,8,"forEachEnvelopeItem"],[20,43,16,27],[20,45,16,28,"envelope"],[20,53,16,36],[20,55,16,38],[20,56,16,39,"item"],[20,60,16,43],[20,62,16,45,"type"],[20,66,16,49],[20,71,16,54],[21,12,17,10],[21,16,17,14,"type"],[21,20,17,18],[21,25,17,23],[21,32,17,30],[21,34,17,32],[22,14,18,12],[22,20,18,18,"event"],[22,25,18,23],[22,28,18,26,"Array"],[22,33,18,31],[22,34,18,32,"isArray"],[22,41,18,39],[22,42,18,40,"item"],[22,46,18,44],[22,47,18,45],[22,50,18,49,"item"],[22,54,18,53],[22,55,18,56],[22,56,18,57],[22,57,18,58],[22,60,18,61,"undefined"],[22,69,18,70],[23,14,20,12],[23,18,20,16,"event"],[23,23,20,21],[23,25,20,23],[24,16,21,14],[24,20,21,14,"stripMetadataFromStackFrames"],[24,58,21,42],[24,60,21,43,"event"],[24,65,21,48],[24,66,21,49],[25,16,22,14,"item"],[25,20,22,18],[25,21,22,19],[25,22,22,20],[25,23,22,21],[25,26,22,24,"event"],[25,31,22,29],[26,14,23,12],[27,12,24,10],[28,10,25,8],[28,11,25,9],[28,12,25,10],[29,8,26,6],[29,9,26,7],[29,10,26,8],[30,8,28,6,"client"],[30,14,28,12],[30,15,28,13,"on"],[30,17,28,15],[30,18,28,16],[30,38,28,36],[30,40,28,38,"event"],[30,45,28,43],[30,49,28,47],[31,10,29,8],[32,10,30,8],[32,14,30,12,"event"],[32,19,30,17],[32,20,30,18,"type"],[32,24,30,22],[32,26,30,24],[33,12,31,10],[34,10,32,8],[35,10,34,8],[35,16,34,14,"stackParser"],[35,27,34,25],[35,30,34,28,"client"],[35,36,34,34],[35,37,34,35,"getOptions"],[35,47,34,45],[35,48,34,46],[35,49,34,47],[35,50,34,48,"stackParser"],[35,61,34,59],[36,10,35,8],[36,14,35,8,"addMetadataToStackFrames"],[36,48,35,32],[36,50,35,33,"stackParser"],[36,61,35,44],[36,63,35,46,"event"],[36,68,35,51],[36,69,35,52],[37,8,36,6],[37,9,36,7],[37,10,36,8],[38,6,37,4],[38,7,37,5],[39,6,39,4,"processEvent"],[39,18,39,16,"processEvent"],[39,19,39,17,"event"],[39,24,39,22],[39,26,39,24],[40,8,40,6],[40,14,40,12,"frameKeys"],[40,23,40,21],[40,26,40,24,"getBundleKeysForAllFramesWithFilenames"],[40,64,40,62],[40,65,40,63,"event"],[40,70,40,68],[40,71,40,69],[41,8,42,6],[41,12,42,10,"frameKeys"],[41,21,42,19],[41,23,42,21],[42,10,43,8],[42,16,43,14,"arrayMethod"],[42,27,43,25],[42,30,44,10,"options"],[42,37,44,17],[42,38,44,18,"behaviour"],[42,47,44,27],[42,52,44,32],[42,95,44,75],[42,99,45,10,"options"],[42,106,45,17],[42,107,45,18,"behaviour"],[42,116,45,27],[42,121,45,32],[42,163,45,74],[42,166,46,14],[42,172,46,20],[42,175,47,14],[42,182,47,21],[43,10,49,8],[43,16,49,14,"behaviourApplies"],[43,32,49,30],[43,35,49,33,"frameKeys"],[43,44,49,42],[43,45,49,43,"arrayMethod"],[43,56,49,54],[43,57,49,55],[43,58,49,56,"keys"],[43,62,49,60],[43,66,49,64],[43,67,49,65,"keys"],[43,71,49,69],[43,72,49,70,"some"],[43,76,49,74],[43,77,49,75,"key"],[43,80,49,78],[43,84,49,82,"options"],[43,91,49,89],[43,92,49,90,"filterKeys"],[43,102,49,100],[43,103,49,101,"includes"],[43,111,49,109],[43,112,49,110,"key"],[43,115,49,113],[43,116,49,114],[43,117,49,115],[43,118,49,116],[44,10,51,8],[44,14,51,12,"behaviourApplies"],[44,30,51,28],[44,32,51,30],[45,12,52,10],[45,18,52,16,"shouldDrop"],[45,28,52,26],[45,31,53,12,"options"],[45,38,53,19],[45,39,53,20,"behaviour"],[45,48,53,29],[45,53,53,34],[45,96,53,77],[45,100,54,12,"options"],[45,107,54,19],[45,108,54,20,"behaviour"],[45,117,54,29],[45,122,54,34],[45,177,54,89],[46,12,55,10],[46,16,55,14,"shouldDrop"],[46,26,55,24],[46,28,55,26],[47,14,56,12],[47,21,56,19],[47,25,56,23],[48,12,57,10],[48,13,57,11],[48,19,57,17],[49,14,58,12,"event"],[49,19,58,17],[49,20,58,18,"tags"],[49,24,58,22],[49,27,58,25],[50,16,59,14],[50,19,59,17,"event"],[50,24,59,22],[50,25,59,23,"tags"],[50,29,59,27],[51,16,60,14,"third_party_code"],[51,32,60,30],[51,34,60,32],[52,14,61,12],[52,15,61,13],[53,12,62,10],[54,10,63,8],[55,8,64,6],[56,8,66,6],[56,15,66,13,"event"],[56,20,66,18],[57,6,67,4],[58,4,68,2],[58,5,68,3],[59,2,69,0],[59,3,69,1],[59,4,69,2],[60,2,71,0],[60,11,71,9,"getBundleKeysForAllFramesWithFilenames"],[60,49,71,47,"getBundleKeysForAllFramesWithFilenames"],[60,50,71,48,"event"],[60,55,71,53],[60,57,71,55],[61,4,72,2],[61,10,72,8,"frames"],[61,16,72,14],[61,19,72,17],[61,23,72,17,"getFramesFromEvent"],[61,53,72,35],[61,55,72,36,"event"],[61,60,72,41],[61,61,72,42],[62,4,74,2],[62,8,74,6],[62,9,74,7,"frames"],[62,15,74,13],[62,17,74,15],[63,6,75,4],[63,13,75,11,"undefined"],[63,22,75,20],[64,4,76,2],[65,4,78,2],[65,11,79,4,"frames"],[66,4,80,6],[67,4,80,6],[67,5,81,7,"filter"],[67,11,81,13],[67,12,81,14,"frame"],[67,17,81,19],[67,21,81,23],[67,22,81,24],[67,23,81,25,"frame"],[67,28,81,30],[67,29,81,31,"filename"],[67,37,81,39],[67,38,81,40],[67,39,82,7,"map"],[67,42,82,10],[67,43,82,11,"frame"],[67,48,82,16],[67,52,82,20],[68,6,83,8],[68,10,83,12,"frame"],[68,15,83,17],[68,16,83,18,"module_metadata"],[68,31,83,33],[68,33,83,35],[69,8,84,10],[69,15,84,17,"Object"],[69,21,84,23],[69,22,84,24,"keys"],[69,26,84,28],[69,27,84,29,"frame"],[69,32,84,34],[69,33,84,35,"module_metadata"],[69,48,84,50],[69,49,84,51],[69,50,85,13,"filter"],[69,56,85,19],[69,57,85,20,"key"],[69,60,85,23],[69,64,85,27,"key"],[69,67,85,30],[69,68,85,31,"startsWith"],[69,78,85,41],[69,79,85,42,"BUNDLER_PLUGIN_APP_KEY_PREFIX"],[69,108,85,71],[69,109,85,72],[69,110,85,73],[69,111,86,13,"map"],[69,114,86,16],[69,115,86,17,"key"],[69,118,86,20],[69,122,86,24,"key"],[69,125,86,27],[69,126,86,28,"slice"],[69,131,86,33],[69,132,86,34,"BUNDLER_PLUGIN_APP_KEY_PREFIX"],[69,161,86,63],[69,162,86,64,"length"],[69,168,86,70],[69,169,86,71],[69,170,86,72],[70,6,87,8],[71,6,88,8],[71,13,88,15],[71,15,88,17],[72,4,89,6],[72,5,89,7],[72,6,89,8],[73,2,91,0],[74,2,93,0],[74,8,93,6,"BUNDLER_PLUGIN_APP_KEY_PREFIX"],[74,37,93,35],[74,40,93,38],[74,69,93,67],[75,0,93,68],[75,3]],"functionMap":{"names":["<global>","defineIntegration$argument_0","setup","client.on$argument_1","forEachEnvelopeItem$argument_1","processEvent","frameKeys.arrayMethod$argument_0","keys.some$argument_0","getBundleKeysForAllFramesWithFilenames","frames.filter$argument_0","frames.filter.map$argument_0","Object.keys.filter$argument_0","Object.keys.filter.map$argument_0"],"mappings":"AAA;2DCQ;ICG;kCCG;sCCC;SDS;ODC;sCCE;ODQ;KDC;IIE;wDCU,mBC,uCD,CD;KJkB;CDE;AQE;cCU,yBD;WEC;oBCG,oDD;iBEC,sDF;OFG;CRE"}},"type":"js/module"}]}