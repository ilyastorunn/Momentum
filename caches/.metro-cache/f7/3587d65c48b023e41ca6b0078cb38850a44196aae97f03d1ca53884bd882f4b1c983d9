{"dependencies":[{"name":"./lib/bindReporter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"yZXTUsWh1M46DyxIbZ88NUHRymg=","exportNames":["*"]}},{"name":"./lib/getActivationStart.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":65,"index":119}}],"key":"GdWeY/Ul63HmG3e9yq4TWUwqk0M=","exportNames":["*"]}},{"name":"./lib/getVisibilityWatcher.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":120},"end":{"line":3,"column":69,"index":189}}],"key":"nHtaM9v//YlxGAv+O3W06C++qp8=","exportNames":["*"]}},{"name":"./lib/initMetric.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":49,"index":239}}],"key":"3h8m+kvAV2o3xN93IHHrmBqzs4s=","exportNames":["*"]}},{"name":"./lib/observe.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":240},"end":{"line":5,"column":43,"index":283}}],"key":"Cz2RoRvLyGQyofIDJmcgFo6dicM=","exportNames":["*"]}},{"name":"./lib/whenActivated.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":284},"end":{"line":6,"column":55,"index":339}}],"key":"ZUHRzyG92JJbjB1/O2ptt6DviqY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.onFCP = exports.FCPThresholds = void 0;\n  var _bindReporter = require(_dependencyMap[0], \"./lib/bindReporter.js\");\n  var _getActivationStart = require(_dependencyMap[1], \"./lib/getActivationStart.js\");\n  var _getVisibilityWatcher = require(_dependencyMap[2], \"./lib/getVisibilityWatcher.js\");\n  var _initMetric = require(_dependencyMap[3], \"./lib/initMetric.js\");\n  var _observe = require(_dependencyMap[4], \"./lib/observe.js\");\n  var _whenActivated = require(_dependencyMap[5], \"./lib/whenActivated.js\");\n  /*\n   * Copyright 2020 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\n  const FCPThresholds = exports.FCPThresholds = [1800, 3000];\n\n  /**\n   * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n   * calls the `callback` function once the value is ready, along with the\n   * relevant `paint` performance entry used to determine the value. The reported\n   * value is a `DOMHighResTimeStamp`.\n   */\n  const onFCP = (onReport, opts = {}) => {\n    (0, _whenActivated.whenActivated)(() => {\n      const visibilityWatcher = (0, _getVisibilityWatcher.getVisibilityWatcher)();\n      const metric = (0, _initMetric.initMetric)('FCP');\n      let report;\n      const handleEntries = entries => {\n        entries.forEach(entry => {\n          if (entry.name === 'first-contentful-paint') {\n            po.disconnect();\n\n            // Only report if the page wasn't hidden prior to the first paint.\n            if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n              // The activationStart reference is used because FCP should be\n              // relative to page activation rather than navigation start if the\n              // page was prerendered. But in cases where `activationStart` occurs\n              // after the FCP, this time should be clamped at 0.\n              metric.value = Math.max(entry.startTime - (0, _getActivationStart.getActivationStart)(), 0);\n              metric.entries.push(entry);\n              report(true);\n            }\n          }\n        });\n      };\n      const po = (0, _observe.observe)('paint', handleEntries);\n      if (po) {\n        report = (0, _bindReporter.bindReporter)(onReport, metric, FCPThresholds, opts.reportAllChanges);\n      }\n    });\n  };\n  exports.onFCP = onFCP;\n});","lineCount":67,"map":[[6,2,1,0],[6,6,1,0,"_bindReporter"],[6,19,1,0],[6,22,1,0,"require"],[6,29,1,0],[6,30,1,0,"_dependencyMap"],[6,44,1,0],[7,2,2,0],[7,6,2,0,"_getActivationStart"],[7,25,2,0],[7,28,2,0,"require"],[7,35,2,0],[7,36,2,0,"_dependencyMap"],[7,50,2,0],[8,2,3,0],[8,6,3,0,"_getVisibilityWatcher"],[8,27,3,0],[8,30,3,0,"require"],[8,37,3,0],[8,38,3,0,"_dependencyMap"],[8,52,3,0],[9,2,4,0],[9,6,4,0,"_initMetric"],[9,17,4,0],[9,20,4,0,"require"],[9,27,4,0],[9,28,4,0,"_dependencyMap"],[9,42,4,0],[10,2,5,0],[10,6,5,0,"_observe"],[10,14,5,0],[10,17,5,0,"require"],[10,24,5,0],[10,25,5,0,"_dependencyMap"],[10,39,5,0],[11,2,6,0],[11,6,6,0,"_whenActivated"],[11,20,6,0],[11,23,6,0,"require"],[11,30,6,0],[11,31,6,0,"_dependencyMap"],[11,45,6,0],[12,2,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[28,2,25,0],[29,2,26,0],[29,8,26,6,"FCPThresholds"],[29,21,26,19],[29,24,26,19,"exports"],[29,31,26,19],[29,32,26,19,"FCPThresholds"],[29,45,26,19],[29,48,26,22],[29,49,26,23],[29,53,26,27],[29,55,26,29],[29,59,26,33],[29,60,26,34],[31,2,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,2,34,0],[37,8,34,6,"onFCP"],[37,13,34,11],[37,16,34,14,"onFCP"],[37,17,34,15,"onReport"],[37,25,34,23],[37,27,34,25,"opts"],[37,31,34,29],[37,34,34,32],[37,35,34,33],[37,36,34,34],[37,41,34,39],[38,4,35,2],[38,8,35,2,"whenActivated"],[38,36,35,15],[38,38,35,16],[38,44,35,22],[39,6,36,4],[39,12,36,10,"visibilityWatcher"],[39,29,36,27],[39,32,36,30],[39,36,36,30,"getVisibilityWatcher"],[39,78,36,50],[39,80,36,51],[39,81,36,52],[40,6,37,4],[40,12,37,10,"metric"],[40,18,37,16],[40,21,37,19],[40,25,37,19,"initMetric"],[40,47,37,29],[40,49,37,30],[40,54,37,35],[40,55,37,36],[41,6,38,4],[41,10,38,8,"report"],[41,16,38,14],[42,6,40,4],[42,12,40,10,"handleEntries"],[42,25,40,23],[42,28,40,27,"entries"],[42,35,40,34],[42,39,40,39],[43,8,41,6,"entries"],[43,15,41,13],[43,16,41,14,"forEach"],[43,23,41,21],[43,24,41,22,"entry"],[43,29,41,27],[43,33,41,31],[44,10,42,8],[44,14,42,12,"entry"],[44,19,42,17],[44,20,42,18,"name"],[44,24,42,22],[44,29,42,27],[44,53,42,51],[44,55,42,53],[45,12,43,10,"po"],[45,14,43,12],[45,15,43,13,"disconnect"],[45,25,43,23],[45,26,43,24],[45,27,43,25],[47,12,45,10],[48,12,46,10],[48,16,46,14,"entry"],[48,21,46,19],[48,22,46,20,"startTime"],[48,31,46,29],[48,34,46,32,"visibilityWatcher"],[48,51,46,49],[48,52,46,50,"firstHiddenTime"],[48,67,46,65],[48,69,46,67],[49,14,47,12],[50,14,48,12],[51,14,49,12],[52,14,50,12],[53,14,51,12,"metric"],[53,20,51,18],[53,21,51,19,"value"],[53,26,51,24],[53,29,51,27,"Math"],[53,33,51,31],[53,34,51,32,"max"],[53,37,51,35],[53,38,51,36,"entry"],[53,43,51,41],[53,44,51,42,"startTime"],[53,53,51,51],[53,56,51,54],[53,60,51,54,"getActivationStart"],[53,98,51,72],[53,100,51,73],[53,101,51,74],[53,103,51,76],[53,104,51,77],[53,105,51,78],[54,14,52,12,"metric"],[54,20,52,18],[54,21,52,19,"entries"],[54,28,52,26],[54,29,52,27,"push"],[54,33,52,31],[54,34,52,32,"entry"],[54,39,52,37],[54,40,52,38],[55,14,53,12,"report"],[55,20,53,18],[55,21,53,19],[55,25,53,23],[55,26,53,24],[56,12,54,10],[57,10,55,8],[58,8,56,6],[58,9,56,7],[58,10,56,8],[59,6,57,4],[59,7,57,5],[60,6,59,4],[60,12,59,10,"po"],[60,14,59,12],[60,17,59,15],[60,21,59,15,"observe"],[60,37,59,22],[60,39,59,23],[60,46,59,30],[60,48,59,32,"handleEntries"],[60,61,59,45],[60,62,59,46],[61,6,61,4],[61,10,61,8,"po"],[61,12,61,10],[61,14,61,12],[62,8,62,6,"report"],[62,14,62,12],[62,17,62,15],[62,21,62,15,"bindReporter"],[62,47,62,27],[62,49,62,28,"onReport"],[62,57,62,36],[62,59,62,38,"metric"],[62,65,62,44],[62,67,62,46,"FCPThresholds"],[62,80,62,59],[62,82,62,61,"opts"],[62,86,62,65],[62,87,62,66,"reportAllChanges"],[62,103,62,82],[62,104,62,83],[63,6,63,4],[64,4,64,2],[64,5,64,3],[64,6,64,4],[65,2,65,0],[65,3,65,1],[66,2,65,2,"exports"],[66,9,65,2],[66,10,65,2,"onFCP"],[66,15,65,2],[66,18,65,2,"onFCP"],[66,23,65,2],[67,0,65,2],[67,3]],"functionMap":{"names":["<global>","onFCP","whenActivated$argument_0","handleEntries","entries.forEach$argument_0"],"mappings":"AAA;cCiC;gBCC;0BCK;sBCC;ODe;KDC;GDO;CDC"}},"type":"js/module"}]}