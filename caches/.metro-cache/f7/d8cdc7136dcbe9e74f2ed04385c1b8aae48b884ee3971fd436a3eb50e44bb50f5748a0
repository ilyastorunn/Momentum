{"dependencies":[{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":64,"index":112}}],"key":"LZlrQCVO4H3zUFIdbw1eEy4GKGE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CONSOLE_LEVELS = void 0;\n  exports.consoleSandbox = consoleSandbox;\n  exports.originalConsoleMethods = exports.logger = void 0;\n  var _debugBuild = require(_dependencyMap[0], \"./debug-build.js\");\n  var _worldwide = require(_dependencyMap[1], \"./worldwide.js\");\n  /** Prefix for logging strings */\n  const PREFIX = 'Sentry Logger ';\n  const CONSOLE_LEVELS = exports.CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'];\n\n  /** This may be mutated by the console instrumentation. */\n  const originalConsoleMethods = exports.originalConsoleMethods = {};\n\n  /** JSDoc */\n\n  /**\n   * Temporarily disable sentry console instrumentations.\n   *\n   * @param callback The function to run against the original `console` messages\n   * @returns The results of the callback\n   */\n  function consoleSandbox(callback) {\n    if (!('console' in _worldwide.GLOBAL_OBJ)) {\n      return callback();\n    }\n    const console = _worldwide.GLOBAL_OBJ.console;\n    const wrappedFuncs = {};\n    const wrappedLevels = Object.keys(originalConsoleMethods);\n\n    // Restore all wrapped console methods\n    wrappedLevels.forEach(level => {\n      const originalConsoleMethod = originalConsoleMethods[level];\n      wrappedFuncs[level] = console[level];\n      console[level] = originalConsoleMethod;\n    });\n    try {\n      return callback();\n    } finally {\n      // Revert restoration to wrapped state\n      wrappedLevels.forEach(level => {\n        console[level] = wrappedFuncs[level];\n      });\n    }\n  }\n  function makeLogger() {\n    let enabled = false;\n    const logger = {\n      enable: () => {\n        enabled = true;\n      },\n      disable: () => {\n        enabled = false;\n      },\n      isEnabled: () => enabled\n    };\n    if (_debugBuild.DEBUG_BUILD) {\n      CONSOLE_LEVELS.forEach(name => {\n        logger[name] = (...args) => {\n          if (enabled) {\n            consoleSandbox(() => {\n              _worldwide.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n            });\n          }\n        };\n      });\n    } else {\n      CONSOLE_LEVELS.forEach(name => {\n        logger[name] = () => undefined;\n      });\n    }\n    return logger;\n  }\n\n  /**\n   * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n   * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n   */\n  const logger = exports.logger = (0, _worldwide.getGlobalSingleton)('logger', makeLogger);\n});","lineCount":82,"map":[[8,2,1,0],[8,6,1,0,"_debugBuild"],[8,17,1,0],[8,20,1,0,"require"],[8,27,1,0],[8,28,1,0,"_dependencyMap"],[8,42,1,0],[9,2,2,0],[9,6,2,0,"_worldwide"],[9,16,2,0],[9,19,2,0,"require"],[9,26,2,0],[9,27,2,0,"_dependencyMap"],[9,41,2,0],[10,2,4,0],[11,2,5,0],[11,8,5,6,"PREFIX"],[11,14,5,12],[11,17,5,15],[11,33,5,31],[12,2,7,0],[12,8,7,6,"CONSOLE_LEVELS"],[12,22,7,20],[12,25,7,20,"exports"],[12,32,7,20],[12,33,7,20,"CONSOLE_LEVELS"],[12,47,7,20],[12,50,7,23],[12,51,8,2],[12,58,8,9],[12,60,9,2],[12,66,9,8],[12,68,10,2],[12,74,10,8],[12,76,11,2],[12,83,11,9],[12,85,12,2],[12,90,12,7],[12,92,13,2],[12,100,13,10],[12,102,14,2],[12,109,14,9],[12,110,15,1],[14,2,17,0],[15,2,18,0],[15,8,18,6,"originalConsoleMethods"],[15,30,18,28],[15,33,18,28,"exports"],[15,40,18,28],[15,41,18,28,"originalConsoleMethods"],[15,63,18,28],[15,66,20,3],[15,67,20,4],[15,68,20,5],[17,2,22,0],[19,2,24,0],[20,0,25,0],[21,0,26,0],[22,0,27,0],[23,0,28,0],[24,0,29,0],[25,2,30,0],[25,11,30,9,"consoleSandbox"],[25,25,30,23,"consoleSandbox"],[25,26,30,24,"callback"],[25,34,30,32],[25,36,30,34],[26,4,31,2],[26,8,31,6],[26,10,31,8],[26,19,31,17],[26,23,31,21,"GLOBAL_OBJ"],[26,44,31,31],[26,45,31,32],[26,47,31,34],[27,6,32,4],[27,13,32,11,"callback"],[27,21,32,19],[27,22,32,20],[27,23,32,21],[28,4,33,2],[29,4,35,2],[29,10,35,8,"console"],[29,17,35,15],[29,20,35,18,"GLOBAL_OBJ"],[29,41,35,28],[29,42,35,29,"console"],[29,49,35,36],[30,4,36,2],[30,10,36,8,"wrappedFuncs"],[30,22,36,20],[30,25,36,23],[30,26,36,24],[30,27,36,25],[31,4,38,2],[31,10,38,8,"wrappedLevels"],[31,23,38,21],[31,26,38,24,"Object"],[31,32,38,30],[31,33,38,31,"keys"],[31,37,38,35],[31,38,38,36,"originalConsoleMethods"],[31,60,38,58],[31,61,38,59],[33,4,40,2],[34,4,41,2,"wrappedLevels"],[34,17,41,15],[34,18,41,16,"forEach"],[34,25,41,23],[34,26,41,24,"level"],[34,31,41,29],[34,35,41,33],[35,6,42,4],[35,12,42,10,"originalConsoleMethod"],[35,33,42,31],[35,36,42,34,"originalConsoleMethods"],[35,58,42,56],[35,59,42,57,"level"],[35,64,42,62],[35,65,42,63],[36,6,43,4,"wrappedFuncs"],[36,18,43,16],[36,19,43,17,"level"],[36,24,43,22],[36,25,43,23],[36,28,43,26,"console"],[36,35,43,33],[36,36,43,34,"level"],[36,41,43,39],[36,42,43,40],[37,6,44,4,"console"],[37,13,44,11],[37,14,44,12,"level"],[37,19,44,17],[37,20,44,18],[37,23,44,21,"originalConsoleMethod"],[37,44,44,42],[38,4,45,2],[38,5,45,3],[38,6,45,4],[39,4,47,2],[39,8,47,6],[40,6,48,4],[40,13,48,11,"callback"],[40,21,48,19],[40,22,48,20],[40,23,48,21],[41,4,49,2],[41,5,49,3],[41,14,49,12],[42,6,50,4],[43,6,51,4,"wrappedLevels"],[43,19,51,17],[43,20,51,18,"forEach"],[43,27,51,25],[43,28,51,26,"level"],[43,33,51,31],[43,37,51,35],[44,8,52,6,"console"],[44,15,52,13],[44,16,52,14,"level"],[44,21,52,19],[44,22,52,20],[44,25,52,23,"wrappedFuncs"],[44,37,52,35],[44,38,52,36,"level"],[44,43,52,41],[44,44,52,42],[45,6,53,4],[45,7,53,5],[45,8,53,6],[46,4,54,2],[47,2,55,0],[48,2,57,0],[48,11,57,9,"makeLogger"],[48,21,57,19,"makeLogger"],[48,22,57,19],[48,24,57,22],[49,4,58,2],[49,8,58,6,"enabled"],[49,15,58,13],[49,18,58,16],[49,23,58,21],[50,4,59,2],[50,10,59,8,"logger"],[50,16,59,14],[50,19,59,17],[51,6,60,4,"enable"],[51,12,60,10],[51,14,60,12,"enable"],[51,15,60,12],[51,20,60,18],[52,8,61,6,"enabled"],[52,15,61,13],[52,18,61,16],[52,22,61,20],[53,6,62,4],[53,7,62,5],[54,6,63,4,"disable"],[54,13,63,11],[54,15,63,13,"disable"],[54,16,63,13],[54,21,63,19],[55,8,64,6,"enabled"],[55,15,64,13],[55,18,64,16],[55,23,64,21],[56,6,65,4],[56,7,65,5],[57,6,66,4,"isEnabled"],[57,15,66,13],[57,17,66,15,"isEnabled"],[57,18,66,15],[57,23,66,21,"enabled"],[58,4,67,2],[58,5,67,3],[59,4,69,2],[59,8,69,6,"DEBUG_BUILD"],[59,31,69,17],[59,33,69,19],[60,6,70,4,"CONSOLE_LEVELS"],[60,20,70,18],[60,21,70,19,"forEach"],[60,28,70,26],[60,29,70,27,"name"],[60,33,70,31],[60,37,70,35],[61,8,71,6,"logger"],[61,14,71,12],[61,15,71,13,"name"],[61,19,71,17],[61,20,71,18],[61,23,71,21],[61,24,71,22],[61,27,71,25,"args"],[61,31,71,29],[61,36,71,34],[62,10,72,8],[62,14,72,12,"enabled"],[62,21,72,19],[62,23,72,21],[63,12,73,10,"consoleSandbox"],[63,26,73,24],[63,27,73,25],[63,33,73,31],[64,14,74,12,"GLOBAL_OBJ"],[64,35,74,22],[64,36,74,23,"console"],[64,43,74,30],[64,44,74,31,"name"],[64,48,74,35],[64,49,74,36],[64,50,74,37],[64,53,74,40,"PREFIX"],[64,59,74,46],[64,63,74,50,"name"],[64,67,74,54],[64,71,74,58],[64,73,74,60],[64,76,74,63,"args"],[64,80,74,67],[64,81,74,68],[65,12,75,10],[65,13,75,11],[65,14,75,12],[66,10,76,8],[67,8,77,6],[67,9,77,7],[68,6,78,4],[68,7,78,5],[68,8,78,6],[69,4,79,2],[69,5,79,3],[69,11,79,9],[70,6,80,4,"CONSOLE_LEVELS"],[70,20,80,18],[70,21,80,19,"forEach"],[70,28,80,26],[70,29,80,27,"name"],[70,33,80,31],[70,37,80,35],[71,8,81,6,"logger"],[71,14,81,12],[71,15,81,13,"name"],[71,19,81,17],[71,20,81,18],[71,23,81,21],[71,29,81,27,"undefined"],[71,38,81,36],[72,6,82,4],[72,7,82,5],[72,8,82,6],[73,4,83,2],[74,4,85,2],[74,11,85,9,"logger"],[74,17,85,15],[75,2,86,0],[77,2,88,0],[78,0,89,0],[79,0,90,0],[80,0,91,0],[81,2,92,0],[81,8,92,6,"logger"],[81,14,92,12],[81,17,92,12,"exports"],[81,24,92,12],[81,25,92,12,"logger"],[81,31,92,12],[81,34,92,15],[81,38,92,15,"getGlobalSingleton"],[81,67,92,33],[81,69,92,34],[81,77,92,42],[81,79,92,44,"makeLogger"],[81,89,92,54],[81,90,92,55],[82,0,92,56],[82,3]],"functionMap":{"names":["<global>","consoleSandbox","wrappedLevels.forEach$argument_0","makeLogger","enable","disable","isEnabled","CONSOLE_LEVELS.forEach$argument_0","name","consoleSandbox$argument_0"],"mappings":"AAA;AC6B;wBCW;GDI;0BCM;KDE;CDE;AGE;YCG;KDE;aEC;KFE;eGC,aH;2BII;qBCC;yBCE;WDE;ODE;KJC;2BIE;qBCC,eD;KJC;CHI"}},"type":"js/module"}]}