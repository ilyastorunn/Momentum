{"dependencies":[{"name":"./breadcrumb","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"ZuQcmhJEZ3zNZks4vmiWCWO48GM=","exportNames":["*"]}},{"name":"./utils/fill","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":41,"index":98}}],"key":"XdQZBFW9ZeVf+rxu5moQyN7S61Q=","exportNames":["*"]}},{"name":"./utils/normalize","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":62,"index":161}}],"key":"L9YoQZ9Gf58HY3muj38LyULGUCg=","exportNames":["*"]}},{"name":"./wrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"uH5zH4V3wFIqFrFvN4UX99ueCCQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableSyncToNative = enableSyncToNative;\n  var _breadcrumb = require(_dependencyMap[0], \"./breadcrumb\");\n  var _fill = require(_dependencyMap[1], \"./utils/fill\");\n  var _normalize = require(_dependencyMap[2], \"./utils/normalize\");\n  var _wrapper = require(_dependencyMap[3], \"./wrapper\");\n  /**\n   * This WeakMap is used to keep track of which scopes have been synced to the native SDKs.\n   * This ensures that we don't double sync the same scope.\n   */\n  const syncedToNativeMap = new WeakMap();\n  /**\n   * Hooks into the scope set methods and sync new data added to the given scope with the native SDKs.\n   */\n  function enableSyncToNative(scope) {\n    if (syncedToNativeMap.has(scope)) {\n      return;\n    }\n    syncedToNativeMap.set(scope, true);\n    (0, _fill.fillTyped)(scope, 'setUser', original => user => {\n      _wrapper.NATIVE.setUser(user);\n      return original.call(scope, user);\n    });\n    (0, _fill.fillTyped)(scope, 'setTag', original => (key, value) => {\n      _wrapper.NATIVE.setTag(key, value);\n      return original.call(scope, key, value);\n    });\n    (0, _fill.fillTyped)(scope, 'setTags', original => tags => {\n      // As native only has setTag, we just loop through each tag key.\n      Object.keys(tags).forEach(key => {\n        _wrapper.NATIVE.setTag(key, tags[key]);\n      });\n      return original.call(scope, tags);\n    });\n    (0, _fill.fillTyped)(scope, 'setExtras', original => extras => {\n      Object.keys(extras).forEach(key => {\n        _wrapper.NATIVE.setExtra(key, extras[key]);\n      });\n      return original.call(scope, extras);\n    });\n    (0, _fill.fillTyped)(scope, 'setExtra', original => (key, value) => {\n      _wrapper.NATIVE.setExtra(key, value);\n      return original.call(scope, key, value);\n    });\n    (0, _fill.fillTyped)(scope, 'addBreadcrumb', original => (breadcrumb, maxBreadcrumbs) => {\n      const mergedBreadcrumb = Object.assign(Object.assign({}, breadcrumb), {\n        level: breadcrumb.level || _breadcrumb.DEFAULT_BREADCRUMB_LEVEL,\n        data: breadcrumb.data ? (0, _normalize.convertToNormalizedObject)(breadcrumb.data) : undefined\n      });\n      original.call(scope, mergedBreadcrumb, maxBreadcrumbs);\n      const finalBreadcrumb = scope.getLastBreadcrumb();\n      _wrapper.NATIVE.addBreadcrumb(finalBreadcrumb);\n      return scope;\n    });\n    (0, _fill.fillTyped)(scope, 'clearBreadcrumbs', original => () => {\n      _wrapper.NATIVE.clearBreadcrumbs();\n      return original.call(scope);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (0, _fill.fillTyped)(scope, 'setContext', original => (key, context) => {\n      _wrapper.NATIVE.setContext(key, context);\n      return original.call(scope, key, context);\n    });\n  }\n});","lineCount":68,"map":[[6,2,1,0],[6,6,1,0,"_breadcrumb"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_fill"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,3,0],[8,6,3,0,"_normalize"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[9,6,4,0,"_wrapper"],[9,14,4,0],[9,17,4,0,"require"],[9,24,4,0],[9,25,4,0,"_dependencyMap"],[9,39,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,2,9,0],[14,8,9,6,"syncedToNativeMap"],[14,25,9,23],[14,28,9,26],[14,32,9,30,"WeakMap"],[14,39,9,37],[14,40,9,38],[14,41,9,39],[15,2,10,0],[16,0,11,0],[17,0,12,0],[18,2,13,7],[18,11,13,16,"enableSyncToNative"],[18,29,13,34,"enableSyncToNative"],[18,30,13,35,"scope"],[18,35,13,40],[18,37,13,42],[19,4,14,4],[19,8,14,8,"syncedToNativeMap"],[19,25,14,25],[19,26,14,26,"has"],[19,29,14,29],[19,30,14,30,"scope"],[19,35,14,35],[19,36,14,36],[19,38,14,38],[20,6,15,8],[21,4,16,4],[22,4,17,4,"syncedToNativeMap"],[22,21,17,21],[22,22,17,22,"set"],[22,25,17,25],[22,26,17,26,"scope"],[22,31,17,31],[22,33,17,33],[22,37,17,37],[22,38,17,38],[23,4,18,4],[23,8,18,4,"fillTyped"],[23,23,18,13],[23,25,18,14,"scope"],[23,30,18,19],[23,32,18,21],[23,41,18,30],[23,43,18,32,"original"],[23,51,18,40],[23,55,18,45,"user"],[23,59,18,49],[23,63,18,54],[24,6,19,8,"NATIVE"],[24,21,19,14],[24,22,19,15,"setUser"],[24,29,19,22],[24,30,19,23,"user"],[24,34,19,27],[24,35,19,28],[25,6,20,8],[25,13,20,15,"original"],[25,21,20,23],[25,22,20,24,"call"],[25,26,20,28],[25,27,20,29,"scope"],[25,32,20,34],[25,34,20,36,"user"],[25,38,20,40],[25,39,20,41],[26,4,21,4],[26,5,21,5],[26,6,21,6],[27,4,22,4],[27,8,22,4,"fillTyped"],[27,23,22,13],[27,25,22,14,"scope"],[27,30,22,19],[27,32,22,21],[27,40,22,29],[27,42,22,31,"original"],[27,50,22,39],[27,54,22,43],[27,55,22,44,"key"],[27,58,22,47],[27,60,22,49,"value"],[27,65,22,54],[27,70,22,59],[28,6,23,8,"NATIVE"],[28,21,23,14],[28,22,23,15,"setTag"],[28,28,23,21],[28,29,23,22,"key"],[28,32,23,25],[28,34,23,27,"value"],[28,39,23,32],[28,40,23,33],[29,6,24,8],[29,13,24,15,"original"],[29,21,24,23],[29,22,24,24,"call"],[29,26,24,28],[29,27,24,29,"scope"],[29,32,24,34],[29,34,24,36,"key"],[29,37,24,39],[29,39,24,41,"value"],[29,44,24,46],[29,45,24,47],[30,4,25,4],[30,5,25,5],[30,6,25,6],[31,4,26,4],[31,8,26,4,"fillTyped"],[31,23,26,13],[31,25,26,14,"scope"],[31,30,26,19],[31,32,26,21],[31,41,26,30],[31,43,26,32,"original"],[31,51,26,40],[31,55,26,45,"tags"],[31,59,26,49],[31,63,26,54],[32,6,27,8],[33,6,28,8,"Object"],[33,12,28,14],[33,13,28,15,"keys"],[33,17,28,19],[33,18,28,20,"tags"],[33,22,28,24],[33,23,28,25],[33,24,28,26,"forEach"],[33,31,28,33],[33,32,28,34,"key"],[33,35,28,37],[33,39,28,41],[34,8,29,12,"NATIVE"],[34,23,29,18],[34,24,29,19,"setTag"],[34,30,29,25],[34,31,29,26,"key"],[34,34,29,29],[34,36,29,31,"tags"],[34,40,29,35],[34,41,29,36,"key"],[34,44,29,39],[34,45,29,40],[34,46,29,41],[35,6,30,8],[35,7,30,9],[35,8,30,10],[36,6,31,8],[36,13,31,15,"original"],[36,21,31,23],[36,22,31,24,"call"],[36,26,31,28],[36,27,31,29,"scope"],[36,32,31,34],[36,34,31,36,"tags"],[36,38,31,40],[36,39,31,41],[37,4,32,4],[37,5,32,5],[37,6,32,6],[38,4,33,4],[38,8,33,4,"fillTyped"],[38,23,33,13],[38,25,33,14,"scope"],[38,30,33,19],[38,32,33,21],[38,43,33,32],[38,45,33,34,"original"],[38,53,33,42],[38,57,33,47,"extras"],[38,63,33,53],[38,67,33,58],[39,6,34,8,"Object"],[39,12,34,14],[39,13,34,15,"keys"],[39,17,34,19],[39,18,34,20,"extras"],[39,24,34,26],[39,25,34,27],[39,26,34,28,"forEach"],[39,33,34,35],[39,34,34,36,"key"],[39,37,34,39],[39,41,34,43],[40,8,35,12,"NATIVE"],[40,23,35,18],[40,24,35,19,"setExtra"],[40,32,35,27],[40,33,35,28,"key"],[40,36,35,31],[40,38,35,33,"extras"],[40,44,35,39],[40,45,35,40,"key"],[40,48,35,43],[40,49,35,44],[40,50,35,45],[41,6,36,8],[41,7,36,9],[41,8,36,10],[42,6,37,8],[42,13,37,15,"original"],[42,21,37,23],[42,22,37,24,"call"],[42,26,37,28],[42,27,37,29,"scope"],[42,32,37,34],[42,34,37,36,"extras"],[42,40,37,42],[42,41,37,43],[43,4,38,4],[43,5,38,5],[43,6,38,6],[44,4,39,4],[44,8,39,4,"fillTyped"],[44,23,39,13],[44,25,39,14,"scope"],[44,30,39,19],[44,32,39,21],[44,42,39,31],[44,44,39,33,"original"],[44,52,39,41],[44,56,39,45],[44,57,39,46,"key"],[44,60,39,49],[44,62,39,51,"value"],[44,67,39,56],[44,72,39,61],[45,6,40,8,"NATIVE"],[45,21,40,14],[45,22,40,15,"setExtra"],[45,30,40,23],[45,31,40,24,"key"],[45,34,40,27],[45,36,40,29,"value"],[45,41,40,34],[45,42,40,35],[46,6,41,8],[46,13,41,15,"original"],[46,21,41,23],[46,22,41,24,"call"],[46,26,41,28],[46,27,41,29,"scope"],[46,32,41,34],[46,34,41,36,"key"],[46,37,41,39],[46,39,41,41,"value"],[46,44,41,46],[46,45,41,47],[47,4,42,4],[47,5,42,5],[47,6,42,6],[48,4,43,4],[48,8,43,4,"fillTyped"],[48,23,43,13],[48,25,43,14,"scope"],[48,30,43,19],[48,32,43,21],[48,47,43,36],[48,49,43,38,"original"],[48,57,43,46],[48,61,43,50],[48,62,43,51,"breadcrumb"],[48,72,43,61],[48,74,43,63,"maxBreadcrumbs"],[48,88,43,77],[48,93,43,82],[49,6,44,8],[49,12,44,14,"mergedBreadcrumb"],[49,28,44,30],[49,31,44,33,"Object"],[49,37,44,39],[49,38,44,40,"assign"],[49,44,44,46],[49,45,44,47,"Object"],[49,51,44,53],[49,52,44,54,"assign"],[49,58,44,60],[49,59,44,61],[49,60,44,62],[49,61,44,63],[49,63,44,65,"breadcrumb"],[49,73,44,75],[49,74,44,76],[49,76,44,78],[50,8,44,80,"level"],[50,13,44,85],[50,15,44,87,"breadcrumb"],[50,25,44,97],[50,26,44,98,"level"],[50,31,44,103],[50,35,44,107,"DEFAULT_BREADCRUMB_LEVEL"],[50,71,44,131],[51,8,44,133,"data"],[51,12,44,137],[51,14,44,139,"breadcrumb"],[51,24,44,149],[51,25,44,150,"data"],[51,29,44,154],[51,32,44,157],[51,36,44,157,"convertToNormalizedObject"],[51,72,44,182],[51,74,44,183,"breadcrumb"],[51,84,44,193],[51,85,44,194,"data"],[51,89,44,198],[51,90,44,199],[51,93,44,202,"undefined"],[52,6,44,212],[52,7,44,213],[52,8,44,214],[53,6,45,8,"original"],[53,14,45,16],[53,15,45,17,"call"],[53,19,45,21],[53,20,45,22,"scope"],[53,25,45,27],[53,27,45,29,"mergedBreadcrumb"],[53,43,45,45],[53,45,45,47,"maxBreadcrumbs"],[53,59,45,61],[53,60,45,62],[54,6,46,8],[54,12,46,14,"finalBreadcrumb"],[54,27,46,29],[54,30,46,32,"scope"],[54,35,46,37],[54,36,46,38,"getLastBreadcrumb"],[54,53,46,55],[54,54,46,56],[54,55,46,57],[55,6,47,8,"NATIVE"],[55,21,47,14],[55,22,47,15,"addBreadcrumb"],[55,35,47,28],[55,36,47,29,"finalBreadcrumb"],[55,51,47,44],[55,52,47,45],[56,6,48,8],[56,13,48,15,"scope"],[56,18,48,20],[57,4,49,4],[57,5,49,5],[57,6,49,6],[58,4,50,4],[58,8,50,4,"fillTyped"],[58,23,50,13],[58,25,50,14,"scope"],[58,30,50,19],[58,32,50,21],[58,50,50,39],[58,52,50,41,"original"],[58,60,50,49],[58,64,50,53],[58,70,50,59],[59,6,51,8,"NATIVE"],[59,21,51,14],[59,22,51,15,"clearBreadcrumbs"],[59,38,51,31],[59,39,51,32],[59,40,51,33],[60,6,52,8],[60,13,52,15,"original"],[60,21,52,23],[60,22,52,24,"call"],[60,26,52,28],[60,27,52,29,"scope"],[60,32,52,34],[60,33,52,35],[61,4,53,4],[61,5,53,5],[61,6,53,6],[62,4,54,4],[63,4,55,4],[63,8,55,4,"fillTyped"],[63,23,55,13],[63,25,55,14,"scope"],[63,30,55,19],[63,32,55,21],[63,44,55,33],[63,46,55,35,"original"],[63,54,55,43],[63,58,55,47],[63,59,55,48,"key"],[63,62,55,51],[63,64,55,53,"context"],[63,71,55,60],[63,76,55,65],[64,6,56,8,"NATIVE"],[64,21,56,14],[64,22,56,15,"setContext"],[64,32,56,25],[64,33,56,26,"key"],[64,36,56,29],[64,38,56,31,"context"],[64,45,56,38],[64,46,56,39],[65,6,57,8],[65,13,57,15,"original"],[65,21,57,23],[65,22,57,24,"call"],[65,26,57,28],[65,27,57,29,"scope"],[65,32,57,34],[65,34,57,36,"key"],[65,37,57,39],[65,39,57,41,"context"],[65,46,57,48],[65,47,57,49],[66,4,58,4],[66,5,58,5],[66,6,58,6],[67,2,59,0],[68,0,59,1],[68,3]],"functionMap":{"names":["<global>","enableSyncToNative","fillTyped$argument_2","<anonymous>","Object.keys.forEach$argument_0"],"mappings":"AAA;OCY;gCCK,YC;KFG;+BCC,YC;KFG;gCCC,YC;kCCE;SDE;KFE;kCCC,YC;oCCC;SDE;KFE;iCCC,YC;KFG;sCCC,YC;KFM;yCCC,YC;KFG;mCCE,YC;KFG;CDC"}},"type":"js/module"}]}