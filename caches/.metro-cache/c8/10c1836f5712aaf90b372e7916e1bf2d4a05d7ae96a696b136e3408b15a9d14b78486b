{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.winjsStackLineParser = exports.opera11StackLineParser = exports.opera10StackLineParser = exports.geckoStackLineParser = exports.defaultStackParser = exports.defaultStackLineParsers = exports.chromeStackLineParser = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  // This was originally forked from https://github.com/csnover/TraceKit, and was largely\n  // re - written as part of raven - js.\n  //\n  // This code was later copied to the JavaScript mono - repo and further modified and\n  // refactored over the years.\n\n  const OPERA10_PRIORITY = 10;\n  const OPERA11_PRIORITY = 20;\n  const CHROME_PRIORITY = 30;\n  const WINJS_PRIORITY = 40;\n  const GECKO_PRIORITY = 50;\n  function createFrame(filename, func, lineno, colno) {\n    const frame = {\n      filename,\n      function: func === '<anonymous>' ? _core.UNKNOWN_FUNCTION : func,\n      in_app: true // All browser frames are considered in_app\n    };\n    if (lineno !== undefined) {\n      frame.lineno = lineno;\n    }\n    if (colno !== undefined) {\n      frame.colno = colno;\n    }\n    return frame;\n  }\n\n  // This regex matches frames that have no function name (ie. are at the top level of a module).\n  // For example \"at http://localhost:5000//script.js:1:126\"\n  // Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\n  const chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n  // This regex matches all the frames that have a function name.\n  const chromeRegex = /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  const chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n  // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n  // We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n  // See: https://github.com/getsentry/sentry-javascript/issues/6880\n  const chromeStackParserFn = line => {\n    // If the stack line has no function name, we need to parse it differently\n    const noFnParts = chromeRegexNoFnName.exec(line);\n    if (noFnParts) {\n      const [, filename, line, col] = noFnParts;\n      return createFrame(filename, _core.UNKNOWN_FUNCTION, +line, +col);\n    }\n    const parts = chromeRegex.exec(line);\n    if (parts) {\n      const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n      if (isEval) {\n        const subMatch = chromeEvalRegex.exec(parts[2]);\n        if (subMatch) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = subMatch[1]; // url\n          parts[3] = subMatch[2]; // line\n          parts[4] = subMatch[3]; // column\n        }\n      }\n\n      // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n      // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n      const [func, filename] = extractSafariExtensionDetails(parts[1] || _core.UNKNOWN_FUNCTION, parts[2]);\n      return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n    }\n    return;\n  };\n  const chromeStackLineParser = exports.chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n  // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n  // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n  // We need this specific case for now because we want no other regex to match.\n  const geckoREgex = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  const geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  const gecko = line => {\n    const parts = geckoREgex.exec(line);\n    if (parts) {\n      const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval) {\n        const subMatch = geckoEvalRegex.exec(parts[3]);\n        if (subMatch) {\n          // throw out eval line/column and use top-most line number\n          parts[1] = parts[1] || 'eval';\n          parts[3] = subMatch[1];\n          parts[4] = subMatch[2];\n          parts[5] = ''; // no column when eval\n        }\n      }\n      let filename = parts[3];\n      let func = parts[1] || _core.UNKNOWN_FUNCTION;\n      [func, filename] = extractSafariExtensionDetails(func, filename);\n      return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n    }\n    return;\n  };\n  const geckoStackLineParser = exports.geckoStackLineParser = [GECKO_PRIORITY, gecko];\n  const winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  const winjs = line => {\n    const parts = winjsRegex.exec(line);\n    return parts ? createFrame(parts[2], parts[1] || _core.UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined) : undefined;\n  };\n  const winjsStackLineParser = exports.winjsStackLineParser = [WINJS_PRIORITY, winjs];\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera10 = line => {\n    const parts = opera10Regex.exec(line);\n    return parts ? createFrame(parts[2], parts[3] || _core.UNKNOWN_FUNCTION, +parts[1]) : undefined;\n  };\n  const opera10StackLineParser = exports.opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n  const opera11 = line => {\n    const parts = opera11Regex.exec(line);\n    return parts ? createFrame(parts[5], parts[3] || parts[4] || _core.UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n  };\n  const opera11StackLineParser = exports.opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n  const defaultStackLineParsers = exports.defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n  const defaultStackParser = exports.defaultStackParser = (0, _core.createStackParser)(...defaultStackLineParsers);\n\n  /**\n   * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n   * What it means, is that instead of format like:\n   *\n   * Error: wat\n   *   at function@url:row:col\n   *   at function@url:row:col\n   *   at function@url:row:col\n   *\n   * it produces something like:\n   *\n   *   function@url:row:col\n   *   function@url:row:col\n   *   function@url:row:col\n   *\n   * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n   * This function is extracted so that we can use it in both places without duplicating the logic.\n   * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n   * and fix this case seems like an impossible, or at least way too time-consuming task.\n   */\n  const extractSafariExtensionDetails = (func, filename) => {\n    const isSafariExtension = func.indexOf('safari-extension') !== -1;\n    const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n    return isSafariExtension || isSafariWebExtension ? [func.indexOf('@') !== -1 ? func.split('@')[0] : _core.UNKNOWN_FUNCTION, isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`] : [func, filename];\n  };\n});","lineCount":148,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,3,0],[8,2,4,0],[9,2,5,0],[10,2,6,0],[11,2,7,0],[13,2,10,0],[13,8,10,6,"OPERA10_PRIORITY"],[13,24,10,22],[13,27,10,25],[13,29,10,27],[14,2,11,0],[14,8,11,6,"OPERA11_PRIORITY"],[14,24,11,22],[14,27,11,25],[14,29,11,27],[15,2,12,0],[15,8,12,6,"CHROME_PRIORITY"],[15,23,12,21],[15,26,12,24],[15,28,12,26],[16,2,13,0],[16,8,13,6,"WINJS_PRIORITY"],[16,22,13,20],[16,25,13,23],[16,27,13,25],[17,2,14,0],[17,8,14,6,"GECKO_PRIORITY"],[17,22,14,20],[17,25,14,23],[17,27,14,25],[18,2,16,0],[18,11,16,9,"createFrame"],[18,22,16,20,"createFrame"],[18,23,16,21,"filename"],[18,31,16,29],[18,33,16,31,"func"],[18,37,16,35],[18,39,16,37,"lineno"],[18,45,16,43],[18,47,16,45,"colno"],[18,52,16,50],[18,54,16,52],[19,4,17,2],[19,10,17,8,"frame"],[19,15,17,13],[19,18,17,16],[20,6,18,4,"filename"],[20,14,18,12],[21,6,19,4,"function"],[21,14,19,12],[21,16,19,14,"func"],[21,20,19,18],[21,25,19,23],[21,38,19,36],[21,41,19,39,"UNKNOWN_FUNCTION"],[21,63,19,55],[21,66,19,58,"func"],[21,70,19,62],[22,6,20,4,"in_app"],[22,12,20,10],[22,14,20,12],[22,18,20,16],[22,19,20,18],[23,4,21,2],[23,5,21,3],[24,4,23,2],[24,8,23,6,"lineno"],[24,14,23,12],[24,19,23,17,"undefined"],[24,28,23,26],[24,30,23,28],[25,6,24,4,"frame"],[25,11,24,9],[25,12,24,10,"lineno"],[25,18,24,16],[25,21,24,19,"lineno"],[25,27,24,25],[26,4,25,2],[27,4,27,2],[27,8,27,6,"colno"],[27,13,27,11],[27,18,27,16,"undefined"],[27,27,27,25],[27,29,27,27],[28,6,28,4,"frame"],[28,11,28,9],[28,12,28,10,"colno"],[28,17,28,15],[28,20,28,18,"colno"],[28,25,28,23],[29,4,29,2],[30,4,31,2],[30,11,31,9,"frame"],[30,16,31,14],[31,2,32,0],[33,2,34,0],[34,2,35,0],[35,2,36,0],[36,2,37,0],[36,8,37,6,"chromeRegexNoFnName"],[36,27,37,25],[36,30,37,28],[36,70,37,68],[38,2,39,0],[39,2,40,0],[39,8,40,6,"chromeRegex"],[39,19,40,17],[39,22,41,2],[39,162,41,142],[40,2,43,0],[40,8,43,6,"chromeEvalRegex"],[40,23,43,21],[40,26,43,24],[40,57,43,55],[42,2,45,0],[43,2,46,0],[44,2,47,0],[45,2,48,0],[45,8,48,6,"chromeStackParserFn"],[45,27,48,25],[45,30,48,28,"line"],[45,34,48,32],[45,38,48,36],[46,4,49,2],[47,4,50,2],[47,10,50,8,"noFnParts"],[47,19,50,17],[47,22,50,20,"chromeRegexNoFnName"],[47,41,50,39],[47,42,50,40,"exec"],[47,46,50,44],[47,47,50,45,"line"],[47,51,50,49],[47,52,50,50],[48,4,52,2],[48,8,52,6,"noFnParts"],[48,17,52,15],[48,19,52,17],[49,6,53,4],[49,12,53,10],[49,15,53,13,"filename"],[49,23,53,21],[49,25,53,23,"line"],[49,29,53,27],[49,31,53,29,"col"],[49,34,53,32],[49,35,53,33],[49,38,53,36,"noFnParts"],[49,47,53,45],[50,6,54,4],[50,13,54,11,"createFrame"],[50,24,54,22],[50,25,54,23,"filename"],[50,33,54,31],[50,35,54,33,"UNKNOWN_FUNCTION"],[50,57,54,49],[50,59,54,51],[50,60,54,52,"line"],[50,64,54,56],[50,66,54,58],[50,67,54,59,"col"],[50,70,54,62],[50,71,54,63],[51,4,55,2],[52,4,57,2],[52,10,57,8,"parts"],[52,15,57,13],[52,18,57,16,"chromeRegex"],[52,29,57,27],[52,30,57,28,"exec"],[52,34,57,32],[52,35,57,33,"line"],[52,39,57,37],[52,40,57,38],[53,4,59,2],[53,8,59,6,"parts"],[53,13,59,11],[53,15,59,13],[54,6,60,4],[54,12,60,10,"isEval"],[54,18,60,16],[54,21,60,19,"parts"],[54,26,60,24],[54,27,60,25],[54,28,60,26],[54,29,60,27],[54,33,60,31,"parts"],[54,38,60,36],[54,39,60,37],[54,40,60,38],[54,41,60,39],[54,42,60,40,"indexOf"],[54,49,60,47],[54,50,60,48],[54,56,60,54],[54,57,60,55],[54,62,60,60],[54,63,60,61],[54,64,60,62],[54,65,60,63],[56,6,62,4],[56,10,62,8,"isEval"],[56,16,62,14],[56,18,62,16],[57,8,63,6],[57,14,63,12,"subMatch"],[57,22,63,20],[57,25,63,23,"chromeEvalRegex"],[57,40,63,38],[57,41,63,39,"exec"],[57,45,63,43],[57,46,63,44,"parts"],[57,51,63,49],[57,52,63,50],[57,53,63,51],[57,54,63,52],[57,55,63,53],[58,8,65,6],[58,12,65,10,"subMatch"],[58,20,65,18],[58,22,65,20],[59,10,66,8],[60,10,67,8,"parts"],[60,15,67,13],[60,16,67,14],[60,17,67,15],[60,18,67,16],[60,21,67,19,"subMatch"],[60,29,67,27],[60,30,67,28],[60,31,67,29],[60,32,67,30],[60,33,67,31],[60,34,67,32],[61,10,68,8,"parts"],[61,15,68,13],[61,16,68,14],[61,17,68,15],[61,18,68,16],[61,21,68,19,"subMatch"],[61,29,68,27],[61,30,68,28],[61,31,68,29],[61,32,68,30],[61,33,68,31],[61,34,68,32],[62,10,69,8,"parts"],[62,15,69,13],[62,16,69,14],[62,17,69,15],[62,18,69,16],[62,21,69,19,"subMatch"],[62,29,69,27],[62,30,69,28],[62,31,69,29],[62,32,69,30],[62,33,69,31],[62,34,69,32],[63,8,70,6],[64,6,71,4],[66,6,73,4],[67,6,74,4],[68,6,75,4],[68,12,75,10],[68,13,75,11,"func"],[68,17,75,15],[68,19,75,17,"filename"],[68,27,75,25],[68,28,75,26],[68,31,75,29,"extractSafariExtensionDetails"],[68,60,75,58],[68,61,75,59,"parts"],[68,66,75,64],[68,67,75,65],[68,68,75,66],[68,69,75,67],[68,73,75,71,"UNKNOWN_FUNCTION"],[68,95,75,87],[68,97,75,89,"parts"],[68,102,75,94],[68,103,75,95],[68,104,75,96],[68,105,75,97],[68,106,75,98],[69,6,77,4],[69,13,77,11,"createFrame"],[69,24,77,22],[69,25,77,23,"filename"],[69,33,77,31],[69,35,77,33,"func"],[69,39,77,37],[69,41,77,39,"parts"],[69,46,77,44],[69,47,77,45],[69,48,77,46],[69,49,77,47],[69,52,77,50],[69,53,77,51,"parts"],[69,58,77,56],[69,59,77,57],[69,60,77,58],[69,61,77,59],[69,64,77,62,"undefined"],[69,73,77,71],[69,75,77,73,"parts"],[69,80,77,78],[69,81,77,79],[69,82,77,80],[69,83,77,81],[69,86,77,84],[69,87,77,85,"parts"],[69,92,77,90],[69,93,77,91],[69,94,77,92],[69,95,77,93],[69,98,77,96,"undefined"],[69,107,77,105],[69,108,77,106],[70,4,78,2],[71,4,80,2],[72,2,81,0],[72,3,81,1],[73,2,83,0],[73,8,83,6,"chromeStackLineParser"],[73,29,83,27],[73,32,83,27,"exports"],[73,39,83,27],[73,40,83,27,"chromeStackLineParser"],[73,61,83,27],[73,64,83,30],[73,65,83,31,"CHROME_PRIORITY"],[73,80,83,46],[73,82,83,48,"chromeStackParserFn"],[73,101,83,67],[73,102,83,68],[75,2,85,0],[76,2,86,0],[77,2,87,0],[78,2,88,0],[78,8,88,6,"geckoREgex"],[78,18,88,16],[78,21,89,2],[78,155,89,136],[79,2,90,0],[79,8,90,6,"geckoEvalRegex"],[79,22,90,20],[79,25,90,23],[79,72,90,70],[80,2,92,0],[80,8,92,6,"gecko"],[80,13,92,11],[80,16,92,14,"line"],[80,20,92,18],[80,24,92,22],[81,4,93,2],[81,10,93,8,"parts"],[81,15,93,13],[81,18,93,16,"geckoREgex"],[81,28,93,26],[81,29,93,27,"exec"],[81,33,93,31],[81,34,93,32,"line"],[81,38,93,36],[81,39,93,37],[82,4,95,2],[82,8,95,6,"parts"],[82,13,95,11],[82,15,95,13],[83,6,96,4],[83,12,96,10,"isEval"],[83,18,96,16],[83,21,96,19,"parts"],[83,26,96,24],[83,27,96,25],[83,28,96,26],[83,29,96,27],[83,33,96,31,"parts"],[83,38,96,36],[83,39,96,37],[83,40,96,38],[83,41,96,39],[83,42,96,40,"indexOf"],[83,49,96,47],[83,50,96,48],[83,59,96,57],[83,60,96,58],[83,63,96,61],[83,64,96,62],[83,65,96,63],[84,6,97,4],[84,10,97,8,"isEval"],[84,16,97,14],[84,18,97,16],[85,8,98,6],[85,14,98,12,"subMatch"],[85,22,98,20],[85,25,98,23,"geckoEvalRegex"],[85,39,98,37],[85,40,98,38,"exec"],[85,44,98,42],[85,45,98,43,"parts"],[85,50,98,48],[85,51,98,49],[85,52,98,50],[85,53,98,51],[85,54,98,52],[86,8,100,6],[86,12,100,10,"subMatch"],[86,20,100,18],[86,22,100,20],[87,10,101,8],[88,10,102,8,"parts"],[88,15,102,13],[88,16,102,14],[88,17,102,15],[88,18,102,16],[88,21,102,19,"parts"],[88,26,102,24],[88,27,102,25],[88,28,102,26],[88,29,102,27],[88,33,102,31],[88,39,102,37],[89,10,103,8,"parts"],[89,15,103,13],[89,16,103,14],[89,17,103,15],[89,18,103,16],[89,21,103,19,"subMatch"],[89,29,103,27],[89,30,103,28],[89,31,103,29],[89,32,103,30],[90,10,104,8,"parts"],[90,15,104,13],[90,16,104,14],[90,17,104,15],[90,18,104,16],[90,21,104,19,"subMatch"],[90,29,104,27],[90,30,104,28],[90,31,104,29],[90,32,104,30],[91,10,105,8,"parts"],[91,15,105,13],[91,16,105,14],[91,17,105,15],[91,18,105,16],[91,21,105,19],[91,23,105,21],[91,24,105,22],[91,25,105,23],[92,8,106,6],[93,6,107,4],[94,6,109,4],[94,10,109,8,"filename"],[94,18,109,16],[94,21,109,19,"parts"],[94,26,109,24],[94,27,109,25],[94,28,109,26],[94,29,109,27],[95,6,110,4],[95,10,110,8,"func"],[95,14,110,12],[95,17,110,15,"parts"],[95,22,110,20],[95,23,110,21],[95,24,110,22],[95,25,110,23],[95,29,110,27,"UNKNOWN_FUNCTION"],[95,51,110,43],[96,6,111,4],[96,7,111,5,"func"],[96,11,111,9],[96,13,111,11,"filename"],[96,21,111,19],[96,22,111,20],[96,25,111,23,"extractSafariExtensionDetails"],[96,54,111,52],[96,55,111,53,"func"],[96,59,111,57],[96,61,111,59,"filename"],[96,69,111,67],[96,70,111,68],[97,6,113,4],[97,13,113,11,"createFrame"],[97,24,113,22],[97,25,113,23,"filename"],[97,33,113,31],[97,35,113,33,"func"],[97,39,113,37],[97,41,113,39,"parts"],[97,46,113,44],[97,47,113,45],[97,48,113,46],[97,49,113,47],[97,52,113,50],[97,53,113,51,"parts"],[97,58,113,56],[97,59,113,57],[97,60,113,58],[97,61,113,59],[97,64,113,62,"undefined"],[97,73,113,71],[97,75,113,73,"parts"],[97,80,113,78],[97,81,113,79],[97,82,113,80],[97,83,113,81],[97,86,113,84],[97,87,113,85,"parts"],[97,92,113,90],[97,93,113,91],[97,94,113,92],[97,95,113,93],[97,98,113,96,"undefined"],[97,107,113,105],[97,108,113,106],[98,4,114,2],[99,4,116,2],[100,2,117,0],[100,3,117,1],[101,2,119,0],[101,8,119,6,"geckoStackLineParser"],[101,28,119,26],[101,31,119,26,"exports"],[101,38,119,26],[101,39,119,26,"geckoStackLineParser"],[101,59,119,26],[101,62,119,29],[101,63,119,30,"GECKO_PRIORITY"],[101,77,119,44],[101,79,119,46,"gecko"],[101,84,119,51],[101,85,119,52],[102,2,121,0],[102,8,121,6,"winjsRegex"],[102,18,121,16],[102,21,121,19],[102,107,121,105],[103,2,123,0],[103,8,123,6,"winjs"],[103,13,123,11],[103,16,123,14,"line"],[103,20,123,18],[103,24,123,22],[104,4,124,2],[104,10,124,8,"parts"],[104,15,124,13],[104,18,124,16,"winjsRegex"],[104,28,124,26],[104,29,124,27,"exec"],[104,33,124,31],[104,34,124,32,"line"],[104,38,124,36],[104,39,124,37],[105,4,126,2],[105,11,126,9,"parts"],[105,16,126,14],[105,19,127,6,"createFrame"],[105,30,127,17],[105,31,127,18,"parts"],[105,36,127,23],[105,37,127,24],[105,38,127,25],[105,39,127,26],[105,41,127,28,"parts"],[105,46,127,33],[105,47,127,34],[105,48,127,35],[105,49,127,36],[105,53,127,40,"UNKNOWN_FUNCTION"],[105,75,127,56],[105,77,127,58],[105,78,127,59,"parts"],[105,83,127,64],[105,84,127,65],[105,85,127,66],[105,86,127,67],[105,88,127,69,"parts"],[105,93,127,74],[105,94,127,75],[105,95,127,76],[105,96,127,77],[105,99,127,80],[105,100,127,81,"parts"],[105,105,127,86],[105,106,127,87],[105,107,127,88],[105,108,127,89],[105,111,127,92,"undefined"],[105,120,127,101],[105,121,127,102],[105,124,128,6,"undefined"],[105,133,128,15],[106,2,129,0],[106,3,129,1],[107,2,131,0],[107,8,131,6,"winjsStackLineParser"],[107,28,131,26],[107,31,131,26,"exports"],[107,38,131,26],[107,39,131,26,"winjsStackLineParser"],[107,59,131,26],[107,62,131,29],[107,63,131,30,"WINJS_PRIORITY"],[107,77,131,44],[107,79,131,46,"winjs"],[107,84,131,51],[107,85,131,52],[108,2,133,0],[108,8,133,6,"opera10Regex"],[108,20,133,18],[108,23,133,21],[108,84,133,82],[109,2,135,0],[109,8,135,6,"opera10"],[109,15,135,13],[109,18,135,16,"line"],[109,22,135,20],[109,26,135,24],[110,4,136,2],[110,10,136,8,"parts"],[110,15,136,13],[110,18,136,16,"opera10Regex"],[110,30,136,28],[110,31,136,29,"exec"],[110,35,136,33],[110,36,136,34,"line"],[110,40,136,38],[110,41,136,39],[111,4,137,2],[111,11,137,9,"parts"],[111,16,137,14],[111,19,137,17,"createFrame"],[111,30,137,28],[111,31,137,29,"parts"],[111,36,137,34],[111,37,137,35],[111,38,137,36],[111,39,137,37],[111,41,137,39,"parts"],[111,46,137,44],[111,47,137,45],[111,48,137,46],[111,49,137,47],[111,53,137,51,"UNKNOWN_FUNCTION"],[111,75,137,67],[111,77,137,69],[111,78,137,70,"parts"],[111,83,137,75],[111,84,137,76],[111,85,137,77],[111,86,137,78],[111,87,137,79],[111,90,137,82,"undefined"],[111,99,137,91],[112,2,138,0],[112,3,138,1],[113,2,140,0],[113,8,140,6,"opera10StackLineParser"],[113,30,140,28],[113,33,140,28,"exports"],[113,40,140,28],[113,41,140,28,"opera10StackLineParser"],[113,63,140,28],[113,66,140,31],[113,67,140,32,"OPERA10_PRIORITY"],[113,83,140,48],[113,85,140,50,"opera10"],[113,92,140,57],[113,93,140,58],[114,2,142,0],[114,8,142,6,"opera11Regex"],[114,20,142,18],[114,23,143,2],[114,122,143,101],[115,2,145,0],[115,8,145,6,"opera11"],[115,15,145,13],[115,18,145,16,"line"],[115,22,145,20],[115,26,145,24],[116,4,146,2],[116,10,146,8,"parts"],[116,15,146,13],[116,18,146,16,"opera11Regex"],[116,30,146,28],[116,31,146,29,"exec"],[116,35,146,33],[116,36,146,34,"line"],[116,40,146,38],[116,41,146,39],[117,4,147,2],[117,11,147,9,"parts"],[117,16,147,14],[117,19,147,17,"createFrame"],[117,30,147,28],[117,31,147,29,"parts"],[117,36,147,34],[117,37,147,35],[117,38,147,36],[117,39,147,37],[117,41,147,39,"parts"],[117,46,147,44],[117,47,147,45],[117,48,147,46],[117,49,147,47],[117,53,147,51,"parts"],[117,58,147,56],[117,59,147,57],[117,60,147,58],[117,61,147,59],[117,65,147,63,"UNKNOWN_FUNCTION"],[117,87,147,79],[117,89,147,81],[117,90,147,82,"parts"],[117,95,147,87],[117,96,147,88],[117,97,147,89],[117,98,147,90],[117,100,147,92],[117,101,147,93,"parts"],[117,106,147,98],[117,107,147,99],[117,108,147,100],[117,109,147,101],[117,110,147,102],[117,113,147,105,"undefined"],[117,122,147,114],[118,2,148,0],[118,3,148,1],[119,2,150,0],[119,8,150,6,"opera11StackLineParser"],[119,30,150,28],[119,33,150,28,"exports"],[119,40,150,28],[119,41,150,28,"opera11StackLineParser"],[119,63,150,28],[119,66,150,31],[119,67,150,32,"OPERA11_PRIORITY"],[119,83,150,48],[119,85,150,50,"opera11"],[119,92,150,57],[119,93,150,58],[120,2,152,0],[120,8,152,6,"defaultStackLineParsers"],[120,31,152,29],[120,34,152,29,"exports"],[120,41,152,29],[120,42,152,29,"defaultStackLineParsers"],[120,65,152,29],[120,68,152,32],[120,69,152,33,"chromeStackLineParser"],[120,90,152,54],[120,92,152,56,"geckoStackLineParser"],[120,112,152,76],[120,113,152,77],[121,2,154,0],[121,8,154,6,"defaultStackParser"],[121,26,154,24],[121,29,154,24,"exports"],[121,36,154,24],[121,37,154,24,"defaultStackParser"],[121,55,154,24],[121,58,154,27],[121,62,154,27,"createStackParser"],[121,85,154,44],[121,87,154,45],[121,90,154,48,"defaultStackLineParsers"],[121,113,154,71],[121,114,154,72],[123,2,156,0],[124,0,157,0],[125,0,158,0],[126,0,159,0],[127,0,160,0],[128,0,161,0],[129,0,162,0],[130,0,163,0],[131,0,164,0],[132,0,165,0],[133,0,166,0],[134,0,167,0],[135,0,168,0],[136,0,169,0],[137,0,170,0],[138,0,171,0],[139,0,172,0],[140,0,173,0],[141,0,174,0],[142,0,175,0],[143,2,176,0],[143,8,176,6,"extractSafariExtensionDetails"],[143,37,176,35],[143,40,176,38,"extractSafariExtensionDetails"],[143,41,176,39,"func"],[143,45,176,43],[143,47,176,45,"filename"],[143,55,176,53],[143,60,176,58],[144,4,177,2],[144,10,177,8,"isSafariExtension"],[144,27,177,25],[144,30,177,28,"func"],[144,34,177,32],[144,35,177,33,"indexOf"],[144,42,177,40],[144,43,177,41],[144,61,177,59],[144,62,177,60],[144,67,177,65],[144,68,177,66],[144,69,177,67],[145,4,178,2],[145,10,178,8,"isSafariWebExtension"],[145,30,178,28],[145,33,178,31,"func"],[145,37,178,35],[145,38,178,36,"indexOf"],[145,45,178,43],[145,46,178,44],[145,68,178,66],[145,69,178,67],[145,74,178,72],[145,75,178,73],[145,76,178,74],[146,4,180,2],[146,11,180,9,"isSafariExtension"],[146,28,180,26],[146,32,180,30,"isSafariWebExtension"],[146,52,180,50],[146,55,181,6],[146,56,182,8,"func"],[146,60,182,12],[146,61,182,13,"indexOf"],[146,68,182,20],[146,69,182,21],[146,72,182,24],[146,73,182,25],[146,78,182,30],[146,79,182,31],[146,80,182,32],[146,83,182,36,"func"],[146,87,182,40],[146,88,182,41,"split"],[146,93,182,46],[146,94,182,47],[146,97,182,50],[146,98,182,51],[146,99,182,52],[146,100,182,53],[146,101,182,54],[146,104,182,59,"UNKNOWN_FUNCTION"],[146,126,182,75],[146,128,183,8,"isSafariExtension"],[146,145,183,25],[146,148,183,28],[146,168,183,48,"filename"],[146,176,183,56],[146,178,183,58],[146,181,183,61],[146,205,183,85,"filename"],[146,213,183,93],[146,215,183,95],[146,216,184,7],[146,219,185,6],[146,220,185,7,"func"],[146,224,185,11],[146,226,185,13,"filename"],[146,234,185,21],[146,235,185,22],[147,2,186,0],[147,3,186,1],[148,0,186,2],[148,3]],"functionMap":{"names":["<global>","createFrame","chromeStackParserFn","gecko","winjs","opera10","opera11","extractSafariExtensionDetails"],"mappings":"AAA;ACe;CDgB;4BEgB;CFiC;cGW;CHyB;cIM;CJM;gBKM;CLG;gBMO;CNG;sCO4B;CPU"}},"type":"js/module"}]}