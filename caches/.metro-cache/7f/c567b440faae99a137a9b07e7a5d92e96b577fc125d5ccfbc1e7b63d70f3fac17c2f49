{"dependencies":[{"name":"../logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"P2L0skrFzddfO2hyNVTS4ihPJoY=","exportNames":["*"]}},{"name":"../object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":71},"end":{"line":2,"column":36,"index":107}}],"key":"kF16nFoAVXTdzlbkhI+fT4tGbfc=","exportNames":["*"]}},{"name":"../worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":45,"index":153}}],"key":"oFVkO1TNcrWeLXFY3p/6B7+diEg=","exportNames":["*"]}},{"name":"./handlers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":154},"end":{"line":4,"column":77,"index":231}}],"key":"KucQFengibIO2FPJs66kwgxrI08=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addConsoleInstrumentationHandler = addConsoleInstrumentationHandler;\n  var _logger = require(_dependencyMap[0], \"../logger.js\");\n  var _object = require(_dependencyMap[1], \"../object.js\");\n  var _worldwide = require(_dependencyMap[2], \"../worldwide.js\");\n  var _handlers = require(_dependencyMap[3], \"./handlers.js\");\n  /**\n   * Add an instrumentation handler for when a console.xxx method is called.\n   *\n   * Use at your own risk, this might break without changelog notice, only used internally.\n   * @hidden\n   */\n  function addConsoleInstrumentationHandler(handler) {\n    const type = 'console';\n    (0, _handlers.addHandler)(type, handler);\n    (0, _handlers.maybeInstrument)(type, instrumentConsole);\n  }\n  function instrumentConsole() {\n    if (!('console' in _worldwide.GLOBAL_OBJ)) {\n      return;\n    }\n    _logger.CONSOLE_LEVELS.forEach(function (level) {\n      if (!(level in _worldwide.GLOBAL_OBJ.console)) {\n        return;\n      }\n      (0, _object.fill)(_worldwide.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n        _logger.originalConsoleMethods[level] = originalConsoleMethod;\n        return function (...args) {\n          const handlerData = {\n            args,\n            level\n          };\n          (0, _handlers.triggerHandlers)('console', handlerData);\n          const log = _logger.originalConsoleMethods[level];\n          log && log.apply(_worldwide.GLOBAL_OBJ.console, args);\n        };\n      });\n    });\n  }\n});","lineCount":43,"map":[[6,2,1,0],[6,6,1,0,"_logger"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,2,0],[7,6,2,0,"_object"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,3,0],[8,6,3,0,"_worldwide"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[9,6,4,0,"_handlers"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,2,12,0],[16,11,12,9,"addConsoleInstrumentationHandler"],[16,43,12,41,"addConsoleInstrumentationHandler"],[16,44,12,42,"handler"],[16,51,12,49],[16,53,12,51],[17,4,13,2],[17,10,13,8,"type"],[17,14,13,12],[17,17,13,15],[17,26,13,24],[18,4,14,2],[18,8,14,2,"addHandler"],[18,28,14,12],[18,30,14,13,"type"],[18,34,14,17],[18,36,14,19,"handler"],[18,43,14,26],[18,44,14,27],[19,4,15,2],[19,8,15,2,"maybeInstrument"],[19,33,15,17],[19,35,15,18,"type"],[19,39,15,22],[19,41,15,24,"instrumentConsole"],[19,58,15,41],[19,59,15,42],[20,2,16,0],[21,2,18,0],[21,11,18,9,"instrumentConsole"],[21,28,18,26,"instrumentConsole"],[21,29,18,26],[21,31,18,29],[22,4,19,2],[22,8,19,6],[22,10,19,8],[22,19,19,17],[22,23,19,21,"GLOBAL_OBJ"],[22,44,19,31],[22,45,19,32],[22,47,19,34],[23,6,20,4],[24,4,21,2],[25,4,23,2,"CONSOLE_LEVELS"],[25,26,23,16],[25,27,23,17,"forEach"],[25,34,23,24],[25,35,23,25],[25,45,23,35,"level"],[25,50,23,40],[25,52,23,42],[26,6,24,4],[26,10,24,8],[26,12,24,10,"level"],[26,17,24,15],[26,21,24,19,"GLOBAL_OBJ"],[26,42,24,29],[26,43,24,30,"console"],[26,50,24,37],[26,51,24,38],[26,53,24,40],[27,8,25,6],[28,6,26,4],[29,6,28,4],[29,10,28,4,"fill"],[29,22,28,8],[29,24,28,9,"GLOBAL_OBJ"],[29,45,28,19],[29,46,28,20,"console"],[29,53,28,27],[29,55,28,29,"level"],[29,60,28,34],[29,62,28,36],[29,72,28,46,"originalConsoleMethod"],[29,93,28,67],[29,95,28,69],[30,8,29,6,"originalConsoleMethods"],[30,38,29,28],[30,39,29,29,"level"],[30,44,29,34],[30,45,29,35],[30,48,29,38,"originalConsoleMethod"],[30,69,29,59],[31,8,31,6],[31,15,31,13],[31,25,31,23],[31,28,31,26,"args"],[31,32,31,30],[31,34,31,32],[32,10,32,8],[32,16,32,14,"handlerData"],[32,27,32,25],[32,30,32,28],[33,12,32,30,"args"],[33,16,32,34],[34,12,32,36,"level"],[35,10,32,42],[35,11,32,43],[36,10,33,8],[36,14,33,8,"triggerHandlers"],[36,39,33,23],[36,41,33,24],[36,50,33,33],[36,52,33,35,"handlerData"],[36,63,33,46],[36,64,33,47],[37,10,35,8],[37,16,35,14,"log"],[37,19,35,17],[37,22,35,20,"originalConsoleMethods"],[37,52,35,42],[37,53,35,43,"level"],[37,58,35,48],[37,59,35,49],[38,10,36,8,"log"],[38,13,36,11],[38,17,36,15,"log"],[38,20,36,18],[38,21,36,19,"apply"],[38,26,36,24],[38,27,36,25,"GLOBAL_OBJ"],[38,48,36,35],[38,49,36,36,"console"],[38,56,36,43],[38,58,36,45,"args"],[38,62,36,49],[38,63,36,50],[39,8,37,6],[39,9,37,7],[40,6,38,4],[40,7,38,5],[40,8,38,6],[41,4,39,2],[41,5,39,3],[41,6,39,4],[42,2,40,0],[43,0,40,1],[43,3]],"functionMap":{"names":["<global>","addConsoleInstrumentationHandler","instrumentConsole","CONSOLE_LEVELS.forEach$argument_0","fill$argument_2","<anonymous>"],"mappings":"AAA;ACW;CDI;AEE;yBCK;oCCK;aCG;ODM;KDC;GDC;CFC"}},"type":"js/module"}]}