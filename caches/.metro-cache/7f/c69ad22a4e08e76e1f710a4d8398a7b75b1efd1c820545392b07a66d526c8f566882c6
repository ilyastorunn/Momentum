{"dependencies":[{"name":"../is.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"gycIqLQ4f8RXWXIDtUPjPQhAxik=","exportNames":["*"]}},{"name":"../object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":62,"index":98}}],"key":"kF16nFoAVXTdzlbkhI+fT4tGbfc=","exportNames":["*"]}},{"name":"../supports.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":53,"index":152}}],"key":"jbbOGXlp50B/MkOWIl5MGitN/jI=","exportNames":["*"]}},{"name":"../time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":153},"end":{"line":4,"column":48,"index":201}}],"key":"Mp7luiCkxB3SfeAJIkfXMsksXn8=","exportNames":["*"]}},{"name":"../worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":202},"end":{"line":5,"column":45,"index":247}}],"key":"oFVkO1TNcrWeLXFY3p/6B7+diEg=","exportNames":["*"]}},{"name":"./handlers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":248},"end":{"line":6,"column":77,"index":325}}],"key":"KucQFengibIO2FPJs66kwgxrI08=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addFetchEndInstrumentationHandler = addFetchEndInstrumentationHandler;\n  exports.addFetchInstrumentationHandler = addFetchInstrumentationHandler;\n  exports.parseFetchArgs = parseFetchArgs;\n  var _is = require(_dependencyMap[0], \"../is.js\");\n  var _object = require(_dependencyMap[1], \"../object.js\");\n  var _supports = require(_dependencyMap[2], \"../supports.js\");\n  var _time = require(_dependencyMap[3], \"../time.js\");\n  var _worldwide = require(_dependencyMap[4], \"../worldwide.js\");\n  var _handlers = require(_dependencyMap[5], \"./handlers.js\");\n  /**\n   * Add an instrumentation handler for when a fetch request happens.\n   * The handler function is called once when the request starts and once when it ends,\n   * which can be identified by checking if it has an `endTimestamp`.\n   *\n   * Use at your own risk, this might break without changelog notice, only used internally.\n   * @hidden\n   */\n  function addFetchInstrumentationHandler(handler, skipNativeFetchCheck) {\n    const type = 'fetch';\n    (0, _handlers.addHandler)(type, handler);\n    (0, _handlers.maybeInstrument)(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n  }\n\n  /**\n   * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n   * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n   * span can be updated accordingly.\n   *\n   * Only used internally\n   * @hidden\n   */\n  function addFetchEndInstrumentationHandler(handler) {\n    const type = 'fetch-body-resolved';\n    (0, _handlers.addHandler)(type, handler);\n    (0, _handlers.maybeInstrument)(type, () => instrumentFetch(streamHandler));\n  }\n  function instrumentFetch(onFetchResolved, skipNativeFetchCheck = false) {\n    if (skipNativeFetchCheck && !(0, _supports.supportsNativeFetch)()) {\n      return;\n    }\n    (0, _object.fill)(_worldwide.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n      return function (...args) {\n        // We capture the error right here and not in the Promise error callback because Safari (and probably other\n        // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n        //       it means the error, that was caused by your fetch call did not\n        //       have a stack trace, so the SDK backfilled the stack trace so\n        //       you can see which fetch call failed.\n        const virtualError = new Error();\n        const {\n          method,\n          url\n        } = parseFetchArgs(args);\n        const handlerData = {\n          args,\n          fetchData: {\n            method,\n            url\n          },\n          startTimestamp: (0, _time.timestampInSeconds)() * 1000,\n          // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n          virtualError\n        };\n\n        // if there is no callback, fetch is instrumented directly\n        if (!onFetchResolved) {\n          (0, _handlers.triggerHandlers)('fetch', {\n            ...handlerData\n          });\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return originalFetch.apply(_worldwide.GLOBAL_OBJ, args).then(async response => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            (0, _handlers.triggerHandlers)('fetch', {\n              ...handlerData,\n              endTimestamp: (0, _time.timestampInSeconds)() * 1000,\n              response\n            });\n          }\n          return response;\n        }, error => {\n          (0, _handlers.triggerHandlers)('fetch', {\n            ...handlerData,\n            endTimestamp: (0, _time.timestampInSeconds)() * 1000,\n            error\n          });\n          if ((0, _is.isError)(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            (0, _object.addNonEnumerableProperty)(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        });\n      };\n    });\n  }\n  async function resolveResponse(res, onFinishedResolving) {\n    if (res && res.body) {\n      const body = res.body;\n      const responseReader = body.getReader();\n\n      // Define a maximum duration after which we just cancel\n      const maxFetchDurationTimeout = setTimeout(() => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      }, 90 * 1000 // 90s\n      );\n      let readingActive = true;\n      while (readingActive) {\n        let chunkTimeout;\n        try {\n          // abort reading if read op takes more than 5s\n          chunkTimeout = setTimeout(() => {\n            body.cancel().then(null, () => {\n              // noop on error\n            });\n          }, 5000);\n\n          // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n          const {\n            done\n          } = await responseReader.read();\n          clearTimeout(chunkTimeout);\n          if (done) {\n            onFinishedResolving();\n            readingActive = false;\n          }\n        } catch (error) {\n          readingActive = false;\n        } finally {\n          clearTimeout(chunkTimeout);\n        }\n      }\n      clearTimeout(maxFetchDurationTimeout);\n      responseReader.releaseLock();\n      body.cancel().then(null, () => {\n        // noop on error\n      });\n    }\n  }\n  function streamHandler(response) {\n    // clone response for awaiting stream\n    let clonedResponseForResolving;\n    try {\n      clonedResponseForResolving = response.clone();\n    } catch (e) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    resolveResponse(clonedResponseForResolving, () => {\n      (0, _handlers.triggerHandlers)('fetch-body-resolved', {\n        endTimestamp: (0, _time.timestampInSeconds)() * 1000,\n        response\n      });\n    });\n  }\n  function hasProp(obj, prop) {\n    return !!obj && typeof obj === 'object' && !!obj[prop];\n  }\n  function getUrlFromResource(resource) {\n    if (typeof resource === 'string') {\n      return resource;\n    }\n    if (!resource) {\n      return '';\n    }\n    if (hasProp(resource, 'url')) {\n      return resource.url;\n    }\n    if (resource.toString) {\n      return resource.toString();\n    }\n    return '';\n  }\n\n  /**\n   * Parses the fetch arguments to find the used Http method and the url of the request.\n   * Exported for tests only.\n   */\n  function parseFetchArgs(fetchArgs) {\n    if (fetchArgs.length === 0) {\n      return {\n        method: 'GET',\n        url: ''\n      };\n    }\n    if (fetchArgs.length === 2) {\n      const [url, options] = fetchArgs;\n      return {\n        url: getUrlFromResource(url),\n        method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET'\n      };\n    }\n    const arg = fetchArgs[0];\n    return {\n      url: getUrlFromResource(arg),\n      method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET'\n    };\n  }\n});","lineCount":217,"map":[[8,2,1,0],[8,6,1,0,"_is"],[8,9,1,0],[8,12,1,0,"require"],[8,19,1,0],[8,20,1,0,"_dependencyMap"],[8,34,1,0],[9,2,2,0],[9,6,2,0,"_object"],[9,13,2,0],[9,16,2,0,"require"],[9,23,2,0],[9,24,2,0,"_dependencyMap"],[9,38,2,0],[10,2,3,0],[10,6,3,0,"_supports"],[10,15,3,0],[10,18,3,0,"require"],[10,25,3,0],[10,26,3,0,"_dependencyMap"],[10,40,3,0],[11,2,4,0],[11,6,4,0,"_time"],[11,11,4,0],[11,14,4,0,"require"],[11,21,4,0],[11,22,4,0,"_dependencyMap"],[11,36,4,0],[12,2,5,0],[12,6,5,0,"_worldwide"],[12,16,5,0],[12,19,5,0,"require"],[12,26,5,0],[12,27,5,0,"_dependencyMap"],[12,41,5,0],[13,2,6,0],[13,6,6,0,"_handlers"],[13,15,6,0],[13,18,6,0,"require"],[13,25,6,0],[13,26,6,0,"_dependencyMap"],[13,40,6,0],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,2,16,0],[22,11,16,9,"addFetchInstrumentationHandler"],[22,41,16,39,"addFetchInstrumentationHandler"],[22,42,17,2,"handler"],[22,49,17,9],[22,51,18,2,"skipNativeFetchCheck"],[22,71,18,22],[22,73,19,2],[23,4,20,2],[23,10,20,8,"type"],[23,14,20,12],[23,17,20,15],[23,24,20,22],[24,4,21,2],[24,8,21,2,"addHandler"],[24,28,21,12],[24,30,21,13,"type"],[24,34,21,17],[24,36,21,19,"handler"],[24,43,21,26],[24,44,21,27],[25,4,22,2],[25,8,22,2,"maybeInstrument"],[25,33,22,17],[25,35,22,18,"type"],[25,39,22,22],[25,41,22,24],[25,47,22,30,"instrumentFetch"],[25,62,22,45],[25,63,22,46,"undefined"],[25,72,22,55],[25,74,22,57,"skipNativeFetchCheck"],[25,94,22,77],[25,95,22,78],[25,96,22,79],[26,2,23,0],[28,2,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,2,33,0],[36,11,33,9,"addFetchEndInstrumentationHandler"],[36,44,33,42,"addFetchEndInstrumentationHandler"],[36,45,33,43,"handler"],[36,52,33,50],[36,54,33,52],[37,4,34,2],[37,10,34,8,"type"],[37,14,34,12],[37,17,34,15],[37,38,34,36],[38,4,35,2],[38,8,35,2,"addHandler"],[38,28,35,12],[38,30,35,13,"type"],[38,34,35,17],[38,36,35,19,"handler"],[38,43,35,26],[38,44,35,27],[39,4,36,2],[39,8,36,2,"maybeInstrument"],[39,33,36,17],[39,35,36,18,"type"],[39,39,36,22],[39,41,36,24],[39,47,36,30,"instrumentFetch"],[39,62,36,45],[39,63,36,46,"streamHandler"],[39,76,36,59],[39,77,36,60],[39,78,36,61],[40,2,37,0],[41,2,39,0],[41,11,39,9,"instrumentFetch"],[41,26,39,24,"instrumentFetch"],[41,27,39,25,"onFetchResolved"],[41,42,39,40],[41,44,39,42,"skipNativeFetchCheck"],[41,64,39,62],[41,67,39,65],[41,72,39,70],[41,74,39,72],[42,4,40,2],[42,8,40,6,"skipNativeFetchCheck"],[42,28,40,26],[42,32,40,30],[42,33,40,31],[42,37,40,31,"supportsNativeFetch"],[42,66,40,50],[42,68,40,51],[42,69,40,52],[42,71,40,54],[43,6,41,4],[44,4,42,2],[45,4,44,2],[45,8,44,2,"fill"],[45,20,44,6],[45,22,44,7,"GLOBAL_OBJ"],[45,43,44,17],[45,45,44,19],[45,52,44,26],[45,54,44,28],[45,64,44,38,"originalFetch"],[45,77,44,51],[45,79,44,53],[46,6,45,4],[46,13,45,11],[46,23,45,21],[46,26,45,24,"args"],[46,30,45,28],[46,32,45,30],[47,8,46,6],[48,8,47,6],[50,8,49,6],[51,8,50,6],[52,8,51,6],[53,8,52,6],[54,8,53,6],[54,14,53,12,"virtualError"],[54,26,53,24],[54,29,53,27],[54,33,53,31,"Error"],[54,38,53,36],[54,39,53,37],[54,40,53,38],[55,8,55,6],[55,14,55,12],[56,10,55,14,"method"],[56,16,55,20],[57,10,55,22,"url"],[58,8,55,26],[58,9,55,27],[58,12,55,30,"parseFetchArgs"],[58,26,55,44],[58,27,55,45,"args"],[58,31,55,49],[58,32,55,50],[59,8,56,6],[59,14,56,12,"handlerData"],[59,25,56,23],[59,28,56,26],[60,10,57,8,"args"],[60,14,57,12],[61,10,58,8,"fetchData"],[61,19,58,17],[61,21,58,19],[62,12,59,10,"method"],[62,18,59,16],[63,12,60,10,"url"],[64,10,61,8],[64,11,61,9],[65,10,62,8,"startTimestamp"],[65,24,62,22],[65,26,62,24],[65,30,62,24,"timestampInSeconds"],[65,54,62,42],[65,56,62,43],[65,57,62,44],[65,60,62,47],[65,64,62,51],[66,10,63,8],[67,10,64,8,"virtualError"],[68,8,65,6],[68,9,65,7],[70,8,67,6],[71,8,68,6],[71,12,68,10],[71,13,68,11,"onFetchResolved"],[71,28,68,26],[71,30,68,28],[72,10,69,8],[72,14,69,8,"triggerHandlers"],[72,39,69,23],[72,41,69,24],[72,48,69,31],[72,50,69,33],[73,12,70,10],[73,15,70,13,"handlerData"],[74,10,71,8],[74,11,71,9],[74,12,71,10],[75,8,72,6],[77,8,74,6],[78,8,75,6],[78,15,75,13,"originalFetch"],[78,28,75,26],[78,29,75,27,"apply"],[78,34,75,32],[78,35,75,33,"GLOBAL_OBJ"],[78,56,75,43],[78,58,75,45,"args"],[78,62,75,49],[78,63,75,50],[78,64,75,51,"then"],[78,68,75,55],[78,69,76,8],[78,75,76,15,"response"],[78,83,76,23],[78,87,76,28],[79,10,77,10],[79,14,77,14,"onFetchResolved"],[79,29,77,29],[79,31,77,31],[80,12,78,12,"onFetchResolved"],[80,27,78,27],[80,28,78,28,"response"],[80,36,78,36],[80,37,78,37],[81,10,79,10],[81,11,79,11],[81,17,79,17],[82,12,80,12],[82,16,80,12,"triggerHandlers"],[82,41,80,27],[82,43,80,28],[82,50,80,35],[82,52,80,37],[83,14,81,14],[83,17,81,17,"handlerData"],[83,28,81,28],[84,14,82,14,"endTimestamp"],[84,26,82,26],[84,28,82,28],[84,32,82,28,"timestampInSeconds"],[84,56,82,46],[84,58,82,47],[84,59,82,48],[84,62,82,51],[84,66,82,55],[85,14,83,14,"response"],[86,12,84,12],[86,13,84,13],[86,14,84,14],[87,10,85,10],[88,10,87,10],[88,17,87,17,"response"],[88,25,87,25],[89,8,88,8],[89,9,88,9],[89,11,89,9,"error"],[89,16,89,14],[89,20,89,19],[90,10,90,10],[90,14,90,10,"triggerHandlers"],[90,39,90,25],[90,41,90,26],[90,48,90,33],[90,50,90,35],[91,12,91,12],[91,15,91,15,"handlerData"],[91,26,91,26],[92,12,92,12,"endTimestamp"],[92,24,92,24],[92,26,92,26],[92,30,92,26,"timestampInSeconds"],[92,54,92,44],[92,56,92,45],[92,57,92,46],[92,60,92,49],[92,64,92,53],[93,12,93,12,"error"],[94,10,94,10],[94,11,94,11],[94,12,94,12],[95,10,96,10],[95,14,96,14],[95,18,96,14,"isError"],[95,29,96,21],[95,31,96,22,"error"],[95,36,96,27],[95,37,96,28],[95,41,96,32,"error"],[95,46,96,37],[95,47,96,38,"stack"],[95,52,96,43],[95,57,96,48,"undefined"],[95,66,96,57],[95,68,96,59],[96,12,97,12],[97,12,98,12],[98,12,99,12],[99,12,100,12],[100,12,101,12,"error"],[100,17,101,17],[100,18,101,18,"stack"],[100,23,101,23],[100,26,101,26,"virtualError"],[100,38,101,38],[100,39,101,39,"stack"],[100,44,101,44],[101,12,102,12],[101,16,102,12,"addNonEnumerableProperty"],[101,48,102,36],[101,50,102,37,"error"],[101,55,102,42],[101,57,102,44],[101,70,102,57],[101,72,102,59],[101,73,102,60],[101,74,102,61],[102,10,103,10],[104,10,105,10],[105,10,106,10],[106,10,107,10],[107,10,108,10],[107,16,108,16,"error"],[107,21,108,21],[108,8,109,8],[108,9,110,6],[108,10,110,7],[109,6,111,4],[109,7,111,5],[110,4,112,2],[110,5,112,3],[110,6,112,4],[111,2,113,0],[112,2,115,0],[112,17,115,15,"resolveResponse"],[112,32,115,30,"resolveResponse"],[112,33,115,31,"res"],[112,36,115,34],[112,38,115,36,"onFinishedResolving"],[112,57,115,55],[112,59,115,57],[113,4,116,2],[113,8,116,6,"res"],[113,11,116,9],[113,15,116,13,"res"],[113,18,116,16],[113,19,116,17,"body"],[113,23,116,21],[113,25,116,23],[114,6,117,4],[114,12,117,10,"body"],[114,16,117,14],[114,19,117,17,"res"],[114,22,117,20],[114,23,117,21,"body"],[114,27,117,25],[115,6,118,4],[115,12,118,10,"responseReader"],[115,26,118,24],[115,29,118,27,"body"],[115,33,118,31],[115,34,118,32,"getReader"],[115,43,118,41],[115,44,118,42],[115,45,118,43],[117,6,120,4],[118,6,121,4],[118,12,121,10,"maxFetchDurationTimeout"],[118,35,121,33],[118,38,121,36,"setTimeout"],[118,48,121,46],[118,49,122,6],[118,55,122,12],[119,8,123,8,"body"],[119,12,123,12],[119,13,123,13,"cancel"],[119,19,123,19],[119,20,123,20],[119,21,123,21],[119,22,123,22,"then"],[119,26,123,26],[119,27,123,27],[119,31,123,31],[119,33,123,33],[119,39,123,39],[120,10,124,10],[121,8,124,10],[121,9,125,9],[121,10,125,10],[122,6,126,6],[122,7,126,7],[122,9,127,6],[122,11,127,8],[122,14,127,11],[122,18,127,15],[122,19,127,17],[123,6,128,4],[123,7,128,5],[124,6,130,4],[124,10,130,8,"readingActive"],[124,23,130,21],[124,26,130,24],[124,30,130,28],[125,6,131,4],[125,13,131,11,"readingActive"],[125,26,131,24],[125,28,131,26],[126,8,132,6],[126,12,132,10,"chunkTimeout"],[126,24,132,22],[127,8,133,6],[127,12,133,10],[128,10,134,8],[129,10,135,8,"chunkTimeout"],[129,22,135,20],[129,25,135,23,"setTimeout"],[129,35,135,33],[129,36,135,34],[129,42,135,40],[130,12,136,10,"body"],[130,16,136,14],[130,17,136,15,"cancel"],[130,23,136,21],[130,24,136,22],[130,25,136,23],[130,26,136,24,"then"],[130,30,136,28],[130,31,136,29],[130,35,136,33],[130,37,136,35],[130,43,136,41],[131,14,137,12],[132,12,137,12],[132,13,138,11],[132,14,138,12],[133,10,139,8],[133,11,139,9],[133,13,139,11],[133,17,139,15],[133,18,139,16],[135,10,141,8],[136,10,142,8],[136,16,142,14],[137,12,142,16,"done"],[138,10,142,21],[138,11,142,22],[138,14,142,25],[138,20,142,31,"responseReader"],[138,34,142,45],[138,35,142,46,"read"],[138,39,142,50],[138,40,142,51],[138,41,142,52],[139,10,144,8,"clearTimeout"],[139,22,144,20],[139,23,144,21,"chunkTimeout"],[139,35,144,33],[139,36,144,34],[140,10,146,8],[140,14,146,12,"done"],[140,18,146,16],[140,20,146,18],[141,12,147,10,"onFinishedResolving"],[141,31,147,29],[141,32,147,30],[141,33,147,31],[142,12,148,10,"readingActive"],[142,25,148,23],[142,28,148,26],[142,33,148,31],[143,10,149,8],[144,8,150,6],[144,9,150,7],[144,10,150,8],[144,17,150,15,"error"],[144,22,150,20],[144,24,150,22],[145,10,151,8,"readingActive"],[145,23,151,21],[145,26,151,24],[145,31,151,29],[146,8,152,6],[146,9,152,7],[146,18,152,16],[147,10,153,8,"clearTimeout"],[147,22,153,20],[147,23,153,21,"chunkTimeout"],[147,35,153,33],[147,36,153,34],[148,8,154,6],[149,6,155,4],[150,6,157,4,"clearTimeout"],[150,18,157,16],[150,19,157,17,"maxFetchDurationTimeout"],[150,42,157,40],[150,43,157,41],[151,6,159,4,"responseReader"],[151,20,159,18],[151,21,159,19,"releaseLock"],[151,32,159,30],[151,33,159,31],[151,34,159,32],[152,6,160,4,"body"],[152,10,160,8],[152,11,160,9,"cancel"],[152,17,160,15],[152,18,160,16],[152,19,160,17],[152,20,160,18,"then"],[152,24,160,22],[152,25,160,23],[152,29,160,27],[152,31,160,29],[152,37,160,35],[153,8,161,6],[154,6,161,6],[154,7,162,5],[154,8,162,6],[155,4,163,2],[156,2,164,0],[157,2,166,0],[157,11,166,9,"streamHandler"],[157,24,166,22,"streamHandler"],[157,25,166,23,"response"],[157,33,166,31],[157,35,166,33],[158,4,167,2],[159,4,168,2],[159,8,168,6,"clonedResponseForResolving"],[159,34,168,32],[160,4,169,2],[160,8,169,6],[161,6,170,4,"clonedResponseForResolving"],[161,32,170,30],[161,35,170,33,"response"],[161,43,170,41],[161,44,170,42,"clone"],[161,49,170,47],[161,50,170,48],[161,51,170,49],[162,4,171,2],[162,5,171,3],[162,6,171,4],[162,13,171,11,"e"],[162,14,171,12],[162,16,171,14],[163,6,172,4],[164,4,173,2],[166,4,175,2],[167,4,176,2,"resolveResponse"],[167,19,176,17],[167,20,176,18,"clonedResponseForResolving"],[167,46,176,44],[167,48,176,46],[167,54,176,52],[168,6,177,4],[168,10,177,4,"triggerHandlers"],[168,35,177,19],[168,37,177,20],[168,58,177,41],[168,60,177,43],[169,8,178,6,"endTimestamp"],[169,20,178,18],[169,22,178,20],[169,26,178,20,"timestampInSeconds"],[169,50,178,38],[169,52,178,39],[169,53,178,40],[169,56,178,43],[169,60,178,47],[170,8,179,6,"response"],[171,6,180,4],[171,7,180,5],[171,8,180,6],[172,4,181,2],[172,5,181,3],[172,6,181,4],[173,2,182,0],[174,2,184,0],[174,11,184,9,"hasProp"],[174,18,184,16,"hasProp"],[174,19,184,17,"obj"],[174,22,184,20],[174,24,184,22,"prop"],[174,28,184,26],[174,30,184,28],[175,4,185,2],[175,11,185,9],[175,12,185,10],[175,13,185,11,"obj"],[175,16,185,14],[175,20,185,18],[175,27,185,25,"obj"],[175,30,185,28],[175,35,185,33],[175,43,185,41],[175,47,185,45],[175,48,185,46],[175,49,185,48,"obj"],[175,52,185,51],[175,53,185,54,"prop"],[175,57,185,58],[175,58,185,59],[176,2,186,0],[177,2,188,0],[177,11,188,9,"getUrlFromResource"],[177,29,188,27,"getUrlFromResource"],[177,30,188,28,"resource"],[177,38,188,36],[177,40,188,38],[178,4,189,2],[178,8,189,6],[178,15,189,13,"resource"],[178,23,189,21],[178,28,189,26],[178,36,189,34],[178,38,189,36],[179,6,190,4],[179,13,190,11,"resource"],[179,21,190,19],[180,4,191,2],[181,4,193,2],[181,8,193,6],[181,9,193,7,"resource"],[181,17,193,15],[181,19,193,17],[182,6,194,4],[182,13,194,11],[182,15,194,13],[183,4,195,2],[184,4,197,2],[184,8,197,6,"hasProp"],[184,15,197,13],[184,16,197,14,"resource"],[184,24,197,22],[184,26,197,24],[184,31,197,29],[184,32,197,30],[184,34,197,32],[185,6,198,4],[185,13,198,11,"resource"],[185,21,198,19],[185,22,198,20,"url"],[185,25,198,23],[186,4,199,2],[187,4,201,2],[187,8,201,6,"resource"],[187,16,201,14],[187,17,201,15,"toString"],[187,25,201,23],[187,27,201,25],[188,6,202,4],[188,13,202,11,"resource"],[188,21,202,19],[188,22,202,20,"toString"],[188,30,202,28],[188,31,202,29],[188,32,202,30],[189,4,203,2],[190,4,205,2],[190,11,205,9],[190,13,205,11],[191,2,206,0],[193,2,208,0],[194,0,209,0],[195,0,210,0],[196,0,211,0],[197,2,212,0],[197,11,212,9,"parseFetchArgs"],[197,25,212,23,"parseFetchArgs"],[197,26,212,24,"fetchArgs"],[197,35,212,33],[197,37,212,35],[198,4,213,2],[198,8,213,6,"fetchArgs"],[198,17,213,15],[198,18,213,16,"length"],[198,24,213,22],[198,29,213,27],[198,30,213,28],[198,32,213,30],[199,6,214,4],[199,13,214,11],[200,8,214,13,"method"],[200,14,214,19],[200,16,214,21],[200,21,214,26],[201,8,214,28,"url"],[201,11,214,31],[201,13,214,33],[202,6,214,36],[202,7,214,37],[203,4,215,2],[204,4,217,2],[204,8,217,6,"fetchArgs"],[204,17,217,15],[204,18,217,16,"length"],[204,24,217,22],[204,29,217,27],[204,30,217,28],[204,32,217,30],[205,6,218,4],[205,12,218,10],[205,13,218,11,"url"],[205,16,218,14],[205,18,218,16,"options"],[205,25,218,23],[205,26,218,24],[205,29,218,27,"fetchArgs"],[205,38,218,36],[206,6,220,4],[206,13,220,11],[207,8,221,6,"url"],[207,11,221,9],[207,13,221,11,"getUrlFromResource"],[207,31,221,29],[207,32,221,30,"url"],[207,35,221,33],[207,36,221,34],[208,8,222,6,"method"],[208,14,222,12],[208,16,222,14,"hasProp"],[208,23,222,21],[208,24,222,22,"options"],[208,31,222,29],[208,33,222,31],[208,41,222,39],[208,42,222,40],[208,45,222,43,"String"],[208,51,222,49],[208,52,222,50,"options"],[208,59,222,57],[208,60,222,58,"method"],[208,66,222,64],[208,67,222,65],[208,68,222,66,"toUpperCase"],[208,79,222,77],[208,80,222,78],[208,81,222,79],[208,84,222,82],[209,6,223,4],[209,7,223,5],[210,4,224,2],[211,4,226,2],[211,10,226,8,"arg"],[211,13,226,11],[211,16,226,14,"fetchArgs"],[211,25,226,23],[211,26,226,24],[211,27,226,25],[211,28,226,26],[212,4,227,2],[212,11,227,9],[213,6,228,4,"url"],[213,9,228,7],[213,11,228,9,"getUrlFromResource"],[213,29,228,27],[213,30,228,28,"arg"],[213,33,228,32],[213,34,228,33],[214,6,229,4,"method"],[214,12,229,10],[214,14,229,12,"hasProp"],[214,21,229,19],[214,22,229,20,"arg"],[214,25,229,23],[214,27,229,25],[214,35,229,33],[214,36,229,34],[214,39,229,37,"String"],[214,45,229,43],[214,46,229,44,"arg"],[214,49,229,47],[214,50,229,48,"method"],[214,56,229,54],[214,57,229,55],[214,58,229,56,"toUpperCase"],[214,69,229,67],[214,70,229,68],[214,71,229,69],[214,74,229,72],[215,4,230,2],[215,5,230,3],[216,2,231,0],[217,0,231,1],[217,3]],"functionMap":{"names":["<global>","addFetchInstrumentationHandler","maybeInstrument$argument_1","addFetchEndInstrumentationHandler","instrumentFetch","fill$argument_2","<anonymous>","originalFetch.apply.then$argument_0","originalFetch.apply.then$argument_1","resolveResponse","setTimeout$argument_0","body.cancel.then$argument_1","streamHandler","resolveResponse$argument_1","hasProp","getUrlFromResource","parseFetchArgs"],"mappings":"AAA;ACe;wBCM,sDD;CDC;AGU;wBDG,oCC;CHC;AIE;4BCK;WCC;QC+B;SDY;QEC;SFoB;KDE;GDC;CJC;ASE;MCO;iCCC;SDE;ODC;kCCS;mCCC;WDE;SDC;6BEqB;KFE;CTE;AYE;8CCU;GDK;CZC;AcE;CdE;AeE;CfkB;AgBM;ChBmB"}},"type":"js/module"}]}