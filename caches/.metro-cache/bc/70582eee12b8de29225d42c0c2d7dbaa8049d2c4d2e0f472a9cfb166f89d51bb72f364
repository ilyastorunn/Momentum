{"dependencies":[{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.progressService = exports.habitsService = exports.calendarService = exports.authService = void 0;\n  var _supabase = require(_dependencyMap[0], \"./supabase\");\n  // =================== HABITS SERVICES ===================\n\n  const habitsService = exports.habitsService = {\n    // Tüm alışkanlıkları getir\n    async getAll() {\n      // TODO: Integrate Create auth with Supabase auth\n      const userId = 'demo-user-id';\n      const {\n        data: habits,\n        error\n      } = await _supabase.supabase.from('habits').select('*').eq('user_id', userId).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      return {\n        habits\n      };\n    },\n    // Yeni alışkanlık oluştur\n    async create(habitData) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').insert([{\n        ...habitData,\n        user_id: user.id\n      }]).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık güncelle\n    async update(id, updates) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', id).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık sil\n    async delete(id) {\n      const {\n        error\n      } = await _supabase.supabase.from('habits').delete().eq('id', id);\n      if (error) throw error;\n      return {\n        success: true\n      };\n    },\n    // Tek alışkanlık detayını getir\n    async getById(id) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').select('*').eq('id', id).single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Streak güncellemesi\n    async updateStreaks(habitId, completed) {\n      const {\n        data: habit,\n        error: fetchError\n      } = await _supabase.supabase.from('habits').select('current_streak, best_streak, completed_this_week, total_completions').eq('id', habitId).single();\n      if (fetchError) throw fetchError;\n      const updates = {\n        ...habit\n      };\n      if (completed) {\n        updates.current_streak += 1;\n        updates.best_streak = Math.max(updates.best_streak, updates.current_streak);\n        updates.total_completions += 1;\n\n        // Haftalık sayı güncellemesi (basit implementasyon)\n        const today = new Date().getDay();\n        const weekStart = new Date();\n        weekStart.setDate(weekStart.getDate() - today);\n        updates.completed_this_week += 1;\n      } else {\n        updates.current_streak = 0;\n      }\n      const {\n        data: updatedHabit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', habitId).select().single();\n      if (error) throw error;\n      return {\n        habit: updatedHabit\n      };\n    }\n  };\n\n  // =================== PROGRESS SERVICES ===================\n\n  const progressService = exports.progressService = {\n    // Belirli tarih için progress getir\n    async getByDate(date) {\n      // TODO: Integrate Create auth with Supabase auth\n      // For now, use a demo user ID to prevent fallback to mock data\n      const userId = 'demo-user-id';\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select(`\n        *,\n        habits (\n          id,\n          name,\n          icon,\n          current_streak\n        )\n      `).eq('completion_date', date).eq('user_id', userId);\n      if (error) throw error;\n\n      // Tüm alışkanlıkları getir ve progress ile birleştir\n      const {\n        data: allHabits,\n        error: habitsError\n      } = await _supabase.supabase.from('habits').select('id, name, icon, current_streak').eq('user_id', userId);\n      if (habitsError) throw habitsError;\n\n      // Her alışkanlık için progress durumunu oluştur\n      const progressData = allHabits.map(habit => {\n        const dayProgress = progress.find(p => p.habit_id === habit.id);\n        return {\n          habit_id: habit.id,\n          name: habit.name,\n          icon: habit.icon,\n          completed: dayProgress?.completed || false,\n          note: dayProgress?.note || '',\n          streak: habit.current_streak\n        };\n      });\n      return {\n        progress: progressData\n      };\n    },\n    // Progress güncelle\n    async update(habitId, date, completed, note = '') {\n      // TODO: Integrate Create auth with Supabase auth\n      // For now, use a demo user ID to prevent fallback to mock data\n      const userId = 'demo-user-id';\n\n      // Önce mevcut progress'i kontrol et\n      const {\n        data: existingProgress\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('completion_date', date).eq('user_id', userId).single();\n      let result;\n      if (existingProgress) {\n        // Güncelle\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').update({\n          completed,\n          note\n        }).eq('id', existingProgress.id).select().single();\n        if (error) throw error;\n        result = data;\n      } else {\n        // Yeni kayıt oluştur\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').insert([{\n          habit_id: habitId,\n          completion_date: date,\n          completed,\n          note,\n          user_id: userId\n        }]).select().single();\n        if (error) throw error;\n        result = data;\n      }\n\n      // Habit streak'lerini güncelle\n      await habitsService.updateStreaks(habitId, completed);\n      return {\n        success: true,\n        progress: result\n      };\n    },\n    // Belirli habit ve tarih aralığı için progress getir\n    async getByHabitAndDateRange(habitId, startDate, endDate) {\n      // TODO: Integrate Create auth with Supabase auth\n      const userId = 'demo-user-id';\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('user_id', userId).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Date string'leri key olarak kullanarak object'e çevir\n      const progressByDate = {};\n      progress.forEach(p => {\n        progressByDate[p.completion_date] = p;\n      });\n      return {\n        progress: progressByDate\n      };\n    }\n  };\n\n  // =================== CALENDAR/STATS SERVICES ===================\n\n  const calendarService = exports.calendarService = {\n    // Belirli ay için calendar data getir\n    async getMonthData(year, month) {\n      // TODO: Integrate Create auth with Supabase auth\n      const userId = 'demo-user-id';\n\n      // Ay başı ve sonu tarihleri\n      const startDate = `${year}-${String(month).padStart(2, '0')}-01`;\n      const endDate = `${year}-${String(month).padStart(2, '0')}-${new Date(year, month, 0).getDate()}`;\n\n      // Progress verilerini getir\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('completion_date, completed').eq('user_id', userId).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Calendar grid için data hazırla\n      const daysInMonth = new Date(year, month, 0).getDate();\n      const firstDay = new Date(year, month - 1, 1).getDay();\n      const today = new Date();\n      const calendarData = [];\n\n      // Boş günler\n      for (let i = 0; i < firstDay; i++) {\n        calendarData.push(null);\n      }\n\n      // Ay günleri\n      for (let day = 1; day <= daysInMonth; day++) {\n        const dateStr = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n        const dayProgress = progress.filter(p => p.completion_date === dateStr && p.completed);\n        const isToday = day === today.getDate() && month === today.getMonth() + 1 && year === today.getFullYear();\n        calendarData.push({\n          day,\n          completions: dayProgress.length,\n          is_today: isToday\n        });\n      }\n\n      // İstatistikler\n      const activeDays = progress.filter(p => p.completed).length;\n      const totalCompletions = progress.filter(p => p.completed).length;\n      return {\n        calendarData,\n        stats: {\n          active_days: activeDays,\n          total_completions: totalCompletions\n        }\n      };\n    }\n  };\n\n  // =================== AUTH HELPERS ===================\n\n  const authService = exports.authService = {\n    // Mevcut kullanıcıyı getir\n    async getCurrentUser() {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      return user;\n    },\n    // Çıkış yap\n    async signOut() {\n      const {\n        error\n      } = await _supabase.supabase.auth.signOut();\n      if (error) throw error;\n    },\n    // Authentication state değişikliklerini dinle\n    onAuthStateChange(callback) {\n      return _supabase.supabase.auth.onAuthStateChange(callback);\n    }\n  };\n});","lineCount":301,"map":[[6,2,1,0],[6,6,1,0,"_supabase"],[6,15,1,0],[6,18,1,0,"require"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,3,0],[9,2,5,7],[9,8,5,13,"habitsService"],[9,21,5,26],[9,24,5,26,"exports"],[9,31,5,26],[9,32,5,26,"habitsService"],[9,45,5,26],[9,48,5,29],[10,4,6,2],[11,4,7,2],[11,10,7,8,"getAll"],[11,16,7,14,"getAll"],[11,17,7,14],[11,19,7,17],[12,6,8,4],[13,6,9,4],[13,12,9,10,"userId"],[13,18,9,16],[13,21,9,19],[13,35,9,33],[14,6,10,4],[14,12,10,10],[15,8,10,12,"data"],[15,12,10,16],[15,14,10,18,"habits"],[15,20,10,24],[16,8,10,26,"error"],[17,6,10,32],[17,7,10,33],[17,10,10,36],[17,16,10,42,"supabase"],[17,34,10,50],[17,35,11,7,"from"],[17,39,11,11],[17,40,11,12],[17,48,11,20],[17,49,11,21],[17,50,12,7,"select"],[17,56,12,13],[17,57,12,14],[17,60,12,17],[17,61,12,18],[17,62,13,7,"eq"],[17,64,13,9],[17,65,13,10],[17,74,13,19],[17,76,13,21,"userId"],[17,82,13,27],[17,83,13,28],[17,84,14,7,"order"],[17,89,14,12],[17,90,14,13],[17,102,14,25],[17,104,14,27],[18,8,14,29,"ascending"],[18,17,14,38],[18,19,14,40],[19,6,14,46],[19,7,14,47],[19,8,14,48],[20,6,16,4],[20,10,16,8,"error"],[20,15,16,13],[20,17,16,15],[20,23,16,21,"error"],[20,28,16,26],[21,6,17,4],[21,13,17,11],[22,8,17,13,"habits"],[23,6,17,20],[23,7,17,21],[24,4,18,2],[24,5,18,3],[25,4,20,2],[26,4,21,2],[26,10,21,8,"create"],[26,16,21,14,"create"],[26,17,21,15,"habitData"],[26,26,21,24],[26,28,21,26],[27,6,22,4],[27,12,22,10],[28,8,22,12,"data"],[28,12,22,16],[28,14,22,18],[29,10,22,20,"user"],[30,8,22,25],[31,6,22,27],[31,7,22,28],[31,10,22,31],[31,16,22,37,"supabase"],[31,34,22,45],[31,35,22,46,"auth"],[31,39,22,50],[31,40,22,51,"getUser"],[31,47,22,58],[31,48,22,59],[31,49,22,60],[32,6,23,4],[32,10,23,8],[32,11,23,9,"user"],[32,15,23,13],[32,17,23,15],[32,23,23,21],[32,27,23,25,"Error"],[32,32,23,30],[32,33,23,31],[32,57,23,55],[32,58,23,56],[33,6,25,4],[33,12,25,10],[34,8,25,12,"data"],[34,12,25,16],[34,14,25,18,"habit"],[34,19,25,23],[35,8,25,25,"error"],[36,6,25,31],[36,7,25,32],[36,10,25,35],[36,16,25,41,"supabase"],[36,34,25,49],[36,35,26,7,"from"],[36,39,26,11],[36,40,26,12],[36,48,26,20],[36,49,26,21],[36,50,27,7,"insert"],[36,56,27,13],[36,57,27,14],[36,58,27,15],[37,8,28,8],[37,11,28,11,"habitData"],[37,20,28,20],[38,8,29,8,"user_id"],[38,15,29,15],[38,17,29,17,"user"],[38,21,29,21],[38,22,29,22,"id"],[39,6,30,6],[39,7,30,7],[39,8,30,8],[39,9,30,9],[39,10,31,7,"select"],[39,16,31,13],[39,17,31,14],[39,18,31,15],[39,19,32,7,"single"],[39,25,32,13],[39,26,32,14],[39,27,32,15],[40,6,34,4],[40,10,34,8,"error"],[40,15,34,13],[40,17,34,15],[40,23,34,21,"error"],[40,28,34,26],[41,6,35,4],[41,13,35,11],[42,8,35,13,"habit"],[43,6,35,19],[43,7,35,20],[44,4,36,2],[44,5,36,3],[45,4,38,2],[46,4,39,2],[46,10,39,8,"update"],[46,16,39,14,"update"],[46,17,39,15,"id"],[46,19,39,17],[46,21,39,19,"updates"],[46,28,39,26],[46,30,39,28],[47,6,40,4],[47,12,40,10],[48,8,40,12,"data"],[48,12,40,16],[48,14,40,18,"habit"],[48,19,40,23],[49,8,40,25,"error"],[50,6,40,31],[50,7,40,32],[50,10,40,35],[50,16,40,41,"supabase"],[50,34,40,49],[50,35,41,7,"from"],[50,39,41,11],[50,40,41,12],[50,48,41,20],[50,49,41,21],[50,50,42,7,"update"],[50,56,42,13],[50,57,42,14,"updates"],[50,64,42,21],[50,65,42,22],[50,66,43,7,"eq"],[50,68,43,9],[50,69,43,10],[50,73,43,14],[50,75,43,16,"id"],[50,77,43,18],[50,78,43,19],[50,79,44,7,"select"],[50,85,44,13],[50,86,44,14],[50,87,44,15],[50,88,45,7,"single"],[50,94,45,13],[50,95,45,14],[50,96,45,15],[51,6,47,4],[51,10,47,8,"error"],[51,15,47,13],[51,17,47,15],[51,23,47,21,"error"],[51,28,47,26],[52,6,48,4],[52,13,48,11],[53,8,48,13,"habit"],[54,6,48,19],[54,7,48,20],[55,4,49,2],[55,5,49,3],[56,4,51,2],[57,4,52,2],[57,10,52,8,"delete"],[57,16,52,14,"delete"],[57,17,52,15,"id"],[57,19,52,17],[57,21,52,19],[58,6,53,4],[58,12,53,10],[59,8,53,12,"error"],[60,6,53,18],[60,7,53,19],[60,10,53,22],[60,16,53,28,"supabase"],[60,34,53,36],[60,35,54,7,"from"],[60,39,54,11],[60,40,54,12],[60,48,54,20],[60,49,54,21],[60,50,55,7,"delete"],[60,56,55,13],[60,57,55,14],[60,58,55,15],[60,59,56,7,"eq"],[60,61,56,9],[60,62,56,10],[60,66,56,14],[60,68,56,16,"id"],[60,70,56,18],[60,71,56,19],[61,6,58,4],[61,10,58,8,"error"],[61,15,58,13],[61,17,58,15],[61,23,58,21,"error"],[61,28,58,26],[62,6,59,4],[62,13,59,11],[63,8,59,13,"success"],[63,15,59,20],[63,17,59,22],[64,6,59,27],[64,7,59,28],[65,4,60,2],[65,5,60,3],[66,4,62,2],[67,4,63,2],[67,10,63,8,"getById"],[67,17,63,15,"getById"],[67,18,63,16,"id"],[67,20,63,18],[67,22,63,20],[68,6,64,4],[68,12,64,10],[69,8,64,12,"data"],[69,12,64,16],[69,14,64,18,"habit"],[69,19,64,23],[70,8,64,25,"error"],[71,6,64,31],[71,7,64,32],[71,10,64,35],[71,16,64,41,"supabase"],[71,34,64,49],[71,35,65,7,"from"],[71,39,65,11],[71,40,65,12],[71,48,65,20],[71,49,65,21],[71,50,66,7,"select"],[71,56,66,13],[71,57,66,14],[71,60,66,17],[71,61,66,18],[71,62,67,7,"eq"],[71,64,67,9],[71,65,67,10],[71,69,67,14],[71,71,67,16,"id"],[71,73,67,18],[71,74,67,19],[71,75,68,7,"single"],[71,81,68,13],[71,82,68,14],[71,83,68,15],[72,6,70,4],[72,10,70,8,"error"],[72,15,70,13],[72,17,70,15],[72,23,70,21,"error"],[72,28,70,26],[73,6,71,4],[73,13,71,11],[74,8,71,13,"habit"],[75,6,71,19],[75,7,71,20],[76,4,72,2],[76,5,72,3],[77,4,74,2],[78,4,75,2],[78,10,75,8,"updateStreaks"],[78,23,75,21,"updateStreaks"],[78,24,75,22,"habitId"],[78,31,75,29],[78,33,75,31,"completed"],[78,42,75,40],[78,44,75,42],[79,6,76,4],[79,12,76,10],[80,8,76,12,"data"],[80,12,76,16],[80,14,76,18,"habit"],[80,19,76,23],[81,8,76,25,"error"],[81,13,76,30],[81,15,76,32,"fetchError"],[82,6,76,43],[82,7,76,44],[82,10,76,47],[82,16,76,53,"supabase"],[82,34,76,61],[82,35,77,7,"from"],[82,39,77,11],[82,40,77,12],[82,48,77,20],[82,49,77,21],[82,50,78,7,"select"],[82,56,78,13],[82,57,78,14],[82,126,78,83],[82,127,78,84],[82,128,79,7,"eq"],[82,130,79,9],[82,131,79,10],[82,135,79,14],[82,137,79,16,"habitId"],[82,144,79,23],[82,145,79,24],[82,146,80,7,"single"],[82,152,80,13],[82,153,80,14],[82,154,80,15],[83,6,82,4],[83,10,82,8,"fetchError"],[83,20,82,18],[83,22,82,20],[83,28,82,26,"fetchError"],[83,38,82,36],[84,6,84,4],[84,12,84,10,"updates"],[84,19,84,17],[84,22,84,20],[85,8,84,22],[85,11,84,25,"habit"],[86,6,84,31],[86,7,84,32],[87,6,86,4],[87,10,86,8,"completed"],[87,19,86,17],[87,21,86,19],[88,8,87,6,"updates"],[88,15,87,13],[88,16,87,14,"current_streak"],[88,30,87,28],[88,34,87,32],[88,35,87,33],[89,8,88,6,"updates"],[89,15,88,13],[89,16,88,14,"best_streak"],[89,27,88,25],[89,30,88,28,"Math"],[89,34,88,32],[89,35,88,33,"max"],[89,38,88,36],[89,39,88,37,"updates"],[89,46,88,44],[89,47,88,45,"best_streak"],[89,58,88,56],[89,60,88,58,"updates"],[89,67,88,65],[89,68,88,66,"current_streak"],[89,82,88,80],[89,83,88,81],[90,8,89,6,"updates"],[90,15,89,13],[90,16,89,14,"total_completions"],[90,33,89,31],[90,37,89,35],[90,38,89,36],[92,8,91,6],[93,8,92,6],[93,14,92,12,"today"],[93,19,92,17],[93,22,92,20],[93,26,92,24,"Date"],[93,30,92,28],[93,31,92,29],[93,32,92,30],[93,33,92,31,"getDay"],[93,39,92,37],[93,40,92,38],[93,41,92,39],[94,8,93,6],[94,14,93,12,"weekStart"],[94,23,93,21],[94,26,93,24],[94,30,93,28,"Date"],[94,34,93,32],[94,35,93,33],[94,36,93,34],[95,8,94,6,"weekStart"],[95,17,94,15],[95,18,94,16,"setDate"],[95,25,94,23],[95,26,94,24,"weekStart"],[95,35,94,33],[95,36,94,34,"getDate"],[95,43,94,41],[95,44,94,42],[95,45,94,43],[95,48,94,46,"today"],[95,53,94,51],[95,54,94,52],[96,8,95,6,"updates"],[96,15,95,13],[96,16,95,14,"completed_this_week"],[96,35,95,33],[96,39,95,37],[96,40,95,38],[97,6,96,4],[97,7,96,5],[97,13,96,11],[98,8,97,6,"updates"],[98,15,97,13],[98,16,97,14,"current_streak"],[98,30,97,28],[98,33,97,31],[98,34,97,32],[99,6,98,4],[100,6,100,4],[100,12,100,10],[101,8,100,12,"data"],[101,12,100,16],[101,14,100,18,"updatedHabit"],[101,26,100,30],[102,8,100,32,"error"],[103,6,100,38],[103,7,100,39],[103,10,100,42],[103,16,100,48,"supabase"],[103,34,100,56],[103,35,101,7,"from"],[103,39,101,11],[103,40,101,12],[103,48,101,20],[103,49,101,21],[103,50,102,7,"update"],[103,56,102,13],[103,57,102,14,"updates"],[103,64,102,21],[103,65,102,22],[103,66,103,7,"eq"],[103,68,103,9],[103,69,103,10],[103,73,103,14],[103,75,103,16,"habitId"],[103,82,103,23],[103,83,103,24],[103,84,104,7,"select"],[103,90,104,13],[103,91,104,14],[103,92,104,15],[103,93,105,7,"single"],[103,99,105,13],[103,100,105,14],[103,101,105,15],[104,6,107,4],[104,10,107,8,"error"],[104,15,107,13],[104,17,107,15],[104,23,107,21,"error"],[104,28,107,26],[105,6,108,4],[105,13,108,11],[106,8,108,13,"habit"],[106,13,108,18],[106,15,108,20,"updatedHabit"],[107,6,108,33],[107,7,108,34],[108,4,109,2],[109,2,110,0],[109,3,110,1],[111,2,112,0],[113,2,114,7],[113,8,114,13,"progressService"],[113,23,114,28],[113,26,114,28,"exports"],[113,33,114,28],[113,34,114,28,"progressService"],[113,49,114,28],[113,52,114,31],[114,4,115,2],[115,4,116,2],[115,10,116,8,"getByDate"],[115,19,116,17,"getByDate"],[115,20,116,18,"date"],[115,24,116,22],[115,26,116,24],[116,6,117,4],[117,6,118,4],[118,6,119,4],[118,12,119,10,"userId"],[118,18,119,16],[118,21,119,19],[118,35,119,33],[119,6,121,4],[119,12,121,10],[120,8,121,12,"data"],[120,12,121,16],[120,14,121,18,"progress"],[120,22,121,26],[121,8,121,28,"error"],[122,6,121,34],[122,7,121,35],[122,10,121,38],[122,16,121,44,"supabase"],[122,34,121,52],[122,35,122,7,"from"],[122,39,122,11],[122,40,122,12],[122,50,122,22],[122,51,122,23],[122,52,123,7,"select"],[122,58,123,13],[122,59,123,14],[123,0,124,0],[124,0,125,0],[125,0,126,0],[126,0,127,0],[127,0,128,0],[128,0,129,0],[129,0,130,0],[130,0,131,0],[130,7,131,7],[130,8,131,8],[130,9,132,7,"eq"],[130,11,132,9],[130,12,132,10],[130,29,132,27],[130,31,132,29,"date"],[130,35,132,33],[130,36,132,34],[130,37,133,7,"eq"],[130,39,133,9],[130,40,133,10],[130,49,133,19],[130,51,133,21,"userId"],[130,57,133,27],[130,58,133,28],[131,6,135,4],[131,10,135,8,"error"],[131,15,135,13],[131,17,135,15],[131,23,135,21,"error"],[131,28,135,26],[133,6,137,4],[134,6,138,4],[134,12,138,10],[135,8,138,12,"data"],[135,12,138,16],[135,14,138,18,"allHabits"],[135,23,138,27],[136,8,138,29,"error"],[136,13,138,34],[136,15,138,36,"habitsError"],[137,6,138,48],[137,7,138,49],[137,10,138,52],[137,16,138,58,"supabase"],[137,34,138,66],[137,35,139,7,"from"],[137,39,139,11],[137,40,139,12],[137,48,139,20],[137,49,139,21],[137,50,140,7,"select"],[137,56,140,13],[137,57,140,14],[137,89,140,46],[137,90,140,47],[137,91,141,7,"eq"],[137,93,141,9],[137,94,141,10],[137,103,141,19],[137,105,141,21,"userId"],[137,111,141,27],[137,112,141,28],[138,6,143,4],[138,10,143,8,"habitsError"],[138,21,143,19],[138,23,143,21],[138,29,143,27,"habitsError"],[138,40,143,38],[140,6,145,4],[141,6,146,4],[141,12,146,10,"progressData"],[141,24,146,22],[141,27,146,25,"allHabits"],[141,36,146,34],[141,37,146,35,"map"],[141,40,146,38],[141,41,146,39,"habit"],[141,46,146,44],[141,50,146,48],[142,8,147,6],[142,14,147,12,"dayProgress"],[142,25,147,23],[142,28,147,26,"progress"],[142,36,147,34],[142,37,147,35,"find"],[142,41,147,39],[142,42,147,40,"p"],[142,43,147,41],[142,47,147,45,"p"],[142,48,147,46],[142,49,147,47,"habit_id"],[142,57,147,55],[142,62,147,60,"habit"],[142,67,147,65],[142,68,147,66,"id"],[142,70,147,68],[142,71,147,69],[143,8,148,6],[143,15,148,13],[144,10,149,8,"habit_id"],[144,18,149,16],[144,20,149,18,"habit"],[144,25,149,23],[144,26,149,24,"id"],[144,28,149,26],[145,10,150,8,"name"],[145,14,150,12],[145,16,150,14,"habit"],[145,21,150,19],[145,22,150,20,"name"],[145,26,150,24],[146,10,151,8,"icon"],[146,14,151,12],[146,16,151,14,"habit"],[146,21,151,19],[146,22,151,20,"icon"],[146,26,151,24],[147,10,152,8,"completed"],[147,19,152,17],[147,21,152,19,"dayProgress"],[147,32,152,30],[147,34,152,32,"completed"],[147,43,152,41],[147,47,152,45],[147,52,152,50],[148,10,153,8,"note"],[148,14,153,12],[148,16,153,14,"dayProgress"],[148,27,153,25],[148,29,153,27,"note"],[148,33,153,31],[148,37,153,35],[148,39,153,37],[149,10,154,8,"streak"],[149,16,154,14],[149,18,154,16,"habit"],[149,23,154,21],[149,24,154,22,"current_streak"],[150,8,155,6],[150,9,155,7],[151,6,156,4],[151,7,156,5],[151,8,156,6],[152,6,158,4],[152,13,158,11],[153,8,158,13,"progress"],[153,16,158,21],[153,18,158,23,"progressData"],[154,6,158,36],[154,7,158,37],[155,4,159,2],[155,5,159,3],[156,4,161,2],[157,4,162,2],[157,10,162,8,"update"],[157,16,162,14,"update"],[157,17,162,15,"habitId"],[157,24,162,22],[157,26,162,24,"date"],[157,30,162,28],[157,32,162,30,"completed"],[157,41,162,39],[157,43,162,41,"note"],[157,47,162,45],[157,50,162,48],[157,52,162,50],[157,54,162,52],[158,6,163,4],[159,6,164,4],[160,6,165,4],[160,12,165,10,"userId"],[160,18,165,16],[160,21,165,19],[160,35,165,33],[162,6,167,4],[163,6,168,4],[163,12,168,10],[164,8,168,12,"data"],[164,12,168,16],[164,14,168,18,"existingProgress"],[165,6,168,35],[165,7,168,36],[165,10,168,39],[165,16,168,45,"supabase"],[165,34,168,53],[165,35,169,7,"from"],[165,39,169,11],[165,40,169,12],[165,50,169,22],[165,51,169,23],[165,52,170,7,"select"],[165,58,170,13],[165,59,170,14],[165,62,170,17],[165,63,170,18],[165,64,171,7,"eq"],[165,66,171,9],[165,67,171,10],[165,77,171,20],[165,79,171,22,"habitId"],[165,86,171,29],[165,87,171,30],[165,88,172,7,"eq"],[165,90,172,9],[165,91,172,10],[165,108,172,27],[165,110,172,29,"date"],[165,114,172,33],[165,115,172,34],[165,116,173,7,"eq"],[165,118,173,9],[165,119,173,10],[165,128,173,19],[165,130,173,21,"userId"],[165,136,173,27],[165,137,173,28],[165,138,174,7,"single"],[165,144,174,13],[165,145,174,14],[165,146,174,15],[166,6,176,4],[166,10,176,8,"result"],[166,16,176,14],[167,6,177,4],[167,10,177,8,"existingProgress"],[167,26,177,24],[167,28,177,26],[168,8,178,6],[169,8,179,6],[169,14,179,12],[170,10,179,14,"data"],[170,14,179,18],[171,10,179,20,"error"],[172,8,179,26],[172,9,179,27],[172,12,179,30],[172,18,179,36,"supabase"],[172,36,179,44],[172,37,180,9,"from"],[172,41,180,13],[172,42,180,14],[172,52,180,24],[172,53,180,25],[172,54,181,9,"update"],[172,60,181,15],[172,61,181,16],[173,10,181,18,"completed"],[173,19,181,27],[174,10,181,29,"note"],[175,8,181,34],[175,9,181,35],[175,10,181,36],[175,11,182,9,"eq"],[175,13,182,11],[175,14,182,12],[175,18,182,16],[175,20,182,18,"existingProgress"],[175,36,182,34],[175,37,182,35,"id"],[175,39,182,37],[175,40,182,38],[175,41,183,9,"select"],[175,47,183,15],[175,48,183,16],[175,49,183,17],[175,50,184,9,"single"],[175,56,184,15],[175,57,184,16],[175,58,184,17],[176,8,186,6],[176,12,186,10,"error"],[176,17,186,15],[176,19,186,17],[176,25,186,23,"error"],[176,30,186,28],[177,8,187,6,"result"],[177,14,187,12],[177,17,187,15,"data"],[177,21,187,19],[178,6,188,4],[178,7,188,5],[178,13,188,11],[179,8,189,6],[180,8,190,6],[180,14,190,12],[181,10,190,14,"data"],[181,14,190,18],[182,10,190,20,"error"],[183,8,190,26],[183,9,190,27],[183,12,190,30],[183,18,190,36,"supabase"],[183,36,190,44],[183,37,191,9,"from"],[183,41,191,13],[183,42,191,14],[183,52,191,24],[183,53,191,25],[183,54,192,9,"insert"],[183,60,192,15],[183,61,192,16],[183,62,192,17],[184,10,193,10,"habit_id"],[184,18,193,18],[184,20,193,20,"habitId"],[184,27,193,27],[185,10,194,10,"completion_date"],[185,25,194,25],[185,27,194,27,"date"],[185,31,194,31],[186,10,195,10,"completed"],[186,19,195,19],[187,10,196,10,"note"],[187,14,196,14],[188,10,197,10,"user_id"],[188,17,197,17],[188,19,197,19,"userId"],[189,8,198,8],[189,9,198,9],[189,10,198,10],[189,11,198,11],[189,12,199,9,"select"],[189,18,199,15],[189,19,199,16],[189,20,199,17],[189,21,200,9,"single"],[189,27,200,15],[189,28,200,16],[189,29,200,17],[190,8,202,6],[190,12,202,10,"error"],[190,17,202,15],[190,19,202,17],[190,25,202,23,"error"],[190,30,202,28],[191,8,203,6,"result"],[191,14,203,12],[191,17,203,15,"data"],[191,21,203,19],[192,6,204,4],[194,6,206,4],[195,6,207,4],[195,12,207,10,"habitsService"],[195,25,207,23],[195,26,207,24,"updateStreaks"],[195,39,207,37],[195,40,207,38,"habitId"],[195,47,207,45],[195,49,207,47,"completed"],[195,58,207,56],[195,59,207,57],[196,6,209,4],[196,13,209,11],[197,8,209,13,"success"],[197,15,209,20],[197,17,209,22],[197,21,209,26],[198,8,209,28,"progress"],[198,16,209,36],[198,18,209,38,"result"],[199,6,209,45],[199,7,209,46],[200,4,210,2],[200,5,210,3],[201,4,212,2],[202,4,213,2],[202,10,213,8,"getByHabitAndDateRange"],[202,32,213,30,"getByHabitAndDateRange"],[202,33,213,31,"habitId"],[202,40,213,38],[202,42,213,40,"startDate"],[202,51,213,49],[202,53,213,51,"endDate"],[202,60,213,58],[202,62,213,60],[203,6,214,4],[204,6,215,4],[204,12,215,10,"userId"],[204,18,215,16],[204,21,215,19],[204,35,215,33],[205,6,217,4],[205,12,217,10],[206,8,217,12,"data"],[206,12,217,16],[206,14,217,18,"progress"],[206,22,217,26],[207,8,217,28,"error"],[208,6,217,34],[208,7,217,35],[208,10,217,38],[208,16,217,44,"supabase"],[208,34,217,52],[208,35,218,7,"from"],[208,39,218,11],[208,40,218,12],[208,50,218,22],[208,51,218,23],[208,52,219,7,"select"],[208,58,219,13],[208,59,219,14],[208,62,219,17],[208,63,219,18],[208,64,220,7,"eq"],[208,66,220,9],[208,67,220,10],[208,77,220,20],[208,79,220,22,"habitId"],[208,86,220,29],[208,87,220,30],[208,88,221,7,"eq"],[208,90,221,9],[208,91,221,10],[208,100,221,19],[208,102,221,21,"userId"],[208,108,221,27],[208,109,221,28],[208,110,222,7,"gte"],[208,113,222,10],[208,114,222,11],[208,131,222,28],[208,133,222,30,"startDate"],[208,142,222,39],[208,143,222,40],[208,144,223,7,"lte"],[208,147,223,10],[208,148,223,11],[208,165,223,28],[208,167,223,30,"endDate"],[208,174,223,37],[208,175,223,38],[209,6,225,4],[209,10,225,8,"error"],[209,15,225,13],[209,17,225,15],[209,23,225,21,"error"],[209,28,225,26],[211,6,227,4],[212,6,228,4],[212,12,228,10,"progressByDate"],[212,26,228,24],[212,29,228,27],[212,30,228,28],[212,31,228,29],[213,6,229,4,"progress"],[213,14,229,12],[213,15,229,13,"forEach"],[213,22,229,20],[213,23,229,21,"p"],[213,24,229,22],[213,28,229,26],[214,8,230,6,"progressByDate"],[214,22,230,20],[214,23,230,21,"p"],[214,24,230,22],[214,25,230,23,"completion_date"],[214,40,230,38],[214,41,230,39],[214,44,230,42,"p"],[214,45,230,43],[215,6,231,4],[215,7,231,5],[215,8,231,6],[216,6,233,4],[216,13,233,11],[217,8,233,13,"progress"],[217,16,233,21],[217,18,233,23,"progressByDate"],[218,6,233,38],[218,7,233,39],[219,4,234,2],[220,2,235,0],[220,3,235,1],[222,2,237,0],[224,2,239,7],[224,8,239,13,"calendarService"],[224,23,239,28],[224,26,239,28,"exports"],[224,33,239,28],[224,34,239,28,"calendarService"],[224,49,239,28],[224,52,239,31],[225,4,240,2],[226,4,241,2],[226,10,241,8,"getMonthData"],[226,22,241,20,"getMonthData"],[226,23,241,21,"year"],[226,27,241,25],[226,29,241,27,"month"],[226,34,241,32],[226,36,241,34],[227,6,242,4],[228,6,243,4],[228,12,243,10,"userId"],[228,18,243,16],[228,21,243,19],[228,35,243,33],[230,6,245,4],[231,6,246,4],[231,12,246,10,"startDate"],[231,21,246,19],[231,24,246,22],[231,27,246,25,"year"],[231,31,246,29],[231,35,246,33,"String"],[231,41,246,39],[231,42,246,40,"month"],[231,47,246,45],[231,48,246,46],[231,49,246,47,"padStart"],[231,57,246,55],[231,58,246,56],[231,59,246,57],[231,61,246,59],[231,64,246,62],[231,65,246,63],[231,70,246,68],[232,6,247,4],[232,12,247,10,"endDate"],[232,19,247,17],[232,22,247,20],[232,25,247,23,"year"],[232,29,247,27],[232,33,247,31,"String"],[232,39,247,37],[232,40,247,38,"month"],[232,45,247,43],[232,46,247,44],[232,47,247,45,"padStart"],[232,55,247,53],[232,56,247,54],[232,57,247,55],[232,59,247,57],[232,62,247,60],[232,63,247,61],[232,67,247,65],[232,71,247,69,"Date"],[232,75,247,73],[232,76,247,74,"year"],[232,80,247,78],[232,82,247,80,"month"],[232,87,247,85],[232,89,247,87],[232,90,247,88],[232,91,247,89],[232,92,247,90,"getDate"],[232,99,247,97],[232,100,247,98],[232,101,247,99],[232,103,247,101],[234,6,249,4],[235,6,250,4],[235,12,250,10],[236,8,250,12,"data"],[236,12,250,16],[236,14,250,18,"progress"],[236,22,250,26],[237,8,250,28,"error"],[238,6,250,34],[238,7,250,35],[238,10,250,38],[238,16,250,44,"supabase"],[238,34,250,52],[238,35,251,7,"from"],[238,39,251,11],[238,40,251,12],[238,50,251,22],[238,51,251,23],[238,52,252,7,"select"],[238,58,252,13],[238,59,252,14],[238,87,252,42],[238,88,252,43],[238,89,253,7,"eq"],[238,91,253,9],[238,92,253,10],[238,101,253,19],[238,103,253,21,"userId"],[238,109,253,27],[238,110,253,28],[238,111,254,7,"gte"],[238,114,254,10],[238,115,254,11],[238,132,254,28],[238,134,254,30,"startDate"],[238,143,254,39],[238,144,254,40],[238,145,255,7,"lte"],[238,148,255,10],[238,149,255,11],[238,166,255,28],[238,168,255,30,"endDate"],[238,175,255,37],[238,176,255,38],[239,6,257,4],[239,10,257,8,"error"],[239,15,257,13],[239,17,257,15],[239,23,257,21,"error"],[239,28,257,26],[241,6,259,4],[242,6,260,4],[242,12,260,10,"daysInMonth"],[242,23,260,21],[242,26,260,24],[242,30,260,28,"Date"],[242,34,260,32],[242,35,260,33,"year"],[242,39,260,37],[242,41,260,39,"month"],[242,46,260,44],[242,48,260,46],[242,49,260,47],[242,50,260,48],[242,51,260,49,"getDate"],[242,58,260,56],[242,59,260,57],[242,60,260,58],[243,6,261,4],[243,12,261,10,"firstDay"],[243,20,261,18],[243,23,261,21],[243,27,261,25,"Date"],[243,31,261,29],[243,32,261,30,"year"],[243,36,261,34],[243,38,261,36,"month"],[243,43,261,41],[243,46,261,44],[243,47,261,45],[243,49,261,47],[243,50,261,48],[243,51,261,49],[243,52,261,50,"getDay"],[243,58,261,56],[243,59,261,57],[243,60,261,58],[244,6,262,4],[244,12,262,10,"today"],[244,17,262,15],[244,20,262,18],[244,24,262,22,"Date"],[244,28,262,26],[244,29,262,27],[244,30,262,28],[245,6,264,4],[245,12,264,10,"calendarData"],[245,24,264,22],[245,27,264,25],[245,29,264,27],[247,6,266,4],[248,6,267,4],[248,11,267,9],[248,15,267,13,"i"],[248,16,267,14],[248,19,267,17],[248,20,267,18],[248,22,267,20,"i"],[248,23,267,21],[248,26,267,24,"firstDay"],[248,34,267,32],[248,36,267,34,"i"],[248,37,267,35],[248,39,267,37],[248,41,267,39],[249,8,268,6,"calendarData"],[249,20,268,18],[249,21,268,19,"push"],[249,25,268,23],[249,26,268,24],[249,30,268,28],[249,31,268,29],[250,6,269,4],[252,6,271,4],[253,6,272,4],[253,11,272,9],[253,15,272,13,"day"],[253,18,272,16],[253,21,272,19],[253,22,272,20],[253,24,272,22,"day"],[253,27,272,25],[253,31,272,29,"daysInMonth"],[253,42,272,40],[253,44,272,42,"day"],[253,47,272,45],[253,49,272,47],[253,51,272,49],[254,8,273,6],[254,14,273,12,"dateStr"],[254,21,273,19],[254,24,273,22],[254,27,273,25,"year"],[254,31,273,29],[254,35,273,33,"String"],[254,41,273,39],[254,42,273,40,"month"],[254,47,273,45],[254,48,273,46],[254,49,273,47,"padStart"],[254,57,273,55],[254,58,273,56],[254,59,273,57],[254,61,273,59],[254,64,273,62],[254,65,273,63],[254,69,273,67,"String"],[254,75,273,73],[254,76,273,74,"day"],[254,79,273,77],[254,80,273,78],[254,81,273,79,"padStart"],[254,89,273,87],[254,90,273,88],[254,91,273,89],[254,93,273,91],[254,96,273,94],[254,97,273,95],[254,99,273,97],[255,8,274,6],[255,14,274,12,"dayProgress"],[255,25,274,23],[255,28,274,26,"progress"],[255,36,274,34],[255,37,274,35,"filter"],[255,43,274,41],[255,44,274,42,"p"],[255,45,274,43],[255,49,274,47,"p"],[255,50,274,48],[255,51,274,49,"completion_date"],[255,66,274,64],[255,71,274,69,"dateStr"],[255,78,274,76],[255,82,274,80,"p"],[255,83,274,81],[255,84,274,82,"completed"],[255,93,274,91],[255,94,274,92],[256,8,275,6],[256,14,275,12,"isToday"],[256,21,275,19],[256,24,275,22,"day"],[256,27,275,25],[256,32,275,30,"today"],[256,37,275,35],[256,38,275,36,"getDate"],[256,45,275,43],[256,46,275,44],[256,47,275,45],[256,51,276,21,"month"],[256,56,276,26],[256,61,276,31,"today"],[256,66,276,36],[256,67,276,37,"getMonth"],[256,75,276,45],[256,76,276,46],[256,77,276,47],[256,80,276,50],[256,81,276,51],[256,85,277,21,"year"],[256,89,277,25],[256,94,277,30,"today"],[256,99,277,35],[256,100,277,36,"getFullYear"],[256,111,277,47],[256,112,277,48],[256,113,277,49],[257,8,279,6,"calendarData"],[257,20,279,18],[257,21,279,19,"push"],[257,25,279,23],[257,26,279,24],[258,10,280,8,"day"],[258,13,280,11],[259,10,281,8,"completions"],[259,21,281,19],[259,23,281,21,"dayProgress"],[259,34,281,32],[259,35,281,33,"length"],[259,41,281,39],[260,10,282,8,"is_today"],[260,18,282,16],[260,20,282,18,"isToday"],[261,8,283,6],[261,9,283,7],[261,10,283,8],[262,6,284,4],[264,6,286,4],[265,6,287,4],[265,12,287,10,"activeDays"],[265,22,287,20],[265,25,287,23,"progress"],[265,33,287,31],[265,34,287,32,"filter"],[265,40,287,38],[265,41,287,39,"p"],[265,42,287,40],[265,46,287,44,"p"],[265,47,287,45],[265,48,287,46,"completed"],[265,57,287,55],[265,58,287,56],[265,59,287,57,"length"],[265,65,287,63],[266,6,288,4],[266,12,288,10,"totalCompletions"],[266,28,288,26],[266,31,288,29,"progress"],[266,39,288,37],[266,40,288,38,"filter"],[266,46,288,44],[266,47,288,45,"p"],[266,48,288,46],[266,52,288,50,"p"],[266,53,288,51],[266,54,288,52,"completed"],[266,63,288,61],[266,64,288,62],[266,65,288,63,"length"],[266,71,288,69],[267,6,290,4],[267,13,290,11],[268,8,291,6,"calendarData"],[268,20,291,18],[269,8,292,6,"stats"],[269,13,292,11],[269,15,292,13],[270,10,293,8,"active_days"],[270,21,293,19],[270,23,293,21,"activeDays"],[270,33,293,31],[271,10,294,8,"total_completions"],[271,27,294,25],[271,29,294,27,"totalCompletions"],[272,8,295,6],[273,6,296,4],[273,7,296,5],[274,4,297,2],[275,2,298,0],[275,3,298,1],[277,2,300,0],[279,2,302,7],[279,8,302,13,"authService"],[279,19,302,24],[279,22,302,24,"exports"],[279,29,302,24],[279,30,302,24,"authService"],[279,41,302,24],[279,44,302,27],[280,4,303,2],[281,4,304,2],[281,10,304,8,"getCurrentUser"],[281,24,304,22,"getCurrentUser"],[281,25,304,22],[281,27,304,25],[282,6,305,4],[282,12,305,10],[283,8,305,12,"data"],[283,12,305,16],[283,14,305,18],[284,10,305,20,"user"],[285,8,305,25],[286,6,305,27],[286,7,305,28],[286,10,305,31],[286,16,305,37,"supabase"],[286,34,305,45],[286,35,305,46,"auth"],[286,39,305,50],[286,40,305,51,"getUser"],[286,47,305,58],[286,48,305,59],[286,49,305,60],[287,6,306,4],[287,13,306,11,"user"],[287,17,306,15],[288,4,307,2],[288,5,307,3],[289,4,309,2],[290,4,310,2],[290,10,310,8,"signOut"],[290,17,310,15,"signOut"],[290,18,310,15],[290,20,310,18],[291,6,311,4],[291,12,311,10],[292,8,311,12,"error"],[293,6,311,18],[293,7,311,19],[293,10,311,22],[293,16,311,28,"supabase"],[293,34,311,36],[293,35,311,37,"auth"],[293,39,311,41],[293,40,311,42,"signOut"],[293,47,311,49],[293,48,311,50],[293,49,311,51],[294,6,312,4],[294,10,312,8,"error"],[294,15,312,13],[294,17,312,15],[294,23,312,21,"error"],[294,28,312,26],[295,4,313,2],[295,5,313,3],[296,4,315,2],[297,4,316,2,"onAuthStateChange"],[297,21,316,19,"onAuthStateChange"],[297,22,316,20,"callback"],[297,30,316,28],[297,32,316,30],[298,6,317,4],[298,13,317,11,"supabase"],[298,31,317,19],[298,32,317,20,"auth"],[298,36,317,24],[298,37,317,25,"onAuthStateChange"],[298,54,317,42],[298,55,317,43,"callback"],[298,63,317,51],[298,64,317,52],[299,4,318,2],[300,2,319,0],[300,3,319,1],[301,0,319,2],[301,3]],"functionMap":{"names":["<global>","habitsService.getAll","habitsService.create","habitsService.update","habitsService._delete","habitsService.getById","habitsService.updateStreaks","progressService.getByDate","allHabits.map$argument_0","progress.find$argument_0","progressService.update","progressService.getByHabitAndDateRange","progress.forEach$argument_0","calendarService.getMonthData","progress.filter$argument_0","authService.getCurrentUser","authService.signOut","authService.onAuthStateChange"],"mappings":"AAA;ECM;GDW;EEG;GFe;EGG;GHU;EIG;GJQ;EKG;GLS;EMG;GNkC;EOO;uCC8B;wCCC,4BD;KDS;GPG;EUG;GVgD;EWG;qBCgB;KDE;GXG;EaO;0CCiC,iDD;uCCa,gBD;6CCC,gBD;GbS;EeO;GfG;EgBG;GhBG;EiBG;GjBE"}},"type":"js/module"}]}