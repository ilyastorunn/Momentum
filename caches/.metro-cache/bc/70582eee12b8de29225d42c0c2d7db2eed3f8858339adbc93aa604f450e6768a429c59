{"dependencies":[{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":59,"index":59}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.progressService = exports.habitsService = exports.calendarService = exports.authService = void 0;\n  var _supabase = require(_dependencyMap[0], \"./supabase\");\n  // =================== HABITS SERVICES ===================\n\n  const habitsService = exports.habitsService = {\n    // Tüm alışkanlıkları getir\n    async getAll() {\n      if (!_supabase.hasValidCredentials) {\n        throw new Error('Supabase credentials not configured. Please set EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY in your environment variables.');\n      }\n      const {\n        data: habits,\n        error\n      } = await _supabase.supabase.from('habits').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      return {\n        habits\n      };\n    },\n    // Yeni alışkanlık oluştur\n    async create(habitData) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').insert([{\n        ...habitData,\n        user_id: user.id\n      }]).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık güncelle\n    async update(id, updates) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', id).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık sil\n    async delete(id) {\n      const {\n        error\n      } = await _supabase.supabase.from('habits').delete().eq('id', id);\n      if (error) throw error;\n      return {\n        success: true\n      };\n    },\n    // Tek alışkanlık detayını getir\n    async getById(id) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').select('*').eq('id', id).single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Streak güncellemesi\n    async updateStreaks(habitId, completed) {\n      const {\n        data: habit,\n        error: fetchError\n      } = await _supabase.supabase.from('habits').select('current_streak, best_streak, completed_this_week, total_completions').eq('id', habitId).single();\n      if (fetchError) throw fetchError;\n      const updates = {\n        ...habit\n      };\n      if (completed) {\n        updates.current_streak += 1;\n        updates.best_streak = Math.max(updates.best_streak, updates.current_streak);\n        updates.total_completions += 1;\n\n        // Haftalık sayı güncellemesi (basit implementasyon)\n        const today = new Date().getDay();\n        const weekStart = new Date();\n        weekStart.setDate(weekStart.getDate() - today);\n        updates.completed_this_week += 1;\n      } else {\n        updates.current_streak = 0;\n      }\n      const {\n        data: updatedHabit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', habitId).select().single();\n      if (error) throw error;\n      return {\n        habit: updatedHabit\n      };\n    }\n  };\n\n  // =================== PROGRESS SERVICES ===================\n\n  const progressService = exports.progressService = {\n    // Belirli tarih için progress getir\n    async getByDate(date) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select(`\n        *,\n        habits (\n          id,\n          name,\n          icon,\n          current_streak\n        )\n      `).eq('completion_date', date).eq('user_id', user.id);\n      if (error) throw error;\n\n      // Tüm alışkanlıkları getir ve progress ile birleştir\n      const {\n        data: allHabits,\n        error: habitsError\n      } = await _supabase.supabase.from('habits').select('id, name, icon, current_streak').eq('user_id', user.id);\n      if (habitsError) throw habitsError;\n\n      // Her alışkanlık için progress durumunu oluştur\n      const progressData = allHabits.map(habit => {\n        const dayProgress = progress.find(p => p.habit_id === habit.id);\n        return {\n          habit_id: habit.id,\n          name: habit.name,\n          icon: habit.icon,\n          completed: dayProgress?.completed || false,\n          note: dayProgress?.note || '',\n          streak: habit.current_streak\n        };\n      });\n      return {\n        progress: progressData\n      };\n    },\n    // Progress güncelle\n    async update(habitId, date, completed, note = '') {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Önce mevcut progress'i kontrol et\n      const {\n        data: existingProgress\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('completion_date', date).eq('user_id', user.id).single();\n      let result;\n      if (existingProgress) {\n        // Güncelle\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').update({\n          completed,\n          note\n        }).eq('id', existingProgress.id).select().single();\n        if (error) throw error;\n        result = data;\n      } else {\n        // Yeni kayıt oluştur\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').insert([{\n          habit_id: habitId,\n          completion_date: date,\n          completed,\n          note,\n          user_id: user.id\n        }]).select().single();\n        if (error) throw error;\n        result = data;\n      }\n\n      // Habit streak'lerini güncelle\n      await habitsService.updateStreaks(habitId, completed);\n      return {\n        success: true,\n        progress: result\n      };\n    },\n    // Belirli habit ve tarih aralığı için progress getir\n    async getByHabitAndDateRange(habitId, startDate, endDate) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('user_id', user.id).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Date string'leri key olarak kullanarak object'e çevir\n      const progressByDate = {};\n      progress.forEach(p => {\n        progressByDate[p.completion_date] = p;\n      });\n      return {\n        progress: progressByDate\n      };\n    }\n  };\n\n  // =================== CALENDAR/STATS SERVICES ===================\n\n  const calendarService = exports.calendarService = {\n    // Belirli ay için calendar data getir\n    async getMonthData(year, month) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Ay başı ve sonu tarihleri\n      const startDate = `${year}-${String(month).padStart(2, '0')}-01`;\n      const endDate = `${year}-${String(month).padStart(2, '0')}-${new Date(year, month, 0).getDate()}`;\n\n      // Progress verilerini getir\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('completion_date, completed').eq('user_id', user.id).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Calendar grid için data hazırla\n      const daysInMonth = new Date(year, month, 0).getDate();\n      const firstDay = new Date(year, month - 1, 1).getDay();\n      const today = new Date();\n      const calendarData = [];\n\n      // Boş günler\n      for (let i = 0; i < firstDay; i++) {\n        calendarData.push(null);\n      }\n\n      // Ay günleri\n      for (let day = 1; day <= daysInMonth; day++) {\n        const dateStr = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n        const dayProgress = progress.filter(p => p.completion_date === dateStr && p.completed);\n        const isToday = day === today.getDate() && month === today.getMonth() + 1 && year === today.getFullYear();\n        calendarData.push({\n          day,\n          completions: dayProgress.length,\n          is_today: isToday\n        });\n      }\n\n      // İstatistikler\n      const activeDays = progress.filter(p => p.completed).length;\n      const totalCompletions = progress.filter(p => p.completed).length;\n      return {\n        calendarData,\n        stats: {\n          active_days: activeDays,\n          total_completions: totalCompletions\n        }\n      };\n    }\n  };\n\n  // =================== AUTH HELPERS ===================\n\n  const authService = exports.authService = {\n    // Mevcut kullanıcıyı getir\n    async getCurrentUser() {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      return user;\n    },\n    // Çıkış yap\n    async signOut() {\n      const {\n        error\n      } = await _supabase.supabase.auth.signOut();\n      if (error) throw error;\n    },\n    // Authentication state değişikliklerini dinle\n    onAuthStateChange(callback) {\n      return _supabase.supabase.auth.onAuthStateChange(callback);\n    }\n  };\n});","lineCount":316,"map":[[6,2,1,0],[6,6,1,0,"_supabase"],[6,15,1,0],[6,18,1,0,"require"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,3,0],[9,2,5,7],[9,8,5,13,"habitsService"],[9,21,5,26],[9,24,5,26,"exports"],[9,31,5,26],[9,32,5,26,"habitsService"],[9,45,5,26],[9,48,5,29],[10,4,6,2],[11,4,7,2],[11,10,7,8,"getAll"],[11,16,7,14,"getAll"],[11,17,7,14],[11,19,7,17],[12,6,8,4],[12,10,8,8],[12,11,8,9,"hasValidCredentials"],[12,40,8,28],[12,42,8,30],[13,8,9,6],[13,14,9,12],[13,18,9,16,"Error"],[13,23,9,21],[13,24,9,22],[13,163,9,161],[13,164,9,162],[14,6,10,4],[15,6,12,4],[15,12,12,10],[16,8,12,12,"data"],[16,12,12,16],[16,14,12,18,"habits"],[16,20,12,24],[17,8,12,26,"error"],[18,6,12,32],[18,7,12,33],[18,10,12,36],[18,16,12,42,"supabase"],[18,34,12,50],[18,35,13,7,"from"],[18,39,13,11],[18,40,13,12],[18,48,13,20],[18,49,13,21],[18,50,14,7,"select"],[18,56,14,13],[18,57,14,14],[18,60,14,17],[18,61,14,18],[18,62,15,7,"order"],[18,67,15,12],[18,68,15,13],[18,80,15,25],[18,82,15,27],[19,8,15,29,"ascending"],[19,17,15,38],[19,19,15,40],[20,6,15,46],[20,7,15,47],[20,8,15,48],[21,6,17,4],[21,10,17,8,"error"],[21,15,17,13],[21,17,17,15],[21,23,17,21,"error"],[21,28,17,26],[22,6,18,4],[22,13,18,11],[23,8,18,13,"habits"],[24,6,18,20],[24,7,18,21],[25,4,19,2],[25,5,19,3],[26,4,21,2],[27,4,22,2],[27,10,22,8,"create"],[27,16,22,14,"create"],[27,17,22,15,"habitData"],[27,26,22,24],[27,28,22,26],[28,6,23,4],[28,12,23,10],[29,8,23,12,"data"],[29,12,23,16],[29,14,23,18],[30,10,23,20,"user"],[31,8,23,25],[32,6,23,27],[32,7,23,28],[32,10,23,31],[32,16,23,37,"supabase"],[32,34,23,45],[32,35,23,46,"auth"],[32,39,23,50],[32,40,23,51,"getUser"],[32,47,23,58],[32,48,23,59],[32,49,23,60],[33,6,24,4],[33,10,24,8],[33,11,24,9,"user"],[33,15,24,13],[33,17,24,15],[33,23,24,21],[33,27,24,25,"Error"],[33,32,24,30],[33,33,24,31],[33,57,24,55],[33,58,24,56],[34,6,26,4],[34,12,26,10],[35,8,26,12,"data"],[35,12,26,16],[35,14,26,18,"habit"],[35,19,26,23],[36,8,26,25,"error"],[37,6,26,31],[37,7,26,32],[37,10,26,35],[37,16,26,41,"supabase"],[37,34,26,49],[37,35,27,7,"from"],[37,39,27,11],[37,40,27,12],[37,48,27,20],[37,49,27,21],[37,50,28,7,"insert"],[37,56,28,13],[37,57,28,14],[37,58,28,15],[38,8,29,8],[38,11,29,11,"habitData"],[38,20,29,20],[39,8,30,8,"user_id"],[39,15,30,15],[39,17,30,17,"user"],[39,21,30,21],[39,22,30,22,"id"],[40,6,31,6],[40,7,31,7],[40,8,31,8],[40,9,31,9],[40,10,32,7,"select"],[40,16,32,13],[40,17,32,14],[40,18,32,15],[40,19,33,7,"single"],[40,25,33,13],[40,26,33,14],[40,27,33,15],[41,6,35,4],[41,10,35,8,"error"],[41,15,35,13],[41,17,35,15],[41,23,35,21,"error"],[41,28,35,26],[42,6,36,4],[42,13,36,11],[43,8,36,13,"habit"],[44,6,36,19],[44,7,36,20],[45,4,37,2],[45,5,37,3],[46,4,39,2],[47,4,40,2],[47,10,40,8,"update"],[47,16,40,14,"update"],[47,17,40,15,"id"],[47,19,40,17],[47,21,40,19,"updates"],[47,28,40,26],[47,30,40,28],[48,6,41,4],[48,12,41,10],[49,8,41,12,"data"],[49,12,41,16],[49,14,41,18,"habit"],[49,19,41,23],[50,8,41,25,"error"],[51,6,41,31],[51,7,41,32],[51,10,41,35],[51,16,41,41,"supabase"],[51,34,41,49],[51,35,42,7,"from"],[51,39,42,11],[51,40,42,12],[51,48,42,20],[51,49,42,21],[51,50,43,7,"update"],[51,56,43,13],[51,57,43,14,"updates"],[51,64,43,21],[51,65,43,22],[51,66,44,7,"eq"],[51,68,44,9],[51,69,44,10],[51,73,44,14],[51,75,44,16,"id"],[51,77,44,18],[51,78,44,19],[51,79,45,7,"select"],[51,85,45,13],[51,86,45,14],[51,87,45,15],[51,88,46,7,"single"],[51,94,46,13],[51,95,46,14],[51,96,46,15],[52,6,48,4],[52,10,48,8,"error"],[52,15,48,13],[52,17,48,15],[52,23,48,21,"error"],[52,28,48,26],[53,6,49,4],[53,13,49,11],[54,8,49,13,"habit"],[55,6,49,19],[55,7,49,20],[56,4,50,2],[56,5,50,3],[57,4,52,2],[58,4,53,2],[58,10,53,8,"delete"],[58,16,53,14,"delete"],[58,17,53,15,"id"],[58,19,53,17],[58,21,53,19],[59,6,54,4],[59,12,54,10],[60,8,54,12,"error"],[61,6,54,18],[61,7,54,19],[61,10,54,22],[61,16,54,28,"supabase"],[61,34,54,36],[61,35,55,7,"from"],[61,39,55,11],[61,40,55,12],[61,48,55,20],[61,49,55,21],[61,50,56,7,"delete"],[61,56,56,13],[61,57,56,14],[61,58,56,15],[61,59,57,7,"eq"],[61,61,57,9],[61,62,57,10],[61,66,57,14],[61,68,57,16,"id"],[61,70,57,18],[61,71,57,19],[62,6,59,4],[62,10,59,8,"error"],[62,15,59,13],[62,17,59,15],[62,23,59,21,"error"],[62,28,59,26],[63,6,60,4],[63,13,60,11],[64,8,60,13,"success"],[64,15,60,20],[64,17,60,22],[65,6,60,27],[65,7,60,28],[66,4,61,2],[66,5,61,3],[67,4,63,2],[68,4,64,2],[68,10,64,8,"getById"],[68,17,64,15,"getById"],[68,18,64,16,"id"],[68,20,64,18],[68,22,64,20],[69,6,65,4],[69,12,65,10],[70,8,65,12,"data"],[70,12,65,16],[70,14,65,18,"habit"],[70,19,65,23],[71,8,65,25,"error"],[72,6,65,31],[72,7,65,32],[72,10,65,35],[72,16,65,41,"supabase"],[72,34,65,49],[72,35,66,7,"from"],[72,39,66,11],[72,40,66,12],[72,48,66,20],[72,49,66,21],[72,50,67,7,"select"],[72,56,67,13],[72,57,67,14],[72,60,67,17],[72,61,67,18],[72,62,68,7,"eq"],[72,64,68,9],[72,65,68,10],[72,69,68,14],[72,71,68,16,"id"],[72,73,68,18],[72,74,68,19],[72,75,69,7,"single"],[72,81,69,13],[72,82,69,14],[72,83,69,15],[73,6,71,4],[73,10,71,8,"error"],[73,15,71,13],[73,17,71,15],[73,23,71,21,"error"],[73,28,71,26],[74,6,72,4],[74,13,72,11],[75,8,72,13,"habit"],[76,6,72,19],[76,7,72,20],[77,4,73,2],[77,5,73,3],[78,4,75,2],[79,4,76,2],[79,10,76,8,"updateStreaks"],[79,23,76,21,"updateStreaks"],[79,24,76,22,"habitId"],[79,31,76,29],[79,33,76,31,"completed"],[79,42,76,40],[79,44,76,42],[80,6,77,4],[80,12,77,10],[81,8,77,12,"data"],[81,12,77,16],[81,14,77,18,"habit"],[81,19,77,23],[82,8,77,25,"error"],[82,13,77,30],[82,15,77,32,"fetchError"],[83,6,77,43],[83,7,77,44],[83,10,77,47],[83,16,77,53,"supabase"],[83,34,77,61],[83,35,78,7,"from"],[83,39,78,11],[83,40,78,12],[83,48,78,20],[83,49,78,21],[83,50,79,7,"select"],[83,56,79,13],[83,57,79,14],[83,126,79,83],[83,127,79,84],[83,128,80,7,"eq"],[83,130,80,9],[83,131,80,10],[83,135,80,14],[83,137,80,16,"habitId"],[83,144,80,23],[83,145,80,24],[83,146,81,7,"single"],[83,152,81,13],[83,153,81,14],[83,154,81,15],[84,6,83,4],[84,10,83,8,"fetchError"],[84,20,83,18],[84,22,83,20],[84,28,83,26,"fetchError"],[84,38,83,36],[85,6,85,4],[85,12,85,10,"updates"],[85,19,85,17],[85,22,85,20],[86,8,85,22],[86,11,85,25,"habit"],[87,6,85,31],[87,7,85,32],[88,6,87,4],[88,10,87,8,"completed"],[88,19,87,17],[88,21,87,19],[89,8,88,6,"updates"],[89,15,88,13],[89,16,88,14,"current_streak"],[89,30,88,28],[89,34,88,32],[89,35,88,33],[90,8,89,6,"updates"],[90,15,89,13],[90,16,89,14,"best_streak"],[90,27,89,25],[90,30,89,28,"Math"],[90,34,89,32],[90,35,89,33,"max"],[90,38,89,36],[90,39,89,37,"updates"],[90,46,89,44],[90,47,89,45,"best_streak"],[90,58,89,56],[90,60,89,58,"updates"],[90,67,89,65],[90,68,89,66,"current_streak"],[90,82,89,80],[90,83,89,81],[91,8,90,6,"updates"],[91,15,90,13],[91,16,90,14,"total_completions"],[91,33,90,31],[91,37,90,35],[91,38,90,36],[93,8,92,6],[94,8,93,6],[94,14,93,12,"today"],[94,19,93,17],[94,22,93,20],[94,26,93,24,"Date"],[94,30,93,28],[94,31,93,29],[94,32,93,30],[94,33,93,31,"getDay"],[94,39,93,37],[94,40,93,38],[94,41,93,39],[95,8,94,6],[95,14,94,12,"weekStart"],[95,23,94,21],[95,26,94,24],[95,30,94,28,"Date"],[95,34,94,32],[95,35,94,33],[95,36,94,34],[96,8,95,6,"weekStart"],[96,17,95,15],[96,18,95,16,"setDate"],[96,25,95,23],[96,26,95,24,"weekStart"],[96,35,95,33],[96,36,95,34,"getDate"],[96,43,95,41],[96,44,95,42],[96,45,95,43],[96,48,95,46,"today"],[96,53,95,51],[96,54,95,52],[97,8,96,6,"updates"],[97,15,96,13],[97,16,96,14,"completed_this_week"],[97,35,96,33],[97,39,96,37],[97,40,96,38],[98,6,97,4],[98,7,97,5],[98,13,97,11],[99,8,98,6,"updates"],[99,15,98,13],[99,16,98,14,"current_streak"],[99,30,98,28],[99,33,98,31],[99,34,98,32],[100,6,99,4],[101,6,101,4],[101,12,101,10],[102,8,101,12,"data"],[102,12,101,16],[102,14,101,18,"updatedHabit"],[102,26,101,30],[103,8,101,32,"error"],[104,6,101,38],[104,7,101,39],[104,10,101,42],[104,16,101,48,"supabase"],[104,34,101,56],[104,35,102,7,"from"],[104,39,102,11],[104,40,102,12],[104,48,102,20],[104,49,102,21],[104,50,103,7,"update"],[104,56,103,13],[104,57,103,14,"updates"],[104,64,103,21],[104,65,103,22],[104,66,104,7,"eq"],[104,68,104,9],[104,69,104,10],[104,73,104,14],[104,75,104,16,"habitId"],[104,82,104,23],[104,83,104,24],[104,84,105,7,"select"],[104,90,105,13],[104,91,105,14],[104,92,105,15],[104,93,106,7,"single"],[104,99,106,13],[104,100,106,14],[104,101,106,15],[105,6,108,4],[105,10,108,8,"error"],[105,15,108,13],[105,17,108,15],[105,23,108,21,"error"],[105,28,108,26],[106,6,109,4],[106,13,109,11],[107,8,109,13,"habit"],[107,13,109,18],[107,15,109,20,"updatedHabit"],[108,6,109,33],[108,7,109,34],[109,4,110,2],[110,2,111,0],[110,3,111,1],[112,2,113,0],[114,2,115,7],[114,8,115,13,"progressService"],[114,23,115,28],[114,26,115,28,"exports"],[114,33,115,28],[114,34,115,28,"progressService"],[114,49,115,28],[114,52,115,31],[115,4,116,2],[116,4,117,2],[116,10,117,8,"getByDate"],[116,19,117,17,"getByDate"],[116,20,117,18,"date"],[116,24,117,22],[116,26,117,24],[117,6,118,4],[117,12,118,10],[118,8,118,12,"data"],[118,12,118,16],[118,14,118,18],[119,10,118,20,"user"],[120,8,118,25],[121,6,118,27],[121,7,118,28],[121,10,118,31],[121,16,118,37,"supabase"],[121,34,118,45],[121,35,118,46,"auth"],[121,39,118,50],[121,40,118,51,"getUser"],[121,47,118,58],[121,48,118,59],[121,49,118,60],[122,6,119,4],[122,10,119,8],[122,11,119,9,"user"],[122,15,119,13],[122,17,119,15],[122,23,119,21],[122,27,119,25,"Error"],[122,32,119,30],[122,33,119,31],[122,57,119,55],[122,58,119,56],[123,6,121,4],[123,12,121,10],[124,8,121,12,"data"],[124,12,121,16],[124,14,121,18,"progress"],[124,22,121,26],[125,8,121,28,"error"],[126,6,121,34],[126,7,121,35],[126,10,121,38],[126,16,121,44,"supabase"],[126,34,121,52],[126,35,122,7,"from"],[126,39,122,11],[126,40,122,12],[126,50,122,22],[126,51,122,23],[126,52,123,7,"select"],[126,58,123,13],[126,59,123,14],[127,0,124,0],[128,0,125,0],[129,0,126,0],[130,0,127,0],[131,0,128,0],[132,0,129,0],[133,0,130,0],[134,0,131,0],[134,7,131,7],[134,8,131,8],[134,9,132,7,"eq"],[134,11,132,9],[134,12,132,10],[134,29,132,27],[134,31,132,29,"date"],[134,35,132,33],[134,36,132,34],[134,37,133,7,"eq"],[134,39,133,9],[134,40,133,10],[134,49,133,19],[134,51,133,21,"user"],[134,55,133,25],[134,56,133,26,"id"],[134,58,133,28],[134,59,133,29],[135,6,135,4],[135,10,135,8,"error"],[135,15,135,13],[135,17,135,15],[135,23,135,21,"error"],[135,28,135,26],[137,6,137,4],[138,6,138,4],[138,12,138,10],[139,8,138,12,"data"],[139,12,138,16],[139,14,138,18,"allHabits"],[139,23,138,27],[140,8,138,29,"error"],[140,13,138,34],[140,15,138,36,"habitsError"],[141,6,138,48],[141,7,138,49],[141,10,138,52],[141,16,138,58,"supabase"],[141,34,138,66],[141,35,139,7,"from"],[141,39,139,11],[141,40,139,12],[141,48,139,20],[141,49,139,21],[141,50,140,7,"select"],[141,56,140,13],[141,57,140,14],[141,89,140,46],[141,90,140,47],[141,91,141,7,"eq"],[141,93,141,9],[141,94,141,10],[141,103,141,19],[141,105,141,21,"user"],[141,109,141,25],[141,110,141,26,"id"],[141,112,141,28],[141,113,141,29],[142,6,143,4],[142,10,143,8,"habitsError"],[142,21,143,19],[142,23,143,21],[142,29,143,27,"habitsError"],[142,40,143,38],[144,6,145,4],[145,6,146,4],[145,12,146,10,"progressData"],[145,24,146,22],[145,27,146,25,"allHabits"],[145,36,146,34],[145,37,146,35,"map"],[145,40,146,38],[145,41,146,39,"habit"],[145,46,146,44],[145,50,146,48],[146,8,147,6],[146,14,147,12,"dayProgress"],[146,25,147,23],[146,28,147,26,"progress"],[146,36,147,34],[146,37,147,35,"find"],[146,41,147,39],[146,42,147,40,"p"],[146,43,147,41],[146,47,147,45,"p"],[146,48,147,46],[146,49,147,47,"habit_id"],[146,57,147,55],[146,62,147,60,"habit"],[146,67,147,65],[146,68,147,66,"id"],[146,70,147,68],[146,71,147,69],[147,8,148,6],[147,15,148,13],[148,10,149,8,"habit_id"],[148,18,149,16],[148,20,149,18,"habit"],[148,25,149,23],[148,26,149,24,"id"],[148,28,149,26],[149,10,150,8,"name"],[149,14,150,12],[149,16,150,14,"habit"],[149,21,150,19],[149,22,150,20,"name"],[149,26,150,24],[150,10,151,8,"icon"],[150,14,151,12],[150,16,151,14,"habit"],[150,21,151,19],[150,22,151,20,"icon"],[150,26,151,24],[151,10,152,8,"completed"],[151,19,152,17],[151,21,152,19,"dayProgress"],[151,32,152,30],[151,34,152,32,"completed"],[151,43,152,41],[151,47,152,45],[151,52,152,50],[152,10,153,8,"note"],[152,14,153,12],[152,16,153,14,"dayProgress"],[152,27,153,25],[152,29,153,27,"note"],[152,33,153,31],[152,37,153,35],[152,39,153,37],[153,10,154,8,"streak"],[153,16,154,14],[153,18,154,16,"habit"],[153,23,154,21],[153,24,154,22,"current_streak"],[154,8,155,6],[154,9,155,7],[155,6,156,4],[155,7,156,5],[155,8,156,6],[156,6,158,4],[156,13,158,11],[157,8,158,13,"progress"],[157,16,158,21],[157,18,158,23,"progressData"],[158,6,158,36],[158,7,158,37],[159,4,159,2],[159,5,159,3],[160,4,161,2],[161,4,162,2],[161,10,162,8,"update"],[161,16,162,14,"update"],[161,17,162,15,"habitId"],[161,24,162,22],[161,26,162,24,"date"],[161,30,162,28],[161,32,162,30,"completed"],[161,41,162,39],[161,43,162,41,"note"],[161,47,162,45],[161,50,162,48],[161,52,162,50],[161,54,162,52],[162,6,163,4],[162,12,163,10],[163,8,163,12,"data"],[163,12,163,16],[163,14,163,18],[164,10,163,20,"user"],[165,8,163,25],[166,6,163,27],[166,7,163,28],[166,10,163,31],[166,16,163,37,"supabase"],[166,34,163,45],[166,35,163,46,"auth"],[166,39,163,50],[166,40,163,51,"getUser"],[166,47,163,58],[166,48,163,59],[166,49,163,60],[167,6,164,4],[167,10,164,8],[167,11,164,9,"user"],[167,15,164,13],[167,17,164,15],[167,23,164,21],[167,27,164,25,"Error"],[167,32,164,30],[167,33,164,31],[167,57,164,55],[167,58,164,56],[169,6,166,4],[170,6,167,4],[170,12,167,10],[171,8,167,12,"data"],[171,12,167,16],[171,14,167,18,"existingProgress"],[172,6,167,35],[172,7,167,36],[172,10,167,39],[172,16,167,45,"supabase"],[172,34,167,53],[172,35,168,7,"from"],[172,39,168,11],[172,40,168,12],[172,50,168,22],[172,51,168,23],[172,52,169,7,"select"],[172,58,169,13],[172,59,169,14],[172,62,169,17],[172,63,169,18],[172,64,170,7,"eq"],[172,66,170,9],[172,67,170,10],[172,77,170,20],[172,79,170,22,"habitId"],[172,86,170,29],[172,87,170,30],[172,88,171,7,"eq"],[172,90,171,9],[172,91,171,10],[172,108,171,27],[172,110,171,29,"date"],[172,114,171,33],[172,115,171,34],[172,116,172,7,"eq"],[172,118,172,9],[172,119,172,10],[172,128,172,19],[172,130,172,21,"user"],[172,134,172,25],[172,135,172,26,"id"],[172,137,172,28],[172,138,172,29],[172,139,173,7,"single"],[172,145,173,13],[172,146,173,14],[172,147,173,15],[173,6,175,4],[173,10,175,8,"result"],[173,16,175,14],[174,6,176,4],[174,10,176,8,"existingProgress"],[174,26,176,24],[174,28,176,26],[175,8,177,6],[176,8,178,6],[176,14,178,12],[177,10,178,14,"data"],[177,14,178,18],[178,10,178,20,"error"],[179,8,178,26],[179,9,178,27],[179,12,178,30],[179,18,178,36,"supabase"],[179,36,178,44],[179,37,179,9,"from"],[179,41,179,13],[179,42,179,14],[179,52,179,24],[179,53,179,25],[179,54,180,9,"update"],[179,60,180,15],[179,61,180,16],[180,10,180,18,"completed"],[180,19,180,27],[181,10,180,29,"note"],[182,8,180,34],[182,9,180,35],[182,10,180,36],[182,11,181,9,"eq"],[182,13,181,11],[182,14,181,12],[182,18,181,16],[182,20,181,18,"existingProgress"],[182,36,181,34],[182,37,181,35,"id"],[182,39,181,37],[182,40,181,38],[182,41,182,9,"select"],[182,47,182,15],[182,48,182,16],[182,49,182,17],[182,50,183,9,"single"],[182,56,183,15],[182,57,183,16],[182,58,183,17],[183,8,185,6],[183,12,185,10,"error"],[183,17,185,15],[183,19,185,17],[183,25,185,23,"error"],[183,30,185,28],[184,8,186,6,"result"],[184,14,186,12],[184,17,186,15,"data"],[184,21,186,19],[185,6,187,4],[185,7,187,5],[185,13,187,11],[186,8,188,6],[187,8,189,6],[187,14,189,12],[188,10,189,14,"data"],[188,14,189,18],[189,10,189,20,"error"],[190,8,189,26],[190,9,189,27],[190,12,189,30],[190,18,189,36,"supabase"],[190,36,189,44],[190,37,190,9,"from"],[190,41,190,13],[190,42,190,14],[190,52,190,24],[190,53,190,25],[190,54,191,9,"insert"],[190,60,191,15],[190,61,191,16],[190,62,191,17],[191,10,192,10,"habit_id"],[191,18,192,18],[191,20,192,20,"habitId"],[191,27,192,27],[192,10,193,10,"completion_date"],[192,25,193,25],[192,27,193,27,"date"],[192,31,193,31],[193,10,194,10,"completed"],[193,19,194,19],[194,10,195,10,"note"],[194,14,195,14],[195,10,196,10,"user_id"],[195,17,196,17],[195,19,196,19,"user"],[195,23,196,23],[195,24,196,24,"id"],[196,8,197,8],[196,9,197,9],[196,10,197,10],[196,11,197,11],[196,12,198,9,"select"],[196,18,198,15],[196,19,198,16],[196,20,198,17],[196,21,199,9,"single"],[196,27,199,15],[196,28,199,16],[196,29,199,17],[197,8,201,6],[197,12,201,10,"error"],[197,17,201,15],[197,19,201,17],[197,25,201,23,"error"],[197,30,201,28],[198,8,202,6,"result"],[198,14,202,12],[198,17,202,15,"data"],[198,21,202,19],[199,6,203,4],[201,6,205,4],[202,6,206,4],[202,12,206,10,"habitsService"],[202,25,206,23],[202,26,206,24,"updateStreaks"],[202,39,206,37],[202,40,206,38,"habitId"],[202,47,206,45],[202,49,206,47,"completed"],[202,58,206,56],[202,59,206,57],[203,6,208,4],[203,13,208,11],[204,8,208,13,"success"],[204,15,208,20],[204,17,208,22],[204,21,208,26],[205,8,208,28,"progress"],[205,16,208,36],[205,18,208,38,"result"],[206,6,208,45],[206,7,208,46],[207,4,209,2],[207,5,209,3],[208,4,211,2],[209,4,212,2],[209,10,212,8,"getByHabitAndDateRange"],[209,32,212,30,"getByHabitAndDateRange"],[209,33,212,31,"habitId"],[209,40,212,38],[209,42,212,40,"startDate"],[209,51,212,49],[209,53,212,51,"endDate"],[209,60,212,58],[209,62,212,60],[210,6,213,4],[210,12,213,10],[211,8,213,12,"data"],[211,12,213,16],[211,14,213,18],[212,10,213,20,"user"],[213,8,213,25],[214,6,213,27],[214,7,213,28],[214,10,213,31],[214,16,213,37,"supabase"],[214,34,213,45],[214,35,213,46,"auth"],[214,39,213,50],[214,40,213,51,"getUser"],[214,47,213,58],[214,48,213,59],[214,49,213,60],[215,6,214,4],[215,10,214,8],[215,11,214,9,"user"],[215,15,214,13],[215,17,214,15],[215,23,214,21],[215,27,214,25,"Error"],[215,32,214,30],[215,33,214,31],[215,57,214,55],[215,58,214,56],[216,6,216,4],[216,12,216,10],[217,8,216,12,"data"],[217,12,216,16],[217,14,216,18,"progress"],[217,22,216,26],[218,8,216,28,"error"],[219,6,216,34],[219,7,216,35],[219,10,216,38],[219,16,216,44,"supabase"],[219,34,216,52],[219,35,217,7,"from"],[219,39,217,11],[219,40,217,12],[219,50,217,22],[219,51,217,23],[219,52,218,7,"select"],[219,58,218,13],[219,59,218,14],[219,62,218,17],[219,63,218,18],[219,64,219,7,"eq"],[219,66,219,9],[219,67,219,10],[219,77,219,20],[219,79,219,22,"habitId"],[219,86,219,29],[219,87,219,30],[219,88,220,7,"eq"],[219,90,220,9],[219,91,220,10],[219,100,220,19],[219,102,220,21,"user"],[219,106,220,25],[219,107,220,26,"id"],[219,109,220,28],[219,110,220,29],[219,111,221,7,"gte"],[219,114,221,10],[219,115,221,11],[219,132,221,28],[219,134,221,30,"startDate"],[219,143,221,39],[219,144,221,40],[219,145,222,7,"lte"],[219,148,222,10],[219,149,222,11],[219,166,222,28],[219,168,222,30,"endDate"],[219,175,222,37],[219,176,222,38],[220,6,224,4],[220,10,224,8,"error"],[220,15,224,13],[220,17,224,15],[220,23,224,21,"error"],[220,28,224,26],[222,6,226,4],[223,6,227,4],[223,12,227,10,"progressByDate"],[223,26,227,24],[223,29,227,27],[223,30,227,28],[223,31,227,29],[224,6,228,4,"progress"],[224,14,228,12],[224,15,228,13,"forEach"],[224,22,228,20],[224,23,228,21,"p"],[224,24,228,22],[224,28,228,26],[225,8,229,6,"progressByDate"],[225,22,229,20],[225,23,229,21,"p"],[225,24,229,22],[225,25,229,23,"completion_date"],[225,40,229,38],[225,41,229,39],[225,44,229,42,"p"],[225,45,229,43],[226,6,230,4],[226,7,230,5],[226,8,230,6],[227,6,232,4],[227,13,232,11],[228,8,232,13,"progress"],[228,16,232,21],[228,18,232,23,"progressByDate"],[229,6,232,38],[229,7,232,39],[230,4,233,2],[231,2,234,0],[231,3,234,1],[233,2,236,0],[235,2,238,7],[235,8,238,13,"calendarService"],[235,23,238,28],[235,26,238,28,"exports"],[235,33,238,28],[235,34,238,28,"calendarService"],[235,49,238,28],[235,52,238,31],[236,4,239,2],[237,4,240,2],[237,10,240,8,"getMonthData"],[237,22,240,20,"getMonthData"],[237,23,240,21,"year"],[237,27,240,25],[237,29,240,27,"month"],[237,34,240,32],[237,36,240,34],[238,6,241,4],[238,12,241,10],[239,8,241,12,"data"],[239,12,241,16],[239,14,241,18],[240,10,241,20,"user"],[241,8,241,25],[242,6,241,27],[242,7,241,28],[242,10,241,31],[242,16,241,37,"supabase"],[242,34,241,45],[242,35,241,46,"auth"],[242,39,241,50],[242,40,241,51,"getUser"],[242,47,241,58],[242,48,241,59],[242,49,241,60],[243,6,242,4],[243,10,242,8],[243,11,242,9,"user"],[243,15,242,13],[243,17,242,15],[243,23,242,21],[243,27,242,25,"Error"],[243,32,242,30],[243,33,242,31],[243,57,242,55],[243,58,242,56],[245,6,244,4],[246,6,245,4],[246,12,245,10,"startDate"],[246,21,245,19],[246,24,245,22],[246,27,245,25,"year"],[246,31,245,29],[246,35,245,33,"String"],[246,41,245,39],[246,42,245,40,"month"],[246,47,245,45],[246,48,245,46],[246,49,245,47,"padStart"],[246,57,245,55],[246,58,245,56],[246,59,245,57],[246,61,245,59],[246,64,245,62],[246,65,245,63],[246,70,245,68],[247,6,246,4],[247,12,246,10,"endDate"],[247,19,246,17],[247,22,246,20],[247,25,246,23,"year"],[247,29,246,27],[247,33,246,31,"String"],[247,39,246,37],[247,40,246,38,"month"],[247,45,246,43],[247,46,246,44],[247,47,246,45,"padStart"],[247,55,246,53],[247,56,246,54],[247,57,246,55],[247,59,246,57],[247,62,246,60],[247,63,246,61],[247,67,246,65],[247,71,246,69,"Date"],[247,75,246,73],[247,76,246,74,"year"],[247,80,246,78],[247,82,246,80,"month"],[247,87,246,85],[247,89,246,87],[247,90,246,88],[247,91,246,89],[247,92,246,90,"getDate"],[247,99,246,97],[247,100,246,98],[247,101,246,99],[247,103,246,101],[249,6,248,4],[250,6,249,4],[250,12,249,10],[251,8,249,12,"data"],[251,12,249,16],[251,14,249,18,"progress"],[251,22,249,26],[252,8,249,28,"error"],[253,6,249,34],[253,7,249,35],[253,10,249,38],[253,16,249,44,"supabase"],[253,34,249,52],[253,35,250,7,"from"],[253,39,250,11],[253,40,250,12],[253,50,250,22],[253,51,250,23],[253,52,251,7,"select"],[253,58,251,13],[253,59,251,14],[253,87,251,42],[253,88,251,43],[253,89,252,7,"eq"],[253,91,252,9],[253,92,252,10],[253,101,252,19],[253,103,252,21,"user"],[253,107,252,25],[253,108,252,26,"id"],[253,110,252,28],[253,111,252,29],[253,112,253,7,"gte"],[253,115,253,10],[253,116,253,11],[253,133,253,28],[253,135,253,30,"startDate"],[253,144,253,39],[253,145,253,40],[253,146,254,7,"lte"],[253,149,254,10],[253,150,254,11],[253,167,254,28],[253,169,254,30,"endDate"],[253,176,254,37],[253,177,254,38],[254,6,256,4],[254,10,256,8,"error"],[254,15,256,13],[254,17,256,15],[254,23,256,21,"error"],[254,28,256,26],[256,6,258,4],[257,6,259,4],[257,12,259,10,"daysInMonth"],[257,23,259,21],[257,26,259,24],[257,30,259,28,"Date"],[257,34,259,32],[257,35,259,33,"year"],[257,39,259,37],[257,41,259,39,"month"],[257,46,259,44],[257,48,259,46],[257,49,259,47],[257,50,259,48],[257,51,259,49,"getDate"],[257,58,259,56],[257,59,259,57],[257,60,259,58],[258,6,260,4],[258,12,260,10,"firstDay"],[258,20,260,18],[258,23,260,21],[258,27,260,25,"Date"],[258,31,260,29],[258,32,260,30,"year"],[258,36,260,34],[258,38,260,36,"month"],[258,43,260,41],[258,46,260,44],[258,47,260,45],[258,49,260,47],[258,50,260,48],[258,51,260,49],[258,52,260,50,"getDay"],[258,58,260,56],[258,59,260,57],[258,60,260,58],[259,6,261,4],[259,12,261,10,"today"],[259,17,261,15],[259,20,261,18],[259,24,261,22,"Date"],[259,28,261,26],[259,29,261,27],[259,30,261,28],[260,6,263,4],[260,12,263,10,"calendarData"],[260,24,263,22],[260,27,263,25],[260,29,263,27],[262,6,265,4],[263,6,266,4],[263,11,266,9],[263,15,266,13,"i"],[263,16,266,14],[263,19,266,17],[263,20,266,18],[263,22,266,20,"i"],[263,23,266,21],[263,26,266,24,"firstDay"],[263,34,266,32],[263,36,266,34,"i"],[263,37,266,35],[263,39,266,37],[263,41,266,39],[264,8,267,6,"calendarData"],[264,20,267,18],[264,21,267,19,"push"],[264,25,267,23],[264,26,267,24],[264,30,267,28],[264,31,267,29],[265,6,268,4],[267,6,270,4],[268,6,271,4],[268,11,271,9],[268,15,271,13,"day"],[268,18,271,16],[268,21,271,19],[268,22,271,20],[268,24,271,22,"day"],[268,27,271,25],[268,31,271,29,"daysInMonth"],[268,42,271,40],[268,44,271,42,"day"],[268,47,271,45],[268,49,271,47],[268,51,271,49],[269,8,272,6],[269,14,272,12,"dateStr"],[269,21,272,19],[269,24,272,22],[269,27,272,25,"year"],[269,31,272,29],[269,35,272,33,"String"],[269,41,272,39],[269,42,272,40,"month"],[269,47,272,45],[269,48,272,46],[269,49,272,47,"padStart"],[269,57,272,55],[269,58,272,56],[269,59,272,57],[269,61,272,59],[269,64,272,62],[269,65,272,63],[269,69,272,67,"String"],[269,75,272,73],[269,76,272,74,"day"],[269,79,272,77],[269,80,272,78],[269,81,272,79,"padStart"],[269,89,272,87],[269,90,272,88],[269,91,272,89],[269,93,272,91],[269,96,272,94],[269,97,272,95],[269,99,272,97],[270,8,273,6],[270,14,273,12,"dayProgress"],[270,25,273,23],[270,28,273,26,"progress"],[270,36,273,34],[270,37,273,35,"filter"],[270,43,273,41],[270,44,273,42,"p"],[270,45,273,43],[270,49,273,47,"p"],[270,50,273,48],[270,51,273,49,"completion_date"],[270,66,273,64],[270,71,273,69,"dateStr"],[270,78,273,76],[270,82,273,80,"p"],[270,83,273,81],[270,84,273,82,"completed"],[270,93,273,91],[270,94,273,92],[271,8,274,6],[271,14,274,12,"isToday"],[271,21,274,19],[271,24,274,22,"day"],[271,27,274,25],[271,32,274,30,"today"],[271,37,274,35],[271,38,274,36,"getDate"],[271,45,274,43],[271,46,274,44],[271,47,274,45],[271,51,275,21,"month"],[271,56,275,26],[271,61,275,31,"today"],[271,66,275,36],[271,67,275,37,"getMonth"],[271,75,275,45],[271,76,275,46],[271,77,275,47],[271,80,275,50],[271,81,275,51],[271,85,276,21,"year"],[271,89,276,25],[271,94,276,30,"today"],[271,99,276,35],[271,100,276,36,"getFullYear"],[271,111,276,47],[271,112,276,48],[271,113,276,49],[272,8,278,6,"calendarData"],[272,20,278,18],[272,21,278,19,"push"],[272,25,278,23],[272,26,278,24],[273,10,279,8,"day"],[273,13,279,11],[274,10,280,8,"completions"],[274,21,280,19],[274,23,280,21,"dayProgress"],[274,34,280,32],[274,35,280,33,"length"],[274,41,280,39],[275,10,281,8,"is_today"],[275,18,281,16],[275,20,281,18,"isToday"],[276,8,282,6],[276,9,282,7],[276,10,282,8],[277,6,283,4],[279,6,285,4],[280,6,286,4],[280,12,286,10,"activeDays"],[280,22,286,20],[280,25,286,23,"progress"],[280,33,286,31],[280,34,286,32,"filter"],[280,40,286,38],[280,41,286,39,"p"],[280,42,286,40],[280,46,286,44,"p"],[280,47,286,45],[280,48,286,46,"completed"],[280,57,286,55],[280,58,286,56],[280,59,286,57,"length"],[280,65,286,63],[281,6,287,4],[281,12,287,10,"totalCompletions"],[281,28,287,26],[281,31,287,29,"progress"],[281,39,287,37],[281,40,287,38,"filter"],[281,46,287,44],[281,47,287,45,"p"],[281,48,287,46],[281,52,287,50,"p"],[281,53,287,51],[281,54,287,52,"completed"],[281,63,287,61],[281,64,287,62],[281,65,287,63,"length"],[281,71,287,69],[282,6,289,4],[282,13,289,11],[283,8,290,6,"calendarData"],[283,20,290,18],[284,8,291,6,"stats"],[284,13,291,11],[284,15,291,13],[285,10,292,8,"active_days"],[285,21,292,19],[285,23,292,21,"activeDays"],[285,33,292,31],[286,10,293,8,"total_completions"],[286,27,293,25],[286,29,293,27,"totalCompletions"],[287,8,294,6],[288,6,295,4],[288,7,295,5],[289,4,296,2],[290,2,297,0],[290,3,297,1],[292,2,299,0],[294,2,301,7],[294,8,301,13,"authService"],[294,19,301,24],[294,22,301,24,"exports"],[294,29,301,24],[294,30,301,24,"authService"],[294,41,301,24],[294,44,301,27],[295,4,302,2],[296,4,303,2],[296,10,303,8,"getCurrentUser"],[296,24,303,22,"getCurrentUser"],[296,25,303,22],[296,27,303,25],[297,6,304,4],[297,12,304,10],[298,8,304,12,"data"],[298,12,304,16],[298,14,304,18],[299,10,304,20,"user"],[300,8,304,25],[301,6,304,27],[301,7,304,28],[301,10,304,31],[301,16,304,37,"supabase"],[301,34,304,45],[301,35,304,46,"auth"],[301,39,304,50],[301,40,304,51,"getUser"],[301,47,304,58],[301,48,304,59],[301,49,304,60],[302,6,305,4],[302,13,305,11,"user"],[302,17,305,15],[303,4,306,2],[303,5,306,3],[304,4,308,2],[305,4,309,2],[305,10,309,8,"signOut"],[305,17,309,15,"signOut"],[305,18,309,15],[305,20,309,18],[306,6,310,4],[306,12,310,10],[307,8,310,12,"error"],[308,6,310,18],[308,7,310,19],[308,10,310,22],[308,16,310,28,"supabase"],[308,34,310,36],[308,35,310,37,"auth"],[308,39,310,41],[308,40,310,42,"signOut"],[308,47,310,49],[308,48,310,50],[308,49,310,51],[309,6,311,4],[309,10,311,8,"error"],[309,15,311,13],[309,17,311,15],[309,23,311,21,"error"],[309,28,311,26],[310,4,312,2],[310,5,312,3],[311,4,314,2],[312,4,315,2,"onAuthStateChange"],[312,21,315,19,"onAuthStateChange"],[312,22,315,20,"callback"],[312,30,315,28],[312,32,315,30],[313,6,316,4],[313,13,316,11,"supabase"],[313,31,316,19],[313,32,316,20,"auth"],[313,36,316,24],[313,37,316,25,"onAuthStateChange"],[313,54,316,42],[313,55,316,43,"callback"],[313,63,316,51],[313,64,316,52],[314,4,317,2],[315,2,318,0],[315,3,318,1],[316,0,318,2],[316,3]],"functionMap":{"names":["<global>","habitsService.getAll","habitsService.create","habitsService.update","habitsService._delete","habitsService.getById","habitsService.updateStreaks","progressService.getByDate","allHabits.map$argument_0","progress.find$argument_0","progressService.update","progressService.getByHabitAndDateRange","progress.forEach$argument_0","calendarService.getMonthData","progress.filter$argument_0","authService.getCurrentUser","authService.signOut","authService.onAuthStateChange"],"mappings":"AAA;ECM;GDY;EEG;GFe;EGG;GHU;EIG;GJQ;EKG;GLS;EMG;GNkC;EOO;uCC6B;wCCC,4BD;KDS;GPG;EUG;GV+C;EWG;qBCgB;KDE;GXG;EaO;0CCiC,iDD;uCCa,gBD;6CCC,gBD;GbS;EeO;GfG;EgBG;GhBG;EiBG;GjBE"}},"type":"js/module"}]}