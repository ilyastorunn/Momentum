{"dependencies":[{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.progressService = exports.habitsService = exports.calendarService = exports.authService = void 0;\n  var _supabase = require(_dependencyMap[0], \"./supabase\");\n  // =================== HABITS SERVICES ===================\n\n  const habitsService = exports.habitsService = {\n    // Tüm alışkanlıkları getir\n    async getAll() {\n      const {\n        data: habits,\n        error\n      } = await _supabase.supabase.from('habits').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      return {\n        habits\n      };\n    },\n    // Yeni alışkanlık oluştur\n    async create(habitData) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').insert([{\n        ...habitData,\n        user_id: user.id\n      }]).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık güncelle\n    async update(id, updates) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', id).select().single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Alışkanlık sil\n    async delete(id) {\n      const {\n        error\n      } = await _supabase.supabase.from('habits').delete().eq('id', id);\n      if (error) throw error;\n      return {\n        success: true\n      };\n    },\n    // Tek alışkanlık detayını getir\n    async getById(id) {\n      const {\n        data: habit,\n        error\n      } = await _supabase.supabase.from('habits').select('*').eq('id', id).single();\n      if (error) throw error;\n      return {\n        habit\n      };\n    },\n    // Streak güncellemesi\n    async updateStreaks(habitId, completed) {\n      const {\n        data: habit,\n        error: fetchError\n      } = await _supabase.supabase.from('habits').select('current_streak, best_streak, completed_this_week, total_completions').eq('id', habitId).single();\n      if (fetchError) throw fetchError;\n      const updates = {\n        ...habit\n      };\n      if (completed) {\n        updates.current_streak += 1;\n        updates.best_streak = Math.max(updates.best_streak, updates.current_streak);\n        updates.total_completions += 1;\n\n        // Haftalık sayı güncellemesi (basit implementasyon)\n        const today = new Date().getDay();\n        const weekStart = new Date();\n        weekStart.setDate(weekStart.getDate() - today);\n        updates.completed_this_week += 1;\n      } else {\n        updates.current_streak = 0;\n      }\n      const {\n        data: updatedHabit,\n        error\n      } = await _supabase.supabase.from('habits').update(updates).eq('id', habitId).select().single();\n      if (error) throw error;\n      return {\n        habit: updatedHabit\n      };\n    }\n  };\n\n  // =================== PROGRESS SERVICES ===================\n\n  const progressService = exports.progressService = {\n    // Belirli tarih için progress getir\n    async getByDate(date) {\n      // TODO: Integrate Create auth with Supabase auth\n      // For now, use a demo user ID to prevent fallback to mock data\n      const userId = 'demo-user-id';\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select(`\n        *,\n        habits (\n          id,\n          name,\n          icon,\n          current_streak\n        )\n      `).eq('completion_date', date).eq('user_id', userId);\n      if (error) throw error;\n\n      // Tüm alışkanlıkları getir ve progress ile birleştir\n      const {\n        data: allHabits,\n        error: habitsError\n      } = await _supabase.supabase.from('habits').select('id, name, icon, current_streak').eq('user_id', userId);\n      if (habitsError) throw habitsError;\n\n      // Her alışkanlık için progress durumunu oluştur\n      const progressData = allHabits.map(habit => {\n        const dayProgress = progress.find(p => p.habit_id === habit.id);\n        return {\n          habit_id: habit.id,\n          name: habit.name,\n          icon: habit.icon,\n          completed: dayProgress?.completed || false,\n          note: dayProgress?.note || '',\n          streak: habit.current_streak\n        };\n      });\n      return {\n        progress: progressData\n      };\n    },\n    // Progress güncelle\n    async update(habitId, date, completed, note = '') {\n      // TODO: Integrate Create auth with Supabase auth\n      // For now, use a demo user ID to prevent fallback to mock data\n      const userId = 'demo-user-id';\n\n      // Önce mevcut progress'i kontrol et\n      const {\n        data: existingProgress\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('completion_date', date).eq('user_id', user.id).single();\n      let result;\n      if (existingProgress) {\n        // Güncelle\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').update({\n          completed,\n          note\n        }).eq('id', existingProgress.id).select().single();\n        if (error) throw error;\n        result = data;\n      } else {\n        // Yeni kayıt oluştur\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from('progress').insert([{\n          habit_id: habitId,\n          completion_date: date,\n          completed,\n          note,\n          user_id: user.id\n        }]).select().single();\n        if (error) throw error;\n        result = data;\n      }\n\n      // Habit streak'lerini güncelle\n      await habitsService.updateStreaks(habitId, completed);\n      return {\n        success: true,\n        progress: result\n      };\n    },\n    // Belirli habit ve tarih aralığı için progress getir\n    async getByHabitAndDateRange(habitId, startDate, endDate) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('*').eq('habit_id', habitId).eq('user_id', user.id).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Date string'leri key olarak kullanarak object'e çevir\n      const progressByDate = {};\n      progress.forEach(p => {\n        progressByDate[p.completion_date] = p;\n      });\n      return {\n        progress: progressByDate\n      };\n    }\n  };\n\n  // =================== CALENDAR/STATS SERVICES ===================\n\n  const calendarService = exports.calendarService = {\n    // Belirli ay için calendar data getir\n    async getMonthData(year, month) {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      // Ay başı ve sonu tarihleri\n      const startDate = `${year}-${String(month).padStart(2, '0')}-01`;\n      const endDate = `${year}-${String(month).padStart(2, '0')}-${new Date(year, month, 0).getDate()}`;\n\n      // Progress verilerini getir\n      const {\n        data: progress,\n        error\n      } = await _supabase.supabase.from('progress').select('completion_date, completed').eq('user_id', user.id).gte('completion_date', startDate).lte('completion_date', endDate);\n      if (error) throw error;\n\n      // Calendar grid için data hazırla\n      const daysInMonth = new Date(year, month, 0).getDate();\n      const firstDay = new Date(year, month - 1, 1).getDay();\n      const today = new Date();\n      const calendarData = [];\n\n      // Boş günler\n      for (let i = 0; i < firstDay; i++) {\n        calendarData.push(null);\n      }\n\n      // Ay günleri\n      for (let day = 1; day <= daysInMonth; day++) {\n        const dateStr = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n        const dayProgress = progress.filter(p => p.completion_date === dateStr && p.completed);\n        const isToday = day === today.getDate() && month === today.getMonth() + 1 && year === today.getFullYear();\n        calendarData.push({\n          day,\n          completions: dayProgress.length,\n          is_today: isToday\n        });\n      }\n\n      // İstatistikler\n      const activeDays = progress.filter(p => p.completed).length;\n      const totalCompletions = progress.filter(p => p.completed).length;\n      return {\n        calendarData,\n        stats: {\n          active_days: activeDays,\n          total_completions: totalCompletions\n        }\n      };\n    }\n  };\n\n  // =================== AUTH HELPERS ===================\n\n  const authService = exports.authService = {\n    // Mevcut kullanıcıyı getir\n    async getCurrentUser() {\n      const {\n        data: {\n          user\n        }\n      } = await _supabase.supabase.auth.getUser();\n      return user;\n    },\n    // Çıkış yap\n    async signOut() {\n      const {\n        error\n      } = await _supabase.supabase.auth.signOut();\n      if (error) throw error;\n    },\n    // Authentication state değişikliklerini dinle\n    onAuthStateChange(callback) {\n      return _supabase.supabase.auth.onAuthStateChange(callback);\n    }\n  };\n});","lineCount":307,"map":[[6,2,1,0],[6,6,1,0,"_supabase"],[6,15,1,0],[6,18,1,0,"require"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,3,0],[9,2,5,7],[9,8,5,13,"habitsService"],[9,21,5,26],[9,24,5,26,"exports"],[9,31,5,26],[9,32,5,26,"habitsService"],[9,45,5,26],[9,48,5,29],[10,4,6,2],[11,4,7,2],[11,10,7,8,"getAll"],[11,16,7,14,"getAll"],[11,17,7,14],[11,19,7,17],[12,6,8,4],[12,12,8,10],[13,8,8,12,"data"],[13,12,8,16],[13,14,8,18,"habits"],[13,20,8,24],[14,8,8,26,"error"],[15,6,8,32],[15,7,8,33],[15,10,8,36],[15,16,8,42,"supabase"],[15,34,8,50],[15,35,9,7,"from"],[15,39,9,11],[15,40,9,12],[15,48,9,20],[15,49,9,21],[15,50,10,7,"select"],[15,56,10,13],[15,57,10,14],[15,60,10,17],[15,61,10,18],[15,62,11,7,"order"],[15,67,11,12],[15,68,11,13],[15,80,11,25],[15,82,11,27],[16,8,11,29,"ascending"],[16,17,11,38],[16,19,11,40],[17,6,11,46],[17,7,11,47],[17,8,11,48],[18,6,13,4],[18,10,13,8,"error"],[18,15,13,13],[18,17,13,15],[18,23,13,21,"error"],[18,28,13,26],[19,6,14,4],[19,13,14,11],[20,8,14,13,"habits"],[21,6,14,20],[21,7,14,21],[22,4,15,2],[22,5,15,3],[23,4,17,2],[24,4,18,2],[24,10,18,8,"create"],[24,16,18,14,"create"],[24,17,18,15,"habitData"],[24,26,18,24],[24,28,18,26],[25,6,19,4],[25,12,19,10],[26,8,19,12,"data"],[26,12,19,16],[26,14,19,18],[27,10,19,20,"user"],[28,8,19,25],[29,6,19,27],[29,7,19,28],[29,10,19,31],[29,16,19,37,"supabase"],[29,34,19,45],[29,35,19,46,"auth"],[29,39,19,50],[29,40,19,51,"getUser"],[29,47,19,58],[29,48,19,59],[29,49,19,60],[30,6,20,4],[30,10,20,8],[30,11,20,9,"user"],[30,15,20,13],[30,17,20,15],[30,23,20,21],[30,27,20,25,"Error"],[30,32,20,30],[30,33,20,31],[30,57,20,55],[30,58,20,56],[31,6,22,4],[31,12,22,10],[32,8,22,12,"data"],[32,12,22,16],[32,14,22,18,"habit"],[32,19,22,23],[33,8,22,25,"error"],[34,6,22,31],[34,7,22,32],[34,10,22,35],[34,16,22,41,"supabase"],[34,34,22,49],[34,35,23,7,"from"],[34,39,23,11],[34,40,23,12],[34,48,23,20],[34,49,23,21],[34,50,24,7,"insert"],[34,56,24,13],[34,57,24,14],[34,58,24,15],[35,8,25,8],[35,11,25,11,"habitData"],[35,20,25,20],[36,8,26,8,"user_id"],[36,15,26,15],[36,17,26,17,"user"],[36,21,26,21],[36,22,26,22,"id"],[37,6,27,6],[37,7,27,7],[37,8,27,8],[37,9,27,9],[37,10,28,7,"select"],[37,16,28,13],[37,17,28,14],[37,18,28,15],[37,19,29,7,"single"],[37,25,29,13],[37,26,29,14],[37,27,29,15],[38,6,31,4],[38,10,31,8,"error"],[38,15,31,13],[38,17,31,15],[38,23,31,21,"error"],[38,28,31,26],[39,6,32,4],[39,13,32,11],[40,8,32,13,"habit"],[41,6,32,19],[41,7,32,20],[42,4,33,2],[42,5,33,3],[43,4,35,2],[44,4,36,2],[44,10,36,8,"update"],[44,16,36,14,"update"],[44,17,36,15,"id"],[44,19,36,17],[44,21,36,19,"updates"],[44,28,36,26],[44,30,36,28],[45,6,37,4],[45,12,37,10],[46,8,37,12,"data"],[46,12,37,16],[46,14,37,18,"habit"],[46,19,37,23],[47,8,37,25,"error"],[48,6,37,31],[48,7,37,32],[48,10,37,35],[48,16,37,41,"supabase"],[48,34,37,49],[48,35,38,7,"from"],[48,39,38,11],[48,40,38,12],[48,48,38,20],[48,49,38,21],[48,50,39,7,"update"],[48,56,39,13],[48,57,39,14,"updates"],[48,64,39,21],[48,65,39,22],[48,66,40,7,"eq"],[48,68,40,9],[48,69,40,10],[48,73,40,14],[48,75,40,16,"id"],[48,77,40,18],[48,78,40,19],[48,79,41,7,"select"],[48,85,41,13],[48,86,41,14],[48,87,41,15],[48,88,42,7,"single"],[48,94,42,13],[48,95,42,14],[48,96,42,15],[49,6,44,4],[49,10,44,8,"error"],[49,15,44,13],[49,17,44,15],[49,23,44,21,"error"],[49,28,44,26],[50,6,45,4],[50,13,45,11],[51,8,45,13,"habit"],[52,6,45,19],[52,7,45,20],[53,4,46,2],[53,5,46,3],[54,4,48,2],[55,4,49,2],[55,10,49,8,"delete"],[55,16,49,14,"delete"],[55,17,49,15,"id"],[55,19,49,17],[55,21,49,19],[56,6,50,4],[56,12,50,10],[57,8,50,12,"error"],[58,6,50,18],[58,7,50,19],[58,10,50,22],[58,16,50,28,"supabase"],[58,34,50,36],[58,35,51,7,"from"],[58,39,51,11],[58,40,51,12],[58,48,51,20],[58,49,51,21],[58,50,52,7,"delete"],[58,56,52,13],[58,57,52,14],[58,58,52,15],[58,59,53,7,"eq"],[58,61,53,9],[58,62,53,10],[58,66,53,14],[58,68,53,16,"id"],[58,70,53,18],[58,71,53,19],[59,6,55,4],[59,10,55,8,"error"],[59,15,55,13],[59,17,55,15],[59,23,55,21,"error"],[59,28,55,26],[60,6,56,4],[60,13,56,11],[61,8,56,13,"success"],[61,15,56,20],[61,17,56,22],[62,6,56,27],[62,7,56,28],[63,4,57,2],[63,5,57,3],[64,4,59,2],[65,4,60,2],[65,10,60,8,"getById"],[65,17,60,15,"getById"],[65,18,60,16,"id"],[65,20,60,18],[65,22,60,20],[66,6,61,4],[66,12,61,10],[67,8,61,12,"data"],[67,12,61,16],[67,14,61,18,"habit"],[67,19,61,23],[68,8,61,25,"error"],[69,6,61,31],[69,7,61,32],[69,10,61,35],[69,16,61,41,"supabase"],[69,34,61,49],[69,35,62,7,"from"],[69,39,62,11],[69,40,62,12],[69,48,62,20],[69,49,62,21],[69,50,63,7,"select"],[69,56,63,13],[69,57,63,14],[69,60,63,17],[69,61,63,18],[69,62,64,7,"eq"],[69,64,64,9],[69,65,64,10],[69,69,64,14],[69,71,64,16,"id"],[69,73,64,18],[69,74,64,19],[69,75,65,7,"single"],[69,81,65,13],[69,82,65,14],[69,83,65,15],[70,6,67,4],[70,10,67,8,"error"],[70,15,67,13],[70,17,67,15],[70,23,67,21,"error"],[70,28,67,26],[71,6,68,4],[71,13,68,11],[72,8,68,13,"habit"],[73,6,68,19],[73,7,68,20],[74,4,69,2],[74,5,69,3],[75,4,71,2],[76,4,72,2],[76,10,72,8,"updateStreaks"],[76,23,72,21,"updateStreaks"],[76,24,72,22,"habitId"],[76,31,72,29],[76,33,72,31,"completed"],[76,42,72,40],[76,44,72,42],[77,6,73,4],[77,12,73,10],[78,8,73,12,"data"],[78,12,73,16],[78,14,73,18,"habit"],[78,19,73,23],[79,8,73,25,"error"],[79,13,73,30],[79,15,73,32,"fetchError"],[80,6,73,43],[80,7,73,44],[80,10,73,47],[80,16,73,53,"supabase"],[80,34,73,61],[80,35,74,7,"from"],[80,39,74,11],[80,40,74,12],[80,48,74,20],[80,49,74,21],[80,50,75,7,"select"],[80,56,75,13],[80,57,75,14],[80,126,75,83],[80,127,75,84],[80,128,76,7,"eq"],[80,130,76,9],[80,131,76,10],[80,135,76,14],[80,137,76,16,"habitId"],[80,144,76,23],[80,145,76,24],[80,146,77,7,"single"],[80,152,77,13],[80,153,77,14],[80,154,77,15],[81,6,79,4],[81,10,79,8,"fetchError"],[81,20,79,18],[81,22,79,20],[81,28,79,26,"fetchError"],[81,38,79,36],[82,6,81,4],[82,12,81,10,"updates"],[82,19,81,17],[82,22,81,20],[83,8,81,22],[83,11,81,25,"habit"],[84,6,81,31],[84,7,81,32],[85,6,83,4],[85,10,83,8,"completed"],[85,19,83,17],[85,21,83,19],[86,8,84,6,"updates"],[86,15,84,13],[86,16,84,14,"current_streak"],[86,30,84,28],[86,34,84,32],[86,35,84,33],[87,8,85,6,"updates"],[87,15,85,13],[87,16,85,14,"best_streak"],[87,27,85,25],[87,30,85,28,"Math"],[87,34,85,32],[87,35,85,33,"max"],[87,38,85,36],[87,39,85,37,"updates"],[87,46,85,44],[87,47,85,45,"best_streak"],[87,58,85,56],[87,60,85,58,"updates"],[87,67,85,65],[87,68,85,66,"current_streak"],[87,82,85,80],[87,83,85,81],[88,8,86,6,"updates"],[88,15,86,13],[88,16,86,14,"total_completions"],[88,33,86,31],[88,37,86,35],[88,38,86,36],[90,8,88,6],[91,8,89,6],[91,14,89,12,"today"],[91,19,89,17],[91,22,89,20],[91,26,89,24,"Date"],[91,30,89,28],[91,31,89,29],[91,32,89,30],[91,33,89,31,"getDay"],[91,39,89,37],[91,40,89,38],[91,41,89,39],[92,8,90,6],[92,14,90,12,"weekStart"],[92,23,90,21],[92,26,90,24],[92,30,90,28,"Date"],[92,34,90,32],[92,35,90,33],[92,36,90,34],[93,8,91,6,"weekStart"],[93,17,91,15],[93,18,91,16,"setDate"],[93,25,91,23],[93,26,91,24,"weekStart"],[93,35,91,33],[93,36,91,34,"getDate"],[93,43,91,41],[93,44,91,42],[93,45,91,43],[93,48,91,46,"today"],[93,53,91,51],[93,54,91,52],[94,8,92,6,"updates"],[94,15,92,13],[94,16,92,14,"completed_this_week"],[94,35,92,33],[94,39,92,37],[94,40,92,38],[95,6,93,4],[95,7,93,5],[95,13,93,11],[96,8,94,6,"updates"],[96,15,94,13],[96,16,94,14,"current_streak"],[96,30,94,28],[96,33,94,31],[96,34,94,32],[97,6,95,4],[98,6,97,4],[98,12,97,10],[99,8,97,12,"data"],[99,12,97,16],[99,14,97,18,"updatedHabit"],[99,26,97,30],[100,8,97,32,"error"],[101,6,97,38],[101,7,97,39],[101,10,97,42],[101,16,97,48,"supabase"],[101,34,97,56],[101,35,98,7,"from"],[101,39,98,11],[101,40,98,12],[101,48,98,20],[101,49,98,21],[101,50,99,7,"update"],[101,56,99,13],[101,57,99,14,"updates"],[101,64,99,21],[101,65,99,22],[101,66,100,7,"eq"],[101,68,100,9],[101,69,100,10],[101,73,100,14],[101,75,100,16,"habitId"],[101,82,100,23],[101,83,100,24],[101,84,101,7,"select"],[101,90,101,13],[101,91,101,14],[101,92,101,15],[101,93,102,7,"single"],[101,99,102,13],[101,100,102,14],[101,101,102,15],[102,6,104,4],[102,10,104,8,"error"],[102,15,104,13],[102,17,104,15],[102,23,104,21,"error"],[102,28,104,26],[103,6,105,4],[103,13,105,11],[104,8,105,13,"habit"],[104,13,105,18],[104,15,105,20,"updatedHabit"],[105,6,105,33],[105,7,105,34],[106,4,106,2],[107,2,107,0],[107,3,107,1],[109,2,109,0],[111,2,111,7],[111,8,111,13,"progressService"],[111,23,111,28],[111,26,111,28,"exports"],[111,33,111,28],[111,34,111,28,"progressService"],[111,49,111,28],[111,52,111,31],[112,4,112,2],[113,4,113,2],[113,10,113,8,"getByDate"],[113,19,113,17,"getByDate"],[113,20,113,18,"date"],[113,24,113,22],[113,26,113,24],[114,6,114,4],[115,6,115,4],[116,6,116,4],[116,12,116,10,"userId"],[116,18,116,16],[116,21,116,19],[116,35,116,33],[117,6,118,4],[117,12,118,10],[118,8,118,12,"data"],[118,12,118,16],[118,14,118,18,"progress"],[118,22,118,26],[119,8,118,28,"error"],[120,6,118,34],[120,7,118,35],[120,10,118,38],[120,16,118,44,"supabase"],[120,34,118,52],[120,35,119,7,"from"],[120,39,119,11],[120,40,119,12],[120,50,119,22],[120,51,119,23],[120,52,120,7,"select"],[120,58,120,13],[120,59,120,14],[121,0,121,0],[122,0,122,0],[123,0,123,0],[124,0,124,0],[125,0,125,0],[126,0,126,0],[127,0,127,0],[128,0,128,0],[128,7,128,7],[128,8,128,8],[128,9,129,7,"eq"],[128,11,129,9],[128,12,129,10],[128,29,129,27],[128,31,129,29,"date"],[128,35,129,33],[128,36,129,34],[128,37,130,7,"eq"],[128,39,130,9],[128,40,130,10],[128,49,130,19],[128,51,130,21,"userId"],[128,57,130,27],[128,58,130,28],[129,6,132,4],[129,10,132,8,"error"],[129,15,132,13],[129,17,132,15],[129,23,132,21,"error"],[129,28,132,26],[131,6,134,4],[132,6,135,4],[132,12,135,10],[133,8,135,12,"data"],[133,12,135,16],[133,14,135,18,"allHabits"],[133,23,135,27],[134,8,135,29,"error"],[134,13,135,34],[134,15,135,36,"habitsError"],[135,6,135,48],[135,7,135,49],[135,10,135,52],[135,16,135,58,"supabase"],[135,34,135,66],[135,35,136,7,"from"],[135,39,136,11],[135,40,136,12],[135,48,136,20],[135,49,136,21],[135,50,137,7,"select"],[135,56,137,13],[135,57,137,14],[135,89,137,46],[135,90,137,47],[135,91,138,7,"eq"],[135,93,138,9],[135,94,138,10],[135,103,138,19],[135,105,138,21,"userId"],[135,111,138,27],[135,112,138,28],[136,6,140,4],[136,10,140,8,"habitsError"],[136,21,140,19],[136,23,140,21],[136,29,140,27,"habitsError"],[136,40,140,38],[138,6,142,4],[139,6,143,4],[139,12,143,10,"progressData"],[139,24,143,22],[139,27,143,25,"allHabits"],[139,36,143,34],[139,37,143,35,"map"],[139,40,143,38],[139,41,143,39,"habit"],[139,46,143,44],[139,50,143,48],[140,8,144,6],[140,14,144,12,"dayProgress"],[140,25,144,23],[140,28,144,26,"progress"],[140,36,144,34],[140,37,144,35,"find"],[140,41,144,39],[140,42,144,40,"p"],[140,43,144,41],[140,47,144,45,"p"],[140,48,144,46],[140,49,144,47,"habit_id"],[140,57,144,55],[140,62,144,60,"habit"],[140,67,144,65],[140,68,144,66,"id"],[140,70,144,68],[140,71,144,69],[141,8,145,6],[141,15,145,13],[142,10,146,8,"habit_id"],[142,18,146,16],[142,20,146,18,"habit"],[142,25,146,23],[142,26,146,24,"id"],[142,28,146,26],[143,10,147,8,"name"],[143,14,147,12],[143,16,147,14,"habit"],[143,21,147,19],[143,22,147,20,"name"],[143,26,147,24],[144,10,148,8,"icon"],[144,14,148,12],[144,16,148,14,"habit"],[144,21,148,19],[144,22,148,20,"icon"],[144,26,148,24],[145,10,149,8,"completed"],[145,19,149,17],[145,21,149,19,"dayProgress"],[145,32,149,30],[145,34,149,32,"completed"],[145,43,149,41],[145,47,149,45],[145,52,149,50],[146,10,150,8,"note"],[146,14,150,12],[146,16,150,14,"dayProgress"],[146,27,150,25],[146,29,150,27,"note"],[146,33,150,31],[146,37,150,35],[146,39,150,37],[147,10,151,8,"streak"],[147,16,151,14],[147,18,151,16,"habit"],[147,23,151,21],[147,24,151,22,"current_streak"],[148,8,152,6],[148,9,152,7],[149,6,153,4],[149,7,153,5],[149,8,153,6],[150,6,155,4],[150,13,155,11],[151,8,155,13,"progress"],[151,16,155,21],[151,18,155,23,"progressData"],[152,6,155,36],[152,7,155,37],[153,4,156,2],[153,5,156,3],[154,4,158,2],[155,4,159,2],[155,10,159,8,"update"],[155,16,159,14,"update"],[155,17,159,15,"habitId"],[155,24,159,22],[155,26,159,24,"date"],[155,30,159,28],[155,32,159,30,"completed"],[155,41,159,39],[155,43,159,41,"note"],[155,47,159,45],[155,50,159,48],[155,52,159,50],[155,54,159,52],[156,6,160,4],[157,6,161,4],[158,6,162,4],[158,12,162,10,"userId"],[158,18,162,16],[158,21,162,19],[158,35,162,33],[160,6,164,4],[161,6,165,4],[161,12,165,10],[162,8,165,12,"data"],[162,12,165,16],[162,14,165,18,"existingProgress"],[163,6,165,35],[163,7,165,36],[163,10,165,39],[163,16,165,45,"supabase"],[163,34,165,53],[163,35,166,7,"from"],[163,39,166,11],[163,40,166,12],[163,50,166,22],[163,51,166,23],[163,52,167,7,"select"],[163,58,167,13],[163,59,167,14],[163,62,167,17],[163,63,167,18],[163,64,168,7,"eq"],[163,66,168,9],[163,67,168,10],[163,77,168,20],[163,79,168,22,"habitId"],[163,86,168,29],[163,87,168,30],[163,88,169,7,"eq"],[163,90,169,9],[163,91,169,10],[163,108,169,27],[163,110,169,29,"date"],[163,114,169,33],[163,115,169,34],[163,116,170,7,"eq"],[163,118,170,9],[163,119,170,10],[163,128,170,19],[163,130,170,21,"user"],[163,134,170,25],[163,135,170,26,"id"],[163,137,170,28],[163,138,170,29],[163,139,171,7,"single"],[163,145,171,13],[163,146,171,14],[163,147,171,15],[164,6,173,4],[164,10,173,8,"result"],[164,16,173,14],[165,6,174,4],[165,10,174,8,"existingProgress"],[165,26,174,24],[165,28,174,26],[166,8,175,6],[167,8,176,6],[167,14,176,12],[168,10,176,14,"data"],[168,14,176,18],[169,10,176,20,"error"],[170,8,176,26],[170,9,176,27],[170,12,176,30],[170,18,176,36,"supabase"],[170,36,176,44],[170,37,177,9,"from"],[170,41,177,13],[170,42,177,14],[170,52,177,24],[170,53,177,25],[170,54,178,9,"update"],[170,60,178,15],[170,61,178,16],[171,10,178,18,"completed"],[171,19,178,27],[172,10,178,29,"note"],[173,8,178,34],[173,9,178,35],[173,10,178,36],[173,11,179,9,"eq"],[173,13,179,11],[173,14,179,12],[173,18,179,16],[173,20,179,18,"existingProgress"],[173,36,179,34],[173,37,179,35,"id"],[173,39,179,37],[173,40,179,38],[173,41,180,9,"select"],[173,47,180,15],[173,48,180,16],[173,49,180,17],[173,50,181,9,"single"],[173,56,181,15],[173,57,181,16],[173,58,181,17],[174,8,183,6],[174,12,183,10,"error"],[174,17,183,15],[174,19,183,17],[174,25,183,23,"error"],[174,30,183,28],[175,8,184,6,"result"],[175,14,184,12],[175,17,184,15,"data"],[175,21,184,19],[176,6,185,4],[176,7,185,5],[176,13,185,11],[177,8,186,6],[178,8,187,6],[178,14,187,12],[179,10,187,14,"data"],[179,14,187,18],[180,10,187,20,"error"],[181,8,187,26],[181,9,187,27],[181,12,187,30],[181,18,187,36,"supabase"],[181,36,187,44],[181,37,188,9,"from"],[181,41,188,13],[181,42,188,14],[181,52,188,24],[181,53,188,25],[181,54,189,9,"insert"],[181,60,189,15],[181,61,189,16],[181,62,189,17],[182,10,190,10,"habit_id"],[182,18,190,18],[182,20,190,20,"habitId"],[182,27,190,27],[183,10,191,10,"completion_date"],[183,25,191,25],[183,27,191,27,"date"],[183,31,191,31],[184,10,192,10,"completed"],[184,19,192,19],[185,10,193,10,"note"],[185,14,193,14],[186,10,194,10,"user_id"],[186,17,194,17],[186,19,194,19,"user"],[186,23,194,23],[186,24,194,24,"id"],[187,8,195,8],[187,9,195,9],[187,10,195,10],[187,11,195,11],[187,12,196,9,"select"],[187,18,196,15],[187,19,196,16],[187,20,196,17],[187,21,197,9,"single"],[187,27,197,15],[187,28,197,16],[187,29,197,17],[188,8,199,6],[188,12,199,10,"error"],[188,17,199,15],[188,19,199,17],[188,25,199,23,"error"],[188,30,199,28],[189,8,200,6,"result"],[189,14,200,12],[189,17,200,15,"data"],[189,21,200,19],[190,6,201,4],[192,6,203,4],[193,6,204,4],[193,12,204,10,"habitsService"],[193,25,204,23],[193,26,204,24,"updateStreaks"],[193,39,204,37],[193,40,204,38,"habitId"],[193,47,204,45],[193,49,204,47,"completed"],[193,58,204,56],[193,59,204,57],[194,6,206,4],[194,13,206,11],[195,8,206,13,"success"],[195,15,206,20],[195,17,206,22],[195,21,206,26],[196,8,206,28,"progress"],[196,16,206,36],[196,18,206,38,"result"],[197,6,206,45],[197,7,206,46],[198,4,207,2],[198,5,207,3],[199,4,209,2],[200,4,210,2],[200,10,210,8,"getByHabitAndDateRange"],[200,32,210,30,"getByHabitAndDateRange"],[200,33,210,31,"habitId"],[200,40,210,38],[200,42,210,40,"startDate"],[200,51,210,49],[200,53,210,51,"endDate"],[200,60,210,58],[200,62,210,60],[201,6,211,4],[201,12,211,10],[202,8,211,12,"data"],[202,12,211,16],[202,14,211,18],[203,10,211,20,"user"],[204,8,211,25],[205,6,211,27],[205,7,211,28],[205,10,211,31],[205,16,211,37,"supabase"],[205,34,211,45],[205,35,211,46,"auth"],[205,39,211,50],[205,40,211,51,"getUser"],[205,47,211,58],[205,48,211,59],[205,49,211,60],[206,6,212,4],[206,10,212,8],[206,11,212,9,"user"],[206,15,212,13],[206,17,212,15],[206,23,212,21],[206,27,212,25,"Error"],[206,32,212,30],[206,33,212,31],[206,57,212,55],[206,58,212,56],[207,6,214,4],[207,12,214,10],[208,8,214,12,"data"],[208,12,214,16],[208,14,214,18,"progress"],[208,22,214,26],[209,8,214,28,"error"],[210,6,214,34],[210,7,214,35],[210,10,214,38],[210,16,214,44,"supabase"],[210,34,214,52],[210,35,215,7,"from"],[210,39,215,11],[210,40,215,12],[210,50,215,22],[210,51,215,23],[210,52,216,7,"select"],[210,58,216,13],[210,59,216,14],[210,62,216,17],[210,63,216,18],[210,64,217,7,"eq"],[210,66,217,9],[210,67,217,10],[210,77,217,20],[210,79,217,22,"habitId"],[210,86,217,29],[210,87,217,30],[210,88,218,7,"eq"],[210,90,218,9],[210,91,218,10],[210,100,218,19],[210,102,218,21,"user"],[210,106,218,25],[210,107,218,26,"id"],[210,109,218,28],[210,110,218,29],[210,111,219,7,"gte"],[210,114,219,10],[210,115,219,11],[210,132,219,28],[210,134,219,30,"startDate"],[210,143,219,39],[210,144,219,40],[210,145,220,7,"lte"],[210,148,220,10],[210,149,220,11],[210,166,220,28],[210,168,220,30,"endDate"],[210,175,220,37],[210,176,220,38],[211,6,222,4],[211,10,222,8,"error"],[211,15,222,13],[211,17,222,15],[211,23,222,21,"error"],[211,28,222,26],[213,6,224,4],[214,6,225,4],[214,12,225,10,"progressByDate"],[214,26,225,24],[214,29,225,27],[214,30,225,28],[214,31,225,29],[215,6,226,4,"progress"],[215,14,226,12],[215,15,226,13,"forEach"],[215,22,226,20],[215,23,226,21,"p"],[215,24,226,22],[215,28,226,26],[216,8,227,6,"progressByDate"],[216,22,227,20],[216,23,227,21,"p"],[216,24,227,22],[216,25,227,23,"completion_date"],[216,40,227,38],[216,41,227,39],[216,44,227,42,"p"],[216,45,227,43],[217,6,228,4],[217,7,228,5],[217,8,228,6],[218,6,230,4],[218,13,230,11],[219,8,230,13,"progress"],[219,16,230,21],[219,18,230,23,"progressByDate"],[220,6,230,38],[220,7,230,39],[221,4,231,2],[222,2,232,0],[222,3,232,1],[224,2,234,0],[226,2,236,7],[226,8,236,13,"calendarService"],[226,23,236,28],[226,26,236,28,"exports"],[226,33,236,28],[226,34,236,28,"calendarService"],[226,49,236,28],[226,52,236,31],[227,4,237,2],[228,4,238,2],[228,10,238,8,"getMonthData"],[228,22,238,20,"getMonthData"],[228,23,238,21,"year"],[228,27,238,25],[228,29,238,27,"month"],[228,34,238,32],[228,36,238,34],[229,6,239,4],[229,12,239,10],[230,8,239,12,"data"],[230,12,239,16],[230,14,239,18],[231,10,239,20,"user"],[232,8,239,25],[233,6,239,27],[233,7,239,28],[233,10,239,31],[233,16,239,37,"supabase"],[233,34,239,45],[233,35,239,46,"auth"],[233,39,239,50],[233,40,239,51,"getUser"],[233,47,239,58],[233,48,239,59],[233,49,239,60],[234,6,240,4],[234,10,240,8],[234,11,240,9,"user"],[234,15,240,13],[234,17,240,15],[234,23,240,21],[234,27,240,25,"Error"],[234,32,240,30],[234,33,240,31],[234,57,240,55],[234,58,240,56],[236,6,242,4],[237,6,243,4],[237,12,243,10,"startDate"],[237,21,243,19],[237,24,243,22],[237,27,243,25,"year"],[237,31,243,29],[237,35,243,33,"String"],[237,41,243,39],[237,42,243,40,"month"],[237,47,243,45],[237,48,243,46],[237,49,243,47,"padStart"],[237,57,243,55],[237,58,243,56],[237,59,243,57],[237,61,243,59],[237,64,243,62],[237,65,243,63],[237,70,243,68],[238,6,244,4],[238,12,244,10,"endDate"],[238,19,244,17],[238,22,244,20],[238,25,244,23,"year"],[238,29,244,27],[238,33,244,31,"String"],[238,39,244,37],[238,40,244,38,"month"],[238,45,244,43],[238,46,244,44],[238,47,244,45,"padStart"],[238,55,244,53],[238,56,244,54],[238,57,244,55],[238,59,244,57],[238,62,244,60],[238,63,244,61],[238,67,244,65],[238,71,244,69,"Date"],[238,75,244,73],[238,76,244,74,"year"],[238,80,244,78],[238,82,244,80,"month"],[238,87,244,85],[238,89,244,87],[238,90,244,88],[238,91,244,89],[238,92,244,90,"getDate"],[238,99,244,97],[238,100,244,98],[238,101,244,99],[238,103,244,101],[240,6,246,4],[241,6,247,4],[241,12,247,10],[242,8,247,12,"data"],[242,12,247,16],[242,14,247,18,"progress"],[242,22,247,26],[243,8,247,28,"error"],[244,6,247,34],[244,7,247,35],[244,10,247,38],[244,16,247,44,"supabase"],[244,34,247,52],[244,35,248,7,"from"],[244,39,248,11],[244,40,248,12],[244,50,248,22],[244,51,248,23],[244,52,249,7,"select"],[244,58,249,13],[244,59,249,14],[244,87,249,42],[244,88,249,43],[244,89,250,7,"eq"],[244,91,250,9],[244,92,250,10],[244,101,250,19],[244,103,250,21,"user"],[244,107,250,25],[244,108,250,26,"id"],[244,110,250,28],[244,111,250,29],[244,112,251,7,"gte"],[244,115,251,10],[244,116,251,11],[244,133,251,28],[244,135,251,30,"startDate"],[244,144,251,39],[244,145,251,40],[244,146,252,7,"lte"],[244,149,252,10],[244,150,252,11],[244,167,252,28],[244,169,252,30,"endDate"],[244,176,252,37],[244,177,252,38],[245,6,254,4],[245,10,254,8,"error"],[245,15,254,13],[245,17,254,15],[245,23,254,21,"error"],[245,28,254,26],[247,6,256,4],[248,6,257,4],[248,12,257,10,"daysInMonth"],[248,23,257,21],[248,26,257,24],[248,30,257,28,"Date"],[248,34,257,32],[248,35,257,33,"year"],[248,39,257,37],[248,41,257,39,"month"],[248,46,257,44],[248,48,257,46],[248,49,257,47],[248,50,257,48],[248,51,257,49,"getDate"],[248,58,257,56],[248,59,257,57],[248,60,257,58],[249,6,258,4],[249,12,258,10,"firstDay"],[249,20,258,18],[249,23,258,21],[249,27,258,25,"Date"],[249,31,258,29],[249,32,258,30,"year"],[249,36,258,34],[249,38,258,36,"month"],[249,43,258,41],[249,46,258,44],[249,47,258,45],[249,49,258,47],[249,50,258,48],[249,51,258,49],[249,52,258,50,"getDay"],[249,58,258,56],[249,59,258,57],[249,60,258,58],[250,6,259,4],[250,12,259,10,"today"],[250,17,259,15],[250,20,259,18],[250,24,259,22,"Date"],[250,28,259,26],[250,29,259,27],[250,30,259,28],[251,6,261,4],[251,12,261,10,"calendarData"],[251,24,261,22],[251,27,261,25],[251,29,261,27],[253,6,263,4],[254,6,264,4],[254,11,264,9],[254,15,264,13,"i"],[254,16,264,14],[254,19,264,17],[254,20,264,18],[254,22,264,20,"i"],[254,23,264,21],[254,26,264,24,"firstDay"],[254,34,264,32],[254,36,264,34,"i"],[254,37,264,35],[254,39,264,37],[254,41,264,39],[255,8,265,6,"calendarData"],[255,20,265,18],[255,21,265,19,"push"],[255,25,265,23],[255,26,265,24],[255,30,265,28],[255,31,265,29],[256,6,266,4],[258,6,268,4],[259,6,269,4],[259,11,269,9],[259,15,269,13,"day"],[259,18,269,16],[259,21,269,19],[259,22,269,20],[259,24,269,22,"day"],[259,27,269,25],[259,31,269,29,"daysInMonth"],[259,42,269,40],[259,44,269,42,"day"],[259,47,269,45],[259,49,269,47],[259,51,269,49],[260,8,270,6],[260,14,270,12,"dateStr"],[260,21,270,19],[260,24,270,22],[260,27,270,25,"year"],[260,31,270,29],[260,35,270,33,"String"],[260,41,270,39],[260,42,270,40,"month"],[260,47,270,45],[260,48,270,46],[260,49,270,47,"padStart"],[260,57,270,55],[260,58,270,56],[260,59,270,57],[260,61,270,59],[260,64,270,62],[260,65,270,63],[260,69,270,67,"String"],[260,75,270,73],[260,76,270,74,"day"],[260,79,270,77],[260,80,270,78],[260,81,270,79,"padStart"],[260,89,270,87],[260,90,270,88],[260,91,270,89],[260,93,270,91],[260,96,270,94],[260,97,270,95],[260,99,270,97],[261,8,271,6],[261,14,271,12,"dayProgress"],[261,25,271,23],[261,28,271,26,"progress"],[261,36,271,34],[261,37,271,35,"filter"],[261,43,271,41],[261,44,271,42,"p"],[261,45,271,43],[261,49,271,47,"p"],[261,50,271,48],[261,51,271,49,"completion_date"],[261,66,271,64],[261,71,271,69,"dateStr"],[261,78,271,76],[261,82,271,80,"p"],[261,83,271,81],[261,84,271,82,"completed"],[261,93,271,91],[261,94,271,92],[262,8,272,6],[262,14,272,12,"isToday"],[262,21,272,19],[262,24,272,22,"day"],[262,27,272,25],[262,32,272,30,"today"],[262,37,272,35],[262,38,272,36,"getDate"],[262,45,272,43],[262,46,272,44],[262,47,272,45],[262,51,273,21,"month"],[262,56,273,26],[262,61,273,31,"today"],[262,66,273,36],[262,67,273,37,"getMonth"],[262,75,273,45],[262,76,273,46],[262,77,273,47],[262,80,273,50],[262,81,273,51],[262,85,274,21,"year"],[262,89,274,25],[262,94,274,30,"today"],[262,99,274,35],[262,100,274,36,"getFullYear"],[262,111,274,47],[262,112,274,48],[262,113,274,49],[263,8,276,6,"calendarData"],[263,20,276,18],[263,21,276,19,"push"],[263,25,276,23],[263,26,276,24],[264,10,277,8,"day"],[264,13,277,11],[265,10,278,8,"completions"],[265,21,278,19],[265,23,278,21,"dayProgress"],[265,34,278,32],[265,35,278,33,"length"],[265,41,278,39],[266,10,279,8,"is_today"],[266,18,279,16],[266,20,279,18,"isToday"],[267,8,280,6],[267,9,280,7],[267,10,280,8],[268,6,281,4],[270,6,283,4],[271,6,284,4],[271,12,284,10,"activeDays"],[271,22,284,20],[271,25,284,23,"progress"],[271,33,284,31],[271,34,284,32,"filter"],[271,40,284,38],[271,41,284,39,"p"],[271,42,284,40],[271,46,284,44,"p"],[271,47,284,45],[271,48,284,46,"completed"],[271,57,284,55],[271,58,284,56],[271,59,284,57,"length"],[271,65,284,63],[272,6,285,4],[272,12,285,10,"totalCompletions"],[272,28,285,26],[272,31,285,29,"progress"],[272,39,285,37],[272,40,285,38,"filter"],[272,46,285,44],[272,47,285,45,"p"],[272,48,285,46],[272,52,285,50,"p"],[272,53,285,51],[272,54,285,52,"completed"],[272,63,285,61],[272,64,285,62],[272,65,285,63,"length"],[272,71,285,69],[273,6,287,4],[273,13,287,11],[274,8,288,6,"calendarData"],[274,20,288,18],[275,8,289,6,"stats"],[275,13,289,11],[275,15,289,13],[276,10,290,8,"active_days"],[276,21,290,19],[276,23,290,21,"activeDays"],[276,33,290,31],[277,10,291,8,"total_completions"],[277,27,291,25],[277,29,291,27,"totalCompletions"],[278,8,292,6],[279,6,293,4],[279,7,293,5],[280,4,294,2],[281,2,295,0],[281,3,295,1],[283,2,297,0],[285,2,299,7],[285,8,299,13,"authService"],[285,19,299,24],[285,22,299,24,"exports"],[285,29,299,24],[285,30,299,24,"authService"],[285,41,299,24],[285,44,299,27],[286,4,300,2],[287,4,301,2],[287,10,301,8,"getCurrentUser"],[287,24,301,22,"getCurrentUser"],[287,25,301,22],[287,27,301,25],[288,6,302,4],[288,12,302,10],[289,8,302,12,"data"],[289,12,302,16],[289,14,302,18],[290,10,302,20,"user"],[291,8,302,25],[292,6,302,27],[292,7,302,28],[292,10,302,31],[292,16,302,37,"supabase"],[292,34,302,45],[292,35,302,46,"auth"],[292,39,302,50],[292,40,302,51,"getUser"],[292,47,302,58],[292,48,302,59],[292,49,302,60],[293,6,303,4],[293,13,303,11,"user"],[293,17,303,15],[294,4,304,2],[294,5,304,3],[295,4,306,2],[296,4,307,2],[296,10,307,8,"signOut"],[296,17,307,15,"signOut"],[296,18,307,15],[296,20,307,18],[297,6,308,4],[297,12,308,10],[298,8,308,12,"error"],[299,6,308,18],[299,7,308,19],[299,10,308,22],[299,16,308,28,"supabase"],[299,34,308,36],[299,35,308,37,"auth"],[299,39,308,41],[299,40,308,42,"signOut"],[299,47,308,49],[299,48,308,50],[299,49,308,51],[300,6,309,4],[300,10,309,8,"error"],[300,15,309,13],[300,17,309,15],[300,23,309,21,"error"],[300,28,309,26],[301,4,310,2],[301,5,310,3],[302,4,312,2],[303,4,313,2,"onAuthStateChange"],[303,21,313,19,"onAuthStateChange"],[303,22,313,20,"callback"],[303,30,313,28],[303,32,313,30],[304,6,314,4],[304,13,314,11,"supabase"],[304,31,314,19],[304,32,314,20,"auth"],[304,36,314,24],[304,37,314,25,"onAuthStateChange"],[304,54,314,42],[304,55,314,43,"callback"],[304,63,314,51],[304,64,314,52],[305,4,315,2],[306,2,316,0],[306,3,316,1],[307,0,316,2],[307,3]],"functionMap":{"names":["<global>","habitsService.getAll","habitsService.create","habitsService.update","habitsService._delete","habitsService.getById","habitsService.updateStreaks","progressService.getByDate","allHabits.map$argument_0","progress.find$argument_0","progressService.update","progressService.getByHabitAndDateRange","progress.forEach$argument_0","calendarService.getMonthData","progress.filter$argument_0","authService.getCurrentUser","authService.signOut","authService.onAuthStateChange"],"mappings":"AAA;ECM;GDQ;EEG;GFe;EGG;GHU;EIG;GJQ;EKG;GLS;EMG;GNkC;EOO;uCC8B;wCCC,4BD;KDS;GPG;EUG;GVgD;EWG;qBCgB;KDE;GXG;EaO;0CCiC,iDD;uCCa,gBD;6CCC,gBD;GbS;EeO;GfG;EgBG;GhBG;EiBG;GjBE"}},"type":"js/module"}]}