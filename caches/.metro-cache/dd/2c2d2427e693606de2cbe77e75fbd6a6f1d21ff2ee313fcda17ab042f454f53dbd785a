{"dependencies":[{"name":"../tracing/dynamicSamplingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"FvwhgvpQZsL+PnAoapZrk+Q+d08=","exportNames":["*"]}},{"name":"../utils-hoist/object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":61,"index":151}}],"key":"IWRGqGXR51VGNaoabCqwsNvBzK0=","exportNames":["*"]}},{"name":"./merge.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":152},"end":{"line":3,"column":35,"index":187}}],"key":"mAVMCHNy5nVMUz639jeQ40yNQGw=","exportNames":["*"]}},{"name":"./spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":77,"index":265}}],"key":"pE6EbrkYaK+zZjEPcLbMGlNIybs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.applyScopeDataToEvent = applyScopeDataToEvent;\n  exports.mergeAndOverwriteScopeData = mergeAndOverwriteScopeData;\n  exports.mergeScopeData = mergeScopeData;\n  var _dynamicSamplingContext = require(_dependencyMap[0], \"../tracing/dynamicSamplingContext.js\");\n  var _object = require(_dependencyMap[1], \"../utils-hoist/object.js\");\n  var _merge = require(_dependencyMap[2], \"./merge.js\");\n  var _spanUtils = require(_dependencyMap[3], \"./spanUtils.js\");\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   */\n  function applyScopeDataToEvent(event, data) {\n    const {\n      fingerprint,\n      span,\n      breadcrumbs,\n      sdkProcessingMetadata\n    } = data;\n\n    // Apply general data\n    applyDataToEvent(event, data);\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (span) {\n      applySpanToEvent(event, span);\n    }\n    applyFingerprintToEvent(event, fingerprint);\n    applyBreadcrumbsToEvent(event, breadcrumbs);\n    applySdkMetadataToEvent(event, sdkProcessingMetadata);\n  }\n\n  /** Merge data of two scopes together. */\n  function mergeScopeData(data, mergeData) {\n    const {\n      extra,\n      tags,\n      user,\n      contexts,\n      level,\n      sdkProcessingMetadata,\n      breadcrumbs,\n      fingerprint,\n      eventProcessors,\n      attachments,\n      propagationContext,\n      transactionName,\n      span\n    } = mergeData;\n    mergeAndOverwriteScopeData(data, 'extra', extra);\n    mergeAndOverwriteScopeData(data, 'tags', tags);\n    mergeAndOverwriteScopeData(data, 'user', user);\n    mergeAndOverwriteScopeData(data, 'contexts', contexts);\n    data.sdkProcessingMetadata = (0, _merge.merge)(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n    if (level) {\n      data.level = level;\n    }\n    if (transactionName) {\n      data.transactionName = transactionName;\n    }\n    if (span) {\n      data.span = span;\n    }\n    if (breadcrumbs.length) {\n      data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n    }\n    if (fingerprint.length) {\n      data.fingerprint = [...data.fingerprint, ...fingerprint];\n    }\n    if (eventProcessors.length) {\n      data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n    }\n    if (attachments.length) {\n      data.attachments = [...data.attachments, ...attachments];\n    }\n    data.propagationContext = {\n      ...data.propagationContext,\n      ...propagationContext\n    };\n  }\n\n  /**\n   * Merges certain scope data. Undefined values will overwrite any existing values.\n   * Exported only for tests.\n   */\n  function mergeAndOverwriteScopeData(data, prop, mergeVal) {\n    data[prop] = (0, _merge.merge)(data[prop], mergeVal, 1);\n  }\n  function applyDataToEvent(event, data) {\n    const {\n      extra,\n      tags,\n      user,\n      contexts,\n      level,\n      transactionName\n    } = data;\n    const cleanedExtra = (0, _object.dropUndefinedKeys)(extra);\n    if (cleanedExtra && Object.keys(cleanedExtra).length) {\n      event.extra = {\n        ...cleanedExtra,\n        ...event.extra\n      };\n    }\n    const cleanedTags = (0, _object.dropUndefinedKeys)(tags);\n    if (cleanedTags && Object.keys(cleanedTags).length) {\n      event.tags = {\n        ...cleanedTags,\n        ...event.tags\n      };\n    }\n    const cleanedUser = (0, _object.dropUndefinedKeys)(user);\n    if (cleanedUser && Object.keys(cleanedUser).length) {\n      event.user = {\n        ...cleanedUser,\n        ...event.user\n      };\n    }\n    const cleanedContexts = (0, _object.dropUndefinedKeys)(contexts);\n    if (cleanedContexts && Object.keys(cleanedContexts).length) {\n      event.contexts = {\n        ...cleanedContexts,\n        ...event.contexts\n      };\n    }\n    if (level) {\n      event.level = level;\n    }\n\n    // transaction events get their `transaction` from the root span name\n    if (transactionName && event.type !== 'transaction') {\n      event.transaction = transactionName;\n    }\n  }\n  function applyBreadcrumbsToEvent(event, breadcrumbs) {\n    const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n    event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n  }\n  function applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...sdkProcessingMetadata\n    };\n  }\n  function applySpanToEvent(event, span) {\n    event.contexts = {\n      trace: (0, _spanUtils.spanToTraceContext)(span),\n      ...event.contexts\n    };\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: (0, _dynamicSamplingContext.getDynamicSamplingContextFromSpan)(span),\n      ...event.sdkProcessingMetadata\n    };\n    const rootSpan = (0, _spanUtils.getRootSpan)(span);\n    const transactionName = (0, _spanUtils.spanToJSON)(rootSpan).description;\n    if (transactionName && !event.transaction && event.type === 'transaction') {\n      event.transaction = transactionName;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  function applyFingerprintToEvent(event, fingerprint) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? Array.isArray(event.fingerprint) ? event.fingerprint : [event.fingerprint] : [];\n\n    // If we have something on the scope, then merge it with event\n    if (fingerprint) {\n      event.fingerprint = event.fingerprint.concat(fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n});","lineCount":183,"map":[[8,2,1,0],[8,6,1,0,"_dynamicSamplingContext"],[8,29,1,0],[8,32,1,0,"require"],[8,39,1,0],[8,40,1,0,"_dependencyMap"],[8,54,1,0],[9,2,2,0],[9,6,2,0,"_object"],[9,13,2,0],[9,16,2,0,"require"],[9,23,2,0],[9,24,2,0,"_dependencyMap"],[9,38,2,0],[10,2,3,0],[10,6,3,0,"_merge"],[10,12,3,0],[10,15,3,0,"require"],[10,22,3,0],[10,23,3,0,"_dependencyMap"],[10,37,3,0],[11,2,4,0],[11,6,4,0,"_spanUtils"],[11,16,4,0],[11,19,4,0,"require"],[11,26,4,0],[11,27,4,0,"_dependencyMap"],[11,41,4,0],[12,2,6,0],[13,0,7,0],[14,0,8,0],[15,2,9,0],[15,11,9,9,"applyScopeDataToEvent"],[15,32,9,30,"applyScopeDataToEvent"],[15,33,9,31,"event"],[15,38,9,36],[15,40,9,38,"data"],[15,44,9,42],[15,46,9,44],[16,4,10,2],[16,10,10,8],[17,6,10,10,"fingerprint"],[17,17,10,21],[18,6,10,23,"span"],[18,10,10,27],[19,6,10,29,"breadcrumbs"],[19,17,10,40],[20,6,10,42,"sdkProcessingMetadata"],[21,4,10,64],[21,5,10,65],[21,8,10,68,"data"],[21,12,10,72],[23,4,12,2],[24,4,13,2,"applyDataToEvent"],[24,20,13,18],[24,21,13,19,"event"],[24,26,13,24],[24,28,13,26,"data"],[24,32,13,30],[24,33,13,31],[26,4,15,2],[27,4,16,2],[28,4,17,2],[29,4,18,2],[29,8,18,6,"span"],[29,12,18,10],[29,14,18,12],[30,6,19,4,"applySpanToEvent"],[30,22,19,20],[30,23,19,21,"event"],[30,28,19,26],[30,30,19,28,"span"],[30,34,19,32],[30,35,19,33],[31,4,20,2],[32,4,22,2,"applyFingerprintToEvent"],[32,27,22,25],[32,28,22,26,"event"],[32,33,22,31],[32,35,22,33,"fingerprint"],[32,46,22,44],[32,47,22,45],[33,4,23,2,"applyBreadcrumbsToEvent"],[33,27,23,25],[33,28,23,26,"event"],[33,33,23,31],[33,35,23,33,"breadcrumbs"],[33,46,23,44],[33,47,23,45],[34,4,24,2,"applySdkMetadataToEvent"],[34,27,24,25],[34,28,24,26,"event"],[34,33,24,31],[34,35,24,33,"sdkProcessingMetadata"],[34,56,24,54],[34,57,24,55],[35,2,25,0],[37,2,27,0],[38,2,28,0],[38,11,28,9,"mergeScopeData"],[38,25,28,23,"mergeScopeData"],[38,26,28,24,"data"],[38,30,28,28],[38,32,28,30,"mergeData"],[38,41,28,39],[38,43,28,41],[39,4,29,2],[39,10,29,8],[40,6,30,4,"extra"],[40,11,30,9],[41,6,31,4,"tags"],[41,10,31,8],[42,6,32,4,"user"],[42,10,32,8],[43,6,33,4,"contexts"],[43,14,33,12],[44,6,34,4,"level"],[44,11,34,9],[45,6,35,4,"sdkProcessingMetadata"],[45,27,35,25],[46,6,36,4,"breadcrumbs"],[46,17,36,15],[47,6,37,4,"fingerprint"],[47,17,37,15],[48,6,38,4,"eventProcessors"],[48,21,38,19],[49,6,39,4,"attachments"],[49,17,39,15],[50,6,40,4,"propagationContext"],[50,24,40,22],[51,6,41,4,"transactionName"],[51,21,41,19],[52,6,42,4,"span"],[53,4,43,2],[53,5,43,3],[53,8,43,6,"mergeData"],[53,17,43,15],[54,4,45,2,"mergeAndOverwriteScopeData"],[54,30,45,28],[54,31,45,29,"data"],[54,35,45,33],[54,37,45,35],[54,44,45,42],[54,46,45,44,"extra"],[54,51,45,49],[54,52,45,50],[55,4,46,2,"mergeAndOverwriteScopeData"],[55,30,46,28],[55,31,46,29,"data"],[55,35,46,33],[55,37,46,35],[55,43,46,41],[55,45,46,43,"tags"],[55,49,46,47],[55,50,46,48],[56,4,47,2,"mergeAndOverwriteScopeData"],[56,30,47,28],[56,31,47,29,"data"],[56,35,47,33],[56,37,47,35],[56,43,47,41],[56,45,47,43,"user"],[56,49,47,47],[56,50,47,48],[57,4,48,2,"mergeAndOverwriteScopeData"],[57,30,48,28],[57,31,48,29,"data"],[57,35,48,33],[57,37,48,35],[57,47,48,45],[57,49,48,47,"contexts"],[57,57,48,55],[57,58,48,56],[58,4,50,2,"data"],[58,8,50,6],[58,9,50,7,"sdkProcessingMetadata"],[58,30,50,28],[58,33,50,31],[58,37,50,31,"merge"],[58,49,50,36],[58,51,50,37,"data"],[58,55,50,41],[58,56,50,42,"sdkProcessingMetadata"],[58,77,50,63],[58,79,50,65,"sdkProcessingMetadata"],[58,100,50,86],[58,102,50,88],[58,103,50,89],[58,104,50,90],[59,4,52,2],[59,8,52,6,"level"],[59,13,52,11],[59,15,52,13],[60,6,53,4,"data"],[60,10,53,8],[60,11,53,9,"level"],[60,16,53,14],[60,19,53,17,"level"],[60,24,53,22],[61,4,54,2],[62,4,56,2],[62,8,56,6,"transactionName"],[62,23,56,21],[62,25,56,23],[63,6,57,4,"data"],[63,10,57,8],[63,11,57,9,"transactionName"],[63,26,57,24],[63,29,57,27,"transactionName"],[63,44,57,42],[64,4,58,2],[65,4,60,2],[65,8,60,6,"span"],[65,12,60,10],[65,14,60,12],[66,6,61,4,"data"],[66,10,61,8],[66,11,61,9,"span"],[66,15,61,13],[66,18,61,16,"span"],[66,22,61,20],[67,4,62,2],[68,4,64,2],[68,8,64,6,"breadcrumbs"],[68,19,64,17],[68,20,64,18,"length"],[68,26,64,24],[68,28,64,26],[69,6,65,4,"data"],[69,10,65,8],[69,11,65,9,"breadcrumbs"],[69,22,65,20],[69,25,65,23],[69,26,65,24],[69,29,65,27,"data"],[69,33,65,31],[69,34,65,32,"breadcrumbs"],[69,45,65,43],[69,47,65,45],[69,50,65,48,"breadcrumbs"],[69,61,65,59],[69,62,65,60],[70,4,66,2],[71,4,68,2],[71,8,68,6,"fingerprint"],[71,19,68,17],[71,20,68,18,"length"],[71,26,68,24],[71,28,68,26],[72,6,69,4,"data"],[72,10,69,8],[72,11,69,9,"fingerprint"],[72,22,69,20],[72,25,69,23],[72,26,69,24],[72,29,69,27,"data"],[72,33,69,31],[72,34,69,32,"fingerprint"],[72,45,69,43],[72,47,69,45],[72,50,69,48,"fingerprint"],[72,61,69,59],[72,62,69,60],[73,4,70,2],[74,4,72,2],[74,8,72,6,"eventProcessors"],[74,23,72,21],[74,24,72,22,"length"],[74,30,72,28],[74,32,72,30],[75,6,73,4,"data"],[75,10,73,8],[75,11,73,9,"eventProcessors"],[75,26,73,24],[75,29,73,27],[75,30,73,28],[75,33,73,31,"data"],[75,37,73,35],[75,38,73,36,"eventProcessors"],[75,53,73,51],[75,55,73,53],[75,58,73,56,"eventProcessors"],[75,73,73,71],[75,74,73,72],[76,4,74,2],[77,4,76,2],[77,8,76,6,"attachments"],[77,19,76,17],[77,20,76,18,"length"],[77,26,76,24],[77,28,76,26],[78,6,77,4,"data"],[78,10,77,8],[78,11,77,9,"attachments"],[78,22,77,20],[78,25,77,23],[78,26,77,24],[78,29,77,27,"data"],[78,33,77,31],[78,34,77,32,"attachments"],[78,45,77,43],[78,47,77,45],[78,50,77,48,"attachments"],[78,61,77,59],[78,62,77,60],[79,4,78,2],[80,4,80,2,"data"],[80,8,80,6],[80,9,80,7,"propagationContext"],[80,27,80,25],[80,30,80,28],[81,6,80,30],[81,9,80,33,"data"],[81,13,80,37],[81,14,80,38,"propagationContext"],[81,32,80,56],[82,6,80,58],[82,9,80,61,"propagationContext"],[83,4,80,80],[83,5,80,81],[84,2,81,0],[86,2,83,0],[87,0,84,0],[88,0,85,0],[89,0,86,0],[90,2,87,0],[90,11,87,9,"mergeAndOverwriteScopeData"],[90,37,87,35,"mergeAndOverwriteScopeData"],[90,38,89,1,"data"],[90,42,89,5],[90,44,89,7,"prop"],[90,48,89,11],[90,50,89,13,"mergeVal"],[90,58,89,21],[90,60,89,23],[91,4,90,2,"data"],[91,8,90,6],[91,9,90,7,"prop"],[91,13,90,11],[91,14,90,12],[91,17,90,15],[91,21,90,15,"merge"],[91,33,90,20],[91,35,90,21,"data"],[91,39,90,25],[91,40,90,26,"prop"],[91,44,90,30],[91,45,90,31],[91,47,90,33,"mergeVal"],[91,55,90,41],[91,57,90,43],[91,58,90,44],[91,59,90,45],[92,2,91,0],[93,2,93,0],[93,11,93,9,"applyDataToEvent"],[93,27,93,25,"applyDataToEvent"],[93,28,93,26,"event"],[93,33,93,31],[93,35,93,33,"data"],[93,39,93,37],[93,41,93,39],[94,4,94,2],[94,10,94,8],[95,6,94,10,"extra"],[95,11,94,15],[96,6,94,17,"tags"],[96,10,94,21],[97,6,94,23,"user"],[97,10,94,27],[98,6,94,29,"contexts"],[98,14,94,37],[99,6,94,39,"level"],[99,11,94,44],[100,6,94,46,"transactionName"],[101,4,94,62],[101,5,94,63],[101,8,94,66,"data"],[101,12,94,70],[102,4,96,2],[102,10,96,8,"cleanedExtra"],[102,22,96,20],[102,25,96,23],[102,29,96,23,"dropUndefinedKeys"],[102,54,96,40],[102,56,96,41,"extra"],[102,61,96,46],[102,62,96,47],[103,4,97,2],[103,8,97,6,"cleanedExtra"],[103,20,97,18],[103,24,97,22,"Object"],[103,30,97,28],[103,31,97,29,"keys"],[103,35,97,33],[103,36,97,34,"cleanedExtra"],[103,48,97,46],[103,49,97,47],[103,50,97,48,"length"],[103,56,97,54],[103,58,97,56],[104,6,98,4,"event"],[104,11,98,9],[104,12,98,10,"extra"],[104,17,98,15],[104,20,98,18],[105,8,98,20],[105,11,98,23,"cleanedExtra"],[105,23,98,35],[106,8,98,37],[106,11,98,40,"event"],[106,16,98,45],[106,17,98,46,"extra"],[107,6,98,52],[107,7,98,53],[108,4,99,2],[109,4,101,2],[109,10,101,8,"cleanedTags"],[109,21,101,19],[109,24,101,22],[109,28,101,22,"dropUndefinedKeys"],[109,53,101,39],[109,55,101,40,"tags"],[109,59,101,44],[109,60,101,45],[110,4,102,2],[110,8,102,6,"cleanedTags"],[110,19,102,17],[110,23,102,21,"Object"],[110,29,102,27],[110,30,102,28,"keys"],[110,34,102,32],[110,35,102,33,"cleanedTags"],[110,46,102,44],[110,47,102,45],[110,48,102,46,"length"],[110,54,102,52],[110,56,102,54],[111,6,103,4,"event"],[111,11,103,9],[111,12,103,10,"tags"],[111,16,103,14],[111,19,103,17],[112,8,103,19],[112,11,103,22,"cleanedTags"],[112,22,103,33],[113,8,103,35],[113,11,103,38,"event"],[113,16,103,43],[113,17,103,44,"tags"],[114,6,103,49],[114,7,103,50],[115,4,104,2],[116,4,106,2],[116,10,106,8,"cleanedUser"],[116,21,106,19],[116,24,106,22],[116,28,106,22,"dropUndefinedKeys"],[116,53,106,39],[116,55,106,40,"user"],[116,59,106,44],[116,60,106,45],[117,4,107,2],[117,8,107,6,"cleanedUser"],[117,19,107,17],[117,23,107,21,"Object"],[117,29,107,27],[117,30,107,28,"keys"],[117,34,107,32],[117,35,107,33,"cleanedUser"],[117,46,107,44],[117,47,107,45],[117,48,107,46,"length"],[117,54,107,52],[117,56,107,54],[118,6,108,4,"event"],[118,11,108,9],[118,12,108,10,"user"],[118,16,108,14],[118,19,108,17],[119,8,108,19],[119,11,108,22,"cleanedUser"],[119,22,108,33],[120,8,108,35],[120,11,108,38,"event"],[120,16,108,43],[120,17,108,44,"user"],[121,6,108,49],[121,7,108,50],[122,4,109,2],[123,4,111,2],[123,10,111,8,"cleanedContexts"],[123,25,111,23],[123,28,111,26],[123,32,111,26,"dropUndefinedKeys"],[123,57,111,43],[123,59,111,44,"contexts"],[123,67,111,52],[123,68,111,53],[124,4,112,2],[124,8,112,6,"cleanedContexts"],[124,23,112,21],[124,27,112,25,"Object"],[124,33,112,31],[124,34,112,32,"keys"],[124,38,112,36],[124,39,112,37,"cleanedContexts"],[124,54,112,52],[124,55,112,53],[124,56,112,54,"length"],[124,62,112,60],[124,64,112,62],[125,6,113,4,"event"],[125,11,113,9],[125,12,113,10,"contexts"],[125,20,113,18],[125,23,113,21],[126,8,113,23],[126,11,113,26,"cleanedContexts"],[126,26,113,41],[127,8,113,43],[127,11,113,46,"event"],[127,16,113,51],[127,17,113,52,"contexts"],[128,6,113,61],[128,7,113,62],[129,4,114,2],[130,4,116,2],[130,8,116,6,"level"],[130,13,116,11],[130,15,116,13],[131,6,117,4,"event"],[131,11,117,9],[131,12,117,10,"level"],[131,17,117,15],[131,20,117,18,"level"],[131,25,117,23],[132,4,118,2],[134,4,120,2],[135,4,121,2],[135,8,121,6,"transactionName"],[135,23,121,21],[135,27,121,25,"event"],[135,32,121,30],[135,33,121,31,"type"],[135,37,121,35],[135,42,121,40],[135,55,121,53],[135,57,121,55],[136,6,122,4,"event"],[136,11,122,9],[136,12,122,10,"transaction"],[136,23,122,21],[136,26,122,24,"transactionName"],[136,41,122,39],[137,4,123,2],[138,2,124,0],[139,2,126,0],[139,11,126,9,"applyBreadcrumbsToEvent"],[139,34,126,32,"applyBreadcrumbsToEvent"],[139,35,126,33,"event"],[139,40,126,38],[139,42,126,40,"breadcrumbs"],[139,53,126,51],[139,55,126,53],[140,4,127,2],[140,10,127,8,"mergedBreadcrumbs"],[140,27,127,25],[140,30,127,28],[140,31,127,29],[140,35,127,33,"event"],[140,40,127,38],[140,41,127,39,"breadcrumbs"],[140,52,127,50],[140,56,127,54],[140,58,127,56],[140,59,127,57],[140,61,127,59],[140,64,127,62,"breadcrumbs"],[140,75,127,73],[140,76,127,74],[141,4,128,2,"event"],[141,9,128,7],[141,10,128,8,"breadcrumbs"],[141,21,128,19],[141,24,128,22,"mergedBreadcrumbs"],[141,41,128,39],[141,42,128,40,"length"],[141,48,128,46],[141,51,128,49,"mergedBreadcrumbs"],[141,68,128,66],[141,71,128,69,"undefined"],[141,80,128,78],[142,2,129,0],[143,2,131,0],[143,11,131,9,"applySdkMetadataToEvent"],[143,34,131,32,"applySdkMetadataToEvent"],[143,35,131,33,"event"],[143,40,131,38],[143,42,131,40,"sdkProcessingMetadata"],[143,63,131,61],[143,65,131,63],[144,4,132,2,"event"],[144,9,132,7],[144,10,132,8,"sdkProcessingMetadata"],[144,31,132,29],[144,34,132,32],[145,6,133,4],[145,9,133,7,"event"],[145,14,133,12],[145,15,133,13,"sdkProcessingMetadata"],[145,36,133,34],[146,6,134,4],[146,9,134,7,"sdkProcessingMetadata"],[147,4,135,2],[147,5,135,3],[148,2,136,0],[149,2,138,0],[149,11,138,9,"applySpanToEvent"],[149,27,138,25,"applySpanToEvent"],[149,28,138,26,"event"],[149,33,138,31],[149,35,138,33,"span"],[149,39,138,37],[149,41,138,39],[150,4,139,2,"event"],[150,9,139,7],[150,10,139,8,"contexts"],[150,18,139,16],[150,21,139,19],[151,6,140,4,"trace"],[151,11,140,9],[151,13,140,11],[151,17,140,11,"spanToTraceContext"],[151,46,140,29],[151,48,140,30,"span"],[151,52,140,34],[151,53,140,35],[152,6,141,4],[152,9,141,7,"event"],[152,14,141,12],[152,15,141,13,"contexts"],[153,4,142,2],[153,5,142,3],[154,4,144,2,"event"],[154,9,144,7],[154,10,144,8,"sdkProcessingMetadata"],[154,31,144,29],[154,34,144,32],[155,6,145,4,"dynamicSamplingContext"],[155,28,145,26],[155,30,145,28],[155,34,145,28,"getDynamicSamplingContextFromSpan"],[155,91,145,61],[155,93,145,62,"span"],[155,97,145,66],[155,98,145,67],[156,6,146,4],[156,9,146,7,"event"],[156,14,146,12],[156,15,146,13,"sdkProcessingMetadata"],[157,4,147,2],[157,5,147,3],[158,4,149,2],[158,10,149,8,"rootSpan"],[158,18,149,16],[158,21,149,19],[158,25,149,19,"getRootSpan"],[158,47,149,30],[158,49,149,31,"span"],[158,53,149,35],[158,54,149,36],[159,4,150,2],[159,10,150,8,"transactionName"],[159,25,150,23],[159,28,150,26],[159,32,150,26,"spanToJSON"],[159,53,150,36],[159,55,150,37,"rootSpan"],[159,63,150,45],[159,64,150,46],[159,65,150,47,"description"],[159,76,150,58],[160,4,151,2],[160,8,151,6,"transactionName"],[160,23,151,21],[160,27,151,25],[160,28,151,26,"event"],[160,33,151,31],[160,34,151,32,"transaction"],[160,45,151,43],[160,49,151,47,"event"],[160,54,151,52],[160,55,151,53,"type"],[160,59,151,57],[160,64,151,62],[160,77,151,75],[160,79,151,77],[161,6,152,4,"event"],[161,11,152,9],[161,12,152,10,"transaction"],[161,23,152,21],[161,26,152,24,"transactionName"],[161,41,152,39],[162,4,153,2],[163,2,154,0],[165,2,156,0],[166,0,157,0],[167,0,158,0],[168,0,159,0],[169,2,160,0],[169,11,160,9,"applyFingerprintToEvent"],[169,34,160,32,"applyFingerprintToEvent"],[169,35,160,33,"event"],[169,40,160,38],[169,42,160,40,"fingerprint"],[169,53,160,51],[169,55,160,53],[170,4,161,2],[171,4,162,2,"event"],[171,9,162,7],[171,10,162,8,"fingerprint"],[171,21,162,19],[171,24,162,22,"event"],[171,29,162,27],[171,30,162,28,"fingerprint"],[171,41,162,39],[171,44,163,6,"Array"],[171,49,163,11],[171,50,163,12,"isArray"],[171,57,163,19],[171,58,163,20,"event"],[171,63,163,25],[171,64,163,26,"fingerprint"],[171,75,163,37],[171,76,163,38],[171,79,164,8,"event"],[171,84,164,13],[171,85,164,14,"fingerprint"],[171,96,164,25],[171,99,165,8],[171,100,165,9,"event"],[171,105,165,14],[171,106,165,15,"fingerprint"],[171,117,165,26],[171,118,165,27],[171,121,166,6],[171,123,166,8],[173,4,168,2],[174,4,169,2],[174,8,169,6,"fingerprint"],[174,19,169,17],[174,21,169,19],[175,6,170,4,"event"],[175,11,170,9],[175,12,170,10,"fingerprint"],[175,23,170,21],[175,26,170,24,"event"],[175,31,170,29],[175,32,170,30,"fingerprint"],[175,43,170,41],[175,44,170,42,"concat"],[175,50,170,48],[175,51,170,49,"fingerprint"],[175,62,170,60],[175,63,170,61],[176,4,171,2],[178,4,173,2],[179,4,174,2],[179,8,174,6,"event"],[179,13,174,11],[179,14,174,12,"fingerprint"],[179,25,174,23],[179,29,174,27],[179,30,174,28,"event"],[179,35,174,33],[179,36,174,34,"fingerprint"],[179,47,174,45],[179,48,174,46,"length"],[179,54,174,52],[179,56,174,54],[180,6,175,4],[180,13,175,11,"event"],[180,18,175,16],[180,19,175,17,"fingerprint"],[180,30,175,28],[181,4,176,2],[182,2,177,0],[183,0,177,1],[183,3]],"functionMap":{"names":["<global>","applyScopeDataToEvent","mergeScopeData","mergeAndOverwriteScopeData","applyDataToEvent","applyBreadcrumbsToEvent","applySdkMetadataToEvent","applySpanToEvent","applyFingerprintToEvent"],"mappings":"AAA;ACQ;CDgB;AEG;CFqD;AGM;CHI;AIE;CJ+B;AKE;CLG;AME;CNK;AOE;CPgB;AQM;CRiB"}},"type":"js/module"}]}