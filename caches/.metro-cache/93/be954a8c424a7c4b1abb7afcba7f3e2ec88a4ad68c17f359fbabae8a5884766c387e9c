{"dependencies":[{"name":"./env.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"trCO3nIQTZ8FLscZKVvk6kPa0+Y=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.dynamicRequire = dynamicRequire;\n  exports.isNodeEnv = isNodeEnv;\n  exports.loadModule = loadModule;\n  var _env = require(_dependencyMap[0], \"./env.js\");\n  /**\n   * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n   * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n   */\n\n  /**\n   * Checks whether we're in the Node.js or Browser environment\n   *\n   * @returns Answer to given question\n   */\n  function isNodeEnv() {\n    // explicitly check for browser bundles as those can be optimized statically\n    // by terser/rollup.\n    return !(0, _env.isBrowserBundle)() && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n  }\n\n  /**\n   * Requires a module which is protected against bundler minification.\n   *\n   * @param request The module path to resolve\n   * @deprecated This function will be removed in the next major version.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function dynamicRequire(mod, request) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return mod.require(request);\n  }\n\n  /**\n   * Helper for dynamically loading module that should work with linked dependencies.\n   * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n   * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n   * build time. `require.resolve` is also not available in any other way, so we cannot create,\n   * a fake helper like we do with `dynamicRequire`.\n   *\n   * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n   * That is to mimic the behavior of `require.resolve` exactly.\n   *\n   * @param moduleName module name to require\n   * @param existingModule module to use for requiring\n   * @returns possibly required module\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function loadModule(moduleName, existingModule = module) {\n    let mod;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      mod = dynamicRequire(existingModule, moduleName);\n    } catch (e) {\n      // no-empty\n    }\n    if (!mod) {\n      try {\n        // eslint-disable-next-line deprecation/deprecation\n        const {\n          cwd\n        } = dynamicRequire(existingModule, 'process');\n        // eslint-disable-next-line deprecation/deprecation\n        mod = dynamicRequire(existingModule, `${cwd()}/node_modules/${moduleName}`);\n      } catch (e) {\n        // no-empty\n      }\n    }\n    return mod;\n  }\n});","lineCount":74,"map":[[8,2,1,0],[8,6,1,0,"_env"],[8,10,1,0],[8,13,1,0,"require"],[8,20,1,0],[8,21,1,0,"_dependencyMap"],[8,35,1,0],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,2,14,0],[19,11,14,9,"isNodeEnv"],[19,20,14,18,"isNodeEnv"],[19,21,14,18],[19,23,14,21],[20,4,15,2],[21,4,16,2],[22,4,17,2],[22,11,18,4],[22,12,18,5],[22,16,18,5,"isBrowserBundle"],[22,36,18,20],[22,38,18,21],[22,39,18,22],[22,43,19,4,"Object"],[22,49,19,10],[22,50,19,11,"prototype"],[22,59,19,20],[22,60,19,21,"toString"],[22,68,19,29],[22,69,19,30,"call"],[22,73,19,34],[22,74,19,35],[22,81,19,42,"process"],[22,88,19,49],[22,93,19,54],[22,104,19,65],[22,107,19,68,"process"],[22,114,19,75],[22,117,19,78],[22,118,19,79],[22,119,19,80],[22,124,19,85],[22,142,19,103],[23,2,21,0],[25,2,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,2,29,0],[32,2,30,0],[32,11,30,9,"dynamicRequire"],[32,25,30,23,"dynamicRequire"],[32,26,30,24,"mod"],[32,29,30,27],[32,31,30,29,"request"],[32,38,30,36],[32,40,30,38],[33,4,31,2],[34,4,32,2],[34,11,32,9,"mod"],[34,14,32,12],[34,15,32,13,"require"],[34,22,32,20],[34,23,32,21,"request"],[34,30,32,28],[34,31,32,29],[35,2,33,0],[37,2,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,0,44,0],[47,0,45,0],[48,0,46,0],[49,0,47,0],[50,0,48,0],[51,2,49,0],[52,2,50,0],[52,11,50,9,"loadModule"],[52,21,50,19,"loadModule"],[52,22,50,20,"moduleName"],[52,32,50,30],[52,34,50,32,"existingModule"],[52,48,50,46],[52,51,50,49,"module"],[52,57,50,55],[52,59,50,57],[53,4,51,2],[53,8,51,6,"mod"],[53,11,51,9],[54,4,53,2],[54,8,53,6],[55,6,54,4],[56,6,55,4,"mod"],[56,9,55,7],[56,12,55,10,"dynamicRequire"],[56,26,55,24],[56,27,55,25,"existingModule"],[56,41,55,39],[56,43,55,41,"moduleName"],[56,53,55,51],[56,54,55,52],[57,4,56,2],[57,5,56,3],[57,6,56,4],[57,13,56,11,"e"],[57,14,56,12],[57,16,56,14],[58,6,57,4],[59,4,57,4],[60,4,60,2],[60,8,60,6],[60,9,60,7,"mod"],[60,12,60,10],[60,14,60,12],[61,6,61,4],[61,10,61,8],[62,8,62,6],[63,8,63,6],[63,14,63,12],[64,10,63,14,"cwd"],[65,8,63,18],[65,9,63,19],[65,12,63,22,"dynamicRequire"],[65,26,63,36],[65,27,63,37,"existingModule"],[65,41,63,51],[65,43,63,53],[65,52,63,62],[65,53,63,63],[66,8,64,6],[67,8,65,6,"mod"],[67,11,65,9],[67,14,65,12,"dynamicRequire"],[67,28,65,26],[67,29,65,27,"existingModule"],[67,43,65,41],[67,45,65,43],[67,48,65,46,"cwd"],[67,51,65,49],[67,52,65,50],[67,53,65,51],[67,70,65,68,"moduleName"],[67,80,65,78],[67,82,65,80],[67,83,65,81],[68,6,66,4],[68,7,66,5],[68,8,66,6],[68,15,66,13,"e"],[68,16,66,14],[68,18,66,16],[69,8,67,6],[70,6,67,6],[71,4,69,2],[72,4,71,2],[72,11,71,9,"mod"],[72,14,71,12],[73,2,72,0],[74,0,72,1],[74,3]],"functionMap":{"names":["<global>","isNodeEnv","dynamicRequire","loadModule"],"mappings":"AAA;ACa;CDO;AES;CFG;AGiB;CHsB"}},"type":"js/module"}]}