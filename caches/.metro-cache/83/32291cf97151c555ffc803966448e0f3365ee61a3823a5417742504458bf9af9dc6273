{"dependencies":[{"name":"../api.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"cPKsELqWARxElqFlbsOK3W8pAh4=","exportNames":["*"]}},{"name":"../utils-hoist/dsn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":54,"index":121}}],"key":"hE73T8lxjg3QP51un58ou5NlBEc=","exportNames":["*"]}},{"name":"../utils-hoist/envelope.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":122},"end":{"line":3,"column":81,"index":203}}],"key":"/wcaZSbu8ehBqhp+Lmxp451SsSA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.eventFromEnvelope = eventFromEnvelope;\n  exports.makeMultiplexedTransport = makeMultiplexedTransport;\n  var _api = require(_dependencyMap[0], \"../api.js\");\n  var _dsn = require(_dependencyMap[1], \"../utils-hoist/dsn.js\");\n  var _envelope = require(_dependencyMap[2], \"../utils-hoist/envelope.js\");\n  /**\n   * Gets an event from an envelope.\n   *\n   * This is only exported for use in the tests\n   */\n  function eventFromEnvelope(env, types) {\n    let event;\n    (0, _envelope.forEachEnvelopeItem)(env, (item, type) => {\n      if (types.includes(type)) {\n        event = Array.isArray(item) ? item[1] : undefined;\n      }\n      // bail out if we found an event\n      return !!event;\n    });\n    return event;\n  }\n\n  /**\n   * Creates a transport that overrides the release on all events.\n   */\n  function makeOverrideReleaseTransport(createTransport, release) {\n    return options => {\n      const transport = createTransport(options);\n      return {\n        ...transport,\n        send: async envelope => {\n          const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n          if (event) {\n            event.release = release;\n          }\n          return transport.send(envelope);\n        }\n      };\n    };\n  }\n\n  /** Overrides the DSN in the envelope header  */\n  function overrideDsn(envelope, dsn) {\n    return (0, _envelope.createEnvelope)(dsn ? {\n      ...envelope[0],\n      dsn\n    } : envelope[0], envelope[1]);\n  }\n\n  /**\n   * Creates a transport that can send events to different DSNs depending on the envelope contents.\n   */\n  function makeMultiplexedTransport(createTransport, matcher) {\n    return options => {\n      const fallbackTransport = createTransport(options);\n      const otherTransports = new Map();\n      function getTransport(dsn, release) {\n        // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n        // use at the same time\n        const key = release ? `${dsn}:${release}` : dsn;\n        let transport = otherTransports.get(key);\n        if (!transport) {\n          const validatedDsn = (0, _dsn.dsnFromString)(dsn);\n          if (!validatedDsn) {\n            return undefined;\n          }\n          const url = (0, _api.getEnvelopeEndpointWithUrlEncodedAuth)(validatedDsn, options.tunnel);\n          transport = release ? makeOverrideReleaseTransport(createTransport, release)({\n            ...options,\n            url\n          }) : createTransport({\n            ...options,\n            url\n          });\n          otherTransports.set(key, transport);\n        }\n        return [dsn, transport];\n      }\n      async function send(envelope) {\n        function getEvent(types) {\n          const eventTypes = types && types.length ? types : ['event'];\n          return eventFromEnvelope(envelope, eventTypes);\n        }\n        const transports = matcher({\n          envelope,\n          getEvent\n        }).map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        }).filter(t => !!t);\n\n        // If we have no transports to send to, use the fallback transport\n        // Don't override the DSN in the header for the fallback transport. '' is falsy\n        const transportsWithFallback = transports.length ? transports : [['', fallbackTransport]];\n        const results = await Promise.all(transportsWithFallback.map(([dsn, transport]) => transport.send(overrideDsn(envelope, dsn))));\n        return results[0];\n      }\n      async function flush(timeout) {\n        const allTransports = [...otherTransports.values(), fallbackTransport];\n        const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n        return results.every(r => r);\n      }\n      return {\n        send,\n        flush\n      };\n    };\n  }\n});","lineCount":116,"map":[[7,2,1,0],[7,6,1,0,"_api"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_dsn"],[8,10,2,0],[8,13,2,0,"require"],[8,20,2,0],[8,21,2,0,"_dependencyMap"],[8,35,2,0],[9,2,3,0],[9,6,3,0,"_envelope"],[9,15,3,0],[9,18,3,0,"require"],[9,25,3,0],[9,26,3,0,"_dependencyMap"],[9,40,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,2,10,0],[15,11,10,9,"eventFromEnvelope"],[15,28,10,26,"eventFromEnvelope"],[15,29,10,27,"env"],[15,32,10,30],[15,34,10,32,"types"],[15,39,10,37],[15,41,10,39],[16,4,11,2],[16,8,11,6,"event"],[16,13,11,11],[17,4,13,2],[17,8,13,2,"forEachEnvelopeItem"],[17,37,13,21],[17,39,13,22,"env"],[17,42,13,25],[17,44,13,27],[17,45,13,28,"item"],[17,49,13,32],[17,51,13,34,"type"],[17,55,13,38],[17,60,13,43],[18,6,14,4],[18,10,14,8,"types"],[18,15,14,13],[18,16,14,14,"includes"],[18,24,14,22],[18,25,14,23,"type"],[18,29,14,27],[18,30,14,28],[18,32,14,30],[19,8,15,6,"event"],[19,13,15,11],[19,16,15,14,"Array"],[19,21,15,19],[19,22,15,20,"isArray"],[19,29,15,27],[19,30,15,28,"item"],[19,34,15,32],[19,35,15,33],[19,38,15,37,"item"],[19,42,15,41],[19,43,15,44],[19,44,15,45],[19,45,15,46],[19,48,15,49,"undefined"],[19,57,15,58],[20,6,16,4],[21,6,17,4],[22,6,18,4],[22,13,18,11],[22,14,18,12],[22,15,18,13,"event"],[22,20,18,18],[23,4,19,2],[23,5,19,3],[23,6,19,4],[24,4,21,2],[24,11,21,9,"event"],[24,16,21,14],[25,2,22,0],[27,2,24,0],[28,0,25,0],[29,0,26,0],[30,2,27,0],[30,11,27,9,"makeOverrideReleaseTransport"],[30,39,27,37,"makeOverrideReleaseTransport"],[30,40,28,2,"createTransport"],[30,55,28,17],[30,57,29,2,"release"],[30,64,29,9],[30,66,30,2],[31,4,31,2],[31,11,31,9,"options"],[31,18,31,16],[31,22,31,20],[32,6,32,4],[32,12,32,10,"transport"],[32,21,32,19],[32,24,32,22,"createTransport"],[32,39,32,37],[32,40,32,38,"options"],[32,47,32,45],[32,48,32,46],[33,6,34,4],[33,13,34,11],[34,8,35,6],[34,11,35,9,"transport"],[34,20,35,18],[35,8,36,6,"send"],[35,12,36,10],[35,14,36,12],[35,20,36,19,"envelope"],[35,28,36,27],[35,32,36,32],[36,10,37,8],[36,16,37,14,"event"],[36,21,37,19],[36,24,37,22,"eventFromEnvelope"],[36,41,37,39],[36,42,37,40,"envelope"],[36,50,37,48],[36,52,37,50],[36,53,37,51],[36,60,37,58],[36,62,37,60],[36,75,37,73],[36,77,37,75],[36,86,37,84],[36,88,37,86],[36,102,37,100],[36,103,37,101],[36,104,37,102],[37,10,39,8],[37,14,39,12,"event"],[37,19,39,17],[37,21,39,19],[38,12,40,10,"event"],[38,17,40,15],[38,18,40,16,"release"],[38,25,40,23],[38,28,40,26,"release"],[38,35,40,33],[39,10,41,8],[40,10,42,8],[40,17,42,15,"transport"],[40,26,42,24],[40,27,42,25,"send"],[40,31,42,29],[40,32,42,30,"envelope"],[40,40,42,38],[40,41,42,39],[41,8,43,6],[42,6,44,4],[42,7,44,5],[43,4,45,2],[43,5,45,3],[44,2,46,0],[46,2,48,0],[47,2,49,0],[47,11,49,9,"overrideDsn"],[47,22,49,20,"overrideDsn"],[47,23,49,21,"envelope"],[47,31,49,29],[47,33,49,31,"dsn"],[47,36,49,34],[47,38,49,36],[48,4,50,2],[48,11,50,9],[48,15,50,9,"createEnvelope"],[48,39,50,23],[48,41,51,4,"dsn"],[48,44,51,7],[48,47,52,8],[49,6,53,10],[49,9,53,13,"envelope"],[49,17,53,21],[49,18,53,22],[49,19,53,23],[49,20,53,24],[50,6,54,10,"dsn"],[51,4,55,8],[51,5,55,9],[51,8,56,8,"envelope"],[51,16,56,16],[51,17,56,17],[51,18,56,18],[51,19,56,19],[51,21,57,4,"envelope"],[51,29,57,12],[51,30,57,13],[51,31,57,14],[51,32,58,2],[51,33,58,3],[52,2,59,0],[54,2,61,0],[55,0,62,0],[56,0,63,0],[57,2,64,0],[57,11,64,9,"makeMultiplexedTransport"],[57,35,64,33,"makeMultiplexedTransport"],[57,36,65,2,"createTransport"],[57,51,65,17],[57,53,66,2,"matcher"],[57,60,66,9],[57,62,67,2],[58,4,68,2],[58,11,68,9,"options"],[58,18,68,16],[58,22,68,20],[59,6,69,4],[59,12,69,10,"fallbackTransport"],[59,29,69,27],[59,32,69,30,"createTransport"],[59,47,69,45],[59,48,69,46,"options"],[59,55,69,53],[59,56,69,54],[60,6,70,4],[60,12,70,10,"otherTransports"],[60,27,70,25],[60,30,70,28],[60,34,70,32,"Map"],[60,37,70,35],[60,38,70,36],[60,39,70,37],[61,6,72,4],[61,15,72,13,"getTransport"],[61,27,72,25,"getTransport"],[61,28,72,26,"dsn"],[61,31,72,29],[61,33,72,31,"release"],[61,40,72,38],[61,42,72,40],[62,8,73,6],[63,8,74,6],[64,8,75,6],[64,14,75,12,"key"],[64,17,75,15],[64,20,75,18,"release"],[64,27,75,25],[64,30,75,28],[64,33,75,31,"dsn"],[64,36,75,34],[64,40,75,38,"release"],[64,47,75,45],[64,49,75,47],[64,52,75,50,"dsn"],[64,55,75,53],[65,8,77,6],[65,12,77,10,"transport"],[65,21,77,19],[65,24,77,22,"otherTransports"],[65,39,77,37],[65,40,77,38,"get"],[65,43,77,41],[65,44,77,42,"key"],[65,47,77,45],[65,48,77,46],[66,8,79,6],[66,12,79,10],[66,13,79,11,"transport"],[66,22,79,20],[66,24,79,22],[67,10,80,8],[67,16,80,14,"validatedDsn"],[67,28,80,26],[67,31,80,29],[67,35,80,29,"dsnFromString"],[67,53,80,42],[67,55,80,43,"dsn"],[67,58,80,46],[67,59,80,47],[68,10,81,8],[68,14,81,12],[68,15,81,13,"validatedDsn"],[68,27,81,25],[68,29,81,27],[69,12,82,10],[69,19,82,17,"undefined"],[69,28,82,26],[70,10,83,8],[71,10,84,8],[71,16,84,14,"url"],[71,19,84,17],[71,22,84,20],[71,26,84,20,"getEnvelopeEndpointWithUrlEncodedAuth"],[71,68,84,57],[71,70,84,58,"validatedDsn"],[71,82,84,70],[71,84,84,72,"options"],[71,91,84,79],[71,92,84,80,"tunnel"],[71,98,84,86],[71,99,84,87],[72,10,86,8,"transport"],[72,19,86,17],[72,22,86,20,"release"],[72,29,86,27],[72,32,87,12,"makeOverrideReleaseTransport"],[72,60,87,40],[72,61,87,41,"createTransport"],[72,76,87,56],[72,78,87,58,"release"],[72,85,87,65],[72,86,87,66],[72,87,87,67],[73,12,87,69],[73,15,87,72,"options"],[73,22,87,79],[74,12,87,81,"url"],[75,10,87,85],[75,11,87,86],[75,12,87,87],[75,15,88,12,"createTransport"],[75,30,88,27],[75,31,88,28],[76,12,88,30],[76,15,88,33,"options"],[76,22,88,40],[77,12,88,42,"url"],[78,10,88,46],[78,11,88,47],[78,12,88,48],[79,10,90,8,"otherTransports"],[79,25,90,23],[79,26,90,24,"set"],[79,29,90,27],[79,30,90,28,"key"],[79,33,90,31],[79,35,90,33,"transport"],[79,44,90,42],[79,45,90,43],[80,8,91,6],[81,8,93,6],[81,15,93,13],[81,16,93,14,"dsn"],[81,19,93,17],[81,21,93,19,"transport"],[81,30,93,28],[81,31,93,29],[82,6,94,4],[83,6,96,4],[83,21,96,19,"send"],[83,25,96,23,"send"],[83,26,96,24,"envelope"],[83,34,96,32],[83,36,96,34],[84,8,97,6],[84,17,97,15,"getEvent"],[84,25,97,23,"getEvent"],[84,26,97,24,"types"],[84,31,97,29],[84,33,97,31],[85,10,98,8],[85,16,98,14,"eventTypes"],[85,26,98,24],[85,29,98,27,"types"],[85,34,98,32],[85,38,98,36,"types"],[85,43,98,41],[85,44,98,42,"length"],[85,50,98,48],[85,53,98,51,"types"],[85,58,98,56],[85,61,98,59],[85,62,98,60],[85,69,98,67],[85,70,98,68],[86,10,99,8],[86,17,99,15,"eventFromEnvelope"],[86,34,99,32],[86,35,99,33,"envelope"],[86,43,99,41],[86,45,99,43,"eventTypes"],[86,55,99,53],[86,56,99,54],[87,8,100,6],[88,8,102,6],[88,14,102,12,"transports"],[88,24,102,22],[88,27,102,25,"matcher"],[88,34,102,32],[88,35,102,33],[89,10,102,35,"envelope"],[89,18,102,43],[90,10,102,45,"getEvent"],[91,8,102,54],[91,9,102,55],[91,10,102,56],[91,11,103,9,"map"],[91,14,103,12],[91,15,103,13,"result"],[91,21,103,19],[91,25,103,23],[92,10,104,10],[92,14,104,14],[92,21,104,21,"result"],[92,27,104,27],[92,32,104,32],[92,40,104,40],[92,42,104,42],[93,12,105,12],[93,19,105,19,"getTransport"],[93,31,105,31],[93,32,105,32,"result"],[93,38,105,38],[93,40,105,40,"undefined"],[93,49,105,49],[93,50,105,50],[94,10,106,10],[94,11,106,11],[94,17,106,17],[95,12,107,12],[95,19,107,19,"getTransport"],[95,31,107,31],[95,32,107,32,"result"],[95,38,107,38],[95,39,107,39,"dsn"],[95,42,107,42],[95,44,107,44,"result"],[95,50,107,50],[95,51,107,51,"release"],[95,58,107,58],[95,59,107,59],[96,10,108,10],[97,8,109,8],[97,9,109,9],[97,10,109,10],[97,11,110,9,"filter"],[97,17,110,15],[97,18,110,17,"t"],[97,19,110,18],[97,23,110,23],[97,24,110,24],[97,25,110,25,"t"],[97,26,110,26],[97,27,110,27],[99,8,112,6],[100,8,113,6],[101,8,114,6],[101,14,114,12,"transportsWithFallback"],[101,36,114,34],[101,39,114,37,"transports"],[101,49,114,47],[101,50,114,48,"length"],[101,56,114,54],[101,59,114,57,"transports"],[101,69,114,67],[101,72,114,70],[101,73,114,71],[101,74,114,72],[101,76,114,74],[101,78,114,76,"fallbackTransport"],[101,95,114,93],[101,96,114,94],[101,97,114,95],[102,8,116,6],[102,14,116,12,"results"],[102,21,116,19],[102,24,116,23],[102,30,116,29,"Promise"],[102,37,116,36],[102,38,116,37,"all"],[102,41,116,40],[102,42,117,8,"transportsWithFallback"],[102,64,117,30],[102,65,117,31,"map"],[102,68,117,34],[102,69,117,35],[102,70,117,36],[102,71,117,37,"dsn"],[102,74,117,40],[102,76,117,42,"transport"],[102,85,117,51],[102,86,117,52],[102,91,117,57,"transport"],[102,100,117,66],[102,101,117,67,"send"],[102,105,117,71],[102,106,117,72,"overrideDsn"],[102,117,117,83],[102,118,117,84,"envelope"],[102,126,117,92],[102,128,117,94,"dsn"],[102,131,117,97],[102,132,117,98],[102,133,117,99],[102,134,118,6],[102,135,118,8],[103,8,120,6],[103,15,120,13,"results"],[103,22,120,20],[103,23,120,21],[103,24,120,22],[103,25,120,23],[104,6,121,4],[105,6,123,4],[105,21,123,19,"flush"],[105,26,123,24,"flush"],[105,27,123,25,"timeout"],[105,34,123,32],[105,36,123,34],[106,8,124,6],[106,14,124,12,"allTransports"],[106,27,124,25],[106,30,124,28],[106,31,124,29],[106,34,124,32,"otherTransports"],[106,49,124,47],[106,50,124,48,"values"],[106,56,124,54],[106,57,124,55],[106,58,124,56],[106,60,124,58,"fallbackTransport"],[106,77,124,75],[106,78,124,76],[107,8,125,6],[107,14,125,12,"results"],[107,21,125,19],[107,24,125,22],[107,30,125,28,"Promise"],[107,37,125,35],[107,38,125,36,"all"],[107,41,125,39],[107,42,125,40,"allTransports"],[107,55,125,53],[107,56,125,54,"map"],[107,59,125,57],[107,60,125,58,"transport"],[107,69,125,67],[107,73,125,71,"transport"],[107,82,125,80],[107,83,125,81,"flush"],[107,88,125,86],[107,89,125,87,"timeout"],[107,96,125,94],[107,97,125,95],[107,98,125,96],[107,99,125,97],[108,8,126,6],[108,15,126,13,"results"],[108,22,126,20],[108,23,126,21,"every"],[108,28,126,26],[108,29,126,27,"r"],[108,30,126,28],[108,34,126,32,"r"],[108,35,126,33],[108,36,126,34],[109,6,127,4],[110,6,129,4],[110,13,129,11],[111,8,130,6,"send"],[111,12,130,10],[112,8,131,6,"flush"],[113,6,132,4],[113,7,132,5],[114,4,133,2],[114,5,133,3],[115,2,134,0],[116,0,134,1],[116,3]],"functionMap":{"names":["<global>","eventFromEnvelope","forEachEnvelopeItem$argument_1","makeOverrideReleaseTransport","<anonymous>","send","overrideDsn","makeMultiplexedTransport","getTransport","getEvent","matcher.map$argument_0","matcher.map.filter$argument_0","transportsWithFallback.map$argument_0","flush","allTransports.map$argument_0","results.every$argument_0"],"mappings":"AAA;ACS;2BCG;GDM;CDG;AGK;SCI;YCK;ODO;GDE;CHC;AMG;CNU;AOK;SHI;III;KJsB;ICE;MIC;OJG;aKG;SLM;gBMC,UN;mCOO,gEP;KDI;ISE;0DCE,qCD;2BEC,MF;KTC;GGM;CPC"}},"type":"js/module"}]}