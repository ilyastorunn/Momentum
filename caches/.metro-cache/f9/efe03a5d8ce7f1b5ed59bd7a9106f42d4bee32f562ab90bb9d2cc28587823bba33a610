{"dependencies":[{"name":"@sentry/browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":136,"index":136}}],"key":"v/L5aEun9KHJcPUBAUY+UgyCfuU=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":137},"end":{"line":2,"column":128,"index":265}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reactRouterV3BrowserTracingIntegration = reactRouterV3BrowserTracingIntegration;\n  var _browser = require(_dependencyMap[0], \"@sentry/browser\");\n  var _core = require(_dependencyMap[1], \"@sentry/core\");\n  // Many of the types below had to be mocked out to prevent typescript issues\n  // these types are required for correct functionality.\n\n  /**\n   * A browser tracing integration that uses React Router v3 to instrument navigations.\n   * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n   */\n  function reactRouterV3BrowserTracingIntegration(options) {\n    const integration = (0, _browser.browserTracingIntegration)({\n      ...options,\n      instrumentPageLoad: false,\n      instrumentNavigation: false\n    });\n    const {\n      history,\n      routes,\n      match,\n      instrumentPageLoad = true,\n      instrumentNavigation = true\n    } = options;\n    return {\n      ...integration,\n      afterAllSetup(client) {\n        integration.afterAllSetup(client);\n        if (instrumentPageLoad && _browser.WINDOW && _browser.WINDOW.location) {\n          normalizeTransactionName(routes, _browser.WINDOW.location, match, (localName, source = 'url') => {\n            (0, _browser.startBrowserTracingPageLoadSpan)(client, {\n              name: localName,\n              attributes: {\n                [_core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n                [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v3',\n                [_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source\n              }\n            });\n          });\n        }\n        if (instrumentNavigation && history.listen) {\n          history.listen(location => {\n            if (location.action === 'PUSH' || location.action === 'POP') {\n              normalizeTransactionName(routes, location, match, (localName, source = 'url') => {\n                (0, _browser.startBrowserTracingNavigationSpan)(client, {\n                  name: localName,\n                  attributes: {\n                    [_core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n                    [_core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v3',\n                    [_core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source\n                  }\n                });\n              });\n            }\n          });\n        }\n      }\n    };\n  }\n\n  /**\n   * Normalize transaction names using `Router.match`\n   */\n  function normalizeTransactionName(appRoutes, location, match, callback) {\n    let name = location.pathname;\n    match({\n      location,\n      routes: appRoutes\n    }, (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n      name = routePath;\n      return callback(name, 'route');\n    });\n  }\n\n  /**\n   * Generate route name from array of routes\n   */\n  function getRouteStringFromRoutes(routes) {\n    if (!Array.isArray(routes) || routes.length === 0) {\n      return '';\n    }\n    const routesWithPaths = routes.filter(route => !!route.path);\n    let index = -1;\n    for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const route = routesWithPaths[x];\n      if (route.path && route.path.startsWith('/')) {\n        index = x;\n        break;\n      }\n    }\n    return routesWithPaths.slice(index).filter(({\n      path\n    }) => !!path).map(({\n      path\n    }) => path).join('');\n  }\n});","lineCount":108,"map":[[6,2,1,0],[6,6,1,0,"_browser"],[6,14,1,0],[6,17,1,0,"require"],[6,24,1,0],[6,25,1,0,"_dependencyMap"],[6,39,1,0],[7,2,2,0],[7,6,2,0,"_core"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,4,0],[9,2,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,2,11,0],[15,11,11,9,"reactRouterV3BrowserTracingIntegration"],[15,49,11,47,"reactRouterV3BrowserTracingIntegration"],[15,50,12,2,"options"],[15,57,12,9],[15,59,13,2],[16,4,14,2],[16,10,14,8,"integration"],[16,21,14,19],[16,24,14,22],[16,28,14,22,"browserTracingIntegration"],[16,62,14,47],[16,64,14,48],[17,6,15,4],[17,9,15,7,"options"],[17,16,15,14],[18,6,16,4,"instrumentPageLoad"],[18,24,16,22],[18,26,16,24],[18,31,16,29],[19,6,17,4,"instrumentNavigation"],[19,26,17,24],[19,28,17,26],[20,4,18,2],[20,5,18,3],[20,6,18,4],[21,4,20,2],[21,10,20,8],[22,6,20,10,"history"],[22,13,20,17],[23,6,20,19,"routes"],[23,12,20,25],[24,6,20,27,"match"],[24,11,20,32],[25,6,20,34,"instrumentPageLoad"],[25,24,20,52],[25,27,20,55],[25,31,20,59],[26,6,20,61,"instrumentNavigation"],[26,26,20,81],[26,29,20,84],[27,4,20,89],[27,5,20,90],[27,8,20,93,"options"],[27,15,20,100],[28,4,22,2],[28,11,22,9],[29,6,23,4],[29,9,23,7,"integration"],[29,20,23,18],[30,6,24,4,"afterAllSetup"],[30,19,24,17,"afterAllSetup"],[30,20,24,18,"client"],[30,26,24,24],[30,28,24,26],[31,8,25,6,"integration"],[31,19,25,17],[31,20,25,18,"afterAllSetup"],[31,33,25,31],[31,34,25,32,"client"],[31,40,25,38],[31,41,25,39],[32,8,27,6],[32,12,27,10,"instrumentPageLoad"],[32,30,27,28],[32,34,27,32,"WINDOW"],[32,49,27,38],[32,53,27,42,"WINDOW"],[32,68,27,48],[32,69,27,49,"location"],[32,77,27,57],[32,79,27,59],[33,10,28,8,"normalizeTransactionName"],[33,34,28,32],[33,35,29,10,"routes"],[33,41,29,16],[33,43,30,10,"WINDOW"],[33,58,30,16],[33,59,30,17,"location"],[33,67,30,25],[33,69,31,10,"match"],[33,74,31,15],[33,76,32,10],[33,77,32,11,"localName"],[33,86,32,20],[33,88,32,22,"source"],[33,94,32,28],[33,97,32,31],[33,102,32,36],[33,107,32,41],[34,12,33,12],[34,16,33,12,"startBrowserTracingPageLoadSpan"],[34,56,33,43],[34,58,33,44,"client"],[34,64,33,50],[34,66,33,52],[35,14,34,14,"name"],[35,18,34,18],[35,20,34,20,"localName"],[35,29,34,29],[36,14,35,14,"attributes"],[36,24,35,24],[36,26,35,26],[37,16,36,16],[37,17,36,17,"SEMANTIC_ATTRIBUTE_SENTRY_OP"],[37,51,36,45],[37,54,36,48],[37,64,36,58],[38,16,37,16],[38,17,37,17,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[38,55,37,49],[38,58,37,52],[38,94,37,88],[39,16,38,16],[39,17,38,17,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[39,55,38,49],[39,58,38,52,"source"],[40,14,39,14],[41,12,40,12],[41,13,40,13],[41,14,40,14],[42,10,41,10],[42,11,42,8],[42,12,42,9],[43,8,43,6],[44,8,45,6],[44,12,45,10,"instrumentNavigation"],[44,32,45,30],[44,36,45,34,"history"],[44,43,45,41],[44,44,45,42,"listen"],[44,50,45,48],[44,52,45,50],[45,10,46,8,"history"],[45,17,46,15],[45,18,46,16,"listen"],[45,24,46,22],[45,25,46,23,"location"],[45,33,46,31],[45,37,46,35],[46,12,47,10],[46,16,47,14,"location"],[46,24,47,22],[46,25,47,23,"action"],[46,31,47,29],[46,36,47,34],[46,42,47,40],[46,46,47,44,"location"],[46,54,47,52],[46,55,47,53,"action"],[46,61,47,59],[46,66,47,64],[46,71,47,69],[46,73,47,71],[47,14,48,12,"normalizeTransactionName"],[47,38,48,36],[47,39,49,14,"routes"],[47,45,49,20],[47,47,50,14,"location"],[47,55,50,22],[47,57,51,14,"match"],[47,62,51,19],[47,64,52,14],[47,65,52,15,"localName"],[47,74,52,24],[47,76,52,26,"source"],[47,82,52,32],[47,85,52,35],[47,90,52,40],[47,95,52,45],[48,16,53,16],[48,20,53,16,"startBrowserTracingNavigationSpan"],[48,62,53,49],[48,64,53,50,"client"],[48,70,53,56],[48,72,53,58],[49,18,54,18,"name"],[49,22,54,22],[49,24,54,24,"localName"],[49,33,54,33],[50,18,55,18,"attributes"],[50,28,55,28],[50,30,55,30],[51,20,56,20],[51,21,56,21,"SEMANTIC_ATTRIBUTE_SENTRY_OP"],[51,55,56,49],[51,58,56,52],[51,70,56,64],[52,20,57,20],[52,21,57,21,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[52,59,57,53],[52,62,57,56],[52,100,57,94],[53,20,58,20],[53,21,58,21,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[53,59,58,53],[53,62,58,56,"source"],[54,18,59,18],[55,16,60,16],[55,17,60,17],[55,18,60,18],[56,14,61,14],[56,15,62,12],[56,16,62,13],[57,12,63,10],[58,10,64,8],[58,11,64,9],[58,12,64,10],[59,8,65,6],[60,6,66,4],[61,4,67,2],[61,5,67,3],[62,2,68,0],[64,2,70,0],[65,0,71,0],[66,0,72,0],[67,2,73,0],[67,11,73,9,"normalizeTransactionName"],[67,35,73,33,"normalizeTransactionName"],[67,36,74,2,"appRoutes"],[67,45,74,11],[67,47,75,2,"location"],[67,55,75,10],[67,57,76,2,"match"],[67,62,76,7],[67,64,77,2,"callback"],[67,72,77,10],[67,74,78,2],[68,4,79,2],[68,8,79,6,"name"],[68,12,79,10],[68,15,79,13,"location"],[68,23,79,21],[68,24,79,22,"pathname"],[68,32,79,30],[69,4,80,2,"match"],[69,9,80,7],[69,10,81,4],[70,6,82,6,"location"],[70,14,82,14],[71,6,83,6,"routes"],[71,12,83,12],[71,14,83,14,"appRoutes"],[72,4,84,4],[72,5,84,5],[72,7,85,4],[72,8,85,5,"error"],[72,13,85,10],[72,15,85,12,"_redirectLocation"],[72,32,85,29],[72,34,85,31,"renderProps"],[72,45,85,42],[72,50,85,47],[73,6,86,6],[73,10,86,10,"error"],[73,15,86,15],[73,19,86,19],[73,20,86,20,"renderProps"],[73,31,86,31],[73,33,86,33],[74,8,87,8],[74,15,87,15,"callback"],[74,23,87,23],[74,24,87,24,"name"],[74,28,87,28],[74,29,87,29],[75,6,88,6],[76,6,90,6],[76,12,90,12,"routePath"],[76,21,90,21],[76,24,90,24,"getRouteStringFromRoutes"],[76,48,90,48],[76,49,90,49,"renderProps"],[76,60,90,60],[76,61,90,61,"routes"],[76,67,90,67],[76,71,90,71],[76,73,90,73],[76,74,90,74],[77,6,91,6],[77,10,91,10,"routePath"],[77,19,91,19],[77,20,91,20,"length"],[77,26,91,26],[77,31,91,31],[77,32,91,32],[77,36,91,36,"routePath"],[77,45,91,45],[77,50,91,50],[77,54,91,54],[77,56,91,56],[78,8,92,8],[78,15,92,15,"callback"],[78,23,92,23],[78,24,92,24,"name"],[78,28,92,28],[78,29,92,29],[79,6,93,6],[80,6,95,6,"name"],[80,10,95,10],[80,13,95,13,"routePath"],[80,22,95,22],[81,6,96,6],[81,13,96,13,"callback"],[81,21,96,21],[81,22,96,22,"name"],[81,26,96,26],[81,28,96,28],[81,35,96,35],[81,36,96,36],[82,4,97,4],[82,5,98,2],[82,6,98,3],[83,2,99,0],[85,2,101,0],[86,0,102,0],[87,0,103,0],[88,2,104,0],[88,11,104,9,"getRouteStringFromRoutes"],[88,35,104,33,"getRouteStringFromRoutes"],[88,36,104,34,"routes"],[88,42,104,40],[88,44,104,42],[89,4,105,2],[89,8,105,6],[89,9,105,7,"Array"],[89,14,105,12],[89,15,105,13,"isArray"],[89,22,105,20],[89,23,105,21,"routes"],[89,29,105,27],[89,30,105,28],[89,34,105,32,"routes"],[89,40,105,38],[89,41,105,39,"length"],[89,47,105,45],[89,52,105,50],[89,53,105,51],[89,55,105,53],[90,6,106,4],[90,13,106,11],[90,15,106,13],[91,4,107,2],[92,4,109,2],[92,10,109,8,"routesWithPaths"],[92,25,109,23],[92,28,109,26,"routes"],[92,34,109,32],[92,35,109,33,"filter"],[92,41,109,39],[92,42,109,41,"route"],[92,47,109,46],[92,51,109,51],[92,52,109,52],[92,53,109,53,"route"],[92,58,109,58],[92,59,109,59,"path"],[92,63,109,63],[92,64,109,64],[93,4,111,2],[93,8,111,6,"index"],[93,13,111,11],[93,16,111,14],[93,17,111,15],[93,18,111,16],[94,4,112,2],[94,9,112,7],[94,13,112,11,"x"],[94,14,112,12],[94,17,112,15,"routesWithPaths"],[94,32,112,30],[94,33,112,31,"length"],[94,39,112,37],[94,42,112,40],[94,43,112,41],[94,45,112,43,"x"],[94,46,112,44],[94,50,112,48],[94,51,112,49],[94,53,112,51,"x"],[94,54,112,52],[94,56,112,54],[94,58,112,56],[95,6,113,4],[96,6,114,4],[96,12,114,10,"route"],[96,17,114,15],[96,20,114,18,"routesWithPaths"],[96,35,114,33],[96,36,114,34,"x"],[96,37,114,35],[96,38,114,36],[97,6,115,4],[97,10,115,8,"route"],[97,15,115,13],[97,16,115,14,"path"],[97,20,115,18],[97,24,115,22,"route"],[97,29,115,27],[97,30,115,28,"path"],[97,34,115,32],[97,35,115,33,"startsWith"],[97,45,115,43],[97,46,115,44],[97,49,115,47],[97,50,115,48],[97,52,115,50],[98,8,116,6,"index"],[98,13,116,11],[98,16,116,14,"x"],[98,17,116,15],[99,8,117,6],[100,6,118,4],[101,4,119,2],[102,4,121,2],[102,11,121,9,"routesWithPaths"],[102,26,121,24],[102,27,122,5,"slice"],[102,32,122,10],[102,33,122,11,"index"],[102,38,122,16],[102,39,122,17],[102,40,123,5,"filter"],[102,46,123,11],[102,47,123,12],[102,48,123,13],[103,6,123,15,"path"],[104,4,123,20],[104,5,123,21],[104,10,123,26],[104,11,123,27],[104,12,123,28,"path"],[104,16,123,32],[104,17,123,33],[104,18,124,5,"map"],[104,21,124,8],[104,22,124,9],[104,23,124,10],[105,6,124,12,"path"],[106,4,124,17],[106,5,124,18],[106,10,124,23,"path"],[106,14,124,27],[106,15,124,28],[106,16,125,5,"join"],[106,20,125,9],[106,21,125,10],[106,23,125,12],[106,24,125,13],[107,2,126,0],[108,0,126,1],[108,3]],"functionMap":{"names":["<global>","reactRouterV3BrowserTracingIntegration","afterAllSetup","normalizeTransactionName$argument_3","history.listen$argument_0","normalizeTransactionName","match$argument_1","getRouteStringFromRoutes","routes.filter$argument_0","routesWithPaths.slice.filter$argument_0","routesWithPaths.slice.filter.map$argument_0"],"mappings":"AAA;ACU;ICa;UCQ;WDS;uBEK;cDM;eCS;SFG;KDE;CDE;AKK;ICY;KDY;CLE;AOK;wCCK,uBD;YEc,oBF;SGC,kBH;CPE"}},"type":"js/module"}]}