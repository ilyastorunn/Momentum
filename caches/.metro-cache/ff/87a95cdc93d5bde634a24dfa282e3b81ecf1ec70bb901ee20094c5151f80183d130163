{"dependencies":[{"name":"../asyncContext/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"0lgbsiOKFlLN56kb6TORm/gLqf8=","exportNames":["*"]}},{"name":"../carrier.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":68},"end":{"line":2,"column":47,"index":115}}],"key":"/CHWq5A6N7GxVM0vQJS3tsMdXuE=","exportNames":["*"]}},{"name":"../currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":116},"end":{"line":3,"column":65,"index":181}}],"key":"4IMzW1L9FGOQbFYVibN4P3pVG0E=","exportNames":["*"]}},{"name":"../exports.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":42,"index":224}}],"key":"PyiI6yM07W7J+gN2cHiTPsTCV4c=","exportNames":["*"]}},{"name":"../tracing/errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":225},"end":{"line":5,"column":30,"index":255}}],"key":"Rut4hI3uRhbMUTCkzG60gqQfEAI=","exportNames":["*"]}},{"name":"../utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":256},"end":{"line":6,"column":39,"index":295}}],"key":"WCqi4t6fnkZp2zTJh30nWkxWTUc=","exportNames":["*"]}},{"name":"../utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":296},"end":{"line":7,"column":50,"index":346}}],"key":"ntkLGOO3yQLxIuhQNqZB03aOwxw=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":347},"end":{"line":8,"column":27,"index":374}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":375},"end":{"line":9,"column":32,"index":407}}],"key":"Soilqp7l7+uBebnf581kpazCP78=","exportNames":["*"]}},{"name":"./spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":408},"end":{"line":10,"column":66,"index":474}}],"key":"pE6EbrkYaK+zZjEPcLbMGlNIybs=","exportNames":["*"]}},{"name":"../utils-hoist/tracing.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":475},"end":{"line":11,"column":90,"index":565}}],"key":"A6M78jOorF6ZvWa6FxdnTB6bynQ=","exportNames":["*"]}},{"name":"../tracing/dynamicSamplingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":566},"end":{"line":12,"column":125,"index":691}}],"key":"FvwhgvpQZsL+PnAoapZrk+Q+d08=","exportNames":["*"]}},{"name":"../utils-hoist/baggage.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":692},"end":{"line":13,"column":88,"index":780}}],"key":"7E4L6t6LLucAUNle9HwLRERiQfY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTraceData = getTraceData;\n  var _index = require(_dependencyMap[0], \"../asyncContext/index.js\");\n  var _carrier = require(_dependencyMap[1], \"../carrier.js\");\n  var _currentScopes = require(_dependencyMap[2], \"../currentScopes.js\");\n  var _exports = require(_dependencyMap[3], \"../exports.js\");\n  require(_dependencyMap[4], \"../tracing/errors.js\");\n  require(_dependencyMap[5], \"../utils-hoist/debug-build.js\");\n  var _logger = require(_dependencyMap[6], \"../utils-hoist/logger.js\");\n  require(_dependencyMap[7], \"../debug-build.js\");\n  require(_dependencyMap[8], \"../utils-hoist/time.js\");\n  var _spanUtils = require(_dependencyMap[9], \"./spanUtils.js\");\n  var _tracing = require(_dependencyMap[10], \"../utils-hoist/tracing.js\");\n  var _dynamicSamplingContext = require(_dependencyMap[11], \"../tracing/dynamicSamplingContext.js\");\n  var _baggage = require(_dependencyMap[12], \"../utils-hoist/baggage.js\");\n  /**\n   * Extracts trace propagation data from the current span or from the client's scope (via transaction or propagation\n   * context) and serializes it to `sentry-trace` and `baggage` values to strings. These values can be used to propagate\n   * a trace via our tracing Http headers or Html `<meta>` tags.\n   *\n   * This function also applies some validation to the generated sentry-trace and baggage values to ensure that\n   * only valid strings are returned.\n   *\n   * @returns an object with the tracing data values. The object keys are the name of the tracing key to be used as header\n   * or meta tag name.\n   */\n  function getTraceData(options = {}) {\n    const client = (0, _currentScopes.getClient)();\n    if (!(0, _exports.isEnabled)() || !client) {\n      return {};\n    }\n    const carrier = (0, _carrier.getMainCarrier)();\n    const acs = (0, _index.getAsyncContextStrategy)(carrier);\n    if (acs.getTraceData) {\n      return acs.getTraceData(options);\n    }\n    const scope = (0, _currentScopes.getCurrentScope)();\n    const span = options.span || (0, _spanUtils.getActiveSpan)();\n    const sentryTrace = span ? (0, _spanUtils.spanToTraceHeader)(span) : scopeToTraceHeader(scope);\n    const dsc = span ? (0, _dynamicSamplingContext.getDynamicSamplingContextFromSpan)(span) : (0, _dynamicSamplingContext.getDynamicSamplingContextFromScope)(client, scope);\n    const baggage = (0, _baggage.dynamicSamplingContextToSentryBaggageHeader)(dsc);\n    const isValidSentryTraceHeader = _tracing.TRACEPARENT_REGEXP.test(sentryTrace);\n    if (!isValidSentryTraceHeader) {\n      _logger.logger.warn('Invalid sentry-trace data. Cannot generate trace data');\n      return {};\n    }\n    return {\n      'sentry-trace': sentryTrace,\n      baggage\n    };\n  }\n\n  /**\n   * Get a sentry-trace header value for the given scope.\n   */\n  function scopeToTraceHeader(scope) {\n    // TODO(v9): Use generateSpanId() instead of spanId\n    // eslint-disable-next-line deprecation/deprecation\n    const {\n      traceId,\n      sampled,\n      spanId\n    } = scope.getPropagationContext();\n    return (0, _tracing.generateSentryTraceHeader)(traceId, spanId, sampled);\n  }\n});","lineCount":69,"map":[[6,2,1,0],[6,6,1,0,"_index"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_carrier"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_currentScopes"],[8,20,3,0],[8,23,3,0,"require"],[8,30,3,0],[8,31,3,0,"_dependencyMap"],[8,45,3,0],[9,2,4,0],[9,6,4,0,"_exports"],[9,14,4,0],[9,17,4,0,"require"],[9,24,4,0],[9,25,4,0,"_dependencyMap"],[9,39,4,0],[10,2,5,0,"require"],[10,9,5,0],[10,10,5,0,"_dependencyMap"],[10,24,5,0],[11,2,6,0,"require"],[11,9,6,0],[11,10,6,0,"_dependencyMap"],[11,24,6,0],[12,2,7,0],[12,6,7,0,"_logger"],[12,13,7,0],[12,16,7,0,"require"],[12,23,7,0],[12,24,7,0,"_dependencyMap"],[12,38,7,0],[13,2,8,0,"require"],[13,9,8,0],[13,10,8,0,"_dependencyMap"],[13,24,8,0],[14,2,9,0,"require"],[14,9,9,0],[14,10,9,0,"_dependencyMap"],[14,24,9,0],[15,2,10,0],[15,6,10,0,"_spanUtils"],[15,16,10,0],[15,19,10,0,"require"],[15,26,10,0],[15,27,10,0,"_dependencyMap"],[15,41,10,0],[16,2,11,0],[16,6,11,0,"_tracing"],[16,14,11,0],[16,17,11,0,"require"],[16,24,11,0],[16,25,11,0,"_dependencyMap"],[16,39,11,0],[17,2,12,0],[17,6,12,0,"_dynamicSamplingContext"],[17,29,12,0],[17,32,12,0,"require"],[17,39,12,0],[17,40,12,0,"_dependencyMap"],[17,54,12,0],[18,2,13,0],[18,6,13,0,"_baggage"],[18,14,13,0],[18,17,13,0,"require"],[18,24,13,0],[18,25,13,0,"_dependencyMap"],[18,39,13,0],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,2,26,0],[30,11,26,9,"getTraceData"],[30,23,26,21,"getTraceData"],[30,24,26,22,"options"],[30,31,26,29],[30,34,26,32],[30,35,26,33],[30,36,26,34],[30,38,26,36],[31,4,27,2],[31,10,27,8,"client"],[31,16,27,14],[31,19,27,17],[31,23,27,17,"getClient"],[31,47,27,26],[31,49,27,27],[31,50,27,28],[32,4,28,2],[32,8,28,6],[32,9,28,7],[32,13,28,7,"isEnabled"],[32,31,28,16],[32,33,28,17],[32,34,28,18],[32,38,28,22],[32,39,28,23,"client"],[32,45,28,29],[32,47,28,31],[33,6,29,4],[33,13,29,11],[33,14,29,12],[33,15,29,13],[34,4,30,2],[35,4,32,2],[35,10,32,8,"carrier"],[35,17,32,15],[35,20,32,18],[35,24,32,18,"getMainCarrier"],[35,47,32,32],[35,49,32,33],[35,50,32,34],[36,4,33,2],[36,10,33,8,"acs"],[36,13,33,11],[36,16,33,14],[36,20,33,14,"getAsyncContextStrategy"],[36,50,33,37],[36,52,33,38,"carrier"],[36,59,33,45],[36,60,33,46],[37,4,34,2],[37,8,34,6,"acs"],[37,11,34,9],[37,12,34,10,"getTraceData"],[37,24,34,22],[37,26,34,24],[38,6,35,4],[38,13,35,11,"acs"],[38,16,35,14],[38,17,35,15,"getTraceData"],[38,29,35,27],[38,30,35,28,"options"],[38,37,35,35],[38,38,35,36],[39,4,36,2],[40,4,38,2],[40,10,38,8,"scope"],[40,15,38,13],[40,18,38,16],[40,22,38,16,"getCurrentScope"],[40,52,38,31],[40,54,38,32],[40,55,38,33],[41,4,39,2],[41,10,39,8,"span"],[41,14,39,12],[41,17,39,15,"options"],[41,24,39,22],[41,25,39,23,"span"],[41,29,39,27],[41,33,39,31],[41,37,39,31,"getActiveSpan"],[41,61,39,44],[41,63,39,45],[41,64,39,46],[42,4,40,2],[42,10,40,8,"sentryTrace"],[42,21,40,19],[42,24,40,22,"span"],[42,28,40,26],[42,31,40,29],[42,35,40,29,"spanToTraceHeader"],[42,63,40,46],[42,65,40,47,"span"],[42,69,40,51],[42,70,40,52],[42,73,40,55,"scopeToTraceHeader"],[42,91,40,73],[42,92,40,74,"scope"],[42,97,40,79],[42,98,40,80],[43,4,41,2],[43,10,41,8,"dsc"],[43,13,41,11],[43,16,41,14,"span"],[43,20,41,18],[43,23,41,21],[43,27,41,21,"getDynamicSamplingContextFromSpan"],[43,84,41,54],[43,86,41,55,"span"],[43,90,41,59],[43,91,41,60],[43,94,41,63],[43,98,41,63,"getDynamicSamplingContextFromScope"],[43,156,41,97],[43,158,41,98,"client"],[43,164,41,104],[43,166,41,106,"scope"],[43,171,41,111],[43,172,41,112],[44,4,42,2],[44,10,42,8,"baggage"],[44,17,42,15],[44,20,42,18],[44,24,42,18,"dynamicSamplingContextToSentryBaggageHeader"],[44,76,42,61],[44,78,42,62,"dsc"],[44,81,42,65],[44,82,42,66],[45,4,44,2],[45,10,44,8,"isValidSentryTraceHeader"],[45,34,44,32],[45,37,44,35,"TRACEPARENT_REGEXP"],[45,64,44,53],[45,65,44,54,"test"],[45,69,44,58],[45,70,44,59,"sentryTrace"],[45,81,44,70],[45,82,44,71],[46,4,45,2],[46,8,45,6],[46,9,45,7,"isValidSentryTraceHeader"],[46,33,45,31],[46,35,45,33],[47,6,46,4,"logger"],[47,20,46,10],[47,21,46,11,"warn"],[47,25,46,15],[47,26,46,16],[47,81,46,71],[47,82,46,72],[48,6,47,4],[48,13,47,11],[48,14,47,12],[48,15,47,13],[49,4,48,2],[50,4,50,2],[50,11,50,9],[51,6,51,4],[51,20,51,18],[51,22,51,20,"sentryTrace"],[51,33,51,31],[52,6,52,4,"baggage"],[53,4,53,2],[53,5,53,3],[54,2,54,0],[56,2,56,0],[57,0,57,0],[58,0,58,0],[59,2,59,0],[59,11,59,9,"scopeToTraceHeader"],[59,29,59,27,"scopeToTraceHeader"],[59,30,59,28,"scope"],[59,35,59,33],[59,37,59,35],[60,4,60,2],[61,4,61,2],[62,4,62,2],[62,10,62,8],[63,6,62,10,"traceId"],[63,13,62,17],[64,6,62,19,"sampled"],[64,13,62,26],[65,6,62,28,"spanId"],[66,4,62,35],[66,5,62,36],[66,8,62,39,"scope"],[66,13,62,44],[66,14,62,45,"getPropagationContext"],[66,35,62,66],[66,36,62,67],[66,37,62,68],[67,4,63,2],[67,11,63,9],[67,15,63,9,"generateSentryTraceHeader"],[67,49,63,34],[67,51,63,35,"traceId"],[67,58,63,42],[67,60,63,44,"spanId"],[67,66,63,50],[67,68,63,52,"sampled"],[67,75,63,59],[67,76,63,60],[68,2,64,0],[69,0,64,1],[69,3]],"functionMap":{"names":["<global>","getTraceData","scopeToTraceHeader"],"mappings":"AAA;ACyB;CD4B;AEK;CFK"}},"type":"js/module"}]}