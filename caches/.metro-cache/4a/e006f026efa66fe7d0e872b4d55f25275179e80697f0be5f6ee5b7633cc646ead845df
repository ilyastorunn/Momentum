{"dependencies":[{"name":"./baseclient.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"DH2DGvQBSjvxNjZ3c4fx/uo97ng=","exportNames":["*"]}},{"name":"./checkin.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":53,"index":99}}],"key":"fuEK4rwvN2qtAssRNaSelU2lOTk=","exportNames":["*"]}},{"name":"./currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":100},"end":{"line":3,"column":81,"index":181}}],"key":"K7iI+PRtR1yDAq2Cd5P/ht8ORfQ=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":47,"index":229}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./sessionflusher.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":230},"end":{"line":5,"column":53,"index":283}}],"key":"mJUwu0q9sowUbMejbqpw/bMRobI=","exportNames":["*"]}},{"name":"./tracing/errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":284},"end":{"line":6,"column":71,"index":355}}],"key":"in4pKAqHAMBVu+zdC3Zdy95C7R4=","exportNames":["*"]}},{"name":"./utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":356},"end":{"line":7,"column":38,"index":394}}],"key":"m8KfYj+k/3+bPHhnkEVLMr3nakA=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":395},"end":{"line":8,"column":49,"index":444}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":445},"end":{"line":9,"column":31,"index":476}}],"key":"CDYXZ+Iu2qXN5epbbNjMwVJRDIA=","exportNames":["*"]}},{"name":"./utils/spanOnScope.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":477},"end":{"line":10,"column":58,"index":535}}],"key":"jYq3MIka833kt44h7GWvseeOu0k=","exportNames":["*"]}},{"name":"./utils/spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":536},"end":{"line":11,"column":58,"index":594}}],"key":"xliqJNKUR7kbMbGBAOHednh2o/4=","exportNames":["*"]}},{"name":"./utils-hoist/misc.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":595},"end":{"line":12,"column":46,"index":641}}],"key":"4J8iL1cu5xJLfk84TOyyT/H2FWI=","exportNames":["*"]}},{"name":"./utils-hoist/syncpromise.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":642},"end":{"line":13,"column":67,"index":709}}],"key":"gwGYC9zGsq15kFPabL3tTNAvIUc=","exportNames":["*"]}},{"name":"./utils-hoist/eventbuilder.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":710},"end":{"line":14,"column":88,"index":798}}],"key":"u1QkX2DwUGk+mL3MUwn5tlqIKlw=","exportNames":["*"]}},{"name":"./tracing/dynamicSamplingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":799},"end":{"line":15,"column":124,"index":923}}],"key":"a9UVkG/TCcdnJj9beLH2iUxGaco=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ServerRuntimeClient = void 0;\n  var _baseclient = require(_dependencyMap[0], \"./baseclient.js\");\n  var _checkin = require(_dependencyMap[1], \"./checkin.js\");\n  var _currentScopes = require(_dependencyMap[2], \"./currentScopes.js\");\n  var _debugBuild = require(_dependencyMap[3], \"./debug-build.js\");\n  var _sessionflusher = require(_dependencyMap[4], \"./sessionflusher.js\");\n  var _errors = require(_dependencyMap[5], \"./tracing/errors.js\");\n  require(_dependencyMap[6], \"./utils-hoist/debug-build.js\");\n  var _logger = require(_dependencyMap[7], \"./utils-hoist/logger.js\");\n  require(_dependencyMap[8], \"./utils-hoist/time.js\");\n  var _spanOnScope = require(_dependencyMap[9], \"./utils/spanOnScope.js\");\n  var _spanUtils = require(_dependencyMap[10], \"./utils/spanUtils.js\");\n  var _misc = require(_dependencyMap[11], \"./utils-hoist/misc.js\");\n  var _syncpromise = require(_dependencyMap[12], \"./utils-hoist/syncpromise.js\");\n  var _eventbuilder = require(_dependencyMap[13], \"./utils-hoist/eventbuilder.js\");\n  var _dynamicSamplingContext = require(_dependencyMap[14], \"./tracing/dynamicSamplingContext.js\");\n  /**\n   * The Sentry Server Runtime Client SDK.\n   */\n  class ServerRuntimeClient extends _baseclient.BaseClient {\n    // eslint-disable-next-line deprecation/deprecation\n\n    /**\n     * Creates a new Edge SDK instance.\n     * @param options Configuration options for this SDK.\n     */\n    constructor(options) {\n      // Server clients always support tracing\n      (0, _errors.registerSpanErrorInstrumentation)();\n      super(options);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    eventFromException(exception, hint) {\n      const event = (0, _eventbuilder.eventFromUnknownInput)(this, this._options.stackParser, exception, hint);\n      event.level = 'error';\n      return (0, _syncpromise.resolvedSyncPromise)(event);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    eventFromMessage(message, level = 'info', hint) {\n      return (0, _syncpromise.resolvedSyncPromise)((0, _eventbuilder.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace));\n    }\n\n    /**\n     * @inheritDoc\n     */\n    captureException(exception, hint, scope) {\n      // Check if `_sessionFlusher` exists because it is initialized (defined) only when the `autoSessionTracking` is enabled.\n      // The expectation is that session aggregates are only sent when `autoSessionTracking` is enabled.\n      // TODO(v9): Our goal in the future is to not have the `autoSessionTracking` option and instead rely on integrations doing the creation and sending of sessions. We will not have a central kill-switch for sessions.\n      // TODO(v9): This should move into the httpIntegration.\n      // eslint-disable-next-line deprecation/deprecation\n      if (this._options.autoSessionTracking && this._sessionFlusher) {\n        // eslint-disable-next-line deprecation/deprecation\n        const requestSession = (0, _currentScopes.getIsolationScope)().getRequestSession();\n\n        // Necessary checks to ensure this is code block is executed only within a request\n        // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n      return super.captureException(exception, hint, scope);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    captureEvent(event, hint, scope) {\n      // Check if `_sessionFlusher` exists because it is initialized only when the `autoSessionTracking` is enabled.\n      // The expectation is that session aggregates are only sent when `autoSessionTracking` is enabled.\n      // TODO(v9): Our goal in the future is to not have the `autoSessionTracking` option and instead rely on integrations doing the creation and sending of sessions. We will not have a central kill-switch for sessions.\n      // TODO(v9): This should move into the httpIntegration.\n      // eslint-disable-next-line deprecation/deprecation\n      if (this._options.autoSessionTracking && this._sessionFlusher) {\n        const eventType = event.type || 'exception';\n        const isException = eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n        // If the event is of type Exception, then a request session should be captured\n        if (isException) {\n          // eslint-disable-next-line deprecation/deprecation\n          const requestSession = (0, _currentScopes.getIsolationScope)().getRequestSession();\n\n          // Ensure that this is happening within the bounds of a request, and make sure not to override\n          // Session Status if Errored / Crashed\n          if (requestSession && requestSession.status === 'ok') {\n            requestSession.status = 'errored';\n          }\n        }\n      }\n      return super.captureEvent(event, hint, scope);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     */\n    close(timeout) {\n      if (this._sessionFlusher) {\n        this._sessionFlusher.close();\n      }\n      return super.close(timeout);\n    }\n\n    /**\n     * Initializes an instance of SessionFlusher on the client which will aggregate and periodically flush session data.\n     *\n     * NOTICE: This method will implicitly create an interval that is periodically called.\n     * To clean up this resources, call `.close()` when you no longer intend to use the client.\n     * Not doing so will result in a memory leak.\n     */\n    initSessionFlusher() {\n      const {\n        release,\n        environment\n      } = this._options;\n      if (!release) {\n        _debugBuild.DEBUG_BUILD && _logger.logger.warn('Cannot initialize an instance of SessionFlusher if no release is provided!');\n      } else {\n        // eslint-disable-next-line deprecation/deprecation\n        this._sessionFlusher = new _sessionflusher.SessionFlusher(this, {\n          release,\n          environment\n        });\n      }\n    }\n\n    /**\n     * Create a cron monitor check in and send it to Sentry.\n     *\n     * @param checkIn An object that describes a check in.\n     * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n     * to create a monitor automatically when sending a check in.\n     */\n    captureCheckIn(checkIn, monitorConfig, scope) {\n      const id = 'checkInId' in checkIn && checkIn.checkInId ? checkIn.checkInId : (0, _misc.uuid4)();\n      if (!this._isEnabled()) {\n        _debugBuild.DEBUG_BUILD && _logger.logger.warn('SDK not enabled, will not capture checkin.');\n        return id;\n      }\n      const options = this.getOptions();\n      const {\n        release,\n        environment,\n        tunnel\n      } = options;\n      const serializedCheckIn = {\n        check_in_id: id,\n        monitor_slug: checkIn.monitorSlug,\n        status: checkIn.status,\n        release,\n        environment\n      };\n      if ('duration' in checkIn) {\n        serializedCheckIn.duration = checkIn.duration;\n      }\n      if (monitorConfig) {\n        serializedCheckIn.monitor_config = {\n          schedule: monitorConfig.schedule,\n          checkin_margin: monitorConfig.checkinMargin,\n          max_runtime: monitorConfig.maxRuntime,\n          timezone: monitorConfig.timezone,\n          failure_issue_threshold: monitorConfig.failureIssueThreshold,\n          recovery_threshold: monitorConfig.recoveryThreshold\n        };\n      }\n      const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n      if (traceContext) {\n        serializedCheckIn.contexts = {\n          trace: traceContext\n        };\n      }\n      const envelope = (0, _checkin.createCheckInEnvelope)(serializedCheckIn, dynamicSamplingContext, this.getSdkMetadata(), tunnel, this.getDsn());\n      _debugBuild.DEBUG_BUILD && _logger.logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n\n      // sendEnvelope should not throw\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.sendEnvelope(envelope);\n      return id;\n    }\n\n    /**\n     * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n     * appropriate session aggregates bucket\n     *\n     * @deprecated This method should not be used or extended. It's functionality will move into the `httpIntegration` and not be part of any public API.\n     */\n    _captureRequestSession() {\n      if (!this._sessionFlusher) {\n        _debugBuild.DEBUG_BUILD && _logger.logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n      } else {\n        this._sessionFlusher.incrementSessionStatusCount();\n      }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    _prepareEvent(event, hint, scope, isolationScope) {\n      if (this._options.platform) {\n        event.platform = event.platform || this._options.platform;\n      }\n      if (this._options.runtime) {\n        event.contexts = {\n          ...event.contexts,\n          runtime: (event.contexts || {}).runtime || this._options.runtime\n        };\n      }\n      if (this._options.serverName) {\n        event.server_name = event.server_name || this._options.serverName;\n      }\n      return super._prepareEvent(event, hint, scope, isolationScope);\n    }\n\n    /** Extract trace information from scope */\n    _getTraceInfoFromScope(scope) {\n      if (!scope) {\n        return [undefined, undefined];\n      }\n      const span = (0, _spanOnScope._getSpanForScope)(scope);\n      const traceContext = span ? (0, _spanUtils.spanToTraceContext)(span) : (0, _currentScopes.getTraceContextFromScope)(scope);\n      const dynamicSamplingContext = span ? (0, _dynamicSamplingContext.getDynamicSamplingContextFromSpan)(span) : (0, _dynamicSamplingContext.getDynamicSamplingContextFromScope)(this, scope);\n      return [dynamicSamplingContext, traceContext];\n    }\n  }\n  exports.ServerRuntimeClient = ServerRuntimeClient;\n});","lineCount":236,"map":[[6,2,1,0],[6,6,1,0,"_baseclient"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_checkin"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_currentScopes"],[8,20,3,0],[8,23,3,0,"require"],[8,30,3,0],[8,31,3,0,"_dependencyMap"],[8,45,3,0],[9,2,4,0],[9,6,4,0,"_debugBuild"],[9,17,4,0],[9,20,4,0,"require"],[9,27,4,0],[9,28,4,0,"_dependencyMap"],[9,42,4,0],[10,2,5,0],[10,6,5,0,"_sessionflusher"],[10,21,5,0],[10,24,5,0,"require"],[10,31,5,0],[10,32,5,0,"_dependencyMap"],[10,46,5,0],[11,2,6,0],[11,6,6,0,"_errors"],[11,13,6,0],[11,16,6,0,"require"],[11,23,6,0],[11,24,6,0,"_dependencyMap"],[11,38,6,0],[12,2,7,0,"require"],[12,9,7,0],[12,10,7,0,"_dependencyMap"],[12,24,7,0],[13,2,8,0],[13,6,8,0,"_logger"],[13,13,8,0],[13,16,8,0,"require"],[13,23,8,0],[13,24,8,0,"_dependencyMap"],[13,38,8,0],[14,2,9,0,"require"],[14,9,9,0],[14,10,9,0,"_dependencyMap"],[14,24,9,0],[15,2,10,0],[15,6,10,0,"_spanOnScope"],[15,18,10,0],[15,21,10,0,"require"],[15,28,10,0],[15,29,10,0,"_dependencyMap"],[15,43,10,0],[16,2,11,0],[16,6,11,0,"_spanUtils"],[16,16,11,0],[16,19,11,0,"require"],[16,26,11,0],[16,27,11,0,"_dependencyMap"],[16,41,11,0],[17,2,12,0],[17,6,12,0,"_misc"],[17,11,12,0],[17,14,12,0,"require"],[17,21,12,0],[17,22,12,0,"_dependencyMap"],[17,36,12,0],[18,2,13,0],[18,6,13,0,"_syncpromise"],[18,18,13,0],[18,21,13,0,"require"],[18,28,13,0],[18,29,13,0,"_dependencyMap"],[18,43,13,0],[19,2,14,0],[19,6,14,0,"_eventbuilder"],[19,19,14,0],[19,22,14,0,"require"],[19,29,14,0],[19,30,14,0,"_dependencyMap"],[19,44,14,0],[20,2,15,0],[20,6,15,0,"_dynamicSamplingContext"],[20,29,15,0],[20,32,15,0,"require"],[20,39,15,0],[20,40,15,0,"_dependencyMap"],[20,54,15,0],[21,2,17,0],[22,0,18,0],[23,0,19,0],[24,2,20,0],[24,8,20,6,"ServerRuntimeClient"],[24,27,20,25],[24,36,22,9,"BaseClient"],[24,58,22,19],[24,59,22,20],[25,4,23,2],[27,4,25,2],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,4,29,3,"constructor"],[31,15,29,14,"constructor"],[31,16,29,15,"options"],[31,23,29,22],[31,25,29,24],[32,6,30,4],[33,6,31,4],[33,10,31,4,"registerSpanErrorInstrumentation"],[33,50,31,36],[33,52,31,37],[33,53,31,38],[34,6,33,4],[34,11,33,9],[34,12,33,10,"options"],[34,19,33,17],[34,20,33,18],[35,4,34,2],[37,4,36,2],[38,0,37,0],[39,0,38,0],[40,4,39,3,"eventFromException"],[40,22,39,21,"eventFromException"],[40,23,39,22,"exception"],[40,32,39,31],[40,34,39,33,"hint"],[40,38,39,37],[40,40,39,39],[41,6,40,4],[41,12,40,10,"event"],[41,17,40,15],[41,20,40,18],[41,24,40,18,"eventFromUnknownInput"],[41,59,40,39],[41,61,40,40],[41,65,40,44],[41,67,40,46],[41,71,40,50],[41,72,40,51,"_options"],[41,80,40,59],[41,81,40,60,"stackParser"],[41,92,40,71],[41,94,40,73,"exception"],[41,103,40,82],[41,105,40,84,"hint"],[41,109,40,88],[41,110,40,89],[42,6,41,4,"event"],[42,11,41,9],[42,12,41,10,"level"],[42,17,41,15],[42,20,41,18],[42,27,41,25],[43,6,43,4],[43,13,43,11],[43,17,43,11,"resolvedSyncPromise"],[43,49,43,30],[43,51,43,31,"event"],[43,56,43,36],[43,57,43,37],[44,4,44,2],[46,4,46,2],[47,0,47,0],[48,0,48,0],[49,4,49,3,"eventFromMessage"],[49,20,49,19,"eventFromMessage"],[49,21,50,4,"message"],[49,28,50,11],[49,30,51,4,"level"],[49,35,51,9],[49,38,51,12],[49,44,51,18],[49,46,52,4,"hint"],[49,50,52,8],[49,52,53,4],[50,6,54,4],[50,13,54,11],[50,17,54,11,"resolvedSyncPromise"],[50,49,54,30],[50,51,55,6],[50,55,55,6,"eventFromMessage"],[50,85,55,22],[50,87,55,23],[50,91,55,27],[50,92,55,28,"_options"],[50,100,55,36],[50,101,55,37,"stackParser"],[50,112,55,48],[50,114,55,50,"message"],[50,121,55,57],[50,123,55,59,"level"],[50,128,55,64],[50,130,55,66,"hint"],[50,134,55,70],[50,136,55,72],[50,140,55,76],[50,141,55,77,"_options"],[50,149,55,85],[50,150,55,86,"attachStacktrace"],[50,166,55,102],[50,167,56,4],[50,168,56,5],[51,4,57,2],[53,4,59,2],[54,0,60,0],[55,0,61,0],[56,4,62,3,"captureException"],[56,20,62,19,"captureException"],[56,21,62,20,"exception"],[56,30,62,29],[56,32,62,31,"hint"],[56,36,62,35],[56,38,62,37,"scope"],[56,43,62,42],[56,45,62,44],[57,6,63,4],[58,6,64,4],[59,6,65,4],[60,6,66,4],[61,6,67,4],[62,6,68,4],[62,10,68,8],[62,14,68,12],[62,15,68,13,"_options"],[62,23,68,21],[62,24,68,22,"autoSessionTracking"],[62,43,68,41],[62,47,68,45],[62,51,68,49],[62,52,68,50,"_sessionFlusher"],[62,67,68,65],[62,69,68,67],[63,8,69,6],[64,8,70,6],[64,14,70,12,"requestSession"],[64,28,70,26],[64,31,70,29],[64,35,70,29,"getIsolationScope"],[64,67,70,46],[64,69,70,47],[64,70,70,48],[64,71,70,49,"getRequestSession"],[64,88,70,66],[64,89,70,67],[64,90,70,68],[66,8,72,6],[67,8,73,6],[68,8,74,6],[68,12,74,10,"requestSession"],[68,26,74,24],[68,30,74,28,"requestSession"],[68,44,74,42],[68,45,74,43,"status"],[68,51,74,49],[68,56,74,54],[68,60,74,58],[68,62,74,60],[69,10,75,8,"requestSession"],[69,24,75,22],[69,25,75,23,"status"],[69,31,75,29],[69,34,75,32],[69,43,75,41],[70,8,76,6],[71,6,77,4],[72,6,79,4],[72,13,79,11],[72,18,79,16],[72,19,79,17,"captureException"],[72,35,79,33],[72,36,79,34,"exception"],[72,45,79,43],[72,47,79,45,"hint"],[72,51,79,49],[72,53,79,51,"scope"],[72,58,79,56],[72,59,79,57],[73,4,80,2],[75,4,82,2],[76,0,83,0],[77,0,84,0],[78,4,85,3,"captureEvent"],[78,16,85,15,"captureEvent"],[78,17,85,16,"event"],[78,22,85,21],[78,24,85,23,"hint"],[78,28,85,27],[78,30,85,29,"scope"],[78,35,85,34],[78,37,85,36],[79,6,86,4],[80,6,87,4],[81,6,88,4],[82,6,89,4],[83,6,90,4],[84,6,91,4],[84,10,91,8],[84,14,91,12],[84,15,91,13,"_options"],[84,23,91,21],[84,24,91,22,"autoSessionTracking"],[84,43,91,41],[84,47,91,45],[84,51,91,49],[84,52,91,50,"_sessionFlusher"],[84,67,91,65],[84,69,91,67],[85,8,92,6],[85,14,92,12,"eventType"],[85,23,92,21],[85,26,92,24,"event"],[85,31,92,29],[85,32,92,30,"type"],[85,36,92,34],[85,40,92,38],[85,51,92,49],[86,8,93,6],[86,14,93,12,"isException"],[86,25,93,23],[86,28,94,8,"eventType"],[86,37,94,17],[86,42,94,22],[86,53,94,33],[86,57,94,37,"event"],[86,62,94,42],[86,63,94,43,"exception"],[86,72,94,52],[86,76,94,56,"event"],[86,81,94,61],[86,82,94,62,"exception"],[86,91,94,71],[86,92,94,72,"values"],[86,98,94,78],[86,102,94,82,"event"],[86,107,94,87],[86,108,94,88,"exception"],[86,117,94,97],[86,118,94,98,"values"],[86,124,94,104],[86,125,94,105,"length"],[86,131,94,111],[86,134,94,114],[86,135,94,115],[88,8,96,6],[89,8,97,6],[89,12,97,10,"isException"],[89,23,97,21],[89,25,97,23],[90,10,98,8],[91,10,99,8],[91,16,99,14,"requestSession"],[91,30,99,28],[91,33,99,31],[91,37,99,31,"getIsolationScope"],[91,69,99,48],[91,71,99,49],[91,72,99,50],[91,73,99,51,"getRequestSession"],[91,90,99,68],[91,91,99,69],[91,92,99,70],[93,10,101,8],[94,10,102,8],[95,10,103,8],[95,14,103,12,"requestSession"],[95,28,103,26],[95,32,103,30,"requestSession"],[95,46,103,44],[95,47,103,45,"status"],[95,53,103,51],[95,58,103,56],[95,62,103,60],[95,64,103,62],[96,12,104,10,"requestSession"],[96,26,104,24],[96,27,104,25,"status"],[96,33,104,31],[96,36,104,34],[96,45,104,43],[97,10,105,8],[98,8,106,6],[99,6,107,4],[100,6,109,4],[100,13,109,11],[100,18,109,16],[100,19,109,17,"captureEvent"],[100,31,109,29],[100,32,109,30,"event"],[100,37,109,35],[100,39,109,37,"hint"],[100,43,109,41],[100,45,109,43,"scope"],[100,50,109,48],[100,51,109,49],[101,4,110,2],[103,4,112,2],[104,0,113,0],[105,0,114,0],[106,0,115,0],[107,4,116,3,"close"],[107,9,116,8,"close"],[107,10,116,9,"timeout"],[107,17,116,16],[107,19,116,18],[108,6,117,4],[108,10,117,8],[108,14,117,12],[108,15,117,13,"_sessionFlusher"],[108,30,117,28],[108,32,117,30],[109,8,118,6],[109,12,118,10],[109,13,118,11,"_sessionFlusher"],[109,28,118,26],[109,29,118,27,"close"],[109,34,118,32],[109,35,118,33],[109,36,118,34],[110,6,119,4],[111,6,120,4],[111,13,120,11],[111,18,120,16],[111,19,120,17,"close"],[111,24,120,22],[111,25,120,23,"timeout"],[111,32,120,30],[111,33,120,31],[112,4,121,2],[114,4,123,2],[115,0,124,0],[116,0,125,0],[117,0,126,0],[118,0,127,0],[119,0,128,0],[120,0,129,0],[121,4,130,3,"initSessionFlusher"],[121,22,130,21,"initSessionFlusher"],[121,23,130,21],[121,25,130,24],[122,6,131,4],[122,12,131,10],[123,8,131,12,"release"],[123,15,131,19],[124,8,131,21,"environment"],[125,6,131,33],[125,7,131,34],[125,10,131,37],[125,14,131,41],[125,15,131,42,"_options"],[125,23,131,50],[126,6,132,4],[126,10,132,8],[126,11,132,9,"release"],[126,18,132,16],[126,20,132,18],[127,8,133,6,"DEBUG_BUILD"],[127,31,133,17],[127,35,133,21,"logger"],[127,49,133,27],[127,50,133,28,"warn"],[127,54,133,32],[127,55,133,33],[127,131,133,109],[127,132,133,110],[128,6,134,4],[128,7,134,5],[128,13,134,11],[129,8,135,6],[130,8,136,6],[130,12,136,10],[130,13,136,11,"_sessionFlusher"],[130,28,136,26],[130,31,136,29],[130,35,136,33,"SessionFlusher"],[130,65,136,47],[130,66,136,48],[130,70,136,52],[130,72,136,54],[131,10,137,8,"release"],[131,17,137,15],[132,10,138,8,"environment"],[133,8,139,6],[133,9,139,7],[133,10,139,8],[134,6,140,4],[135,4,141,2],[137,4,143,2],[138,0,144,0],[139,0,145,0],[140,0,146,0],[141,0,147,0],[142,0,148,0],[143,0,149,0],[144,4,150,3,"captureCheckIn"],[144,18,150,17,"captureCheckIn"],[144,19,150,18,"checkIn"],[144,26,150,25],[144,28,150,27,"monitorConfig"],[144,41,150,40],[144,43,150,42,"scope"],[144,48,150,47],[144,50,150,49],[145,6,151,4],[145,12,151,10,"id"],[145,14,151,12],[145,17,151,15],[145,28,151,26],[145,32,151,30,"checkIn"],[145,39,151,37],[145,43,151,41,"checkIn"],[145,50,151,48],[145,51,151,49,"checkInId"],[145,60,151,58],[145,63,151,61,"checkIn"],[145,70,151,68],[145,71,151,69,"checkInId"],[145,80,151,78],[145,83,151,81],[145,87,151,81,"uuid4"],[145,98,151,86],[145,100,151,87],[145,101,151,88],[146,6,152,4],[146,10,152,8],[146,11,152,9],[146,15,152,13],[146,16,152,14,"_isEnabled"],[146,26,152,24],[146,27,152,25],[146,28,152,26],[146,30,152,28],[147,8,153,6,"DEBUG_BUILD"],[147,31,153,17],[147,35,153,21,"logger"],[147,49,153,27],[147,50,153,28,"warn"],[147,54,153,32],[147,55,153,33],[147,99,153,77],[147,100,153,78],[148,8,154,6],[148,15,154,13,"id"],[148,17,154,15],[149,6,155,4],[150,6,157,4],[150,12,157,10,"options"],[150,19,157,17],[150,22,157,20],[150,26,157,24],[150,27,157,25,"getOptions"],[150,37,157,35],[150,38,157,36],[150,39,157,37],[151,6,158,4],[151,12,158,10],[152,8,158,12,"release"],[152,15,158,19],[153,8,158,21,"environment"],[153,19,158,32],[154,8,158,34,"tunnel"],[155,6,158,41],[155,7,158,42],[155,10,158,45,"options"],[155,17,158,52],[156,6,160,4],[156,12,160,10,"serializedCheckIn"],[156,29,160,27],[156,32,160,30],[157,8,161,6,"check_in_id"],[157,19,161,17],[157,21,161,19,"id"],[157,23,161,21],[158,8,162,6,"monitor_slug"],[158,20,162,18],[158,22,162,20,"checkIn"],[158,29,162,27],[158,30,162,28,"monitorSlug"],[158,41,162,39],[159,8,163,6,"status"],[159,14,163,12],[159,16,163,14,"checkIn"],[159,23,163,21],[159,24,163,22,"status"],[159,30,163,28],[160,8,164,6,"release"],[160,15,164,13],[161,8,165,6,"environment"],[162,6,166,4],[162,7,166,5],[163,6,168,4],[163,10,168,8],[163,20,168,18],[163,24,168,22,"checkIn"],[163,31,168,29],[163,33,168,31],[164,8,169,6,"serializedCheckIn"],[164,25,169,23],[164,26,169,24,"duration"],[164,34,169,32],[164,37,169,35,"checkIn"],[164,44,169,42],[164,45,169,43,"duration"],[164,53,169,51],[165,6,170,4],[166,6,172,4],[166,10,172,8,"monitorConfig"],[166,23,172,21],[166,25,172,23],[167,8,173,6,"serializedCheckIn"],[167,25,173,23],[167,26,173,24,"monitor_config"],[167,40,173,38],[167,43,173,41],[168,10,174,8,"schedule"],[168,18,174,16],[168,20,174,18,"monitorConfig"],[168,33,174,31],[168,34,174,32,"schedule"],[168,42,174,40],[169,10,175,8,"checkin_margin"],[169,24,175,22],[169,26,175,24,"monitorConfig"],[169,39,175,37],[169,40,175,38,"checkinMargin"],[169,53,175,51],[170,10,176,8,"max_runtime"],[170,21,176,19],[170,23,176,21,"monitorConfig"],[170,36,176,34],[170,37,176,35,"maxRuntime"],[170,47,176,45],[171,10,177,8,"timezone"],[171,18,177,16],[171,20,177,18,"monitorConfig"],[171,33,177,31],[171,34,177,32,"timezone"],[171,42,177,40],[172,10,178,8,"failure_issue_threshold"],[172,33,178,31],[172,35,178,33,"monitorConfig"],[172,48,178,46],[172,49,178,47,"failureIssueThreshold"],[172,70,178,68],[173,10,179,8,"recovery_threshold"],[173,28,179,26],[173,30,179,28,"monitorConfig"],[173,43,179,41],[173,44,179,42,"recoveryThreshold"],[174,8,180,6],[174,9,180,7],[175,6,181,4],[176,6,183,4],[176,12,183,10],[176,13,183,11,"dynamicSamplingContext"],[176,35,183,33],[176,37,183,35,"traceContext"],[176,49,183,47],[176,50,183,48],[176,53,183,51],[176,57,183,55],[176,58,183,56,"_getTraceInfoFromScope"],[176,80,183,78],[176,81,183,79,"scope"],[176,86,183,84],[176,87,183,85],[177,6,184,4],[177,10,184,8,"traceContext"],[177,22,184,20],[177,24,184,22],[178,8,185,6,"serializedCheckIn"],[178,25,185,23],[178,26,185,24,"contexts"],[178,34,185,32],[178,37,185,35],[179,10,186,8,"trace"],[179,15,186,13],[179,17,186,15,"traceContext"],[180,8,187,6],[180,9,187,7],[181,6,188,4],[182,6,190,4],[182,12,190,10,"envelope"],[182,20,190,18],[182,23,190,21],[182,27,190,21,"createCheckInEnvelope"],[182,57,190,42],[182,59,191,6,"serializedCheckIn"],[182,76,191,23],[182,78,192,6,"dynamicSamplingContext"],[182,100,192,28],[182,102,193,6],[182,106,193,10],[182,107,193,11,"getSdkMetadata"],[182,121,193,25],[182,122,193,26],[182,123,193,27],[182,125,194,6,"tunnel"],[182,131,194,12],[182,133,195,6],[182,137,195,10],[182,138,195,11,"getDsn"],[182,144,195,17],[182,145,195,18],[182,146,196,4],[182,147,196,5],[183,6,198,4,"DEBUG_BUILD"],[183,29,198,15],[183,33,198,19,"logger"],[183,47,198,25],[183,48,198,26,"info"],[183,52,198,30],[183,53,198,31],[183,71,198,49],[183,73,198,51,"checkIn"],[183,80,198,58],[183,81,198,59,"monitorSlug"],[183,92,198,70],[183,94,198,72,"checkIn"],[183,101,198,79],[183,102,198,80,"status"],[183,108,198,86],[183,109,198,87],[185,6,200,4],[186,6,201,4],[187,6,202,4],[187,10,202,8],[187,11,202,9,"sendEnvelope"],[187,23,202,21],[187,24,202,22,"envelope"],[187,32,202,30],[187,33,202,31],[188,6,204,4],[188,13,204,11,"id"],[188,15,204,13],[189,4,205,2],[191,4,207,2],[192,0,208,0],[193,0,209,0],[194,0,210,0],[195,0,211,0],[196,0,212,0],[197,4,213,3,"_captureRequestSession"],[197,26,213,25,"_captureRequestSession"],[197,27,213,25],[197,29,213,28],[198,6,214,4],[198,10,214,8],[198,11,214,9],[198,15,214,13],[198,16,214,14,"_sessionFlusher"],[198,31,214,29],[198,33,214,31],[199,8,215,6,"DEBUG_BUILD"],[199,31,215,17],[199,35,215,21,"logger"],[199,49,215,27],[199,50,215,28,"warn"],[199,54,215,32],[199,55,215,33],[199,135,215,113],[199,136,215,114],[200,6,216,4],[200,7,216,5],[200,13,216,11],[201,8,217,6],[201,12,217,10],[201,13,217,11,"_sessionFlusher"],[201,28,217,26],[201,29,217,27,"incrementSessionStatusCount"],[201,56,217,54],[201,57,217,55],[201,58,217,56],[202,6,218,4],[203,4,219,2],[205,4,221,2],[206,0,222,0],[207,0,223,0],[208,4,224,3,"_prepareEvent"],[208,17,224,16,"_prepareEvent"],[208,18,225,4,"event"],[208,23,225,9],[208,25,226,4,"hint"],[208,29,226,8],[208,31,227,4,"scope"],[208,36,227,9],[208,38,228,4,"isolationScope"],[208,52,228,18],[208,54,229,4],[209,6,230,4],[209,10,230,8],[209,14,230,12],[209,15,230,13,"_options"],[209,23,230,21],[209,24,230,22,"platform"],[209,32,230,30],[209,34,230,32],[210,8,231,6,"event"],[210,13,231,11],[210,14,231,12,"platform"],[210,22,231,20],[210,25,231,23,"event"],[210,30,231,28],[210,31,231,29,"platform"],[210,39,231,37],[210,43,231,41],[210,47,231,45],[210,48,231,46,"_options"],[210,56,231,54],[210,57,231,55,"platform"],[210,65,231,63],[211,6,232,4],[212,6,234,4],[212,10,234,8],[212,14,234,12],[212,15,234,13,"_options"],[212,23,234,21],[212,24,234,22,"runtime"],[212,31,234,29],[212,33,234,31],[213,8,235,6,"event"],[213,13,235,11],[213,14,235,12,"contexts"],[213,22,235,20],[213,25,235,23],[214,10,236,8],[214,13,236,11,"event"],[214,18,236,16],[214,19,236,17,"contexts"],[214,27,236,25],[215,10,237,8,"runtime"],[215,17,237,15],[215,19,237,17],[215,20,237,18,"event"],[215,25,237,23],[215,26,237,24,"contexts"],[215,34,237,32],[215,38,237,36],[215,39,237,37],[215,40,237,38],[215,42,237,40,"runtime"],[215,49,237,47],[215,53,237,51],[215,57,237,55],[215,58,237,56,"_options"],[215,66,237,64],[215,67,237,65,"runtime"],[216,8,238,6],[216,9,238,7],[217,6,239,4],[218,6,241,4],[218,10,241,8],[218,14,241,12],[218,15,241,13,"_options"],[218,23,241,21],[218,24,241,22,"serverName"],[218,34,241,32],[218,36,241,34],[219,8,242,6,"event"],[219,13,242,11],[219,14,242,12,"server_name"],[219,25,242,23],[219,28,242,26,"event"],[219,33,242,31],[219,34,242,32,"server_name"],[219,45,242,43],[219,49,242,47],[219,53,242,51],[219,54,242,52,"_options"],[219,62,242,60],[219,63,242,61,"serverName"],[219,73,242,71],[220,6,243,4],[221,6,245,4],[221,13,245,11],[221,18,245,16],[221,19,245,17,"_prepareEvent"],[221,32,245,30],[221,33,245,31,"event"],[221,38,245,36],[221,40,245,38,"hint"],[221,44,245,42],[221,46,245,44,"scope"],[221,51,245,49],[221,53,245,51,"isolationScope"],[221,67,245,65],[221,68,245,66],[222,4,246,2],[224,4,248,2],[225,4,249,3,"_getTraceInfoFromScope"],[225,26,249,25,"_getTraceInfoFromScope"],[225,27,250,4,"scope"],[225,32,250,9],[225,34,251,4],[226,6,252,4],[226,10,252,8],[226,11,252,9,"scope"],[226,16,252,14],[226,18,252,16],[227,8,253,6],[227,15,253,13],[227,16,253,14,"undefined"],[227,25,253,23],[227,27,253,25,"undefined"],[227,36,253,34],[227,37,253,35],[228,6,254,4],[229,6,256,4],[229,12,256,10,"span"],[229,16,256,14],[229,19,256,17],[229,23,256,17,"_getSpanForScope"],[229,52,256,33],[229,54,256,34,"scope"],[229,59,256,39],[229,60,256,40],[230,6,258,4],[230,12,258,10,"traceContext"],[230,24,258,22],[230,27,258,25,"span"],[230,31,258,29],[230,34,258,32],[230,38,258,32,"spanToTraceContext"],[230,67,258,50],[230,69,258,51,"span"],[230,73,258,55],[230,74,258,56],[230,77,258,59],[230,81,258,59,"getTraceContextFromScope"],[230,120,258,83],[230,122,258,84,"scope"],[230,127,258,89],[230,128,258,90],[231,6,259,4],[231,12,259,10,"dynamicSamplingContext"],[231,34,259,32],[231,37,259,35,"span"],[231,41,259,39],[231,44,260,8],[231,48,260,8,"getDynamicSamplingContextFromSpan"],[231,105,260,41],[231,107,260,42,"span"],[231,111,260,46],[231,112,260,47],[231,115,261,8],[231,119,261,8,"getDynamicSamplingContextFromScope"],[231,177,261,42],[231,179,261,43],[231,183,261,47],[231,185,261,49,"scope"],[231,190,261,54],[231,191,261,55],[232,6,262,4],[232,13,262,11],[232,14,262,12,"dynamicSamplingContext"],[232,36,262,34],[232,38,262,36,"traceContext"],[232,50,262,48],[232,51,262,49],[233,4,263,2],[234,2,264,0],[235,2,264,1,"exports"],[235,9,264,1],[235,10,264,1,"ServerRuntimeClient"],[235,29,264,1],[235,32,264,1,"ServerRuntimeClient"],[235,51,264,1],[236,0,264,1],[236,3]],"functionMap":{"names":["<global>","ServerRuntimeClient","ServerRuntimeClient#constructor","ServerRuntimeClient#eventFromException","ServerRuntimeClient#eventFromMessage","ServerRuntimeClient#captureException","ServerRuntimeClient#captureEvent","ServerRuntimeClient#close","ServerRuntimeClient#initSessionFlusher","ServerRuntimeClient#captureCheckIn","ServerRuntimeClient#_captureRequestSession","ServerRuntimeClient#_prepareEvent","ServerRuntimeClient#_getTraceInfoFromScope"],"mappings":"AAA;ACmB;GCS;GDK;GEK;GFK;GGK;GHQ;GIK;GJkB;GKK;GLyB;GMM;GNK;GOS;GPW;GQS;GRuD;GSQ;GTM;GUK;GVsB;GWG;GXc;CDC"}},"type":"js/module"}]}