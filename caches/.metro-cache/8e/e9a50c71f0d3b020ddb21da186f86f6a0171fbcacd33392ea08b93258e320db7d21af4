{"dependencies":[{"name":"./currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"K7iI+PRtR1yDAq2Cd5P/ht8ORfQ=","exportNames":["*"]}},{"name":"./exports.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"t/+6jF6bamLhGLo72Jouy5+wt/Q=","exportNames":["*"]}},{"name":"./semanticAttributes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":109,"index":217}}],"key":"/6BUdYPH9gaEicG1aM+qviDIUZE=","exportNames":["*"]}},{"name":"./tracing/errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":218},"end":{"line":4,"column":29,"index":247}}],"key":"in4pKAqHAMBVu+zdC3Zdy95C7R4=","exportNames":["*"]}},{"name":"./utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":248},"end":{"line":5,"column":38,"index":286}}],"key":"m8KfYj+k/3+bPHhnkEVLMr3nakA=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":287},"end":{"line":6,"column":33,"index":320}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":321},"end":{"line":7,"column":26,"index":347}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":348},"end":{"line":8,"column":31,"index":379}}],"key":"CDYXZ+Iu2qXN5epbbNjMwVJRDIA=","exportNames":["*"]}},{"name":"./utils-hoist/normalize.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":380},"end":{"line":9,"column":55,"index":435}}],"key":"IrJKSNCsu7Oyzcl/3lNDKSScTKg=","exportNames":["*"]}},{"name":"./utils-hoist/syncpromise.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":436},"end":{"line":10,"column":38,"index":474}}],"key":"gwGYC9zGsq15kFPabL3tTNAvIUc=","exportNames":["*"]}},{"name":"./tracing/trace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":475},"end":{"line":11,"column":53,"index":528}}],"key":"Z0hO6xxcK72YpJO1GcfhCSObzfk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.trpcMiddleware = trpcMiddleware;\n  var _currentScopes = require(_dependencyMap[0], \"./currentScopes.js\");\n  var _exports = require(_dependencyMap[1], \"./exports.js\");\n  var _semanticAttributes = require(_dependencyMap[2], \"./semanticAttributes.js\");\n  require(_dependencyMap[3], \"./tracing/errors.js\");\n  require(_dependencyMap[4], \"./utils-hoist/debug-build.js\");\n  require(_dependencyMap[5], \"./utils-hoist/logger.js\");\n  require(_dependencyMap[6], \"./debug-build.js\");\n  require(_dependencyMap[7], \"./utils-hoist/time.js\");\n  var _normalize = require(_dependencyMap[8], \"./utils-hoist/normalize.js\");\n  require(_dependencyMap[9], \"./utils-hoist/syncpromise.js\");\n  var _trace = require(_dependencyMap[10], \"./tracing/trace.js\");\n  const trpcCaptureContext = {\n    mechanism: {\n      handled: false,\n      data: {\n        function: 'trpcMiddleware'\n      }\n    }\n  };\n  function captureIfError(nextResult) {\n    // TODO: Set span status based on what TRPCError was encountered\n    if (typeof nextResult === 'object' && nextResult !== null && 'ok' in nextResult && !nextResult.ok && 'error' in nextResult) {\n      (0, _exports.captureException)(nextResult.error, trpcCaptureContext);\n    }\n  }\n\n  /**\n   * Sentry tRPC middleware that captures errors and creates spans for tRPC procedures.\n   */\n  function trpcMiddleware(options = {}) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return async function (opts) {\n      const {\n        path,\n        type,\n        next,\n        rawInput,\n        getRawInput\n      } = opts;\n      const client = (0, _currentScopes.getClient)();\n      const clientOptions = client && client.getOptions();\n      const trpcContext = {\n        procedure_path: path,\n        procedure_type: type\n      };\n      if (options.attachRpcInput !== undefined ? options.attachRpcInput : clientOptions && clientOptions.sendDefaultPii) {\n        if (rawInput !== undefined) {\n          trpcContext.input = (0, _normalize.normalize)(rawInput);\n        }\n        if (getRawInput !== undefined && typeof getRawInput === 'function') {\n          try {\n            const rawRes = await getRawInput();\n            trpcContext.input = (0, _normalize.normalize)(rawRes);\n          } catch (err) {\n            // noop\n          }\n        }\n      }\n      return (0, _currentScopes.withScope)(scope => {\n        scope.setContext('trpc', trpcContext);\n        return (0, _trace.startSpanManual)({\n          name: `trpc/${path}`,\n          op: 'rpc.server',\n          attributes: {\n            [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n            [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.rpc.trpc'\n          }\n        }, async span => {\n          try {\n            const nextResult = await next();\n            captureIfError(nextResult);\n            span.end();\n            return nextResult;\n          } catch (e) {\n            (0, _exports.captureException)(e, trpcCaptureContext);\n            span.end();\n            throw e;\n          }\n        });\n      });\n    };\n  }\n});","lineCount":89,"map":[[6,2,1,0],[6,6,1,0,"_currentScopes"],[6,20,1,0],[6,23,1,0,"require"],[6,30,1,0],[6,31,1,0,"_dependencyMap"],[6,45,1,0],[7,2,2,0],[7,6,2,0,"_exports"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,3,0],[8,6,3,0,"_semanticAttributes"],[8,25,3,0],[8,28,3,0,"require"],[8,35,3,0],[8,36,3,0,"_dependencyMap"],[8,50,3,0],[9,2,4,0,"require"],[9,9,4,0],[9,10,4,0,"_dependencyMap"],[9,24,4,0],[10,2,5,0,"require"],[10,9,5,0],[10,10,5,0,"_dependencyMap"],[10,24,5,0],[11,2,6,0,"require"],[11,9,6,0],[11,10,6,0,"_dependencyMap"],[11,24,6,0],[12,2,7,0,"require"],[12,9,7,0],[12,10,7,0,"_dependencyMap"],[12,24,7,0],[13,2,8,0,"require"],[13,9,8,0],[13,10,8,0,"_dependencyMap"],[13,24,8,0],[14,2,9,0],[14,6,9,0,"_normalize"],[14,16,9,0],[14,19,9,0,"require"],[14,26,9,0],[14,27,9,0,"_dependencyMap"],[14,41,9,0],[15,2,10,0,"require"],[15,9,10,0],[15,10,10,0,"_dependencyMap"],[15,24,10,0],[16,2,11,0],[16,6,11,0,"_trace"],[16,12,11,0],[16,15,11,0,"require"],[16,22,11,0],[16,23,11,0,"_dependencyMap"],[16,37,11,0],[17,2,13,0],[17,8,13,6,"trpcCaptureContext"],[17,26,13,24],[17,29,13,27],[18,4,13,29,"mechanism"],[18,13,13,38],[18,15,13,40],[19,6,13,42,"handled"],[19,13,13,49],[19,15,13,51],[19,20,13,56],[20,6,13,58,"data"],[20,10,13,62],[20,12,13,64],[21,8,13,66,"function"],[21,16,13,74],[21,18,13,76],[22,6,13,93],[23,4,13,95],[24,2,13,97],[24,3,13,98],[25,2,15,0],[25,11,15,9,"captureIfError"],[25,25,15,23,"captureIfError"],[25,26,15,24,"nextResult"],[25,36,15,34],[25,38,15,36],[26,4,16,2],[27,4,17,2],[27,8,18,4],[27,15,18,11,"nextResult"],[27,25,18,21],[27,30,18,26],[27,38,18,34],[27,42,19,4,"nextResult"],[27,52,19,14],[27,57,19,19],[27,61,19,23],[27,65,20,4],[27,69,20,8],[27,73,20,12,"nextResult"],[27,83,20,22],[27,87,21,4],[27,88,21,5,"nextResult"],[27,98,21,15],[27,99,21,16,"ok"],[27,101,21,18],[27,105,22,4],[27,112,22,11],[27,116,22,15,"nextResult"],[27,126,22,25],[27,128,23,4],[28,6,24,4],[28,10,24,4,"captureException"],[28,35,24,20],[28,37,24,21,"nextResult"],[28,47,24,31],[28,48,24,32,"error"],[28,53,24,37],[28,55,24,39,"trpcCaptureContext"],[28,73,24,57],[28,74,24,58],[29,4,25,2],[30,2,26,0],[32,2,28,0],[33,0,29,0],[34,0,30,0],[35,2,31,0],[35,11,31,9,"trpcMiddleware"],[35,25,31,23,"trpcMiddleware"],[35,26,31,24,"options"],[35,33,31,31],[35,36,31,34],[35,37,31,35],[35,38,31,36],[35,40,31,38],[36,4,32,2],[37,4,33,2],[38,4,34,2],[38,11,34,9],[38,27,34,25,"opts"],[38,31,34,29],[38,33,34,31],[39,6,35,4],[39,12,35,10],[40,8,35,12,"path"],[40,12,35,16],[41,8,35,18,"type"],[41,12,35,22],[42,8,35,24,"next"],[42,12,35,28],[43,8,35,30,"rawInput"],[43,16,35,38],[44,8,35,40,"getRawInput"],[45,6,35,52],[45,7,35,53],[45,10,35,56,"opts"],[45,14,35,60],[46,6,37,4],[46,12,37,10,"client"],[46,18,37,16],[46,21,37,19],[46,25,37,19,"getClient"],[46,49,37,28],[46,51,37,29],[46,52,37,30],[47,6,38,4],[47,12,38,10,"clientOptions"],[47,25,38,23],[47,28,38,26,"client"],[47,34,38,32],[47,38,38,36,"client"],[47,44,38,42],[47,45,38,43,"getOptions"],[47,55,38,53],[47,56,38,54],[47,57,38,55],[48,6,40,4],[48,12,40,10,"trpcContext"],[48,23,40,21],[48,26,40,24],[49,8,41,6,"procedure_path"],[49,22,41,20],[49,24,41,22,"path"],[49,28,41,26],[50,8,42,6,"procedure_type"],[50,22,42,20],[50,24,42,22,"type"],[51,6,43,4],[51,7,43,5],[52,6,45,4],[52,10,45,8,"options"],[52,17,45,15],[52,18,45,16,"attachRpcInput"],[52,32,45,30],[52,37,45,35,"undefined"],[52,46,45,44],[52,49,45,47,"options"],[52,56,45,54],[52,57,45,55,"attachRpcInput"],[52,71,45,69],[52,74,45,72,"clientOptions"],[52,87,45,85],[52,91,45,89,"clientOptions"],[52,104,45,102],[52,105,45,103,"sendDefaultPii"],[52,119,45,117],[52,121,45,119],[53,8,46,6],[53,12,46,10,"rawInput"],[53,20,46,18],[53,25,46,23,"undefined"],[53,34,46,32],[53,36,46,34],[54,10,47,8,"trpcContext"],[54,21,47,19],[54,22,47,20,"input"],[54,27,47,25],[54,30,47,28],[54,34,47,28,"normalize"],[54,54,47,37],[54,56,47,38,"rawInput"],[54,64,47,46],[54,65,47,47],[55,8,48,6],[56,8,50,6],[56,12,50,10,"getRawInput"],[56,23,50,21],[56,28,50,26,"undefined"],[56,37,50,35],[56,41,50,39],[56,48,50,46,"getRawInput"],[56,59,50,57],[56,64,50,62],[56,74,50,72],[56,76,50,74],[57,10,51,8],[57,14,51,12],[58,12,52,10],[58,18,52,16,"rawRes"],[58,24,52,22],[58,27,52,25],[58,33,52,31,"getRawInput"],[58,44,52,42],[58,45,52,43],[58,46,52,44],[59,12,54,10,"trpcContext"],[59,23,54,21],[59,24,54,22,"input"],[59,29,54,27],[59,32,54,30],[59,36,54,30,"normalize"],[59,56,54,39],[59,58,54,40,"rawRes"],[59,64,54,46],[59,65,54,47],[60,10,55,8],[60,11,55,9],[60,12,55,10],[60,19,55,17,"err"],[60,22,55,20],[60,24,55,22],[61,12,56,10],[62,10,56,10],[63,8,58,6],[64,6,59,4],[65,6,61,4],[65,13,61,11],[65,17,61,11,"withScope"],[65,41,61,20],[65,43,61,21,"scope"],[65,48,61,26],[65,52,61,30],[66,8,62,6,"scope"],[66,13,62,11],[66,14,62,12,"setContext"],[66,24,62,22],[66,25,62,23],[66,31,62,29],[66,33,62,31,"trpcContext"],[66,44,62,42],[66,45,62,43],[67,8,63,6],[67,15,63,13],[67,19,63,13,"startSpanManual"],[67,41,63,28],[67,43,64,8],[68,10,65,10,"name"],[68,14,65,14],[68,16,65,16],[68,24,65,24,"path"],[68,28,65,28],[68,30,65,30],[69,10,66,10,"op"],[69,12,66,12],[69,14,66,14],[69,26,66,26],[70,10,67,10,"attributes"],[70,20,67,20],[70,22,67,22],[71,12,68,12],[71,13,68,13,"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE"],[71,65,68,45],[71,68,68,48],[71,75,68,55],[72,12,69,12],[72,13,69,13,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[72,65,69,45],[72,68,69,48],[73,10,70,10],[74,8,71,8],[74,9,71,9],[74,11,72,8],[74,17,72,14,"span"],[74,21,72,18],[74,25,72,22],[75,10,73,10],[75,14,73,14],[76,12,74,12],[76,18,74,18,"nextResult"],[76,28,74,28],[76,31,74,31],[76,37,74,37,"next"],[76,41,74,41],[76,42,74,42],[76,43,74,43],[77,12,75,12,"captureIfError"],[77,26,75,26],[77,27,75,27,"nextResult"],[77,37,75,37],[77,38,75,38],[78,12,76,12,"span"],[78,16,76,16],[78,17,76,17,"end"],[78,20,76,20],[78,21,76,21],[78,22,76,22],[79,12,77,12],[79,19,77,19,"nextResult"],[79,29,77,29],[80,10,78,10],[80,11,78,11],[80,12,78,12],[80,19,78,19,"e"],[80,20,78,20],[80,22,78,22],[81,12,79,12],[81,16,79,12,"captureException"],[81,41,79,28],[81,43,79,29,"e"],[81,44,79,30],[81,46,79,32,"trpcCaptureContext"],[81,64,79,50],[81,65,79,51],[82,12,80,12,"span"],[82,16,80,16],[82,17,80,17,"end"],[82,20,80,20],[82,21,80,21],[82,22,80,22],[83,12,81,12],[83,18,81,18,"e"],[83,19,81,19],[84,10,82,10],[85,8,83,8],[85,9,84,6],[85,10,84,7],[86,6,85,4],[86,7,85,5],[86,8,85,6],[87,4,86,2],[87,5,86,3],[88,2,87,0],[89,0,87,1],[89,3]],"functionMap":{"names":["<global>","captureIfError","trpcMiddleware","<anonymous>","withScope$argument_0","startSpanManual$argument_1"],"mappings":"AAA;ACc;CDW;AEK;SCG;qBC2B;QCW;SDW;KDE;GDC;CFC"}},"type":"js/module"}]}