{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../../../utils/featureFlags.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":94,"index":144}}],"key":"rZi75susrW6b4U5MRcW9aF3kKeg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.statsigIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _featureFlags = require(_dependencyMap[1], \"../../../utils/featureFlags.js\");\n  /**\n   * Sentry integration for capturing feature flag evaluations from the Statsig js-client SDK.\n   *\n   * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n   *\n   * @example\n   * ```\n   * import { StatsigClient } from '@statsig/js-client';\n   * import * as Sentry from '@sentry/browser';\n   *\n   * const statsigClient = new StatsigClient();\n   *\n   * Sentry.init({\n   *   dsn: '___PUBLIC_DSN___',\n   *   integrations: [Sentry.statsigIntegration({featureFlagClient: statsigClient})],\n   * });\n   *\n   * await statsigClient.initializeAsync();  // or statsigClient.initializeSync();\n   *\n   * const result = statsigClient.checkGate('my-feature-gate');\n   * Sentry.captureException(new Error('something went wrong'));\n   * ```\n   */\n  const statsigIntegration = exports.statsigIntegration = (0, _core.defineIntegration)(({\n    featureFlagClient: statsigClient\n  }) => {\n    return {\n      name: 'Statsig',\n      processEvent(event, _hint, _client) {\n        return (0, _featureFlags.copyFlagsFromScopeToEvent)(event);\n      },\n      setup() {\n        statsigClient.on('gate_evaluation', event => {\n          (0, _featureFlags.insertFlagToScope)(event.gate.name, event.gate.value);\n        });\n      }\n    };\n  });\n});","lineCount":46,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,0,"_featureFlags"],[7,19,2,0],[7,22,2,0,"require"],[7,29,2,0],[7,30,2,0,"_dependencyMap"],[7,44,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,2,27,0],[31,8,27,6,"statsigIntegration"],[31,26,27,24],[31,29,27,24,"exports"],[31,36,27,24],[31,37,27,24,"statsigIntegration"],[31,55,27,24],[31,58,27,27],[31,62,27,27,"defineIntegration"],[31,85,27,44],[31,87,28,2],[31,88,28,3],[32,4,28,5,"featureFlagClient"],[32,21,28,22],[32,23,28,24,"statsigClient"],[33,2,28,38],[33,3,28,39],[33,8,28,44],[34,4,29,4],[34,11,29,11],[35,6,30,6,"name"],[35,10,30,10],[35,12,30,12],[35,21,30,21],[36,6,32,6,"processEvent"],[36,18,32,18,"processEvent"],[36,19,32,19,"event"],[36,24,32,24],[36,26,32,26,"_hint"],[36,31,32,31],[36,33,32,33,"_client"],[36,40,32,40],[36,42,32,42],[37,8,33,8],[37,15,33,15],[37,19,33,15,"copyFlagsFromScopeToEvent"],[37,58,33,40],[37,60,33,41,"event"],[37,65,33,46],[37,66,33,47],[38,6,34,6],[38,7,34,7],[39,6,36,6,"setup"],[39,11,36,11,"setup"],[39,12,36,11],[39,14,36,14],[40,8,37,8,"statsigClient"],[40,21,37,21],[40,22,37,22,"on"],[40,24,37,24],[40,25,37,25],[40,42,37,42],[40,44,37,45,"event"],[40,49,37,50],[40,53,37,55],[41,10,38,10],[41,14,38,10,"insertFlagToScope"],[41,45,38,27],[41,47,38,28,"event"],[41,52,38,33],[41,53,38,34,"gate"],[41,57,38,38],[41,58,38,39,"name"],[41,62,38,43],[41,64,38,45,"event"],[41,69,38,50],[41,70,38,51,"gate"],[41,74,38,55],[41,75,38,56,"value"],[41,80,38,61],[41,81,38,62],[42,8,39,8],[42,9,39,9],[42,10,39,10],[43,6,40,6],[44,4,41,4],[44,5,41,5],[45,2,42,2],[45,3,43,0],[45,4,43,1],[46,0,43,3],[46,3]],"functionMap":{"names":["<global>","defineIntegration$argument_0","processEvent","setup","statsigClient.on$argument_1"],"mappings":"AAA;EC2B;MCI;ODE;MEE;4CCC;SDE;OFC;GDE"}},"type":"js/module"}]}