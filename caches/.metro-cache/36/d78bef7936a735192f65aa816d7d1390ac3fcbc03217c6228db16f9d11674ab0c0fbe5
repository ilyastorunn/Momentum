{"dependencies":[{"name":"./currentScopes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"K7iI+PRtR1yDAq2Cd5P/ht8ORfQ=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":47,"index":101}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":65,"index":167}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initAndBind = initAndBind;\n  exports.setCurrentClient = setCurrentClient;\n  var _currentScopes = require(_dependencyMap[0], \"./currentScopes.js\");\n  var _debugBuild = require(_dependencyMap[1], \"./debug-build.js\");\n  var _logger = require(_dependencyMap[2], \"./utils-hoist/logger.js\");\n  /** A class object that can instantiate Client objects. */\n\n  /**\n   * Internal function to create a new SDK client instance. The client is\n   * installed and then bound to the current scope.\n   *\n   * @param clientClass The client class to instantiate.\n   * @param options Options to pass to the client.\n   */\n  function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n      if (_debugBuild.DEBUG_BUILD) {\n        _logger.logger.enable();\n      } else {\n        // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n        (0, _logger.consoleSandbox)(() => {\n          // eslint-disable-next-line no-console\n          console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n        });\n      }\n    }\n    const scope = (0, _currentScopes.getCurrentScope)();\n    scope.update(options.initialScope);\n    const client = new clientClass(options);\n    setCurrentClient(client);\n    client.init();\n    return client;\n  }\n\n  /**\n   * Make the given client the current client.\n   */\n  function setCurrentClient(client) {\n    (0, _currentScopes.getCurrentScope)().setClient(client);\n  }\n});","lineCount":45,"map":[[7,2,1,0],[7,6,1,0,"_currentScopes"],[7,20,1,0],[7,23,1,0,"require"],[7,30,1,0],[7,31,1,0,"_dependencyMap"],[7,45,1,0],[8,2,2,0],[8,6,2,0,"_debugBuild"],[8,17,2,0],[8,20,2,0,"require"],[8,27,2,0],[8,28,2,0,"_dependencyMap"],[8,42,2,0],[9,2,3,0],[9,6,3,0,"_logger"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,5,0],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,2,14,0],[19,11,14,9,"initAndBind"],[19,22,14,20,"initAndBind"],[19,23,15,2,"clientClass"],[19,34,15,13],[19,36,16,2,"options"],[19,43,16,9],[19,45,17,2],[20,4,18,2],[20,8,18,6,"options"],[20,15,18,13],[20,16,18,14,"debug"],[20,21,18,19],[20,26,18,24],[20,30,18,28],[20,32,18,30],[21,6,19,4],[21,10,19,8,"DEBUG_BUILD"],[21,33,19,19],[21,35,19,21],[22,8,20,6,"logger"],[22,22,20,12],[22,23,20,13,"enable"],[22,29,20,19],[22,30,20,20],[22,31,20,21],[23,6,21,4],[23,7,21,5],[23,13,21,11],[24,8,22,6],[25,8,23,6],[25,12,23,6,"consoleSandbox"],[25,34,23,20],[25,36,23,21],[25,42,23,27],[26,10,24,8],[27,10,25,8,"console"],[27,17,25,15],[27,18,25,16,"warn"],[27,22,25,20],[27,23,25,21],[27,101,25,99],[27,102,25,100],[28,8,26,6],[28,9,26,7],[28,10,26,8],[29,6,27,4],[30,4,28,2],[31,4,29,2],[31,10,29,8,"scope"],[31,15,29,13],[31,18,29,16],[31,22,29,16,"getCurrentScope"],[31,52,29,31],[31,54,29,32],[31,55,29,33],[32,4,30,2,"scope"],[32,9,30,7],[32,10,30,8,"update"],[32,16,30,14],[32,17,30,15,"options"],[32,24,30,22],[32,25,30,23,"initialScope"],[32,37,30,35],[32,38,30,36],[33,4,32,2],[33,10,32,8,"client"],[33,16,32,14],[33,19,32,17],[33,23,32,21,"clientClass"],[33,34,32,32],[33,35,32,33,"options"],[33,42,32,40],[33,43,32,41],[34,4,33,2,"setCurrentClient"],[34,20,33,18],[34,21,33,19,"client"],[34,27,33,25],[34,28,33,26],[35,4,34,2,"client"],[35,10,34,8],[35,11,34,9,"init"],[35,15,34,13],[35,16,34,14],[35,17,34,15],[36,4,35,2],[36,11,35,9,"client"],[36,17,35,15],[37,2,36,0],[39,2,38,0],[40,0,39,0],[41,0,40,0],[42,2,41,0],[42,11,41,9,"setCurrentClient"],[42,27,41,25,"setCurrentClient"],[42,28,41,26,"client"],[42,34,41,32],[42,36,41,34],[43,4,42,2],[43,8,42,2,"getCurrentScope"],[43,38,42,17],[43,40,42,18],[43,41,42,19],[43,42,42,20,"setClient"],[43,51,42,29],[43,52,42,30,"client"],[43,58,42,36],[43,59,42,37],[44,2,43,0],[45,0,43,1],[45,3]],"functionMap":{"names":["<global>","initAndBind","consoleSandbox$argument_0","setCurrentClient"],"mappings":"AAA;ACa;qBCS;ODG;CDU;AGK;CHE"}},"type":"js/module"}]}