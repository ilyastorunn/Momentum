{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":159,"index":840}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../utils/environment","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":841},"end":{"line":11,"column":62,"index":903}}],"key":"ZHbdf+zAJuwAaiIxqWoPGRJz4oo=","exportNames":["*"]}},{"name":"../utils/error","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":904},"end":{"line":12,"column":67,"index":971}}],"key":"08JfAxhwWjN4WA5sLEebhMuO5Lw=","exportNames":["*"]}},{"name":"../utils/worldwide","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":972},"end":{"line":13,"column":51,"index":1023}}],"key":"/9Zkbo5cHZuI/WH8RoGGgsefOs8=","exportNames":["*"]}},{"name":"./reactnativeerrorhandlersutils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":1024},"end":{"line":14,"column":113,"index":1137}}],"key":"N2z4HTJAQys8tYE2cbL/dT/fuic=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reactNativeErrorHandlersIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _environment = require(_dependencyMap[1], \"../utils/environment\");\n  var _error = require(_dependencyMap[2], \"../utils/error\");\n  var _worldwide = require(_dependencyMap[3], \"../utils/worldwide\");\n  var _reactnativeerrorhandlersutils = require(_dependencyMap[4], \"./reactnativeerrorhandlersutils\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  const INTEGRATION_NAME = 'ReactNativeErrorHandlers';\n  /** ReactNativeErrorHandlers Integration */\n  const reactNativeErrorHandlersIntegration = (options = {}) => {\n    return {\n      name: INTEGRATION_NAME,\n      setupOnce: () => setup(Object.assign({\n        onerror: true,\n        onunhandledrejection: true,\n        patchGlobalPromise: true\n      }, options))\n    };\n  };\n  exports.reactNativeErrorHandlersIntegration = reactNativeErrorHandlersIntegration;\n  function setup(options) {\n    options.onunhandledrejection && setupUnhandledRejectionsTracking(options.patchGlobalPromise);\n    options.onerror && setupErrorUtilsGlobalHandler();\n  }\n  /**\n   * Setup unhandled promise rejection tracking\n   */\n  function setupUnhandledRejectionsTracking(patchGlobalPromise) {\n    var _a, _b, _c;\n    try {\n      if ((0, _environment.isHermesEnabled)() && ((_a = _worldwide.RN_GLOBAL_OBJ.HermesInternal) === null || _a === void 0 ? void 0 : _a.enablePromiseRejectionTracker) && ((_c = (_b = _worldwide.RN_GLOBAL_OBJ === null || _worldwide.RN_GLOBAL_OBJ === void 0 ? void 0 : _worldwide.RN_GLOBAL_OBJ.HermesInternal) === null || _b === void 0 ? void 0 : _b.hasPromise) === null || _c === void 0 ? void 0 : _c.call(_b))) {\n        _core.logger.log('Using Hermes native promise rejection tracking');\n        _worldwide.RN_GLOBAL_OBJ.HermesInternal.enablePromiseRejectionTracker({\n          allRejections: true,\n          onUnhandled: promiseRejectionTrackingOptions.onUnhandled,\n          onHandled: promiseRejectionTrackingOptions.onHandled\n        });\n        _core.logger.log('Unhandled promise rejections will be caught by Sentry.');\n      } else if ((0, _environment.isWeb)()) {\n        _core.logger.log('Using Browser JS promise rejection tracking for React Native Web');\n        // Use Sentry's built-in global unhandled rejection handler\n        (0, _core.addGlobalUnhandledRejectionInstrumentationHandler)(error => {\n          (0, _core.captureException)(error, {\n            originalException: error,\n            syntheticException: (0, _error.isErrorLike)(error) ? undefined : (0, _error.createSyntheticError)(),\n            mechanism: {\n              handled: false,\n              type: 'onunhandledrejection'\n            }\n          });\n        });\n      } else if (patchGlobalPromise) {\n        // For JSC and other environments, use the existing approach\n        (0, _reactnativeerrorhandlersutils.polyfillPromise)();\n        attachUnhandledRejectionHandler();\n        (0, _reactnativeerrorhandlersutils.checkPromiseAndWarn)();\n      } else {\n        // For JSC and other environments, patching was disabled by user configuration\n        _core.logger.log('Unhandled promise rejections will not be caught by Sentry.');\n      }\n    } catch (e) {\n      _core.logger.warn('Failed to set up promise rejection tracking. ' + 'Unhandled promise rejections will not be caught by Sentry.' + 'See https://docs.sentry.io/platforms/react-native/troubleshooting/ for more details.');\n    }\n  }\n  const promiseRejectionTrackingOptions = {\n    onUnhandled: (id, error, rejection = {}) => {\n      if (__DEV__) {\n        _core.logger.warn(`Possible Unhandled Promise Rejection (id: ${id}):\\n${rejection}`);\n      }\n      // Marking the rejection as handled to avoid breaking crash rate calculations.\n      // See: https://github.com/getsentry/sentry-react-native/issues/4141\n      (0, _core.captureException)(error, {\n        data: {\n          id\n        },\n        originalException: error,\n        syntheticException: (0, _error.isErrorLike)(error) ? undefined : (0, _error.createSyntheticError)(),\n        mechanism: {\n          handled: true,\n          type: 'onunhandledrejection'\n        }\n      });\n    },\n    onHandled: id => {\n      if (__DEV__) {\n        _core.logger.warn(`Promise Rejection Handled (id: ${id})\\n` + 'This means you can ignore any previous messages of the form ' + `\"Possible Unhandled Promise Rejection (id: ${id}):\"`);\n      }\n    }\n  };\n  function attachUnhandledRejectionHandler() {\n    const tracking = (0, _reactnativeerrorhandlersutils.requireRejectionTracking)();\n    tracking.enable({\n      allRejections: true,\n      onUnhandled: promiseRejectionTrackingOptions.onUnhandled,\n      onHandled: promiseRejectionTrackingOptions.onHandled\n    });\n  }\n  function setupErrorUtilsGlobalHandler() {\n    let handlingFatal = false;\n    const errorUtils = _worldwide.RN_GLOBAL_OBJ.ErrorUtils;\n    if (!errorUtils) {\n      _core.logger.warn('ErrorUtils not found. Can be caused by different environment for example react-native-web.');\n      return;\n    }\n    const defaultHandler = errorUtils.getGlobalHandler && errorUtils.getGlobalHandler();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    errorUtils.setGlobalHandler((error, isFatal) => __awaiter(this, void 0, void 0, function* () {\n      // We want to handle fatals, but only in production mode.\n      const shouldHandleFatal = isFatal && !__DEV__;\n      if (shouldHandleFatal) {\n        if (handlingFatal) {\n          _core.logger.log('Encountered multiple fatals in a row. The latest:', error);\n          return;\n        }\n        handlingFatal = true;\n      }\n      const client = (0, _core.getClient)();\n      if (!client) {\n        _core.logger.error('Sentry client is missing, the error event might be lost.', error);\n        // If there is no client something is fishy, anyway we call the default handler\n        defaultHandler(error, isFatal);\n        return;\n      }\n      const hint = {\n        originalException: error,\n        attachments: (0, _core.getCurrentScope)().getScopeData().attachments\n      };\n      const event = yield client.eventFromException(error, hint);\n      if (isFatal) {\n        event.level = 'fatal';\n        (0, _core.addExceptionMechanism)(event, {\n          handled: false,\n          type: 'onerror'\n        });\n      } else {\n        event.level = 'error';\n        (0, _core.addExceptionMechanism)(event, {\n          handled: true,\n          type: 'generic'\n        });\n      }\n      client.captureEvent(event, hint);\n      if (__DEV__) {\n        // If in dev, we call the default handler anyway and hope the error will be sent\n        // Just for a better dev experience\n        defaultHandler(error, isFatal);\n        return;\n      }\n      void client.flush(client.getOptions().shutdownTimeout || 2000).then(() => {\n        defaultHandler(error, isFatal);\n      }, reason => {\n        _core.logger.error('[ReactNativeErrorHandlers] Error while flushing the event cache after uncaught error.', reason);\n      });\n    }));\n  }\n});","lineCount":186,"map":[[6,2,10,0],[6,6,10,0,"_core"],[6,11,10,0],[6,14,10,0,"require"],[6,21,10,0],[6,22,10,0,"_dependencyMap"],[6,36,10,0],[7,2,11,0],[7,6,11,0,"_environment"],[7,18,11,0],[7,21,11,0,"require"],[7,28,11,0],[7,29,11,0,"_dependencyMap"],[7,43,11,0],[8,2,12,0],[8,6,12,0,"_error"],[8,12,12,0],[8,15,12,0,"require"],[8,22,12,0],[8,23,12,0,"_dependencyMap"],[8,37,12,0],[9,2,13,0],[9,6,13,0,"_worldwide"],[9,16,13,0],[9,19,13,0,"require"],[9,26,13,0],[9,27,13,0,"_dependencyMap"],[9,41,13,0],[10,2,14,0],[10,6,14,0,"_reactnativeerrorhandlersutils"],[10,36,14,0],[10,39,14,0,"require"],[10,46,14,0],[10,47,14,0,"_dependencyMap"],[10,61,14,0],[11,2,1,0],[11,6,1,4,"__awaiter"],[11,15,1,13],[11,18,1,17],[11,22,1,21],[11,26,1,25],[11,30,1,29],[11,31,1,30,"__awaiter"],[11,40,1,39],[11,44,1,44],[11,54,1,54,"thisArg"],[11,61,1,61],[11,63,1,63,"_arguments"],[11,73,1,73],[11,75,1,75,"P"],[11,76,1,76],[11,78,1,78,"generator"],[11,87,1,87],[11,89,1,89],[12,4,2,4],[12,13,2,13,"adopt"],[12,18,2,18,"adopt"],[12,19,2,19,"value"],[12,24,2,24],[12,26,2,26],[13,6,2,28],[13,13,2,35,"value"],[13,18,2,40],[13,30,2,52,"P"],[13,31,2,53],[13,34,2,56,"value"],[13,39,2,61],[13,42,2,64],[13,46,2,68,"P"],[13,47,2,69],[13,48,2,70],[13,58,2,80,"resolve"],[13,65,2,87],[13,67,2,89],[14,8,2,91,"resolve"],[14,15,2,98],[14,16,2,99,"value"],[14,21,2,104],[14,22,2,105],[15,6,2,107],[15,7,2,108],[15,8,2,109],[16,4,2,111],[17,4,3,4],[17,11,3,11],[17,16,3,16,"P"],[17,17,3,17],[17,22,3,22,"P"],[17,23,3,23],[17,26,3,26,"Promise"],[17,33,3,33],[17,34,3,34],[17,36,3,36],[17,46,3,46,"resolve"],[17,53,3,53],[17,55,3,55,"reject"],[17,61,3,61],[17,63,3,63],[18,6,4,8],[18,15,4,17,"fulfilled"],[18,24,4,26,"fulfilled"],[18,25,4,27,"value"],[18,30,4,32],[18,32,4,34],[19,8,4,36],[19,12,4,40],[20,10,4,42,"step"],[20,14,4,46],[20,15,4,47,"generator"],[20,24,4,56],[20,25,4,57,"next"],[20,29,4,61],[20,30,4,62,"value"],[20,35,4,67],[20,36,4,68],[20,37,4,69],[21,8,4,71],[21,9,4,72],[21,10,4,73],[21,17,4,80,"e"],[21,18,4,81],[21,20,4,83],[22,10,4,85,"reject"],[22,16,4,91],[22,17,4,92,"e"],[22,18,4,93],[22,19,4,94],[23,8,4,96],[24,6,4,98],[25,6,5,8],[25,15,5,17,"rejected"],[25,23,5,25,"rejected"],[25,24,5,26,"value"],[25,29,5,31],[25,31,5,33],[26,8,5,35],[26,12,5,39],[27,10,5,41,"step"],[27,14,5,45],[27,15,5,46,"generator"],[27,24,5,55],[27,25,5,56],[27,32,5,63],[27,33,5,64],[27,34,5,65,"value"],[27,39,5,70],[27,40,5,71],[27,41,5,72],[28,8,5,74],[28,9,5,75],[28,10,5,76],[28,17,5,83,"e"],[28,18,5,84],[28,20,5,86],[29,10,5,88,"reject"],[29,16,5,94],[29,17,5,95,"e"],[29,18,5,96],[29,19,5,97],[30,8,5,99],[31,6,5,101],[32,6,6,8],[32,15,6,17,"step"],[32,19,6,21,"step"],[32,20,6,22,"result"],[32,26,6,28],[32,28,6,30],[33,8,6,32,"result"],[33,14,6,38],[33,15,6,39,"done"],[33,19,6,43],[33,22,6,46,"resolve"],[33,29,6,53],[33,30,6,54,"result"],[33,36,6,60],[33,37,6,61,"value"],[33,42,6,66],[33,43,6,67],[33,46,6,70,"adopt"],[33,51,6,75],[33,52,6,76,"result"],[33,58,6,82],[33,59,6,83,"value"],[33,64,6,88],[33,65,6,89],[33,66,6,90,"then"],[33,70,6,94],[33,71,6,95,"fulfilled"],[33,80,6,104],[33,82,6,106,"rejected"],[33,90,6,114],[33,91,6,115],[34,6,6,117],[35,6,7,8,"step"],[35,10,7,12],[35,11,7,13],[35,12,7,14,"generator"],[35,21,7,23],[35,24,7,26,"generator"],[35,33,7,35],[35,34,7,36,"apply"],[35,39,7,41],[35,40,7,42,"thisArg"],[35,47,7,49],[35,49,7,51,"_arguments"],[35,59,7,61],[35,63,7,65],[35,65,7,67],[35,66,7,68],[35,68,7,70,"next"],[35,72,7,74],[35,73,7,75],[35,74,7,76],[35,75,7,77],[36,4,8,4],[36,5,8,5],[36,6,8,6],[37,2,9,0],[37,3,9,1],[38,2,15,0],[38,8,15,6,"INTEGRATION_NAME"],[38,24,15,22],[38,27,15,25],[38,53,15,51],[39,2,16,0],[40,2,17,7],[40,8,17,13,"reactNativeErrorHandlersIntegration"],[40,43,17,48],[40,46,17,51,"reactNativeErrorHandlersIntegration"],[40,47,17,52,"options"],[40,54,17,59],[40,57,17,62],[40,58,17,63],[40,59,17,64],[40,64,17,69],[41,4,18,4],[41,11,18,11],[42,6,19,8,"name"],[42,10,19,12],[42,12,19,14,"INTEGRATION_NAME"],[42,28,19,30],[43,6,20,8,"setupOnce"],[43,15,20,17],[43,17,20,19,"setupOnce"],[43,18,20,19],[43,23,20,25,"setup"],[43,28,20,30],[43,29,20,31,"Object"],[43,35,20,37],[43,36,20,38,"assign"],[43,42,20,44],[43,43,20,45],[44,8,20,47,"onerror"],[44,15,20,54],[44,17,20,56],[44,21,20,60],[45,8,20,62,"onunhandledrejection"],[45,28,20,82],[45,30,20,84],[45,34,20,88],[46,8,20,90,"patchGlobalPromise"],[46,26,20,108],[46,28,20,110],[47,6,20,115],[47,7,20,116],[47,9,20,118,"options"],[47,16,20,125],[47,17,20,126],[48,4,21,4],[48,5,21,5],[49,2,22,0],[49,3,22,1],[50,2,22,2,"exports"],[50,9,22,2],[50,10,22,2,"reactNativeErrorHandlersIntegration"],[50,45,22,2],[50,48,22,2,"reactNativeErrorHandlersIntegration"],[50,83,22,2],[51,2,23,0],[51,11,23,9,"setup"],[51,16,23,14,"setup"],[51,17,23,15,"options"],[51,24,23,22],[51,26,23,24],[52,4,24,4,"options"],[52,11,24,11],[52,12,24,12,"onunhandledrejection"],[52,32,24,32],[52,36,24,36,"setupUnhandledRejectionsTracking"],[52,68,24,68],[52,69,24,69,"options"],[52,76,24,76],[52,77,24,77,"patchGlobalPromise"],[52,95,24,95],[52,96,24,96],[53,4,25,4,"options"],[53,11,25,11],[53,12,25,12,"onerror"],[53,19,25,19],[53,23,25,23,"setupErrorUtilsGlobalHandler"],[53,51,25,51],[53,52,25,52],[53,53,25,53],[54,2,26,0],[55,2,27,0],[56,0,28,0],[57,0,29,0],[58,2,30,0],[58,11,30,9,"setupUnhandledRejectionsTracking"],[58,43,30,41,"setupUnhandledRejectionsTracking"],[58,44,30,42,"patchGlobalPromise"],[58,62,30,60],[58,64,30,62],[59,4,31,4],[59,8,31,8,"_a"],[59,10,31,10],[59,12,31,12,"_b"],[59,14,31,14],[59,16,31,16,"_c"],[59,18,31,18],[60,4,32,4],[60,8,32,8],[61,6,33,8],[61,10,33,12],[61,14,33,12,"isHermesEnabled"],[61,42,33,27],[61,44,33,28],[61,45,33,29],[61,50,34,13],[61,51,34,14,"_a"],[61,53,34,16],[61,56,34,19,"RN_GLOBAL_OBJ"],[61,80,34,32],[61,81,34,33,"HermesInternal"],[61,95,34,47],[61,101,34,53],[61,105,34,57],[61,109,34,61,"_a"],[61,111,34,63],[61,116,34,68],[61,121,34,73],[61,122,34,74],[61,125,34,77],[61,130,34,82],[61,131,34,83],[61,134,34,86,"_a"],[61,136,34,88],[61,137,34,89,"enablePromiseRejectionTracker"],[61,166,34,118],[61,167,34,119],[61,172,35,13],[61,173,35,14,"_c"],[61,175,35,16],[61,178,35,19],[61,179,35,20,"_b"],[61,181,35,22],[61,184,35,25,"RN_GLOBAL_OBJ"],[61,208,35,38],[61,213,35,43],[61,217,35,47],[61,221,35,51,"RN_GLOBAL_OBJ"],[61,245,35,64],[61,250,35,69],[61,255,35,74],[61,256,35,75],[61,259,35,78],[61,264,35,83],[61,265,35,84],[61,268,35,87,"RN_GLOBAL_OBJ"],[61,292,35,100],[61,293,35,101,"HermesInternal"],[61,307,35,115],[61,313,35,121],[61,317,35,125],[61,321,35,129,"_b"],[61,323,35,131],[61,328,35,136],[61,333,35,141],[61,334,35,142],[61,337,35,145],[61,342,35,150],[61,343,35,151],[61,346,35,154,"_b"],[61,348,35,156],[61,349,35,157,"hasPromise"],[61,359,35,167],[61,365,35,173],[61,369,35,177],[61,373,35,181,"_c"],[61,375,35,183],[61,380,35,188],[61,385,35,193],[61,386,35,194],[61,389,35,197],[61,394,35,202],[61,395,35,203],[61,398,35,206,"_c"],[61,400,35,208],[61,401,35,209,"call"],[61,405,35,213],[61,406,35,214,"_b"],[61,408,35,216],[61,409,35,217],[61,410,35,218],[61,412,35,220],[62,8,36,12,"logger"],[62,20,36,18],[62,21,36,19,"log"],[62,24,36,22],[62,25,36,23],[62,73,36,71],[62,74,36,72],[63,8,37,12,"RN_GLOBAL_OBJ"],[63,32,37,25],[63,33,37,26,"HermesInternal"],[63,47,37,40],[63,48,37,41,"enablePromiseRejectionTracker"],[63,77,37,70],[63,78,37,71],[64,10,38,16,"allRejections"],[64,23,38,29],[64,25,38,31],[64,29,38,35],[65,10,39,16,"onUnhandled"],[65,21,39,27],[65,23,39,29,"promiseRejectionTrackingOptions"],[65,54,39,60],[65,55,39,61,"onUnhandled"],[65,66,39,72],[66,10,40,16,"onHandled"],[66,19,40,25],[66,21,40,27,"promiseRejectionTrackingOptions"],[66,52,40,58],[66,53,40,59,"onHandled"],[67,8,41,12],[67,9,41,13],[67,10,41,14],[68,8,42,12,"logger"],[68,20,42,18],[68,21,42,19,"log"],[68,24,42,22],[68,25,42,23],[68,81,42,79],[68,82,42,80],[69,6,43,8],[69,7,43,9],[69,13,44,13],[69,17,44,17],[69,21,44,17,"isWeb"],[69,39,44,22],[69,41,44,23],[69,42,44,24],[69,44,44,26],[70,8,45,12,"logger"],[70,20,45,18],[70,21,45,19,"log"],[70,24,45,22],[70,25,45,23],[70,91,45,89],[70,92,45,90],[71,8,46,12],[72,8,47,12],[72,12,47,12,"addGlobalUnhandledRejectionInstrumentationHandler"],[72,67,47,61],[72,69,47,63,"error"],[72,74,47,68],[72,78,47,73],[73,10,48,16],[73,14,48,16,"captureException"],[73,36,48,32],[73,38,48,33,"error"],[73,43,48,38],[73,45,48,40],[74,12,49,20,"originalException"],[74,29,49,37],[74,31,49,39,"error"],[74,36,49,44],[75,12,50,20,"syntheticException"],[75,30,50,38],[75,32,50,40],[75,36,50,40,"isErrorLike"],[75,54,50,51],[75,56,50,52,"error"],[75,61,50,57],[75,62,50,58],[75,65,50,61,"undefined"],[75,74,50,70],[75,77,50,73],[75,81,50,73,"createSyntheticError"],[75,108,50,93],[75,110,50,94],[75,111,50,95],[76,12,51,20,"mechanism"],[76,21,51,29],[76,23,51,31],[77,14,51,33,"handled"],[77,21,51,40],[77,23,51,42],[77,28,51,47],[78,14,51,49,"type"],[78,18,51,53],[78,20,51,55],[79,12,51,78],[80,10,52,16],[80,11,52,17],[80,12,52,18],[81,8,53,12],[81,9,53,13],[81,10,53,14],[82,6,54,8],[82,7,54,9],[82,13,55,13],[82,17,55,17,"patchGlobalPromise"],[82,35,55,35],[82,37,55,37],[83,8,56,12],[84,8,57,12],[84,12,57,12,"polyfillPromise"],[84,58,57,27],[84,60,57,28],[84,61,57,29],[85,8,58,12,"attachUnhandledRejectionHandler"],[85,39,58,43],[85,40,58,44],[85,41,58,45],[86,8,59,12],[86,12,59,12,"checkPromiseAndWarn"],[86,62,59,31],[86,64,59,32],[86,65,59,33],[87,6,60,8],[87,7,60,9],[87,13,61,13],[88,8,62,12],[89,8,63,12,"logger"],[89,20,63,18],[89,21,63,19,"log"],[89,24,63,22],[89,25,63,23],[89,85,63,83],[89,86,63,84],[90,6,64,8],[91,4,65,4],[91,5,65,5],[91,6,66,4],[91,13,66,11,"e"],[91,14,66,12],[91,16,66,14],[92,6,67,8,"logger"],[92,18,67,14],[92,19,67,15,"warn"],[92,23,67,19],[92,24,67,20],[92,71,67,67],[92,74,68,12],[92,134,68,72],[92,137,69,12],[92,223,69,98],[92,224,69,99],[93,4,70,4],[94,2,71,0],[95,2,72,0],[95,8,72,6,"promiseRejectionTrackingOptions"],[95,39,72,37],[95,42,72,40],[96,4,73,4,"onUnhandled"],[96,15,73,15],[96,17,73,17,"onUnhandled"],[96,18,73,18,"id"],[96,20,73,20],[96,22,73,22,"error"],[96,27,73,27],[96,29,73,29,"rejection"],[96,38,73,38],[96,41,73,41],[96,42,73,42],[96,43,73,43],[96,48,73,48],[97,6,74,8],[97,10,74,12,"__DEV__"],[97,17,74,19],[97,19,74,21],[98,8,75,12,"logger"],[98,20,75,18],[98,21,75,19,"warn"],[98,25,75,23],[98,26,75,24],[98,71,75,69,"id"],[98,73,75,71],[98,80,75,78,"rejection"],[98,89,75,87],[98,91,75,89],[98,92,75,90],[99,6,76,8],[100,6,77,8],[101,6,78,8],[102,6,79,8],[102,10,79,8,"captureException"],[102,32,79,24],[102,34,79,25,"error"],[102,39,79,30],[102,41,79,32],[103,8,80,12,"data"],[103,12,80,16],[103,14,80,18],[104,10,80,20,"id"],[105,8,80,23],[105,9,80,24],[106,8,81,12,"originalException"],[106,25,81,29],[106,27,81,31,"error"],[106,32,81,36],[107,8,82,12,"syntheticException"],[107,26,82,30],[107,28,82,32],[107,32,82,32,"isErrorLike"],[107,50,82,43],[107,52,82,44,"error"],[107,57,82,49],[107,58,82,50],[107,61,82,53,"undefined"],[107,70,82,62],[107,73,82,65],[107,77,82,65,"createSyntheticError"],[107,104,82,85],[107,106,82,86],[107,107,82,87],[108,8,83,12,"mechanism"],[108,17,83,21],[108,19,83,23],[109,10,83,25,"handled"],[109,17,83,32],[109,19,83,34],[109,23,83,38],[110,10,83,40,"type"],[110,14,83,44],[110,16,83,46],[111,8,83,69],[112,6,84,8],[112,7,84,9],[112,8,84,10],[113,4,85,4],[113,5,85,5],[114,4,86,4,"onHandled"],[114,13,86,13],[114,15,86,15,"id"],[114,17,86,17],[114,21,86,21],[115,6,87,8],[115,10,87,12,"__DEV__"],[115,17,87,19],[115,19,87,21],[116,8,88,12,"logger"],[116,20,88,18],[116,21,88,19,"warn"],[116,25,88,23],[116,26,88,24],[116,60,88,58,"id"],[116,62,88,60],[116,67,88,65],[116,70,89,16],[116,132,89,78],[116,135,90,16],[116,181,90,62,"id"],[116,183,90,64],[116,188,90,69],[116,189,90,70],[117,6,91,8],[118,4,92,4],[119,2,93,0],[119,3,93,1],[120,2,94,0],[120,11,94,9,"attachUnhandledRejectionHandler"],[120,42,94,40,"attachUnhandledRejectionHandler"],[120,43,94,40],[120,45,94,43],[121,4,95,4],[121,10,95,10,"tracking"],[121,18,95,18],[121,21,95,21],[121,25,95,21,"requireRejectionTracking"],[121,80,95,45],[121,82,95,46],[121,83,95,47],[122,4,96,4,"tracking"],[122,12,96,12],[122,13,96,13,"enable"],[122,19,96,19],[122,20,96,20],[123,6,97,8,"allRejections"],[123,19,97,21],[123,21,97,23],[123,25,97,27],[124,6,98,8,"onUnhandled"],[124,17,98,19],[124,19,98,21,"promiseRejectionTrackingOptions"],[124,50,98,52],[124,51,98,53,"onUnhandled"],[124,62,98,64],[125,6,99,8,"onHandled"],[125,15,99,17],[125,17,99,19,"promiseRejectionTrackingOptions"],[125,48,99,50],[125,49,99,51,"onHandled"],[126,4,100,4],[126,5,100,5],[126,6,100,6],[127,2,101,0],[128,2,102,0],[128,11,102,9,"setupErrorUtilsGlobalHandler"],[128,39,102,37,"setupErrorUtilsGlobalHandler"],[128,40,102,37],[128,42,102,40],[129,4,103,4],[129,8,103,8,"handlingFatal"],[129,21,103,21],[129,24,103,24],[129,29,103,29],[130,4,104,4],[130,10,104,10,"errorUtils"],[130,20,104,20],[130,23,104,23,"RN_GLOBAL_OBJ"],[130,47,104,36],[130,48,104,37,"ErrorUtils"],[130,58,104,47],[131,4,105,4],[131,8,105,8],[131,9,105,9,"errorUtils"],[131,19,105,19],[131,21,105,21],[132,6,106,8,"logger"],[132,18,106,14],[132,19,106,15,"warn"],[132,23,106,19],[132,24,106,20],[132,116,106,112],[132,117,106,113],[133,6,107,8],[134,4,108,4],[135,4,109,4],[135,10,109,10,"defaultHandler"],[135,24,109,24],[135,27,109,27,"errorUtils"],[135,37,109,37],[135,38,109,38,"getGlobalHandler"],[135,54,109,54],[135,58,109,58,"errorUtils"],[135,68,109,68],[135,69,109,69,"getGlobalHandler"],[135,85,109,85],[135,86,109,86],[135,87,109,87],[136,4,110,4],[137,4,111,4,"errorUtils"],[137,14,111,14],[137,15,111,15,"setGlobalHandler"],[137,31,111,31],[137,32,111,32],[137,33,111,33,"error"],[137,38,111,38],[137,40,111,40,"isFatal"],[137,47,111,47],[137,52,111,52,"__awaiter"],[137,61,111,61],[137,62,111,62],[137,66,111,66],[137,68,111,68],[137,73,111,73],[137,74,111,74],[137,76,111,76],[137,81,111,81],[137,82,111,82],[137,84,111,84],[137,97,111,97],[138,6,112,8],[139,6,113,8],[139,12,113,14,"shouldHandleFatal"],[139,29,113,31],[139,32,113,34,"isFatal"],[139,39,113,41],[139,43,113,45],[139,44,113,46,"__DEV__"],[139,51,113,53],[140,6,114,8],[140,10,114,12,"shouldHandleFatal"],[140,27,114,29],[140,29,114,31],[141,8,115,12],[141,12,115,16,"handlingFatal"],[141,25,115,29],[141,27,115,31],[142,10,116,16,"logger"],[142,22,116,22],[142,23,116,23,"log"],[142,26,116,26],[142,27,116,27],[142,78,116,78],[142,80,116,80,"error"],[142,85,116,85],[142,86,116,86],[143,10,117,16],[144,8,118,12],[145,8,119,12,"handlingFatal"],[145,21,119,25],[145,24,119,28],[145,28,119,32],[146,6,120,8],[147,6,121,8],[147,12,121,14,"client"],[147,18,121,20],[147,21,121,23],[147,25,121,23,"getClient"],[147,40,121,32],[147,42,121,33],[147,43,121,34],[148,6,122,8],[148,10,122,12],[148,11,122,13,"client"],[148,17,122,19],[148,19,122,21],[149,8,123,12,"logger"],[149,20,123,18],[149,21,123,19,"error"],[149,26,123,24],[149,27,123,25],[149,85,123,83],[149,87,123,85,"error"],[149,92,123,90],[149,93,123,91],[150,8,124,12],[151,8,125,12,"defaultHandler"],[151,22,125,26],[151,23,125,27,"error"],[151,28,125,32],[151,30,125,34,"isFatal"],[151,37,125,41],[151,38,125,42],[152,8,126,12],[153,6,127,8],[154,6,128,8],[154,12,128,14,"hint"],[154,16,128,18],[154,19,128,21],[155,8,129,12,"originalException"],[155,25,129,29],[155,27,129,31,"error"],[155,32,129,36],[156,8,130,12,"attachments"],[156,19,130,23],[156,21,130,25],[156,25,130,25,"getCurrentScope"],[156,46,130,40],[156,48,130,41],[156,49,130,42],[156,50,130,43,"getScopeData"],[156,62,130,55],[156,63,130,56],[156,64,130,57],[156,65,130,58,"attachments"],[157,6,131,8],[157,7,131,9],[158,6,132,8],[158,12,132,14,"event"],[158,17,132,19],[158,20,132,22],[158,26,132,28,"client"],[158,32,132,34],[158,33,132,35,"eventFromException"],[158,51,132,53],[158,52,132,54,"error"],[158,57,132,59],[158,59,132,61,"hint"],[158,63,132,65],[158,64,132,66],[159,6,133,8],[159,10,133,12,"isFatal"],[159,17,133,19],[159,19,133,21],[160,8,134,12,"event"],[160,13,134,17],[160,14,134,18,"level"],[160,19,134,23],[160,22,134,26],[160,29,134,33],[161,8,135,12],[161,12,135,12,"addExceptionMechanism"],[161,39,135,33],[161,41,135,34,"event"],[161,46,135,39],[161,48,135,41],[162,10,136,16,"handled"],[162,17,136,23],[162,19,136,25],[162,24,136,30],[163,10,137,16,"type"],[163,14,137,20],[163,16,137,22],[164,8,138,12],[164,9,138,13],[164,10,138,14],[165,6,139,8],[165,7,139,9],[165,13,140,13],[166,8,141,12,"event"],[166,13,141,17],[166,14,141,18,"level"],[166,19,141,23],[166,22,141,26],[166,29,141,33],[167,8,142,12],[167,12,142,12,"addExceptionMechanism"],[167,39,142,33],[167,41,142,34,"event"],[167,46,142,39],[167,48,142,41],[168,10,143,16,"handled"],[168,17,143,23],[168,19,143,25],[168,23,143,29],[169,10,144,16,"type"],[169,14,144,20],[169,16,144,22],[170,8,145,12],[170,9,145,13],[170,10,145,14],[171,6,146,8],[172,6,147,8,"client"],[172,12,147,14],[172,13,147,15,"captureEvent"],[172,25,147,27],[172,26,147,28,"event"],[172,31,147,33],[172,33,147,35,"hint"],[172,37,147,39],[172,38,147,40],[173,6,148,8],[173,10,148,12,"__DEV__"],[173,17,148,19],[173,19,148,21],[174,8,149,12],[175,8,150,12],[176,8,151,12,"defaultHandler"],[176,22,151,26],[176,23,151,27,"error"],[176,28,151,32],[176,30,151,34,"isFatal"],[176,37,151,41],[176,38,151,42],[177,8,152,12],[178,6,153,8],[179,6,154,8],[179,11,154,13,"client"],[179,17,154,19],[179,18,154,20,"flush"],[179,23,154,25],[179,24,154,26,"client"],[179,30,154,32],[179,31,154,33,"getOptions"],[179,41,154,43],[179,42,154,44],[179,43,154,45],[179,44,154,46,"shutdownTimeout"],[179,59,154,61],[179,63,154,65],[179,67,154,69],[179,68,154,70],[179,69,154,71,"then"],[179,73,154,75],[179,74,154,76],[179,80,154,82],[180,8,155,12,"defaultHandler"],[180,22,155,26],[180,23,155,27,"error"],[180,28,155,32],[180,30,155,34,"isFatal"],[180,37,155,41],[180,38,155,42],[181,6,156,8],[181,7,156,9],[181,9,156,12,"reason"],[181,15,156,18],[181,19,156,23],[182,8,157,12,"logger"],[182,20,157,18],[182,21,157,19,"error"],[182,26,157,24],[182,27,157,25],[182,114,157,112],[182,116,157,114,"reason"],[182,122,157,120],[182,123,157,121],[183,6,158,8],[183,7,158,9],[183,8,158,10],[184,4,159,4],[184,5,159,5],[184,6,159,6],[184,7,159,7],[185,2,160,0],[186,0,160,1],[186,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","reactNativeErrorHandlersIntegration","setupOnce","setup","setupUnhandledRejectionsTracking","addGlobalUnhandledRejectionInstrumentationHandler$argument_0","promiseRejectionTrackingOptions.onUnhandled","promiseRejectionTrackingOptions.onHandled","attachUnhandledRejectionHandler","setupErrorUtilsGlobalHandler","errorUtils.setGlobalHandler$argument_0","__awaiter$argument_3","client.flush.then$argument_0","client.flush.then$argument_1"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;mDOQ;mBCG,4GD;CPE;ASC;CTG;AUI;8DCiB;aDM;CVkB;iBYE;KZY;eaC;KbM;AcE;CdO;AeC;gCCS,oDC;4EC2C;SDE,EE;SFE;KDC,CD;CfC"}},"type":"js/module"}]}