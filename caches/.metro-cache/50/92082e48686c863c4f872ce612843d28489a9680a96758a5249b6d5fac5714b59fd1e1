{"dependencies":[{"name":"./is.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"C6fLnEQPNIdj7xXbougAJ0zoinA=","exportNames":["*"]}},{"name":"./string.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":39,"index":79}}],"key":"4SgKKWBRWk0zxI3arZcISee7pnU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.applyAggregateErrorsToEvent = applyAggregateErrorsToEvent;\n  var _is = require(_dependencyMap[0], \"./is.js\");\n  var _string = require(_dependencyMap[1], \"./string.js\");\n  /**\n   * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n   */\n  function applyAggregateErrorsToEvent(exceptionFromErrorImplementation, parser, maxValueLimit = 250, key, limit, event, hint) {\n    if (!event.exception || !event.exception.values || !hint || !(0, _is.isInstanceOf)(hint.originalException, Error)) {\n      return;\n    }\n\n    // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n    const originalException = event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n    // We only create exception grouping if there is an exception in the event.\n    if (originalException) {\n      event.exception.values = truncateAggregateExceptions(aggregateExceptionsFromError(exceptionFromErrorImplementation, parser, limit, hint.originalException, key, event.exception.values, originalException, 0), maxValueLimit);\n    }\n  }\n  function aggregateExceptionsFromError(exceptionFromErrorImplementation, parser, limit, error, key, prevExceptions, exception, exceptionId) {\n    if (prevExceptions.length >= limit + 1) {\n      return prevExceptions;\n    }\n    let newExceptions = [...prevExceptions];\n\n    // Recursively call this function in order to walk down a chain of errors\n    if ((0, _is.isInstanceOf)(error[key], Error)) {\n      applyExceptionGroupFieldsForParentException(exception, exceptionId);\n      const newException = exceptionFromErrorImplementation(parser, error[key]);\n      const newExceptionId = newExceptions.length;\n      applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n      newExceptions = aggregateExceptionsFromError(exceptionFromErrorImplementation, parser, limit, error[key], key, [newException, ...newExceptions], newException, newExceptionId);\n    }\n\n    // This will create exception grouping for AggregateErrors\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n    if (Array.isArray(error.errors)) {\n      error.errors.forEach((childError, i) => {\n        if ((0, _is.isInstanceOf)(childError, Error)) {\n          applyExceptionGroupFieldsForParentException(exception, exceptionId);\n          const newException = exceptionFromErrorImplementation(parser, childError);\n          const newExceptionId = newExceptions.length;\n          applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n          newExceptions = aggregateExceptionsFromError(exceptionFromErrorImplementation, parser, limit, childError, key, [newException, ...newExceptions], newException, newExceptionId);\n        }\n      });\n    }\n    return newExceptions;\n  }\n  function applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n    // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n    exception.mechanism = exception.mechanism || {\n      type: 'generic',\n      handled: true\n    };\n    exception.mechanism = {\n      ...exception.mechanism,\n      ...(exception.type === 'AggregateError' && {\n        is_exception_group: true\n      }),\n      exception_id: exceptionId\n    };\n  }\n  function applyExceptionGroupFieldsForChildException(exception, source, exceptionId, parentId) {\n    // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n    exception.mechanism = exception.mechanism || {\n      type: 'generic',\n      handled: true\n    };\n    exception.mechanism = {\n      ...exception.mechanism,\n      type: 'chained',\n      source,\n      exception_id: exceptionId,\n      parent_id: parentId\n    };\n  }\n\n  /**\n   * Truncate the message (exception.value) of all exceptions in the event.\n   * Because this event processor is ran after `applyClientOptions`,\n   * we need to truncate the message of the added exceptions here.\n   */\n  function truncateAggregateExceptions(exceptions, maxValueLength) {\n    return exceptions.map(exception => {\n      if (exception.value) {\n        exception.value = (0, _string.truncate)(exception.value, maxValueLength);\n      }\n      return exception;\n    });\n  }\n});","lineCount":96,"map":[[6,2,1,0],[6,6,1,0,"_is"],[6,9,1,0],[6,12,1,0,"require"],[6,19,1,0],[6,20,1,0,"_dependencyMap"],[6,34,1,0],[7,2,2,0],[7,6,2,0,"_string"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,2,7,0],[11,11,7,9,"applyAggregateErrorsToEvent"],[11,38,7,36,"applyAggregateErrorsToEvent"],[11,39,8,2,"exceptionFromErrorImplementation"],[11,71,8,34],[11,73,9,2,"parser"],[11,79,9,8],[11,81,10,2,"maxValueLimit"],[11,94,10,15],[11,97,10,18],[11,100,10,21],[11,102,11,2,"key"],[11,105,11,5],[11,107,12,2,"limit"],[11,112,12,7],[11,114,13,2,"event"],[11,119,13,7],[11,121,14,2,"hint"],[11,125,14,6],[11,127,15,2],[12,4,16,2],[12,8,16,6],[12,9,16,7,"event"],[12,14,16,12],[12,15,16,13,"exception"],[12,24,16,22],[12,28,16,26],[12,29,16,27,"event"],[12,34,16,32],[12,35,16,33,"exception"],[12,44,16,42],[12,45,16,43,"values"],[12,51,16,49],[12,55,16,53],[12,56,16,54,"hint"],[12,60,16,58],[12,64,16,62],[12,65,16,63],[12,69,16,63,"isInstanceOf"],[12,85,16,75],[12,87,16,76,"hint"],[12,91,16,80],[12,92,16,81,"originalException"],[12,109,16,98],[12,111,16,100,"Error"],[12,116,16,105],[12,117,16,106],[12,119,16,108],[13,6,17,4],[14,4,18,2],[16,4,20,2],[17,4,21,2],[17,10,21,8,"originalException"],[17,27,21,25],[17,30,22,4,"event"],[17,35,22,9],[17,36,22,10,"exception"],[17,45,22,19],[17,46,22,20,"values"],[17,52,22,26],[17,53,22,27,"length"],[17,59,22,33],[17,62,22,36],[17,63,22,37],[17,66,22,40,"event"],[17,71,22,45],[17,72,22,46,"exception"],[17,81,22,55],[17,82,22,56,"values"],[17,88,22,62],[17,89,22,63,"event"],[17,94,22,68],[17,95,22,69,"exception"],[17,104,22,78],[17,105,22,79,"values"],[17,111,22,85],[17,112,22,86,"length"],[17,118,22,92],[17,121,22,95],[17,122,22,96],[17,123,22,97],[17,126,22,100,"undefined"],[17,135,22,109],[19,4,24,2],[20,4,25,2],[20,8,25,6,"originalException"],[20,25,25,23],[20,27,25,25],[21,6,26,4,"event"],[21,11,26,9],[21,12,26,10,"exception"],[21,21,26,19],[21,22,26,20,"values"],[21,28,26,26],[21,31,26,29,"truncateAggregateExceptions"],[21,58,26,56],[21,59,27,6,"aggregateExceptionsFromError"],[21,87,27,34],[21,88,28,8,"exceptionFromErrorImplementation"],[21,120,28,40],[21,122,29,8,"parser"],[21,128,29,14],[21,130,30,8,"limit"],[21,135,30,13],[21,137,31,8,"hint"],[21,141,31,12],[21,142,31,13,"originalException"],[21,159,31,30],[21,161,32,8,"key"],[21,164,32,11],[21,166,33,8,"event"],[21,171,33,13],[21,172,33,14,"exception"],[21,181,33,23],[21,182,33,24,"values"],[21,188,33,30],[21,190,34,8,"originalException"],[21,207,34,25],[21,209,35,8],[21,210,36,6],[21,211,36,7],[21,213,37,6,"maxValueLimit"],[21,226,38,4],[21,227,38,5],[22,4,39,2],[23,2,40,0],[24,2,42,0],[24,11,42,9,"aggregateExceptionsFromError"],[24,39,42,37,"aggregateExceptionsFromError"],[24,40,43,2,"exceptionFromErrorImplementation"],[24,72,43,34],[24,74,44,2,"parser"],[24,80,44,8],[24,82,45,2,"limit"],[24,87,45,7],[24,89,46,2,"error"],[24,94,46,7],[24,96,47,2,"key"],[24,99,47,5],[24,101,48,2,"prevExceptions"],[24,115,48,16],[24,117,49,2,"exception"],[24,126,49,11],[24,128,50,2,"exceptionId"],[24,139,50,13],[24,141,51,2],[25,4,52,2],[25,8,52,6,"prevExceptions"],[25,22,52,20],[25,23,52,21,"length"],[25,29,52,27],[25,33,52,31,"limit"],[25,38,52,36],[25,41,52,39],[25,42,52,40],[25,44,52,42],[26,6,53,4],[26,13,53,11,"prevExceptions"],[26,27,53,25],[27,4,54,2],[28,4,56,2],[28,8,56,6,"newExceptions"],[28,21,56,19],[28,24,56,22],[28,25,56,23],[28,28,56,26,"prevExceptions"],[28,42,56,40],[28,43,56,41],[30,4,58,2],[31,4,59,2],[31,8,59,6],[31,12,59,6,"isInstanceOf"],[31,28,59,18],[31,30,59,19,"error"],[31,35,59,24],[31,36,59,25,"key"],[31,39,59,28],[31,40,59,29],[31,42,59,31,"Error"],[31,47,59,36],[31,48,59,37],[31,50,59,39],[32,6,60,4,"applyExceptionGroupFieldsForParentException"],[32,49,60,47],[32,50,60,48,"exception"],[32,59,60,57],[32,61,60,59,"exceptionId"],[32,72,60,70],[32,73,60,71],[33,6,61,4],[33,12,61,10,"newException"],[33,24,61,22],[33,27,61,25,"exceptionFromErrorImplementation"],[33,59,61,57],[33,60,61,58,"parser"],[33,66,61,64],[33,68,61,66,"error"],[33,73,61,71],[33,74,61,72,"key"],[33,77,61,75],[33,78,61,76],[33,79,61,77],[34,6,62,4],[34,12,62,10,"newExceptionId"],[34,26,62,24],[34,29,62,27,"newExceptions"],[34,42,62,40],[34,43,62,41,"length"],[34,49,62,47],[35,6,63,4,"applyExceptionGroupFieldsForChildException"],[35,48,63,46],[35,49,63,47,"newException"],[35,61,63,59],[35,63,63,61,"key"],[35,66,63,64],[35,68,63,66,"newExceptionId"],[35,82,63,80],[35,84,63,82,"exceptionId"],[35,95,63,93],[35,96,63,94],[36,6,64,4,"newExceptions"],[36,19,64,17],[36,22,64,20,"aggregateExceptionsFromError"],[36,50,64,48],[36,51,65,6,"exceptionFromErrorImplementation"],[36,83,65,38],[36,85,66,6,"parser"],[36,91,66,12],[36,93,67,6,"limit"],[36,98,67,11],[36,100,68,6,"error"],[36,105,68,11],[36,106,68,12,"key"],[36,109,68,15],[36,110,68,16],[36,112,69,6,"key"],[36,115,69,9],[36,117,70,6],[36,118,70,7,"newException"],[36,130,70,19],[36,132,70,21],[36,135,70,24,"newExceptions"],[36,148,70,37],[36,149,70,38],[36,151,71,6,"newException"],[36,163,71,18],[36,165,72,6,"newExceptionId"],[36,179,73,4],[36,180,73,5],[37,4,74,2],[39,4,76,2],[40,4,77,2],[41,4,78,2],[41,8,78,6,"Array"],[41,13,78,11],[41,14,78,12,"isArray"],[41,21,78,19],[41,22,78,20,"error"],[41,27,78,25],[41,28,78,26,"errors"],[41,34,78,32],[41,35,78,33],[41,37,78,35],[42,6,79,4,"error"],[42,11,79,9],[42,12,79,10,"errors"],[42,18,79,16],[42,19,79,17,"forEach"],[42,26,79,24],[42,27,79,25],[42,28,79,26,"childError"],[42,38,79,36],[42,40,79,38,"i"],[42,41,79,39],[42,46,79,44],[43,8,80,6],[43,12,80,10],[43,16,80,10,"isInstanceOf"],[43,32,80,22],[43,34,80,23,"childError"],[43,44,80,33],[43,46,80,35,"Error"],[43,51,80,40],[43,52,80,41],[43,54,80,43],[44,10,81,8,"applyExceptionGroupFieldsForParentException"],[44,53,81,51],[44,54,81,52,"exception"],[44,63,81,61],[44,65,81,63,"exceptionId"],[44,76,81,74],[44,77,81,75],[45,10,82,8],[45,16,82,14,"newException"],[45,28,82,26],[45,31,82,29,"exceptionFromErrorImplementation"],[45,63,82,61],[45,64,82,62,"parser"],[45,70,82,68],[45,72,82,70,"childError"],[45,82,82,80],[45,83,82,81],[46,10,83,8],[46,16,83,14,"newExceptionId"],[46,30,83,28],[46,33,83,31,"newExceptions"],[46,46,83,44],[46,47,83,45,"length"],[46,53,83,51],[47,10,84,8,"applyExceptionGroupFieldsForChildException"],[47,52,84,50],[47,53,84,51,"newException"],[47,65,84,63],[47,67,84,65],[47,77,84,75,"i"],[47,78,84,76],[47,81,84,79],[47,83,84,81,"newExceptionId"],[47,97,84,95],[47,99,84,97,"exceptionId"],[47,110,84,108],[47,111,84,109],[48,10,85,8,"newExceptions"],[48,23,85,21],[48,26,85,24,"aggregateExceptionsFromError"],[48,54,85,52],[48,55,86,10,"exceptionFromErrorImplementation"],[48,87,86,42],[48,89,87,10,"parser"],[48,95,87,16],[48,97,88,10,"limit"],[48,102,88,15],[48,104,89,10,"childError"],[48,114,89,20],[48,116,90,10,"key"],[48,119,90,13],[48,121,91,10],[48,122,91,11,"newException"],[48,134,91,23],[48,136,91,25],[48,139,91,28,"newExceptions"],[48,152,91,41],[48,153,91,42],[48,155,92,10,"newException"],[48,167,92,22],[48,169,93,10,"newExceptionId"],[48,183,94,8],[48,184,94,9],[49,8,95,6],[50,6,96,4],[50,7,96,5],[50,8,96,6],[51,4,97,2],[52,4,99,2],[52,11,99,9,"newExceptions"],[52,24,99,22],[53,2,100,0],[54,2,102,0],[54,11,102,9,"applyExceptionGroupFieldsForParentException"],[54,54,102,52,"applyExceptionGroupFieldsForParentException"],[54,55,102,53,"exception"],[54,64,102,62],[54,66,102,64,"exceptionId"],[54,77,102,75],[54,79,102,77],[55,4,103,2],[56,4,104,2,"exception"],[56,13,104,11],[56,14,104,12,"mechanism"],[56,23,104,21],[56,26,104,24,"exception"],[56,35,104,33],[56,36,104,34,"mechanism"],[56,45,104,43],[56,49,104,47],[57,6,104,49,"type"],[57,10,104,53],[57,12,104,55],[57,21,104,64],[58,6,104,66,"handled"],[58,13,104,73],[58,15,104,75],[59,4,104,80],[59,5,104,81],[60,4,106,2,"exception"],[60,13,106,11],[60,14,106,12,"mechanism"],[60,23,106,21],[60,26,106,24],[61,6,107,4],[61,9,107,7,"exception"],[61,18,107,16],[61,19,107,17,"mechanism"],[61,28,107,26],[62,6,108,4],[62,10,108,8,"exception"],[62,19,108,17],[62,20,108,18,"type"],[62,24,108,22],[62,29,108,27],[62,45,108,43],[62,49,108,47],[63,8,108,49,"is_exception_group"],[63,26,108,67],[63,28,108,69],[64,6,108,74],[64,7,108,75],[64,8,108,76],[65,6,109,4,"exception_id"],[65,18,109,16],[65,20,109,18,"exceptionId"],[66,4,110,2],[66,5,110,3],[67,2,111,0],[68,2,113,0],[68,11,113,9,"applyExceptionGroupFieldsForChildException"],[68,53,113,51,"applyExceptionGroupFieldsForChildException"],[68,54,114,2,"exception"],[68,63,114,11],[68,65,115,2,"source"],[68,71,115,8],[68,73,116,2,"exceptionId"],[68,84,116,13],[68,86,117,2,"parentId"],[68,94,117,10],[68,96,118,2],[69,4,119,2],[70,4,120,2,"exception"],[70,13,120,11],[70,14,120,12,"mechanism"],[70,23,120,21],[70,26,120,24,"exception"],[70,35,120,33],[70,36,120,34,"mechanism"],[70,45,120,43],[70,49,120,47],[71,6,120,49,"type"],[71,10,120,53],[71,12,120,55],[71,21,120,64],[72,6,120,66,"handled"],[72,13,120,73],[72,15,120,75],[73,4,120,80],[73,5,120,81],[74,4,122,2,"exception"],[74,13,122,11],[74,14,122,12,"mechanism"],[74,23,122,21],[74,26,122,24],[75,6,123,4],[75,9,123,7,"exception"],[75,18,123,16],[75,19,123,17,"mechanism"],[75,28,123,26],[76,6,124,4,"type"],[76,10,124,8],[76,12,124,10],[76,21,124,19],[77,6,125,4,"source"],[77,12,125,10],[78,6,126,4,"exception_id"],[78,18,126,16],[78,20,126,18,"exceptionId"],[78,31,126,29],[79,6,127,4,"parent_id"],[79,15,127,13],[79,17,127,15,"parentId"],[80,4,128,2],[80,5,128,3],[81,2,129,0],[83,2,131,0],[84,0,132,0],[85,0,133,0],[86,0,134,0],[87,0,135,0],[88,2,136,0],[88,11,136,9,"truncateAggregateExceptions"],[88,38,136,36,"truncateAggregateExceptions"],[88,39,136,37,"exceptions"],[88,49,136,47],[88,51,136,49,"maxValueLength"],[88,65,136,63],[88,67,136,65],[89,4,137,2],[89,11,137,9,"exceptions"],[89,21,137,19],[89,22,137,20,"map"],[89,25,137,23],[89,26,137,24,"exception"],[89,35,137,33],[89,39,137,37],[90,6,138,4],[90,10,138,8,"exception"],[90,19,138,17],[90,20,138,18,"value"],[90,25,138,23],[90,27,138,25],[91,8,139,6,"exception"],[91,17,139,15],[91,18,139,16,"value"],[91,23,139,21],[91,26,139,24],[91,30,139,24,"truncate"],[91,46,139,32],[91,48,139,33,"exception"],[91,57,139,42],[91,58,139,43,"value"],[91,63,139,48],[91,65,139,50,"maxValueLength"],[91,79,139,64],[91,80,139,65],[92,6,140,4],[93,6,141,4],[93,13,141,11,"exception"],[93,22,141,20],[94,4,142,2],[94,5,142,3],[94,6,142,4],[95,2,143,0],[96,0,143,1],[96,3]],"functionMap":{"names":["<global>","applyAggregateErrorsToEvent","aggregateExceptionsFromError","error.errors.forEach$argument_0","applyExceptionGroupFieldsForParentException","applyExceptionGroupFieldsForChildException","truncateAggregateExceptions","exceptions.map$argument_0"],"mappings":"AAA;ACM;CDiC;AEE;yBCqC;KDiB;CFI;AIE;CJS;AKE;CLgB;AMO;wBCC;GDK;CNC"}},"type":"js/module"}]}