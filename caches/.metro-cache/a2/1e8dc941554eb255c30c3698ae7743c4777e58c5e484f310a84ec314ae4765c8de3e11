{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":105,"index":105}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":106},"end":{"line":2,"column":37,"index":143}}],"key":"8cLkkKYebhz8179+ortY3/pylDg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractNetworkProtocol = extractNetworkProtocol;\n  exports.getBrowserPerformanceAPI = getBrowserPerformanceAPI;\n  exports.isMeasurementValue = isMeasurementValue;\n  exports.msToSec = msToSec;\n  exports.startAndEndSpan = startAndEndSpan;\n  exports.startStandaloneWebVitalSpan = startStandaloneWebVitalSpan;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _types = require(_dependencyMap[1], \"../types.js\");\n  /**\n   * Checks if a given value is a valid measurement value.\n   */\n  function isMeasurementValue(value) {\n    return typeof value === 'number' && isFinite(value);\n  }\n\n  /**\n   * Helper function to start child on transactions. This function will make sure that the transaction will\n   * use the start timestamp of the created child span if it is earlier than the transactions actual\n   * start timestamp.\n   */\n  function startAndEndSpan(parentSpan, startTimeInSeconds, endTime, {\n    ...ctx\n  }) {\n    const parentStartTime = (0, _core.spanToJSON)(parentSpan).start_timestamp;\n    if (parentStartTime && parentStartTime > startTimeInSeconds) {\n      // We can only do this for SentrySpans...\n      if (typeof parentSpan.updateStartTime === 'function') {\n        parentSpan.updateStartTime(startTimeInSeconds);\n      }\n    }\n\n    // The return value only exists for tests\n    return (0, _core.withActiveSpan)(parentSpan, () => {\n      const span = (0, _core.startInactiveSpan)({\n        startTime: startTimeInSeconds,\n        ...ctx\n      });\n      if (span) {\n        span.end(endTime);\n      }\n      return span;\n    });\n  }\n\n  /**\n   * Starts an inactive, standalone span used to send web vital values to Sentry.\n   * DO NOT use this for arbitrary spans, as these spans require special handling\n   * during ingestion to extract metrics.\n   *\n   * This function adds a bunch of attributes and data to the span that's shared\n   * by all web vital standalone spans. However, you need to take care of adding\n   * the actual web vital value as an event to the span. Also, you need to assign\n   * a transaction name and some other values that are specific to the web vital.\n   *\n   * Ultimately, you also need to take care of ending the span to send it off.\n   *\n   * @param options\n   *\n   * @returns an inactive, standalone and NOT YET ended span\n   */\n  function startStandaloneWebVitalSpan(options) {\n    const client = (0, _core.getClient)();\n    if (!client) {\n      return;\n    }\n    const {\n      name,\n      transaction,\n      attributes: passedAttributes,\n      startTime\n    } = options;\n    const {\n      release,\n      environment\n    } = client.getOptions();\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay = client.getIntegrationByName('Replay');\n    const replayId = replay && replay.getReplayId();\n    const scope = (0, _core.getCurrentScope)();\n    const user = scope.getUser();\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    let profileId;\n    try {\n      // @ts-expect-error skip optional chaining to save bundle size with try catch\n      profileId = scope.getScopeData().contexts.profile.profile_id;\n    } catch (e) {\n      // do nothing\n    }\n    const attributes = {\n      release,\n      environment,\n      user: userDisplay || undefined,\n      profile_id: profileId || undefined,\n      replay_id: replayId || undefined,\n      transaction,\n      // Web vital score calculation relies on the user agent to account for different\n      // browsers setting different thresholds for what is considered a good/meh/bad value.\n      // For example: Chrome vs. Chrome Mobile\n      'user_agent.original': _types.WINDOW.navigator && _types.WINDOW.navigator.userAgent,\n      ...passedAttributes\n    };\n    return (0, _core.startInactiveSpan)({\n      name,\n      attributes,\n      startTime,\n      experimental: {\n        standalone: true\n      }\n    });\n  }\n\n  /** Get the browser performance API. */\n  function getBrowserPerformanceAPI() {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    return _types.WINDOW && _types.WINDOW.addEventListener && _types.WINDOW.performance;\n  }\n\n  /**\n   * Converts from milliseconds to seconds\n   * @param time time in ms\n   */\n  function msToSec(time) {\n    return time / 1000;\n  }\n\n  /**\n   * Converts ALPN protocol ids to name and version.\n   *\n   * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n   * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n   */\n  function extractNetworkProtocol(nextHopProtocol) {\n    let name = 'unknown';\n    let version = 'unknown';\n    let _name = '';\n    for (const char of nextHopProtocol) {\n      // http/1.1 etc.\n      if (char === '/') {\n        [name, version] = nextHopProtocol.split('/');\n        break;\n      }\n      // h2, h3 etc.\n      if (!isNaN(Number(char))) {\n        name = _name === 'h' ? 'http' : _name;\n        version = nextHopProtocol.split(_name)[1];\n        break;\n      }\n      _name += char;\n    }\n    if (_name === nextHopProtocol) {\n      // webrtc, ftp, etc.\n      name = _name;\n    }\n    return {\n      name,\n      version\n    };\n  }\n});","lineCount":164,"map":[[11,2,1,0],[11,6,1,0,"_core"],[11,11,1,0],[11,14,1,0,"require"],[11,21,1,0],[11,22,1,0,"_dependencyMap"],[11,36,1,0],[12,2,2,0],[12,6,2,0,"_types"],[12,12,2,0],[12,15,2,0,"require"],[12,22,2,0],[12,23,2,0,"_dependencyMap"],[12,37,2,0],[13,2,4,0],[14,0,5,0],[15,0,6,0],[16,2,7,0],[16,11,7,9,"isMeasurementValue"],[16,29,7,27,"isMeasurementValue"],[16,30,7,28,"value"],[16,35,7,33],[16,37,7,35],[17,4,8,2],[17,11,8,9],[17,18,8,16,"value"],[17,23,8,21],[17,28,8,26],[17,36,8,34],[17,40,8,38,"isFinite"],[17,48,8,46],[17,49,8,47,"value"],[17,54,8,52],[17,55,8,53],[18,2,9,0],[20,2,11,0],[21,0,12,0],[22,0,13,0],[23,0,14,0],[24,0,15,0],[25,2,16,0],[25,11,16,9,"startAndEndSpan"],[25,26,16,24,"startAndEndSpan"],[25,27,17,2,"parentSpan"],[25,37,17,12],[25,39,18,2,"startTimeInSeconds"],[25,57,18,20],[25,59,19,2,"endTime"],[25,66,19,9],[25,68,20,2],[26,4,20,4],[26,7,20,7,"ctx"],[27,2,20,11],[27,3,20,12],[27,5,21,2],[28,4,22,2],[28,10,22,8,"parentStartTime"],[28,25,22,23],[28,28,22,26],[28,32,22,26,"spanToJSON"],[28,48,22,36],[28,50,22,37,"parentSpan"],[28,60,22,47],[28,61,22,48],[28,62,22,49,"start_timestamp"],[28,77,22,64],[29,4,23,2],[29,8,23,6,"parentStartTime"],[29,23,23,21],[29,27,23,25,"parentStartTime"],[29,42,23,40],[29,45,23,43,"startTimeInSeconds"],[29,63,23,61],[29,65,23,63],[30,6,24,4],[31,6,25,4],[31,10,25,8],[31,17,25,16,"parentSpan"],[31,27,25,26],[31,28,25,29,"updateStartTime"],[31,43,25,44],[31,48,25,49],[31,58,25,59],[31,60,25,61],[32,8,26,7,"parentSpan"],[32,18,26,17],[32,19,26,20,"updateStartTime"],[32,34,26,35],[32,35,26,36,"startTimeInSeconds"],[32,53,26,54],[32,54,26,55],[33,6,27,4],[34,4,28,2],[36,4,30,2],[37,4,31,2],[37,11,31,9],[37,15,31,9,"withActiveSpan"],[37,35,31,23],[37,37,31,24,"parentSpan"],[37,47,31,34],[37,49,31,36],[37,55,31,42],[38,6,32,4],[38,12,32,10,"span"],[38,16,32,14],[38,19,32,17],[38,23,32,17,"startInactiveSpan"],[38,46,32,34],[38,48,32,35],[39,8,33,6,"startTime"],[39,17,33,15],[39,19,33,17,"startTimeInSeconds"],[39,37,33,35],[40,8,34,6],[40,11,34,9,"ctx"],[41,6,35,4],[41,7,35,5],[41,8,35,6],[42,6,37,4],[42,10,37,8,"span"],[42,14,37,12],[42,16,37,14],[43,8,38,6,"span"],[43,12,38,10],[43,13,38,11,"end"],[43,16,38,14],[43,17,38,15,"endTime"],[43,24,38,22],[43,25,38,23],[44,6,39,4],[45,6,41,4],[45,13,41,11,"span"],[45,17,41,15],[46,4,42,2],[46,5,42,3],[46,6,42,4],[47,2,43,0],[49,2,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,0,56,0],[61,0,57,0],[62,0,58,0],[63,0,59,0],[64,0,60,0],[65,2,61,0],[65,11,61,9,"startStandaloneWebVitalSpan"],[65,38,61,36,"startStandaloneWebVitalSpan"],[65,39,61,37,"options"],[65,46,61,44],[65,48,61,46],[66,4,62,2],[66,10,62,8,"client"],[66,16,62,14],[66,19,62,17],[66,23,62,17,"getClient"],[66,38,62,26],[66,40,62,27],[66,41,62,28],[67,4,63,2],[67,8,63,6],[67,9,63,7,"client"],[67,15,63,13],[67,17,63,15],[68,6,64,4],[69,4,65,2],[70,4,67,2],[70,10,67,8],[71,6,67,10,"name"],[71,10,67,14],[72,6,67,16,"transaction"],[72,17,67,27],[73,6,67,29,"attributes"],[73,16,67,39],[73,18,67,41,"passedAttributes"],[73,34,67,57],[74,6,67,59,"startTime"],[75,4,67,69],[75,5,67,70],[75,8,67,73,"options"],[75,15,67,80],[76,4,69,2],[76,10,69,8],[77,6,69,10,"release"],[77,13,69,17],[78,6,69,19,"environment"],[79,4,69,31],[79,5,69,32],[79,8,69,35,"client"],[79,14,69,41],[79,15,69,42,"getOptions"],[79,25,69,52],[79,26,69,53],[79,27,69,54],[80,4,70,2],[81,4,71,2],[82,4,72,2],[82,10,72,8,"replay"],[82,16,72,14],[82,19,72,17,"client"],[82,25,72,23],[82,26,72,24,"getIntegrationByName"],[82,46,72,44],[82,47,72,45],[82,55,72,53],[82,56,72,54],[83,4,73,2],[83,10,73,8,"replayId"],[83,18,73,16],[83,21,73,19,"replay"],[83,27,73,25],[83,31,73,29,"replay"],[83,37,73,35],[83,38,73,36,"getReplayId"],[83,49,73,47],[83,50,73,48],[83,51,73,49],[84,4,75,2],[84,10,75,8,"scope"],[84,15,75,13],[84,18,75,16],[84,22,75,16,"getCurrentScope"],[84,43,75,31],[84,45,75,32],[84,46,75,33],[85,4,77,2],[85,10,77,8,"user"],[85,14,77,12],[85,17,77,15,"scope"],[85,22,77,20],[85,23,77,21,"getUser"],[85,30,77,28],[85,31,77,29],[85,32,77,30],[86,4,78,2],[86,10,78,8,"userDisplay"],[86,21,78,19],[86,24,78,22,"user"],[86,28,78,26],[86,33,78,31,"undefined"],[86,42,78,40],[86,45,78,43,"user"],[86,49,78,47],[86,50,78,48,"email"],[86,55,78,53],[86,59,78,57,"user"],[86,63,78,61],[86,64,78,62,"id"],[86,66,78,64],[86,70,78,68,"user"],[86,74,78,72],[86,75,78,73,"ip_address"],[86,85,78,83],[86,88,78,86,"undefined"],[86,97,78,95],[87,4,80,2],[87,8,80,6,"profileId"],[87,17,80,15],[88,4,81,2],[88,8,81,6],[89,6,82,4],[90,6,83,4,"profileId"],[90,15,83,13],[90,18,83,16,"scope"],[90,23,83,21],[90,24,83,22,"getScopeData"],[90,36,83,34],[90,37,83,35],[90,38,83,36],[90,39,83,37,"contexts"],[90,47,83,45],[90,48,83,46,"profile"],[90,55,83,53],[90,56,83,54,"profile_id"],[90,66,83,64],[91,4,84,2],[91,5,84,3],[91,6,84,4],[91,13,84,11,"e"],[91,14,84,12],[91,16,84,14],[92,6,85,4],[93,4,85,4],[94,4,88,2],[94,10,88,8,"attributes"],[94,20,88,18],[94,23,88,21],[95,6,89,4,"release"],[95,13,89,11],[96,6,90,4,"environment"],[96,17,90,15],[97,6,92,4,"user"],[97,10,92,8],[97,12,92,10,"userDisplay"],[97,23,92,21],[97,27,92,25,"undefined"],[97,36,92,34],[98,6,93,4,"profile_id"],[98,16,93,14],[98,18,93,16,"profileId"],[98,27,93,25],[98,31,93,29,"undefined"],[98,40,93,38],[99,6,94,4,"replay_id"],[99,15,94,13],[99,17,94,15,"replayId"],[99,25,94,23],[99,29,94,27,"undefined"],[99,38,94,36],[100,6,96,4,"transaction"],[100,17,96,15],[101,6,98,4],[102,6,99,4],[103,6,100,4],[104,6,101,4],[104,27,101,25],[104,29,101,27,"WINDOW"],[104,42,101,33],[104,43,101,34,"navigator"],[104,52,101,43],[104,56,101,47,"WINDOW"],[104,69,101,53],[104,70,101,54,"navigator"],[104,79,101,63],[104,80,101,64,"userAgent"],[104,89,101,73],[105,6,103,4],[105,9,103,7,"passedAttributes"],[106,4,104,2],[106,5,104,3],[107,4,106,2],[107,11,106,9],[107,15,106,9,"startInactiveSpan"],[107,38,106,26],[107,40,106,27],[108,6,107,4,"name"],[108,10,107,8],[109,6,108,4,"attributes"],[109,16,108,14],[110,6,109,4,"startTime"],[110,15,109,13],[111,6,110,4,"experimental"],[111,18,110,16],[111,20,110,18],[112,8,111,6,"standalone"],[112,18,111,16],[112,20,111,18],[113,6,112,4],[114,4,113,2],[114,5,113,3],[114,6,113,4],[115,2,114,0],[117,2,116,0],[118,2,117,0],[118,11,117,9,"getBrowserPerformanceAPI"],[118,35,117,33,"getBrowserPerformanceAPI"],[118,36,117,33],[118,38,117,36],[119,4,118,2],[120,4,119,2],[120,11,119,9,"WINDOW"],[120,24,119,15],[120,28,119,19,"WINDOW"],[120,41,119,25],[120,42,119,26,"addEventListener"],[120,58,119,42],[120,62,119,46,"WINDOW"],[120,75,119,52],[120,76,119,53,"performance"],[120,87,119,64],[121,2,120,0],[123,2,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,2,126,0],[127,11,126,9,"msToSec"],[127,18,126,16,"msToSec"],[127,19,126,17,"time"],[127,23,126,21],[127,25,126,23],[128,4,127,2],[128,11,127,9,"time"],[128,15,127,13],[128,18,127,16],[128,22,127,20],[129,2,128,0],[131,2,130,0],[132,0,131,0],[133,0,132,0],[134,0,133,0],[135,0,134,0],[136,0,135,0],[137,2,136,0],[137,11,136,9,"extractNetworkProtocol"],[137,33,136,31,"extractNetworkProtocol"],[137,34,136,32,"nextHopProtocol"],[137,49,136,47],[137,51,136,49],[138,4,137,2],[138,8,137,6,"name"],[138,12,137,10],[138,15,137,13],[138,24,137,22],[139,4,138,2],[139,8,138,6,"version"],[139,15,138,13],[139,18,138,16],[139,27,138,25],[140,4,139,2],[140,8,139,6,"_name"],[140,13,139,11],[140,16,139,14],[140,18,139,16],[141,4,140,2],[141,9,140,7],[141,15,140,13,"char"],[141,19,140,17],[141,23,140,21,"nextHopProtocol"],[141,38,140,36],[141,40,140,38],[142,6,141,4],[143,6,142,4],[143,10,142,8,"char"],[143,14,142,12],[143,19,142,17],[143,22,142,20],[143,24,142,22],[144,8,143,6],[144,9,143,7,"name"],[144,13,143,11],[144,15,143,13,"version"],[144,22,143,20],[144,23,143,21],[144,26,143,24,"nextHopProtocol"],[144,41,143,39],[144,42,143,40,"split"],[144,47,143,45],[144,48,143,46],[144,51,143,49],[144,52,143,50],[145,8,144,6],[146,6,145,4],[147,6,146,4],[148,6,147,4],[148,10,147,8],[148,11,147,9,"isNaN"],[148,16,147,14],[148,17,147,15,"Number"],[148,23,147,21],[148,24,147,22,"char"],[148,28,147,26],[148,29,147,27],[148,30,147,28],[148,32,147,30],[149,8,148,6,"name"],[149,12,148,10],[149,15,148,13,"_name"],[149,20,148,18],[149,25,148,23],[149,28,148,26],[149,31,148,29],[149,37,148,35],[149,40,148,38,"_name"],[149,45,148,43],[150,8,149,6,"version"],[150,15,149,13],[150,18,149,16,"nextHopProtocol"],[150,33,149,31],[150,34,149,32,"split"],[150,39,149,37],[150,40,149,38,"_name"],[150,45,149,43],[150,46,149,44],[150,47,149,45],[150,48,149,46],[150,49,149,47],[151,8,150,6],[152,6,151,4],[153,6,152,4,"_name"],[153,11,152,9],[153,15,152,13,"char"],[153,19,152,17],[154,4,153,2],[155,4,154,2],[155,8,154,6,"_name"],[155,13,154,11],[155,18,154,16,"nextHopProtocol"],[155,33,154,31],[155,35,154,33],[156,6,155,4],[157,6,156,4,"name"],[157,10,156,8],[157,13,156,11,"_name"],[157,18,156,16],[158,4,157,2],[159,4,158,2],[159,11,158,9],[160,6,158,11,"name"],[160,10,158,15],[161,6,158,17,"version"],[162,4,158,25],[162,5,158,26],[163,2,159,0],[164,0,159,1],[164,3]],"functionMap":{"names":["<global>","isMeasurementValue","startAndEndSpan","withActiveSpan$argument_1","startStandaloneWebVitalSpan","getBrowserPerformanceAPI","msToSec","extractNetworkProtocol"],"mappings":"AAA;ACM;CDE;AEO;oCCe;GDW;CFC;AIkB;CJqD;AKG;CLG;AMM;CNE;AOQ;CPuB"}},"type":"js/module"}]}