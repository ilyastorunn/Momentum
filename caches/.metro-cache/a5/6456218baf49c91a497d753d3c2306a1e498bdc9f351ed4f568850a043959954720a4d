{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.safeFactory = safeFactory;\n  exports.safeTracesSampler = safeTracesSampler;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  /**\n   * Returns callback factory wrapped with try/catch\n   * or the original passed value is it's not a function.\n   *\n   * If the factory fails original data are returned as it.\n   * They might be partially modified by the failed function.\n   */\n  function safeFactory(danger, options = {}) {\n    if (typeof danger === 'function') {\n      return (...args) => {\n        try {\n          return danger(...args);\n        } catch (error) {\n          _core.logger.error(options.loggerMessage ? options.loggerMessage : `The ${danger.name} callback threw an error`, error);\n          return args[0];\n        }\n      };\n    } else {\n      return danger;\n    }\n  }\n  /**\n   * Returns sage tracesSampler that returns 0 if the original failed.\n   */\n  function safeTracesSampler(tracesSampler) {\n    if (tracesSampler) {\n      return (...args) => {\n        try {\n          return tracesSampler(...args);\n        } catch (error) {\n          _core.logger.error('The tracesSampler callback threw an error', error);\n          return 0;\n        }\n      };\n    } else {\n      return tracesSampler;\n    }\n  }\n});","lineCount":46,"map":[[7,2,1,0],[7,6,1,0,"_core"],[7,11,1,0],[7,14,1,0,"require"],[7,21,1,0],[7,22,1,0,"_dependencyMap"],[7,36,1,0],[8,2,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,2,9,7],[15,11,9,16,"safeFactory"],[15,22,9,27,"safeFactory"],[15,23,9,28,"danger"],[15,29,9,34],[15,31,9,36,"options"],[15,38,9,43],[15,41,9,46],[15,42,9,47],[15,43,9,48],[15,45,9,50],[16,4,10,4],[16,8,10,8],[16,15,10,15,"danger"],[16,21,10,21],[16,26,10,26],[16,36,10,36],[16,38,10,38],[17,6,11,8],[17,13,11,15],[17,14,11,16],[17,17,11,19,"args"],[17,21,11,23],[17,26,11,28],[18,8,12,12],[18,12,12,16],[19,10,13,16],[19,17,13,23,"danger"],[19,23,13,29],[19,24,13,30],[19,27,13,33,"args"],[19,31,13,37],[19,32,13,38],[20,8,14,12],[20,9,14,13],[20,10,15,12],[20,17,15,19,"error"],[20,22,15,24],[20,24,15,26],[21,10,16,16,"logger"],[21,22,16,22],[21,23,16,23,"error"],[21,28,16,28],[21,29,16,29,"options"],[21,36,16,36],[21,37,16,37,"loggerMessage"],[21,50,16,50],[21,53,16,53,"options"],[21,60,16,60],[21,61,16,61,"loggerMessage"],[21,74,16,74],[21,77,16,77],[21,84,16,84,"danger"],[21,90,16,90],[21,91,16,91,"name"],[21,95,16,95],[21,121,16,121],[21,123,16,123,"error"],[21,128,16,128],[21,129,16,129],[22,10,17,16],[22,17,17,23,"args"],[22,21,17,27],[22,22,17,28],[22,23,17,29],[22,24,17,30],[23,8,18,12],[24,6,19,8],[24,7,19,9],[25,4,20,4],[25,5,20,5],[25,11,21,9],[26,6,22,8],[26,13,22,15,"danger"],[26,19,22,21],[27,4,23,4],[28,2,24,0],[29,2,25,0],[30,0,26,0],[31,0,27,0],[32,2,28,7],[32,11,28,16,"safeTracesSampler"],[32,28,28,33,"safeTracesSampler"],[32,29,28,34,"tracesSampler"],[32,42,28,47],[32,44,28,49],[33,4,29,4],[33,8,29,8,"tracesSampler"],[33,21,29,21],[33,23,29,23],[34,6,30,8],[34,13,30,15],[34,14,30,16],[34,17,30,19,"args"],[34,21,30,23],[34,26,30,28],[35,8,31,12],[35,12,31,16],[36,10,32,16],[36,17,32,23,"tracesSampler"],[36,30,32,36],[36,31,32,37],[36,34,32,40,"args"],[36,38,32,44],[36,39,32,45],[37,8,33,12],[37,9,33,13],[37,10,34,12],[37,17,34,19,"error"],[37,22,34,24],[37,24,34,26],[38,10,35,16,"logger"],[38,22,35,22],[38,23,35,23,"error"],[38,28,35,28],[38,29,35,29],[38,72,35,72],[38,74,35,74,"error"],[38,79,35,79],[38,80,35,80],[39,10,36,16],[39,17,36,23],[39,18,36,24],[40,8,37,12],[41,6,38,8],[41,7,38,9],[42,4,39,4],[42,5,39,5],[42,11,40,9],[43,6,41,8],[43,13,41,15,"tracesSampler"],[43,26,41,28],[44,4,42,4],[45,2,43,0],[46,0,43,1],[46,3]],"functionMap":{"names":["<global>","safeFactory","<anonymous>","safeTracesSampler"],"mappings":"AAA;OCQ;eCE;SDQ;CDK;OGI;eDE;SCQ;CHK"}},"type":"js/module"}]}