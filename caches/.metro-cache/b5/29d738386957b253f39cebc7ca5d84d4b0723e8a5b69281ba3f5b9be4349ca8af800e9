{"dependencies":[{"name":"./helper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":40,"index":721}}],"key":"XzTjbTLZPqGBcKq7cSmvD13rCtQ=","exportNames":["*"]}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":722},"end":{"line":11,"column":104,"index":826}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FunctionsClient = void 0;\n  var _helper = require(_dependencyMap[0], \"./helper\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  class FunctionsClient {\n    constructor(url, {\n      headers = {},\n      customFetch,\n      region = _types.FunctionRegion.Any\n    } = {}) {\n      this.url = url;\n      this.headers = headers;\n      this.region = region;\n      this.fetch = (0, _helper.resolveFetch)(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n      this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n      var _a;\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const {\n            headers,\n            method,\n            body: functionArgs\n          } = options;\n          let _headers = {};\n          let {\n            region\n          } = options;\n          if (!region) {\n            region = this.region;\n          }\n          // Add region as query parameter using URL API\n          const url = new URL(`${this.url}/${functionName}`);\n          if (region && region !== 'any') {\n            _headers['x-region'] = region;\n            url.searchParams.set('forceFunctionRegion', region);\n          }\n          let body;\n          if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n            if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n              // will work for File as File inherits Blob\n              // also works for ArrayBuffer as it is the same underlying structure as a Blob\n              _headers['Content-Type'] = 'application/octet-stream';\n              body = functionArgs;\n            } else if (typeof functionArgs === 'string') {\n              // plain string\n              _headers['Content-Type'] = 'text/plain';\n              body = functionArgs;\n            } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n              // don't set content-type headers\n              // Request will automatically add the right boundary value\n              body = functionArgs;\n            } else {\n              // default, assume this is JSON\n              _headers['Content-Type'] = 'application/json';\n              body = JSON.stringify(functionArgs);\n            }\n          }\n          const response = yield this.fetch(url.toString(), {\n            method: method || 'POST',\n            // headers priority is (high to low):\n            // 1. invoke-level headers\n            // 2. client-level headers\n            // 3. default Content-Type header\n            headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n            body\n          }).catch(fetchError => {\n            throw new _types.FunctionsFetchError(fetchError);\n          });\n          const isRelayError = response.headers.get('x-relay-error');\n          if (isRelayError && isRelayError === 'true') {\n            throw new _types.FunctionsRelayError(response);\n          }\n          if (!response.ok) {\n            throw new _types.FunctionsHttpError(response);\n          }\n          let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n          let data;\n          if (responseType === 'application/json') {\n            data = yield response.json();\n          } else if (responseType === 'application/octet-stream') {\n            data = yield response.blob();\n          } else if (responseType === 'text/event-stream') {\n            data = response;\n          } else if (responseType === 'multipart/form-data') {\n            data = yield response.formData();\n          } else {\n            // default to text\n            data = yield response.text();\n          }\n          return {\n            data,\n            error: null,\n            response\n          };\n        } catch (error) {\n          return {\n            data: null,\n            error,\n            response: error instanceof _types.FunctionsHttpError || error instanceof _types.FunctionsRelayError ? error.context : undefined\n          };\n        }\n      });\n    }\n  }\n  exports.FunctionsClient = FunctionsClient;\n});","lineCount":149,"map":[[6,2,10,0],[6,6,10,0,"_helper"],[6,13,10,0],[6,16,10,0,"require"],[6,23,10,0],[6,24,10,0,"_dependencyMap"],[6,38,10,0],[7,2,11,0],[7,6,11,0,"_types"],[7,12,11,0],[7,15,11,0,"require"],[7,22,11,0],[7,23,11,0,"_dependencyMap"],[7,37,11,0],[8,2,1,0],[8,6,1,4,"__awaiter"],[8,15,1,13],[8,18,1,17],[8,22,1,21],[8,26,1,25],[8,30,1,29],[8,31,1,30,"__awaiter"],[8,40,1,39],[8,44,1,44],[8,54,1,54,"thisArg"],[8,61,1,61],[8,63,1,63,"_arguments"],[8,73,1,73],[8,75,1,75,"P"],[8,76,1,76],[8,78,1,78,"generator"],[8,87,1,87],[8,89,1,89],[9,4,2,4],[9,13,2,13,"adopt"],[9,18,2,18,"adopt"],[9,19,2,19,"value"],[9,24,2,24],[9,26,2,26],[10,6,2,28],[10,13,2,35,"value"],[10,18,2,40],[10,30,2,52,"P"],[10,31,2,53],[10,34,2,56,"value"],[10,39,2,61],[10,42,2,64],[10,46,2,68,"P"],[10,47,2,69],[10,48,2,70],[10,58,2,80,"resolve"],[10,65,2,87],[10,67,2,89],[11,8,2,91,"resolve"],[11,15,2,98],[11,16,2,99,"value"],[11,21,2,104],[11,22,2,105],[12,6,2,107],[12,7,2,108],[12,8,2,109],[13,4,2,111],[14,4,3,4],[14,11,3,11],[14,16,3,16,"P"],[14,17,3,17],[14,22,3,22,"P"],[14,23,3,23],[14,26,3,26,"Promise"],[14,33,3,33],[14,34,3,34],[14,36,3,36],[14,46,3,46,"resolve"],[14,53,3,53],[14,55,3,55,"reject"],[14,61,3,61],[14,63,3,63],[15,6,4,8],[15,15,4,17,"fulfilled"],[15,24,4,26,"fulfilled"],[15,25,4,27,"value"],[15,30,4,32],[15,32,4,34],[16,8,4,36],[16,12,4,40],[17,10,4,42,"step"],[17,14,4,46],[17,15,4,47,"generator"],[17,24,4,56],[17,25,4,57,"next"],[17,29,4,61],[17,30,4,62,"value"],[17,35,4,67],[17,36,4,68],[17,37,4,69],[18,8,4,71],[18,9,4,72],[18,10,4,73],[18,17,4,80,"e"],[18,18,4,81],[18,20,4,83],[19,10,4,85,"reject"],[19,16,4,91],[19,17,4,92,"e"],[19,18,4,93],[19,19,4,94],[20,8,4,96],[21,6,4,98],[22,6,5,8],[22,15,5,17,"rejected"],[22,23,5,25,"rejected"],[22,24,5,26,"value"],[22,29,5,31],[22,31,5,33],[23,8,5,35],[23,12,5,39],[24,10,5,41,"step"],[24,14,5,45],[24,15,5,46,"generator"],[24,24,5,55],[24,25,5,56],[24,32,5,63],[24,33,5,64],[24,34,5,65,"value"],[24,39,5,70],[24,40,5,71],[24,41,5,72],[25,8,5,74],[25,9,5,75],[25,10,5,76],[25,17,5,83,"e"],[25,18,5,84],[25,20,5,86],[26,10,5,88,"reject"],[26,16,5,94],[26,17,5,95,"e"],[26,18,5,96],[26,19,5,97],[27,8,5,99],[28,6,5,101],[29,6,6,8],[29,15,6,17,"step"],[29,19,6,21,"step"],[29,20,6,22,"result"],[29,26,6,28],[29,28,6,30],[30,8,6,32,"result"],[30,14,6,38],[30,15,6,39,"done"],[30,19,6,43],[30,22,6,46,"resolve"],[30,29,6,53],[30,30,6,54,"result"],[30,36,6,60],[30,37,6,61,"value"],[30,42,6,66],[30,43,6,67],[30,46,6,70,"adopt"],[30,51,6,75],[30,52,6,76,"result"],[30,58,6,82],[30,59,6,83,"value"],[30,64,6,88],[30,65,6,89],[30,66,6,90,"then"],[30,70,6,94],[30,71,6,95,"fulfilled"],[30,80,6,104],[30,82,6,106,"rejected"],[30,90,6,114],[30,91,6,115],[31,6,6,117],[32,6,7,8,"step"],[32,10,7,12],[32,11,7,13],[32,12,7,14,"generator"],[32,21,7,23],[32,24,7,26,"generator"],[32,33,7,35],[32,34,7,36,"apply"],[32,39,7,41],[32,40,7,42,"thisArg"],[32,47,7,49],[32,49,7,51,"_arguments"],[32,59,7,61],[32,63,7,65],[32,65,7,67],[32,66,7,68],[32,68,7,70,"next"],[32,72,7,74],[32,73,7,75],[32,74,7,76],[32,75,7,77],[33,4,8,4],[33,5,8,5],[33,6,8,6],[34,2,9,0],[34,3,9,1],[35,2,12,7],[35,8,12,13,"FunctionsClient"],[35,23,12,28],[35,24,12,29],[36,4,13,4,"constructor"],[36,15,13,15,"constructor"],[36,16,13,16,"url"],[36,19,13,19],[36,21,13,21],[37,6,13,23,"headers"],[37,13,13,30],[37,16,13,33],[37,17,13,34],[37,18,13,35],[38,6,13,37,"customFetch"],[38,17,13,48],[39,6,13,50,"region"],[39,12,13,56],[39,15,13,59,"FunctionRegion"],[39,36,13,73],[39,37,13,74,"Any"],[40,4,13,79],[40,5,13,80],[40,8,13,83],[40,9,13,84],[40,10,13,85],[40,12,13,87],[41,6,14,8],[41,10,14,12],[41,11,14,13,"url"],[41,14,14,16],[41,17,14,19,"url"],[41,20,14,22],[42,6,15,8],[42,10,15,12],[42,11,15,13,"headers"],[42,18,15,20],[42,21,15,23,"headers"],[42,28,15,30],[43,6,16,8],[43,10,16,12],[43,11,16,13,"region"],[43,17,16,19],[43,20,16,22,"region"],[43,26,16,28],[44,6,17,8],[44,10,17,12],[44,11,17,13,"fetch"],[44,16,17,18],[44,19,17,21],[44,23,17,21,"resolveFetch"],[44,43,17,33],[44,45,17,34,"customFetch"],[44,56,17,45],[44,57,17,46],[45,4,18,4],[46,4,19,4],[47,0,20,0],[48,0,21,0],[49,0,22,0],[50,4,23,4,"setAuth"],[50,11,23,11,"setAuth"],[50,12,23,12,"token"],[50,17,23,17],[50,19,23,19],[51,6,24,8],[51,10,24,12],[51,11,24,13,"headers"],[51,18,24,20],[51,19,24,21,"Authorization"],[51,32,24,34],[51,35,24,37],[51,45,24,47,"token"],[51,50,24,52],[51,52,24,54],[52,4,25,4],[53,4,26,4],[54,0,27,0],[55,0,28,0],[56,0,29,0],[57,0,30,0],[58,4,31,4,"invoke"],[58,10,31,10,"invoke"],[58,11,31,11,"functionName"],[58,23,31,23],[58,25,31,25,"options"],[58,32,31,32],[58,35,31,35],[58,36,31,36],[58,37,31,37],[58,39,31,39],[59,6,32,8],[59,10,32,12,"_a"],[59,12,32,14],[60,6,33,8],[60,13,33,15,"__awaiter"],[60,22,33,24],[60,23,33,25],[60,27,33,29],[60,29,33,31],[60,34,33,36],[60,35,33,37],[60,37,33,39],[60,42,33,44],[60,43,33,45],[60,45,33,47],[60,58,33,60],[61,8,34,12],[61,12,34,16],[62,10,35,16],[62,16,35,22],[63,12,35,24,"headers"],[63,19,35,31],[64,12,35,33,"method"],[64,18,35,39],[65,12,35,41,"body"],[65,16,35,45],[65,18,35,47,"functionArgs"],[66,10,35,60],[66,11,35,61],[66,14,35,64,"options"],[66,21,35,71],[67,10,36,16],[67,14,36,20,"_headers"],[67,22,36,28],[67,25,36,31],[67,26,36,32],[67,27,36,33],[68,10,37,16],[68,14,37,20],[69,12,37,22,"region"],[70,10,37,29],[70,11,37,30],[70,14,37,33,"options"],[70,21,37,40],[71,10,38,16],[71,14,38,20],[71,15,38,21,"region"],[71,21,38,27],[71,23,38,29],[72,12,39,20,"region"],[72,18,39,26],[72,21,39,29],[72,25,39,33],[72,26,39,34,"region"],[72,32,39,40],[73,10,40,16],[74,10,41,16],[75,10,42,16],[75,16,42,22,"url"],[75,19,42,25],[75,22,42,28],[75,26,42,32,"URL"],[75,29,42,35],[75,30,42,36],[75,33,42,39],[75,37,42,43],[75,38,42,44,"url"],[75,41,42,47],[75,45,42,51,"functionName"],[75,57,42,63],[75,59,42,65],[75,60,42,66],[76,10,43,16],[76,14,43,20,"region"],[76,20,43,26],[76,24,43,30,"region"],[76,30,43,36],[76,35,43,41],[76,40,43,46],[76,42,43,48],[77,12,44,20,"_headers"],[77,20,44,28],[77,21,44,29],[77,31,44,39],[77,32,44,40],[77,35,44,43,"region"],[77,41,44,49],[78,12,45,20,"url"],[78,15,45,23],[78,16,45,24,"searchParams"],[78,28,45,36],[78,29,45,37,"set"],[78,32,45,40],[78,33,45,41],[78,54,45,62],[78,56,45,64,"region"],[78,62,45,70],[78,63,45,71],[79,10,46,16],[80,10,47,16],[80,14,47,20,"body"],[80,18,47,24],[81,10,48,16],[81,14,48,20,"functionArgs"],[81,26,48,32],[81,31,49,22,"headers"],[81,38,49,29],[81,42,49,33],[81,43,49,34,"Object"],[81,49,49,40],[81,50,49,41,"prototype"],[81,59,49,50],[81,60,49,51,"hasOwnProperty"],[81,74,49,65],[81,75,49,66,"call"],[81,79,49,70],[81,80,49,71,"headers"],[81,87,49,78],[81,89,49,80],[81,103,49,94],[81,104,49,95],[81,108,49,100],[81,109,49,101,"headers"],[81,116,49,108],[81,117,49,109],[81,119,49,111],[82,12,50,20],[82,16,50,25],[82,23,50,32,"Blob"],[82,27,50,36],[82,32,50,41],[82,43,50,52],[82,47,50,56,"functionArgs"],[82,59,50,68],[82,71,50,80,"Blob"],[82,75,50,84],[82,79,51,24,"functionArgs"],[82,91,51,36],[82,103,51,48,"ArrayBuffer"],[82,114,51,59],[82,116,51,61],[83,14,52,24],[84,14,53,24],[85,14,54,24,"_headers"],[85,22,54,32],[85,23,54,33],[85,37,54,47],[85,38,54,48],[85,41,54,51],[85,67,54,77],[86,14,55,24,"body"],[86,18,55,28],[86,21,55,31,"functionArgs"],[86,33,55,43],[87,12,56,20],[87,13,56,21],[87,19,57,25],[87,23,57,29],[87,30,57,36,"functionArgs"],[87,42,57,48],[87,47,57,53],[87,55,57,61],[87,57,57,63],[88,14,58,24],[89,14,59,24,"_headers"],[89,22,59,32],[89,23,59,33],[89,37,59,47],[89,38,59,48],[89,41,59,51],[89,53,59,63],[90,14,60,24,"body"],[90,18,60,28],[90,21,60,31,"functionArgs"],[90,33,60,43],[91,12,61,20],[91,13,61,21],[91,19,62,25],[91,23,62,29],[91,30,62,36,"FormData"],[91,38,62,44],[91,43,62,49],[91,54,62,60],[91,58,62,64,"functionArgs"],[91,70,62,76],[91,82,62,88,"FormData"],[91,90,62,96],[91,92,62,98],[92,14,63,24],[93,14,64,24],[94,14,65,24,"body"],[94,18,65,28],[94,21,65,31,"functionArgs"],[94,33,65,43],[95,12,66,20],[95,13,66,21],[95,19,67,25],[96,14,68,24],[97,14,69,24,"_headers"],[97,22,69,32],[97,23,69,33],[97,37,69,47],[97,38,69,48],[97,41,69,51],[97,59,69,69],[98,14,70,24,"body"],[98,18,70,28],[98,21,70,31,"JSON"],[98,25,70,35],[98,26,70,36,"stringify"],[98,35,70,45],[98,36,70,46,"functionArgs"],[98,48,70,58],[98,49,70,59],[99,12,71,20],[100,10,72,16],[101,10,73,16],[101,16,73,22,"response"],[101,24,73,30],[101,27,73,33],[101,33,73,39],[101,37,73,43],[101,38,73,44,"fetch"],[101,43,73,49],[101,44,73,50,"url"],[101,47,73,53],[101,48,73,54,"toString"],[101,56,73,62],[101,57,73,63],[101,58,73,64],[101,60,73,66],[102,12,74,20,"method"],[102,18,74,26],[102,20,74,28,"method"],[102,26,74,34],[102,30,74,38],[102,36,74,44],[103,12,75,20],[104,12,76,20],[105,12,77,20],[106,12,78,20],[107,12,79,20,"headers"],[107,19,79,27],[107,21,79,29,"Object"],[107,27,79,35],[107,28,79,36,"assign"],[107,34,79,42],[107,35,79,43,"Object"],[107,41,79,49],[107,42,79,50,"assign"],[107,48,79,56],[107,49,79,57,"Object"],[107,55,79,63],[107,56,79,64,"assign"],[107,62,79,70],[107,63,79,71],[107,64,79,72],[107,65,79,73],[107,67,79,75,"_headers"],[107,75,79,83],[107,76,79,84],[107,78,79,86],[107,82,79,90],[107,83,79,91,"headers"],[107,90,79,98],[107,91,79,99],[107,93,79,101,"headers"],[107,100,79,108],[107,101,79,109],[108,12,80,20,"body"],[109,10,81,16],[109,11,81,17],[109,12,81,18],[109,13,81,19,"catch"],[109,18,81,24],[109,19,81,26,"fetchError"],[109,29,81,36],[109,33,81,41],[110,12,82,20],[110,18,82,26],[110,22,82,30,"FunctionsFetchError"],[110,48,82,49],[110,49,82,50,"fetchError"],[110,59,82,60],[110,60,82,61],[111,10,83,16],[111,11,83,17],[111,12,83,18],[112,10,84,16],[112,16,84,22,"isRelayError"],[112,28,84,34],[112,31,84,37,"response"],[112,39,84,45],[112,40,84,46,"headers"],[112,47,84,53],[112,48,84,54,"get"],[112,51,84,57],[112,52,84,58],[112,67,84,73],[112,68,84,74],[113,10,85,16],[113,14,85,20,"isRelayError"],[113,26,85,32],[113,30,85,36,"isRelayError"],[113,42,85,48],[113,47,85,53],[113,53,85,59],[113,55,85,61],[114,12,86,20],[114,18,86,26],[114,22,86,30,"FunctionsRelayError"],[114,48,86,49],[114,49,86,50,"response"],[114,57,86,58],[114,58,86,59],[115,10,87,16],[116,10,88,16],[116,14,88,20],[116,15,88,21,"response"],[116,23,88,29],[116,24,88,30,"ok"],[116,26,88,32],[116,28,88,34],[117,12,89,20],[117,18,89,26],[117,22,89,30,"FunctionsHttpError"],[117,47,89,48],[117,48,89,49,"response"],[117,56,89,57],[117,57,89,58],[118,10,90,16],[119,10,91,16],[119,14,91,20,"responseType"],[119,26,91,32],[119,29,91,35],[119,30,91,36],[119,31,91,37,"_a"],[119,33,91,39],[119,36,91,42,"response"],[119,44,91,50],[119,45,91,51,"headers"],[119,52,91,58],[119,53,91,59,"get"],[119,56,91,62],[119,57,91,63],[119,71,91,77],[119,72,91,78],[119,78,91,84],[119,82,91,88],[119,86,91,92,"_a"],[119,88,91,94],[119,93,91,99],[119,98,91,104],[119,99,91,105],[119,102,91,108,"_a"],[119,104,91,110],[119,107,91,113],[119,119,91,125],[119,121,91,127,"split"],[119,126,91,132],[119,127,91,133],[119,130,91,136],[119,131,91,137],[119,132,91,138],[119,133,91,139],[119,134,91,140],[119,135,91,141,"trim"],[119,139,91,145],[119,140,91,146],[119,141,91,147],[120,10,92,16],[120,14,92,20,"data"],[120,18,92,24],[121,10,93,16],[121,14,93,20,"responseType"],[121,26,93,32],[121,31,93,37],[121,49,93,55],[121,51,93,57],[122,12,94,20,"data"],[122,16,94,24],[122,19,94,27],[122,25,94,33,"response"],[122,33,94,41],[122,34,94,42,"json"],[122,38,94,46],[122,39,94,47],[122,40,94,48],[123,10,95,16],[123,11,95,17],[123,17,96,21],[123,21,96,25,"responseType"],[123,33,96,37],[123,38,96,42],[123,64,96,68],[123,66,96,70],[124,12,97,20,"data"],[124,16,97,24],[124,19,97,27],[124,25,97,33,"response"],[124,33,97,41],[124,34,97,42,"blob"],[124,38,97,46],[124,39,97,47],[124,40,97,48],[125,10,98,16],[125,11,98,17],[125,17,99,21],[125,21,99,25,"responseType"],[125,33,99,37],[125,38,99,42],[125,57,99,61],[125,59,99,63],[126,12,100,20,"data"],[126,16,100,24],[126,19,100,27,"response"],[126,27,100,35],[127,10,101,16],[127,11,101,17],[127,17,102,21],[127,21,102,25,"responseType"],[127,33,102,37],[127,38,102,42],[127,59,102,63],[127,61,102,65],[128,12,103,20,"data"],[128,16,103,24],[128,19,103,27],[128,25,103,33,"response"],[128,33,103,41],[128,34,103,42,"formData"],[128,42,103,50],[128,43,103,51],[128,44,103,52],[129,10,104,16],[129,11,104,17],[129,17,105,21],[130,12,106,20],[131,12,107,20,"data"],[131,16,107,24],[131,19,107,27],[131,25,107,33,"response"],[131,33,107,41],[131,34,107,42,"text"],[131,38,107,46],[131,39,107,47],[131,40,107,48],[132,10,108,16],[133,10,109,16],[133,17,109,23],[134,12,109,25,"data"],[134,16,109,29],[135,12,109,31,"error"],[135,17,109,36],[135,19,109,38],[135,23,109,42],[136,12,109,44,"response"],[137,10,109,53],[137,11,109,54],[138,8,110,12],[138,9,110,13],[138,10,111,12],[138,17,111,19,"error"],[138,22,111,24],[138,24,111,26],[139,10,112,16],[139,17,112,23],[140,12,113,20,"data"],[140,16,113,24],[140,18,113,26],[140,22,113,30],[141,12,114,20,"error"],[141,17,114,25],[142,12,115,20,"response"],[142,20,115,28],[142,22,115,30,"error"],[142,27,115,35],[142,39,115,47,"FunctionsHttpError"],[142,64,115,65],[142,68,115,69,"error"],[142,73,115,74],[142,85,115,86,"FunctionsRelayError"],[142,111,115,105],[142,114,116,26,"error"],[142,119,116,31],[142,120,116,32,"context"],[142,127,116,39],[142,130,117,26,"undefined"],[143,10,118,16],[143,11,118,17],[144,8,119,12],[145,6,120,8],[145,7,120,9],[145,8,120,10],[146,4,121,4],[147,2,122,0],[148,2,122,1,"exports"],[148,9,122,1],[148,10,122,1,"FunctionsClient"],[148,25,122,1],[148,28,122,1,"FunctionsClient"],[148,43,122,1],[149,0,122,1],[149,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","FunctionsClient","constructor","setAuth","invoke","__awaiter$argument_3","fetch._catch$argument_0"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;OOG;ICC;KDK;IEK;KFE;IGM;+CCE;yBCgD;iBDE;SDqC;KHC;CPC"}},"type":"js/module"}]}