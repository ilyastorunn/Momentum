{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":115,"index":115}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createReduxEnhancer = createReduxEnhancer;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  const ACTION_BREADCRUMB_CATEGORY = 'redux.action';\n  const ACTION_BREADCRUMB_TYPE = 'info';\n  const defaultOptions = {\n    attachReduxState: true,\n    actionTransformer: action => action,\n    stateTransformer: state => state || null\n  };\n\n  /**\n   * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n   *\n   * @param enhancerOptions Options to pass to the enhancer\n   */\n  function createReduxEnhancer(enhancerOptions) {\n    // Note: We return an any type as to not have type conflicts.\n    const options = {\n      ...defaultOptions,\n      ...enhancerOptions\n    };\n    return next => (reducer, initialState) => {\n      options.attachReduxState && (0, _core.getGlobalScope)().addEventProcessor((event, hint) => {\n        try {\n          // @ts-expect-error try catch to reduce bundle size\n          if (event.type === undefined && event.contexts.state.state.type === 'redux') {\n            hint.attachments = [...(hint.attachments || []),\n            // @ts-expect-error try catch to reduce bundle size\n            {\n              filename: 'redux_state.json',\n              data: JSON.stringify(event.contexts.state.state.value)\n            }];\n          }\n        } catch (_) {\n          // empty\n        }\n        return event;\n      });\n      const sentryReducer = (state, action) => {\n        const newState = reducer(state, action);\n        const scope = (0, _core.getCurrentScope)();\n\n        /* Action breadcrumbs */\n        const transformedAction = options.actionTransformer(action);\n        if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n          (0, _core.addBreadcrumb)({\n            category: ACTION_BREADCRUMB_CATEGORY,\n            data: transformedAction,\n            type: ACTION_BREADCRUMB_TYPE\n          });\n        }\n\n        /* Set latest state to scope */\n        const transformedState = options.stateTransformer(newState);\n        if (typeof transformedState !== 'undefined' && transformedState !== null) {\n          const client = (0, _core.getClient)();\n          const options = client && client.getOptions();\n          const normalizationDepth = options && options.normalizeDepth || 3; // default state normalization depth to 3\n\n          // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n          const newStateContext = {\n            state: {\n              type: 'redux',\n              value: transformedState\n            }\n          };\n          (0, _core.addNonEnumerableProperty)(newStateContext, '__sentry_override_normalization_depth__', 3 +\n          // 3 layers for `state.value.transformedState`\n          normalizationDepth // rest for the actual state\n          );\n          scope.setContext('state', newStateContext);\n        } else {\n          scope.setContext('state', null);\n        }\n\n        /* Allow user to configure scope with latest state */\n        const {\n          configureScopeWithState\n        } = options;\n        if (typeof configureScopeWithState === 'function') {\n          configureScopeWithState(scope, newState);\n        }\n        return newState;\n      };\n      return next(sentryReducer, initialState);\n    };\n  }\n});","lineCount":92,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,3,0],[7,8,3,6,"ACTION_BREADCRUMB_CATEGORY"],[7,34,3,32],[7,37,3,35],[7,51,3,49],[8,2,4,0],[8,8,4,6,"ACTION_BREADCRUMB_TYPE"],[8,30,4,28],[8,33,4,31],[8,39,4,37],[9,2,6,0],[9,8,6,6,"defaultOptions"],[9,22,6,20],[9,25,6,23],[10,4,7,2,"attachReduxState"],[10,20,7,18],[10,22,7,20],[10,26,7,24],[11,4,8,2,"actionTransformer"],[11,21,8,19],[11,23,8,21,"action"],[11,29,8,27],[11,33,8,31,"action"],[11,39,8,37],[12,4,9,2,"stateTransformer"],[12,20,9,18],[12,22,9,20,"state"],[12,27,9,25],[12,31,9,29,"state"],[12,36,9,34],[12,40,9,38],[13,2,10,0],[13,3,10,1],[15,2,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,2,17,0],[20,11,17,9,"createReduxEnhancer"],[20,30,17,28,"createReduxEnhancer"],[20,31,17,29,"enhancerOptions"],[20,46,17,44],[20,48,17,46],[21,4,18,2],[22,4,19,2],[22,10,19,8,"options"],[22,17,19,15],[22,20,19,18],[23,6,20,4],[23,9,20,7,"defaultOptions"],[23,23,20,21],[24,6,21,4],[24,9,21,7,"enhancerOptions"],[25,4,22,2],[25,5,22,3],[26,4,24,2],[26,11,24,10,"next"],[26,15,24,14],[26,19,25,4],[26,20,25,5,"reducer"],[26,27,25,12],[26,29,25,14,"initialState"],[26,41,25,26],[26,46,25,31],[27,6,26,6,"options"],[27,13,26,13],[27,14,26,14,"attachReduxState"],[27,30,26,30],[27,34,27,8],[27,38,27,8,"getGlobalScope"],[27,58,27,22],[27,60,27,23],[27,61,27,24],[27,62,27,25,"addEventProcessor"],[27,79,27,42],[27,80,27,43],[27,81,27,44,"event"],[27,86,27,49],[27,88,27,51,"hint"],[27,92,27,55],[27,97,27,60],[28,8,28,10],[28,12,28,14],[29,10,29,12],[30,10,30,12],[30,14,30,16,"event"],[30,19,30,21],[30,20,30,22,"type"],[30,24,30,26],[30,29,30,31,"undefined"],[30,38,30,40],[30,42,30,44,"event"],[30,47,30,49],[30,48,30,50,"contexts"],[30,56,30,58],[30,57,30,59,"state"],[30,62,30,64],[30,63,30,65,"state"],[30,68,30,70],[30,69,30,71,"type"],[30,73,30,75],[30,78,30,80],[30,85,30,87],[30,87,30,89],[31,12,31,14,"hint"],[31,16,31,18],[31,17,31,19,"attachments"],[31,28,31,30],[31,31,31,33],[31,32,32,16],[31,36,32,20,"hint"],[31,40,32,24],[31,41,32,25,"attachments"],[31,52,32,36],[31,56,32,40],[31,58,32,42],[31,59,32,43],[32,12,33,16],[33,12,34,16],[34,14,34,18,"filename"],[34,22,34,26],[34,24,34,28],[34,42,34,46],[35,14,34,48,"data"],[35,18,34,52],[35,20,34,54,"JSON"],[35,24,34,58],[35,25,34,59,"stringify"],[35,34,34,68],[35,35,34,69,"event"],[35,40,34,74],[35,41,34,75,"contexts"],[35,49,34,83],[35,50,34,84,"state"],[35,55,34,89],[35,56,34,90,"state"],[35,61,34,95],[35,62,34,96,"value"],[35,67,34,101],[36,12,34,103],[36,13,34,104],[36,14,35,15],[37,10,36,12],[38,8,37,10],[38,9,37,11],[38,10,37,12],[38,17,37,19,"_"],[38,18,37,20],[38,20,37,22],[39,10,38,12],[40,8,38,12],[41,8,40,10],[41,15,40,17,"event"],[41,20,40,22],[42,6,41,8],[42,7,41,9],[42,8,41,10],[43,6,43,6],[43,12,43,12,"sentryReducer"],[43,25,43,25],[43,28,43,28,"sentryReducer"],[43,29,43,29,"state"],[43,34,43,34],[43,36,43,36,"action"],[43,42,43,42],[43,47,43,47],[44,8,44,8],[44,14,44,14,"newState"],[44,22,44,22],[44,25,44,25,"reducer"],[44,32,44,32],[44,33,44,33,"state"],[44,38,44,38],[44,40,44,40,"action"],[44,46,44,46],[44,47,44,47],[45,8,46,8],[45,14,46,14,"scope"],[45,19,46,19],[45,22,46,22],[45,26,46,22,"getCurrentScope"],[45,47,46,37],[45,49,46,38],[45,50,46,39],[47,8,48,8],[48,8,49,8],[48,14,49,14,"transformedAction"],[48,31,49,31],[48,34,49,34,"options"],[48,41,49,41],[48,42,49,42,"actionTransformer"],[48,59,49,59],[48,60,49,60,"action"],[48,66,49,66],[48,67,49,67],[49,8,50,8],[49,12,50,12],[49,19,50,19,"transformedAction"],[49,36,50,36],[49,41,50,41],[49,52,50,52],[49,56,50,56,"transformedAction"],[49,73,50,73],[49,78,50,78],[49,82,50,82],[49,84,50,84],[50,10,51,10],[50,14,51,10,"addBreadcrumb"],[50,33,51,23],[50,35,51,24],[51,12,52,12,"category"],[51,20,52,20],[51,22,52,22,"ACTION_BREADCRUMB_CATEGORY"],[51,48,52,48],[52,12,53,12,"data"],[52,16,53,16],[52,18,53,18,"transformedAction"],[52,35,53,35],[53,12,54,12,"type"],[53,16,54,16],[53,18,54,18,"ACTION_BREADCRUMB_TYPE"],[54,10,55,10],[54,11,55,11],[54,12,55,12],[55,8,56,8],[57,8,58,8],[58,8,59,8],[58,14,59,14,"transformedState"],[58,30,59,30],[58,33,59,33,"options"],[58,40,59,40],[58,41,59,41,"stateTransformer"],[58,57,59,57],[58,58,59,58,"newState"],[58,66,59,66],[58,67,59,67],[59,8,60,8],[59,12,60,12],[59,19,60,19,"transformedState"],[59,35,60,35],[59,40,60,40],[59,51,60,51],[59,55,60,55,"transformedState"],[59,71,60,71],[59,76,60,76],[59,80,60,80],[59,82,60,82],[60,10,61,10],[60,16,61,16,"client"],[60,22,61,22],[60,25,61,25],[60,29,61,25,"getClient"],[60,44,61,34],[60,46,61,35],[60,47,61,36],[61,10,62,10],[61,16,62,16,"options"],[61,23,62,23],[61,26,62,26,"client"],[61,32,62,32],[61,36,62,36,"client"],[61,42,62,42],[61,43,62,43,"getOptions"],[61,53,62,53],[61,54,62,54],[61,55,62,55],[62,10,63,10],[62,16,63,16,"normalizationDepth"],[62,34,63,34],[62,37,63,38,"options"],[62,44,63,45],[62,48,63,49,"options"],[62,55,63,56],[62,56,63,57,"normalizeDepth"],[62,70,63,71],[62,74,63,76],[62,75,63,77],[62,76,63,78],[62,77,63,79],[64,10,65,10],[65,10,66,10],[65,16,66,16,"newStateContext"],[65,31,66,31],[65,34,66,34],[66,12,66,36,"state"],[66,17,66,41],[66,19,66,43],[67,14,66,45,"type"],[67,18,66,49],[67,20,66,51],[67,27,66,58],[68,14,66,60,"value"],[68,19,66,65],[68,21,66,67,"transformedState"],[69,12,66,84],[70,10,66,86],[70,11,66,87],[71,10,67,10],[71,14,67,10,"addNonEnumerableProperty"],[71,44,67,34],[71,46,68,12,"newStateContext"],[71,61,68,27],[71,63,69,12],[71,104,69,53],[71,106,70,12],[71,107,70,13],[72,10,70,16],[73,10,71,14,"normalizationDepth"],[73,28,71,32],[73,29,71,34],[74,10,72,10],[74,11,72,11],[75,10,74,10,"scope"],[75,15,74,15],[75,16,74,16,"setContext"],[75,26,74,26],[75,27,74,27],[75,34,74,34],[75,36,74,36,"newStateContext"],[75,51,74,51],[75,52,74,52],[76,8,75,8],[76,9,75,9],[76,15,75,15],[77,10,76,10,"scope"],[77,15,76,15],[77,16,76,16,"setContext"],[77,26,76,26],[77,27,76,27],[77,34,76,34],[77,36,76,36],[77,40,76,40],[77,41,76,41],[78,8,77,8],[80,8,79,8],[81,8,80,8],[81,14,80,14],[82,10,80,16,"configureScopeWithState"],[83,8,80,40],[83,9,80,41],[83,12,80,44,"options"],[83,19,80,51],[84,8,81,8],[84,12,81,12],[84,19,81,19,"configureScopeWithState"],[84,42,81,42],[84,47,81,47],[84,57,81,57],[84,59,81,59],[85,10,82,10,"configureScopeWithState"],[85,33,82,33],[85,34,82,34,"scope"],[85,39,82,39],[85,41,82,41,"newState"],[85,49,82,49],[85,50,82,50],[86,8,83,8],[87,8,85,8],[87,15,85,15,"newState"],[87,23,85,23],[88,6,86,6],[88,7,86,7],[89,6,88,6],[89,13,88,13,"next"],[89,17,88,17],[89,18,88,18,"sentryReducer"],[89,31,88,31],[89,33,88,33,"initialState"],[89,45,88,45],[89,46,88,46],[90,4,89,4],[90,5,89,5],[91,2,90,0],[92,0,90,1],[92,3]],"functionMap":{"names":["<global>","defaultOptions.actionTransformer","defaultOptions.stateTransformer","createReduxEnhancer","<anonymous>","getGlobalScope.addEventProcessor$argument_0","sentryReducer"],"mappings":"AAA;qBCO,gBD;oBEC,sBF;AGQ;SCO;2CCG;SDc;4BEE;OF2C;KDG;CHC"}},"type":"js/module"}]}