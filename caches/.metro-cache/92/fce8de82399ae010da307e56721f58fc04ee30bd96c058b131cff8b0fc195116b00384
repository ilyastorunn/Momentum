{"dependencies":[{"name":"./semanticAttributes.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":105,"index":105}}],"key":"/6BUdYPH9gaEicG1aM+qviDIUZE=","exportNames":["*"]}},{"name":"./tracing/errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":106},"end":{"line":2,"column":29,"index":135}}],"key":"in4pKAqHAMBVu+zdC3Zdy95C7R4=","exportNames":["*"]}},{"name":"./utils-hoist/is.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":136},"end":{"line":3,"column":51,"index":187}}],"key":"yjiG2n7bd9NbF7ogEaNNARkwswM=","exportNames":["*"]}},{"name":"./utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":38,"index":226}}],"key":"m8KfYj+k/3+bPHhnkEVLMr3nakA=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":227},"end":{"line":5,"column":33,"index":260}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":261},"end":{"line":6,"column":31,"index":292}}],"key":"CDYXZ+Iu2qXN5epbbNjMwVJRDIA=","exportNames":["*"]}},{"name":"./utils-hoist/syncpromise.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":293},"end":{"line":7,"column":38,"index":331}}],"key":"gwGYC9zGsq15kFPabL3tTNAvIUc=","exportNames":["*"]}},{"name":"./utils-hoist/url.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":332},"end":{"line":8,"column":48,"index":380}}],"key":"FoGCknYhvBWz/Ffa5U5P+37DAwo=","exportNames":["*"]}},{"name":"./utils-hoist/baggage.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":381},"end":{"line":9,"column":69,"index":450}}],"key":"KrHyr48mMa95F27odzB7s/U74vU=","exportNames":["*"]}},{"name":"./debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":451},"end":{"line":10,"column":26,"index":477}}],"key":"nOZ2HunKnzL39LFdYoJbtaXPZ5g=","exportNames":["*"]}},{"name":"./utils/hasTracingEnabled.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":478},"end":{"line":11,"column":65,"index":543}}],"key":"L36VKaCmIofB81OK1hufkAKX2s0=","exportNames":["*"]}},{"name":"./utils/spanUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":544},"end":{"line":12,"column":53,"index":597}}],"key":"xliqJNKUR7kbMbGBAOHednh2o/4=","exportNames":["*"]}},{"name":"./tracing/sentryNonRecordingSpan.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":598},"end":{"line":13,"column":77,"index":675}}],"key":"IDZd2YoIRKX3k0A7FAr3lyQ8tXQ=","exportNames":["*"]}},{"name":"./tracing/spanstatus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":676},"end":{"line":14,"column":75,"index":751}}],"key":"9CDeTCA9Ik4jcA300DEc6WiLoTU=","exportNames":["*"]}},{"name":"./tracing/trace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":752},"end":{"line":15,"column":55,"index":807}}],"key":"Z0hO6xxcK72YpJO1GcfhCSObzfk=","exportNames":["*"]}},{"name":"./utils/traceData.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":808},"end":{"line":16,"column":52,"index":860}}],"key":"wHTWdLTx8+M2tH1QW1vIoTiFlO8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addTracingHeadersToFetchRequest = addTracingHeadersToFetchRequest;\n  exports.instrumentFetchRequest = instrumentFetchRequest;\n  var _semanticAttributes = require(_dependencyMap[0], \"./semanticAttributes.js\");\n  require(_dependencyMap[1], \"./tracing/errors.js\");\n  var _is = require(_dependencyMap[2], \"./utils-hoist/is.js\");\n  require(_dependencyMap[3], \"./utils-hoist/debug-build.js\");\n  require(_dependencyMap[4], \"./utils-hoist/logger.js\");\n  require(_dependencyMap[5], \"./utils-hoist/time.js\");\n  require(_dependencyMap[6], \"./utils-hoist/syncpromise.js\");\n  var _url = require(_dependencyMap[7], \"./utils-hoist/url.js\");\n  var _baggage = require(_dependencyMap[8], \"./utils-hoist/baggage.js\");\n  require(_dependencyMap[9], \"./debug-build.js\");\n  var _hasTracingEnabled = require(_dependencyMap[10], \"./utils/hasTracingEnabled.js\");\n  var _spanUtils = require(_dependencyMap[11], \"./utils/spanUtils.js\");\n  var _sentryNonRecordingSpan = require(_dependencyMap[12], \"./tracing/sentryNonRecordingSpan.js\");\n  var _spanstatus = require(_dependencyMap[13], \"./tracing/spanstatus.js\");\n  var _trace = require(_dependencyMap[14], \"./tracing/trace.js\");\n  var _traceData = require(_dependencyMap[15], \"./utils/traceData.js\");\n  /**\n   * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n   *\n   * @returns Span if a span was created, otherwise void.\n   */\n  function instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeaders, spans, spanOrigin = 'auto.http.browser') {\n    if (!handlerData.fetchData) {\n      return undefined;\n    }\n    const shouldCreateSpanResult = (0, _hasTracingEnabled.hasTracingEnabled)() && shouldCreateSpan(handlerData.fetchData.url);\n    if (handlerData.endTimestamp && shouldCreateSpanResult) {\n      const spanId = handlerData.fetchData.__span;\n      if (!spanId) return;\n      const span = spans[spanId];\n      if (span) {\n        endSpan(span, handlerData);\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete spans[spanId];\n      }\n      return undefined;\n    }\n    const {\n      method,\n      url\n    } = handlerData.fetchData;\n    const fullUrl = getFullURL(url);\n    const host = fullUrl ? (0, _url.parseUrl)(fullUrl).host : undefined;\n    const hasParent = !!(0, _spanUtils.getActiveSpan)();\n    const span = shouldCreateSpanResult && hasParent ? (0, _trace.startInactiveSpan)({\n      name: `${method} ${url}`,\n      attributes: {\n        url,\n        type: 'fetch',\n        'http.method': method,\n        'http.url': fullUrl,\n        'server.address': host,\n        [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        [_semanticAttributes.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client'\n      }\n    }) : new _sentryNonRecordingSpan.SentryNonRecordingSpan();\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n    if (shouldAttachHeaders(handlerData.fetchData.url)) {\n      const request = handlerData.args[0];\n      const options = handlerData.args[1] || {};\n      const headers = _addTracingHeadersToFetchRequest(request, options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      (0, _hasTracingEnabled.hasTracingEnabled)() && hasParent ? span : undefined);\n      if (headers) {\n        // Ensure this is actually set, if no options have been passed previously\n        handlerData.args[1] = options;\n        options.headers = headers;\n      }\n    }\n    return span;\n  }\n\n  /**\n   * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n   */\n  function _addTracingHeadersToFetchRequest(request, fetchOptionsObj, span) {\n    const traceHeaders = (0, _traceData.getTraceData)({\n      span\n    });\n    const sentryTrace = traceHeaders['sentry-trace'];\n    const baggage = traceHeaders.baggage;\n\n    // Nothing to do, when we return undefined here, the original headers will be used\n    if (!sentryTrace) {\n      return undefined;\n    }\n    const headers = fetchOptionsObj.headers || (isRequest(request) ? request.headers : undefined);\n    if (!headers) {\n      return {\n        ...traceHeaders\n      };\n    } else if (isHeaders(headers)) {\n      const newHeaders = new Headers(headers);\n      newHeaders.set('sentry-trace', sentryTrace);\n      if (baggage) {\n        const prevBaggageHeader = newHeaders.get('baggage');\n        if (prevBaggageHeader) {\n          const prevHeaderStrippedFromSentryBaggage = stripBaggageHeaderOfSentryBaggageValues(prevBaggageHeader);\n          newHeaders.set('baggage',\n          // If there are non-sentry entries (i.e. if the stripped string is non-empty/truthy) combine the stripped header and sentry baggage header\n          // otherwise just set the sentry baggage header\n          prevHeaderStrippedFromSentryBaggage ? `${prevHeaderStrippedFromSentryBaggage},${baggage}` : baggage);\n        } else {\n          newHeaders.set('baggage', baggage);\n        }\n      }\n      return newHeaders;\n    } else if (Array.isArray(headers)) {\n      const newHeaders = [...headers\n      // Remove any existing sentry-trace headers\n      .filter(header => {\n        return !(Array.isArray(header) && header[0] === 'sentry-trace');\n      })\n      // Get rid of previous sentry baggage values in baggage header\n      .map(header => {\n        if (Array.isArray(header) && header[0] === 'baggage' && typeof header[1] === 'string') {\n          const [headerName, headerValue, ...rest] = header;\n          return [headerName, stripBaggageHeaderOfSentryBaggageValues(headerValue), ...rest];\n        } else {\n          return header;\n        }\n      }),\n      // Attach the new sentry-trace header\n      ['sentry-trace', sentryTrace]];\n      if (baggage) {\n        // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n        // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n        newHeaders.push(['baggage', baggage]);\n      }\n      return newHeaders;\n    } else {\n      const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n      let newBaggageHeaders = [];\n      if (Array.isArray(existingBaggageHeader)) {\n        newBaggageHeaders = existingBaggageHeader.map(headerItem => typeof headerItem === 'string' ? stripBaggageHeaderOfSentryBaggageValues(headerItem) : headerItem).filter(headerItem => headerItem === '');\n      } else if (existingBaggageHeader) {\n        newBaggageHeaders.push(stripBaggageHeaderOfSentryBaggageValues(existingBaggageHeader));\n      }\n      if (baggage) {\n        newBaggageHeaders.push(baggage);\n      }\n      return {\n        ...headers,\n        'sentry-trace': sentryTrace,\n        baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined\n      };\n    }\n  }\n\n  /**\n   * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n   *\n   * @deprecated This function will not be exported anymore in v9.\n   */\n  function addTracingHeadersToFetchRequest(request, _client, _scope, fetchOptionsObj, span) {\n    return _addTracingHeadersToFetchRequest(request, fetchOptionsObj, span);\n  }\n  function getFullURL(url) {\n    try {\n      const parsed = new URL(url);\n      return parsed.href;\n    } catch (e) {\n      return undefined;\n    }\n  }\n  function endSpan(span, handlerData) {\n    if (handlerData.response) {\n      (0, _spanstatus.setHttpStatus)(span, handlerData.response.status);\n      const contentLength = handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n      if (contentLength) {\n        const contentLengthNum = parseInt(contentLength);\n        if (contentLengthNum > 0) {\n          span.setAttribute('http.response_content_length', contentLengthNum);\n        }\n      }\n    } else if (handlerData.error) {\n      span.setStatus({\n        code: _spanstatus.SPAN_STATUS_ERROR,\n        message: 'internal_error'\n      });\n    }\n    span.end();\n  }\n  function stripBaggageHeaderOfSentryBaggageValues(baggageHeader) {\n    return baggageHeader.split(',')\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    .filter(baggageEntry => !baggageEntry.split('=')[0].startsWith(_baggage.SENTRY_BAGGAGE_KEY_PREFIX)).join(',');\n  }\n  function isRequest(request) {\n    return typeof Request !== 'undefined' && (0, _is.isInstanceOf)(request, Request);\n  }\n  function isHeaders(headers) {\n    return typeof Headers !== 'undefined' && (0, _is.isInstanceOf)(headers, Headers);\n  }\n});","lineCount":205,"map":[[7,2,1,0],[7,6,1,0,"_semanticAttributes"],[7,25,1,0],[7,28,1,0,"require"],[7,35,1,0],[7,36,1,0,"_dependencyMap"],[7,50,1,0],[8,2,2,0,"require"],[8,9,2,0],[8,10,2,0,"_dependencyMap"],[8,24,2,0],[9,2,3,0],[9,6,3,0,"_is"],[9,9,3,0],[9,12,3,0,"require"],[9,19,3,0],[9,20,3,0,"_dependencyMap"],[9,34,3,0],[10,2,4,0,"require"],[10,9,4,0],[10,10,4,0,"_dependencyMap"],[10,24,4,0],[11,2,5,0,"require"],[11,9,5,0],[11,10,5,0,"_dependencyMap"],[11,24,5,0],[12,2,6,0,"require"],[12,9,6,0],[12,10,6,0,"_dependencyMap"],[12,24,6,0],[13,2,7,0,"require"],[13,9,7,0],[13,10,7,0,"_dependencyMap"],[13,24,7,0],[14,2,8,0],[14,6,8,0,"_url"],[14,10,8,0],[14,13,8,0,"require"],[14,20,8,0],[14,21,8,0,"_dependencyMap"],[14,35,8,0],[15,2,9,0],[15,6,9,0,"_baggage"],[15,14,9,0],[15,17,9,0,"require"],[15,24,9,0],[15,25,9,0,"_dependencyMap"],[15,39,9,0],[16,2,10,0,"require"],[16,9,10,0],[16,10,10,0,"_dependencyMap"],[16,24,10,0],[17,2,11,0],[17,6,11,0,"_hasTracingEnabled"],[17,24,11,0],[17,27,11,0,"require"],[17,34,11,0],[17,35,11,0,"_dependencyMap"],[17,49,11,0],[18,2,12,0],[18,6,12,0,"_spanUtils"],[18,16,12,0],[18,19,12,0,"require"],[18,26,12,0],[18,27,12,0,"_dependencyMap"],[18,41,12,0],[19,2,13,0],[19,6,13,0,"_sentryNonRecordingSpan"],[19,29,13,0],[19,32,13,0,"require"],[19,39,13,0],[19,40,13,0,"_dependencyMap"],[19,54,13,0],[20,2,14,0],[20,6,14,0,"_spanstatus"],[20,17,14,0],[20,20,14,0,"require"],[20,27,14,0],[20,28,14,0,"_dependencyMap"],[20,42,14,0],[21,2,15,0],[21,6,15,0,"_trace"],[21,12,15,0],[21,15,15,0,"require"],[21,22,15,0],[21,23,15,0,"_dependencyMap"],[21,37,15,0],[22,2,16,0],[22,6,16,0,"_traceData"],[22,16,16,0],[22,19,16,0,"require"],[22,26,16,0],[22,27,16,0,"_dependencyMap"],[22,41,16,0],[23,2,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,2,23,0],[28,11,23,9,"instrumentFetchRequest"],[28,33,23,31,"instrumentFetchRequest"],[28,34,24,2,"handlerData"],[28,45,24,13],[28,47,25,2,"shouldCreateSpan"],[28,63,25,18],[28,65,26,2,"shouldAttachHeaders"],[28,84,26,21],[28,86,27,2,"spans"],[28,91,27,7],[28,93,28,2,"spanOrigin"],[28,103,28,12],[28,106,28,15],[28,125,28,34],[28,127,29,2],[29,4,30,2],[29,8,30,6],[29,9,30,7,"handlerData"],[29,20,30,18],[29,21,30,19,"fetchData"],[29,30,30,28],[29,32,30,30],[30,6,31,4],[30,13,31,11,"undefined"],[30,22,31,20],[31,4,32,2],[32,4,34,2],[32,10,34,8,"shouldCreateSpanResult"],[32,32,34,30],[32,35,34,33],[32,39,34,33,"hasTracingEnabled"],[32,75,34,50],[32,77,34,51],[32,78,34,52],[32,82,34,56,"shouldCreateSpan"],[32,98,34,72],[32,99,34,73,"handlerData"],[32,110,34,84],[32,111,34,85,"fetchData"],[32,120,34,94],[32,121,34,95,"url"],[32,124,34,98],[32,125,34,99],[33,4,36,2],[33,8,36,6,"handlerData"],[33,19,36,17],[33,20,36,18,"endTimestamp"],[33,32,36,30],[33,36,36,34,"shouldCreateSpanResult"],[33,58,36,56],[33,60,36,58],[34,6,37,4],[34,12,37,10,"spanId"],[34,18,37,16],[34,21,37,19,"handlerData"],[34,32,37,30],[34,33,37,31,"fetchData"],[34,42,37,40],[34,43,37,41,"__span"],[34,49,37,47],[35,6,38,4],[35,10,38,8],[35,11,38,9,"spanId"],[35,17,38,15],[35,19,38,17],[36,6,40,4],[36,12,40,10,"span"],[36,16,40,14],[36,19,40,17,"spans"],[36,24,40,22],[36,25,40,23,"spanId"],[36,31,40,29],[36,32,40,30],[37,6,41,4],[37,10,41,8,"span"],[37,14,41,12],[37,16,41,14],[38,8,42,6,"endSpan"],[38,15,42,13],[38,16,42,14,"span"],[38,20,42,18],[38,22,42,20,"handlerData"],[38,33,42,31],[38,34,42,32],[40,8,44,6],[41,8,45,6],[41,15,45,13,"spans"],[41,20,45,18],[41,21,45,19,"spanId"],[41,27,45,25],[41,28,45,26],[42,6,46,4],[43,6,47,4],[43,13,47,11,"undefined"],[43,22,47,20],[44,4,48,2],[45,4,50,2],[45,10,50,8],[46,6,50,10,"method"],[46,12,50,16],[47,6,50,18,"url"],[48,4,50,22],[48,5,50,23],[48,8,50,26,"handlerData"],[48,19,50,37],[48,20,50,38,"fetchData"],[48,29,50,47],[49,4,52,2],[49,10,52,8,"fullUrl"],[49,17,52,15],[49,20,52,18,"getFullURL"],[49,30,52,28],[49,31,52,29,"url"],[49,34,52,32],[49,35,52,33],[50,4,53,2],[50,10,53,8,"host"],[50,14,53,12],[50,17,53,15,"fullUrl"],[50,24,53,22],[50,27,53,25],[50,31,53,25,"parseUrl"],[50,44,53,33],[50,46,53,34,"fullUrl"],[50,53,53,41],[50,54,53,42],[50,55,53,43,"host"],[50,59,53,47],[50,62,53,50,"undefined"],[50,71,53,59],[51,4,55,2],[51,10,55,8,"hasParent"],[51,19,55,17],[51,22,55,20],[51,23,55,21],[51,24,55,22],[51,28,55,22,"getActiveSpan"],[51,52,55,35],[51,54,55,36],[51,55,55,37],[52,4,57,2],[52,10,57,8,"span"],[52,14,57,12],[52,17,58,4,"shouldCreateSpanResult"],[52,39,58,26],[52,43,58,30,"hasParent"],[52,52,58,39],[52,55,59,8],[52,59,59,8,"startInactiveSpan"],[52,83,59,25],[52,85,59,26],[53,6,60,10,"name"],[53,10,60,14],[53,12,60,16],[53,15,60,19,"method"],[53,21,60,25],[53,25,60,29,"url"],[53,28,60,32],[53,30,60,34],[54,6,61,10,"attributes"],[54,16,61,20],[54,18,61,22],[55,8,62,12,"url"],[55,11,62,15],[56,8,63,12,"type"],[56,12,63,16],[56,14,63,18],[56,21,63,25],[57,8,64,12],[57,21,64,25],[57,23,64,27,"method"],[57,29,64,33],[58,8,65,12],[58,18,65,22],[58,20,65,24,"fullUrl"],[58,27,65,31],[59,8,66,12],[59,24,66,28],[59,26,66,30,"host"],[59,30,66,34],[60,8,67,12],[60,9,67,13,"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN"],[60,61,67,45],[60,64,67,48,"spanOrigin"],[60,74,67,58],[61,8,68,12],[61,9,68,13,"SEMANTIC_ATTRIBUTE_SENTRY_OP"],[61,57,68,41],[61,60,68,44],[62,6,69,10],[63,4,70,8],[63,5,70,9],[63,6,70,10],[63,9,71,8],[63,13,71,12,"SentryNonRecordingSpan"],[63,59,71,34],[63,60,71,35],[63,61,71,36],[64,4,73,2,"handlerData"],[64,15,73,13],[64,16,73,14,"fetchData"],[64,25,73,23],[64,26,73,24,"__span"],[64,32,73,30],[64,35,73,33,"span"],[64,39,73,37],[64,40,73,38,"spanContext"],[64,51,73,49],[64,52,73,50],[64,53,73,51],[64,54,73,52,"spanId"],[64,60,73,58],[65,4,74,2,"spans"],[65,9,74,7],[65,10,74,8,"span"],[65,14,74,12],[65,15,74,13,"spanContext"],[65,26,74,24],[65,27,74,25],[65,28,74,26],[65,29,74,27,"spanId"],[65,35,74,33],[65,36,74,34],[65,39,74,37,"span"],[65,43,74,41],[66,4,76,2],[66,8,76,6,"shouldAttachHeaders"],[66,27,76,25],[66,28,76,26,"handlerData"],[66,39,76,37],[66,40,76,38,"fetchData"],[66,49,76,47],[66,50,76,48,"url"],[66,53,76,51],[66,54,76,52],[66,56,76,54],[67,6,77,4],[67,12,77,10,"request"],[67,19,77,17],[67,22,77,20,"handlerData"],[67,33,77,31],[67,34,77,32,"args"],[67,38,77,36],[67,39,77,37],[67,40,77,38],[67,41,77,39],[68,6,79,4],[68,12,79,10,"options"],[68,19,79,17],[68,22,79,20,"handlerData"],[68,33,79,31],[68,34,79,32,"args"],[68,38,79,36],[68,39,79,37],[68,40,79,38],[68,41,79,39],[68,45,79,43],[68,46,79,44],[68,47,79,45],[69,6,81,4],[69,12,81,10,"headers"],[69,19,81,17],[69,22,81,20,"_addTracingHeadersToFetchRequest"],[69,54,81,52],[69,55,82,6,"request"],[69,62,82,13],[69,64,83,6,"options"],[69,71,83,13],[70,6,84,6],[71,6,85,6],[72,6,86,6],[73,6,87,6],[73,10,87,6,"hasTracingEnabled"],[73,46,87,23],[73,48,87,24],[73,49,87,25],[73,53,87,29,"hasParent"],[73,62,87,38],[73,65,87,41,"span"],[73,69,87,45],[73,72,87,48,"undefined"],[73,81,88,4],[73,82,88,5],[74,6,89,4],[74,10,89,8,"headers"],[74,17,89,15],[74,19,89,17],[75,8,90,6],[76,8,91,6,"handlerData"],[76,19,91,17],[76,20,91,18,"args"],[76,24,91,22],[76,25,91,23],[76,26,91,24],[76,27,91,25],[76,30,91,28,"options"],[76,37,91,35],[77,8,92,6,"options"],[77,15,92,13],[77,16,92,14,"headers"],[77,23,92,21],[77,26,92,24,"headers"],[77,33,92,31],[78,6,93,4],[79,4,94,2],[80,4,96,2],[80,11,96,9,"span"],[80,15,96,13],[81,2,97,0],[83,2,99,0],[84,0,100,0],[85,0,101,0],[86,2,102,0],[86,11,102,9,"_addTracingHeadersToFetchRequest"],[86,43,102,41,"_addTracingHeadersToFetchRequest"],[86,44,103,2,"request"],[86,51,103,9],[86,53,104,2,"fetchOptionsObj"],[86,68,104,17],[86,70,107,2,"span"],[86,74,107,6],[86,76,108,2],[87,4,109,2],[87,10,109,8,"traceHeaders"],[87,22,109,20],[87,25,109,23],[87,29,109,23,"getTraceData"],[87,52,109,35],[87,54,109,36],[88,6,109,38,"span"],[89,4,109,43],[89,5,109,44],[89,6,109,45],[90,4,110,2],[90,10,110,8,"sentryTrace"],[90,21,110,19],[90,24,110,22,"traceHeaders"],[90,36,110,34],[90,37,110,35],[90,51,110,49],[90,52,110,50],[91,4,111,2],[91,10,111,8,"baggage"],[91,17,111,15],[91,20,111,18,"traceHeaders"],[91,32,111,30],[91,33,111,31,"baggage"],[91,40,111,38],[93,4,113,2],[94,4,114,2],[94,8,114,6],[94,9,114,7,"sentryTrace"],[94,20,114,18],[94,22,114,20],[95,6,115,4],[95,13,115,11,"undefined"],[95,22,115,20],[96,4,116,2],[97,4,118,2],[97,10,118,8,"headers"],[97,17,118,15],[97,20,118,18,"fetchOptionsObj"],[97,35,118,33],[97,36,118,34,"headers"],[97,43,118,41],[97,48,118,46,"isRequest"],[97,57,118,55],[97,58,118,56,"request"],[97,65,118,63],[97,66,118,64],[97,69,118,67,"request"],[97,76,118,74],[97,77,118,75,"headers"],[97,84,118,82],[97,87,118,85,"undefined"],[97,96,118,94],[97,97,118,95],[98,4,120,2],[98,8,120,6],[98,9,120,7,"headers"],[98,16,120,14],[98,18,120,16],[99,6,121,4],[99,13,121,11],[100,8,121,13],[100,11,121,16,"traceHeaders"],[101,6,121,29],[101,7,121,30],[102,4,122,2],[102,5,122,3],[102,11,122,9],[102,15,122,13,"isHeaders"],[102,24,122,22],[102,25,122,23,"headers"],[102,32,122,30],[102,33,122,31],[102,35,122,33],[103,6,123,4],[103,12,123,10,"newHeaders"],[103,22,123,20],[103,25,123,23],[103,29,123,27,"Headers"],[103,36,123,34],[103,37,123,35,"headers"],[103,44,123,42],[103,45,123,43],[104,6,124,4,"newHeaders"],[104,16,124,14],[104,17,124,15,"set"],[104,20,124,18],[104,21,124,19],[104,35,124,33],[104,37,124,35,"sentryTrace"],[104,48,124,46],[104,49,124,47],[105,6,126,4],[105,10,126,8,"baggage"],[105,17,126,15],[105,19,126,17],[106,8,127,6],[106,14,127,12,"prevBaggageHeader"],[106,31,127,29],[106,34,127,32,"newHeaders"],[106,44,127,42],[106,45,127,43,"get"],[106,48,127,46],[106,49,127,47],[106,58,127,56],[106,59,127,57],[107,8,128,6],[107,12,128,10,"prevBaggageHeader"],[107,29,128,27],[107,31,128,29],[108,10,129,8],[108,16,129,14,"prevHeaderStrippedFromSentryBaggage"],[108,51,129,49],[108,54,129,52,"stripBaggageHeaderOfSentryBaggageValues"],[108,93,129,91],[108,94,129,92,"prevBaggageHeader"],[108,111,129,109],[108,112,129,110],[109,10,130,8,"newHeaders"],[109,20,130,18],[109,21,130,19,"set"],[109,24,130,22],[109,25,131,10],[109,34,131,19],[110,10,132,10],[111,10,133,10],[112,10,134,10,"prevHeaderStrippedFromSentryBaggage"],[112,45,134,45],[112,48,134,48],[112,51,134,51,"prevHeaderStrippedFromSentryBaggage"],[112,86,134,86],[112,90,134,90,"baggage"],[112,97,134,97],[112,99,134,99],[112,102,134,102,"baggage"],[112,109,135,8],[112,110,135,9],[113,8,136,6],[113,9,136,7],[113,15,136,13],[114,10,137,8,"newHeaders"],[114,20,137,18],[114,21,137,19,"set"],[114,24,137,22],[114,25,137,23],[114,34,137,32],[114,36,137,34,"baggage"],[114,43,137,41],[114,44,137,42],[115,8,138,6],[116,6,139,4],[117,6,141,4],[117,13,141,11,"newHeaders"],[117,23,141,21],[118,4,142,2],[118,5,142,3],[118,11,142,9],[118,15,142,13,"Array"],[118,20,142,18],[118,21,142,19,"isArray"],[118,28,142,26],[118,29,142,27,"headers"],[118,36,142,34],[118,37,142,35],[118,39,142,37],[119,6,143,4],[119,12,143,10,"newHeaders"],[119,22,143,20],[119,25,143,23],[119,26,144,6],[119,29,144,9,"headers"],[120,6,145,8],[121,6,145,8],[121,7,146,9,"filter"],[121,13,146,15],[121,14,146,16,"header"],[121,20,146,22],[121,24,146,26],[122,8,147,10],[122,15,147,17],[122,17,147,19,"Array"],[122,22,147,24],[122,23,147,25,"isArray"],[122,30,147,32],[122,31,147,33,"header"],[122,37,147,39],[122,38,147,40],[122,42,147,44,"header"],[122,48,147,50],[122,49,147,51],[122,50,147,52],[122,51,147,53],[122,56,147,58],[122,70,147,72],[122,71,147,73],[123,6,148,8],[123,7,148,9],[124,6,149,8],[125,6,149,8],[125,7,150,9,"map"],[125,10,150,12],[125,11,150,13,"header"],[125,17,150,19],[125,21,150,23],[126,8,151,10],[126,12,151,14,"Array"],[126,17,151,19],[126,18,151,20,"isArray"],[126,25,151,27],[126,26,151,28,"header"],[126,32,151,34],[126,33,151,35],[126,37,151,39,"header"],[126,43,151,45],[126,44,151,46],[126,45,151,47],[126,46,151,48],[126,51,151,53],[126,60,151,62],[126,64,151,66],[126,71,151,73,"header"],[126,77,151,79],[126,78,151,80],[126,79,151,81],[126,80,151,82],[126,85,151,87],[126,93,151,95],[126,95,151,97],[127,10,152,12],[127,16,152,18],[127,17,152,19,"headerName"],[127,27,152,29],[127,29,152,31,"headerValue"],[127,40,152,42],[127,42,152,44],[127,45,152,47,"rest"],[127,49,152,51],[127,50,152,52],[127,53,152,55,"header"],[127,59,152,61],[128,10,153,12],[128,17,153,19],[128,18,153,20,"headerName"],[128,28,153,30],[128,30,153,32,"stripBaggageHeaderOfSentryBaggageValues"],[128,69,153,71],[128,70,153,72,"headerValue"],[128,81,153,83],[128,82,153,84],[128,84,153,86],[128,87,153,89,"rest"],[128,91,153,93],[128,92,153,94],[129,8,154,10],[129,9,154,11],[129,15,154,17],[130,10,155,12],[130,17,155,19,"header"],[130,23,155,25],[131,8,156,10],[132,6,157,8],[132,7,157,9],[132,8,157,10],[133,6,158,6],[134,6,159,6],[134,7,159,7],[134,21,159,21],[134,23,159,23,"sentryTrace"],[134,34,159,34],[134,35,159,35],[134,36,160,5],[135,6,162,4],[135,10,162,8,"baggage"],[135,17,162,15],[135,19,162,17],[136,8,163,6],[137,8,164,6],[138,8,165,6,"newHeaders"],[138,18,165,16],[138,19,165,17,"push"],[138,23,165,21],[138,24,165,22],[138,25,165,23],[138,34,165,32],[138,36,165,34,"baggage"],[138,43,165,41],[138,44,165,42],[138,45,165,43],[139,6,166,4],[140,6,168,4],[140,13,168,11,"newHeaders"],[140,23,168,21],[141,4,169,2],[141,5,169,3],[141,11,169,9],[142,6,170,4],[142,12,170,10,"existingBaggageHeader"],[142,33,170,31],[142,36,170,34],[142,45,170,43],[142,49,170,47,"headers"],[142,56,170,54],[142,59,170,57,"headers"],[142,66,170,64],[142,67,170,65,"baggage"],[142,74,170,72],[142,77,170,75,"undefined"],[142,86,170,84],[143,6,171,4],[143,10,171,8,"newBaggageHeaders"],[143,27,171,25],[143,30,171,28],[143,32,171,30],[144,6,173,4],[144,10,173,8,"Array"],[144,15,173,13],[144,16,173,14,"isArray"],[144,23,173,21],[144,24,173,22,"existingBaggageHeader"],[144,45,173,43],[144,46,173,44],[144,48,173,46],[145,8,174,6,"newBaggageHeaders"],[145,25,174,23],[145,28,174,26,"existingBaggageHeader"],[145,49,174,47],[145,50,175,9,"map"],[145,53,175,12],[145,54,175,13,"headerItem"],[145,64,175,23],[145,68,176,10],[145,75,176,17,"headerItem"],[145,85,176,27],[145,90,176,32],[145,98,176,40],[145,101,176,43,"stripBaggageHeaderOfSentryBaggageValues"],[145,140,176,82],[145,141,176,83,"headerItem"],[145,151,176,93],[145,152,176,94],[145,155,176,97,"headerItem"],[145,165,177,8],[145,166,177,9],[145,167,178,9,"filter"],[145,173,178,15],[145,174,178,16,"headerItem"],[145,184,178,26],[145,188,178,30,"headerItem"],[145,198,178,40],[145,203,178,45],[145,205,178,47],[145,206,178,48],[146,6,179,4],[146,7,179,5],[146,13,179,11],[146,17,179,15,"existingBaggageHeader"],[146,38,179,36],[146,40,179,38],[147,8,180,6,"newBaggageHeaders"],[147,25,180,23],[147,26,180,24,"push"],[147,30,180,28],[147,31,180,29,"stripBaggageHeaderOfSentryBaggageValues"],[147,70,180,68],[147,71,180,69,"existingBaggageHeader"],[147,92,180,90],[147,93,180,91],[147,94,180,92],[148,6,181,4],[149,6,183,4],[149,10,183,8,"baggage"],[149,17,183,15],[149,19,183,17],[150,8,184,6,"newBaggageHeaders"],[150,25,184,23],[150,26,184,24,"push"],[150,30,184,28],[150,31,184,29,"baggage"],[150,38,184,36],[150,39,184,37],[151,6,185,4],[152,6,187,4],[152,13,187,11],[153,8,188,6],[153,11,188,10,"headers"],[153,18,188,19],[154,8,189,6],[154,22,189,20],[154,24,189,22,"sentryTrace"],[154,35,189,33],[155,8,190,6,"baggage"],[155,15,190,13],[155,17,190,15,"newBaggageHeaders"],[155,34,190,32],[155,35,190,33,"length"],[155,41,190,39],[155,44,190,42],[155,45,190,43],[155,48,190,46,"newBaggageHeaders"],[155,65,190,63],[155,66,190,64,"join"],[155,70,190,68],[155,71,190,69],[155,74,190,72],[155,75,190,73],[155,78,190,76,"undefined"],[156,6,191,4],[156,7,191,5],[157,4,192,2],[158,2,193,0],[160,2,195,0],[161,0,196,0],[162,0,197,0],[163,0,198,0],[164,0,199,0],[165,2,200,0],[165,11,200,9,"addTracingHeadersToFetchRequest"],[165,42,200,40,"addTracingHeadersToFetchRequest"],[165,43,201,2,"request"],[165,50,201,9],[165,52,202,2,"_client"],[165,59,202,9],[165,61,203,2,"_scope"],[165,67,203,8],[165,69,204,2,"fetchOptionsObj"],[165,84,204,17],[165,86,207,2,"span"],[165,90,207,6],[165,92,208,2],[166,4,209,2],[166,11,209,9,"_addTracingHeadersToFetchRequest"],[166,43,209,41],[166,44,209,42,"request"],[166,51,209,49],[166,53,209,52,"fetchOptionsObj"],[166,68,209,67],[166,70,209,69,"span"],[166,74,209,73],[166,75,209,74],[167,2,210,0],[168,2,212,0],[168,11,212,9,"getFullURL"],[168,21,212,19,"getFullURL"],[168,22,212,20,"url"],[168,25,212,23],[168,27,212,25],[169,4,213,2],[169,8,213,6],[170,6,214,4],[170,12,214,10,"parsed"],[170,18,214,16],[170,21,214,19],[170,25,214,23,"URL"],[170,28,214,26],[170,29,214,27,"url"],[170,32,214,30],[170,33,214,31],[171,6,215,4],[171,13,215,11,"parsed"],[171,19,215,17],[171,20,215,18,"href"],[171,24,215,22],[172,4,216,2],[172,5,216,3],[172,6,216,4],[172,13,216,11,"e"],[172,14,216,12],[172,16,216,14],[173,6,217,4],[173,13,217,11,"undefined"],[173,22,217,20],[174,4,218,2],[175,2,219,0],[176,2,221,0],[176,11,221,9,"endSpan"],[176,18,221,16,"endSpan"],[176,19,221,17,"span"],[176,23,221,21],[176,25,221,23,"handlerData"],[176,36,221,34],[176,38,221,36],[177,4,222,2],[177,8,222,6,"handlerData"],[177,19,222,17],[177,20,222,18,"response"],[177,28,222,26],[177,30,222,28],[178,6,223,4],[178,10,223,4,"setHttpStatus"],[178,35,223,17],[178,37,223,18,"span"],[178,41,223,22],[178,43,223,24,"handlerData"],[178,54,223,35],[178,55,223,36,"response"],[178,63,223,44],[178,64,223,45,"status"],[178,70,223,51],[178,71,223,52],[179,6,225,4],[179,12,225,10,"contentLength"],[179,25,225,23],[179,28,226,6,"handlerData"],[179,39,226,17],[179,40,226,18,"response"],[179,48,226,26],[179,52,226,30,"handlerData"],[179,63,226,41],[179,64,226,42,"response"],[179,72,226,50],[179,73,226,51,"headers"],[179,80,226,58],[179,84,226,62,"handlerData"],[179,95,226,73],[179,96,226,74,"response"],[179,104,226,82],[179,105,226,83,"headers"],[179,112,226,90],[179,113,226,91,"get"],[179,116,226,94],[179,117,226,95],[179,133,226,111],[179,134,226,112],[180,6,228,4],[180,10,228,8,"contentLength"],[180,23,228,21],[180,25,228,23],[181,8,229,6],[181,14,229,12,"contentLengthNum"],[181,30,229,28],[181,33,229,31,"parseInt"],[181,41,229,39],[181,42,229,40,"contentLength"],[181,55,229,53],[181,56,229,54],[182,8,230,6],[182,12,230,10,"contentLengthNum"],[182,28,230,26],[182,31,230,29],[182,32,230,30],[182,34,230,32],[183,10,231,8,"span"],[183,14,231,12],[183,15,231,13,"setAttribute"],[183,27,231,25],[183,28,231,26],[183,58,231,56],[183,60,231,58,"contentLengthNum"],[183,76,231,74],[183,77,231,75],[184,8,232,6],[185,6,233,4],[186,4,234,2],[186,5,234,3],[186,11,234,9],[186,15,234,13,"handlerData"],[186,26,234,24],[186,27,234,25,"error"],[186,32,234,30],[186,34,234,32],[187,6,235,4,"span"],[187,10,235,8],[187,11,235,9,"setStatus"],[187,20,235,18],[187,21,235,19],[188,8,235,21,"code"],[188,12,235,25],[188,14,235,27,"SPAN_STATUS_ERROR"],[188,43,235,44],[189,8,235,46,"message"],[189,15,235,53],[189,17,235,55],[190,6,235,72],[190,7,235,73],[190,8,235,74],[191,4,236,2],[192,4,237,2,"span"],[192,8,237,6],[192,9,237,7,"end"],[192,12,237,10],[192,13,237,11],[192,14,237,12],[193,2,238,0],[194,2,240,0],[194,11,240,9,"stripBaggageHeaderOfSentryBaggageValues"],[194,50,240,48,"stripBaggageHeaderOfSentryBaggageValues"],[194,51,240,49,"baggageHeader"],[194,64,240,62],[194,66,240,64],[195,4,241,2],[195,11,242,4,"baggageHeader"],[195,24,242,17],[195,25,243,7,"split"],[195,30,243,12],[195,31,243,13],[195,34,243,16],[196,4,244,6],[197,4,244,6],[197,5,245,7,"filter"],[197,11,245,13],[197,12,245,14,"baggageEntry"],[197,24,245,26],[197,28,245,30],[197,29,245,31,"baggageEntry"],[197,41,245,43],[197,42,245,44,"split"],[197,47,245,49],[197,48,245,50],[197,51,245,53],[197,52,245,54],[197,53,245,55],[197,54,245,56],[197,55,245,57],[197,56,245,58,"startsWith"],[197,66,245,68],[197,67,245,69,"SENTRY_BAGGAGE_KEY_PREFIX"],[197,101,245,94],[197,102,245,95],[197,103,245,96],[197,104,246,7,"join"],[197,108,246,11],[197,109,246,12],[197,112,246,15],[197,113,246,16],[198,2,248,0],[199,2,250,0],[199,11,250,9,"isRequest"],[199,20,250,18,"isRequest"],[199,21,250,19,"request"],[199,28,250,26],[199,30,250,28],[200,4,251,2],[200,11,251,9],[200,18,251,16,"Request"],[200,25,251,23],[200,30,251,28],[200,41,251,39],[200,45,251,43],[200,49,251,43,"isInstanceOf"],[200,65,251,55],[200,67,251,56,"request"],[200,74,251,63],[200,76,251,65,"Request"],[200,83,251,72],[200,84,251,73],[201,2,252,0],[202,2,254,0],[202,11,254,9,"isHeaders"],[202,20,254,18,"isHeaders"],[202,21,254,19,"headers"],[202,28,254,26],[202,30,254,28],[203,4,255,2],[203,11,255,9],[203,18,255,16,"Headers"],[203,25,255,23],[203,30,255,28],[203,41,255,39],[203,45,255,43],[203,49,255,43,"isInstanceOf"],[203,65,255,55],[203,67,255,56,"headers"],[203,74,255,63],[203,76,255,65,"Headers"],[203,83,255,72],[203,84,255,73],[204,2,256,0],[205,0,256,1],[205,3]],"functionMap":{"names":["<global>","instrumentFetchRequest","_addTracingHeadersToFetchRequest","headers.filter$argument_0","headers.filter.map$argument_0","existingBaggageHeader.map$argument_0","existingBaggageHeader.map.filter$argument_0","addTracingHeadersToFetchRequest","getFullURL","endSpan","stripBaggageHeaderOfSentryBaggageValues","baggageHeader.split.filter$argument_0","isRequest","isHeaders"],"mappings":"AAA;ACsB;CD0E;AEK;gBC4C;SDE;aEE;SFO;aGkB;2GHC;gBIE,+BJ;CFe;AOO;CPU;AQE;CRO;ASE;CTiB;AUE;cCK,iFD;CVG;AYE;CZE;AaE;CbE"}},"type":"js/module"}]}