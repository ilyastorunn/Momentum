{"dependencies":[{"name":"../utils-hoist/object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"IWRGqGXR51VGNaoabCqwsNvBzK0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports._getSpanForScope = _getSpanForScope;\n  exports._setSpanForScope = _setSpanForScope;\n  var _object = require(_dependencyMap[0], \"../utils-hoist/object.js\");\n  const SCOPE_SPAN_FIELD = '_sentrySpan';\n\n  /**\n   * Set the active span for a given scope.\n   * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n   */\n  function _setSpanForScope(scope, span) {\n    if (span) {\n      (0, _object.addNonEnumerableProperty)(scope, SCOPE_SPAN_FIELD, span);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete scope[SCOPE_SPAN_FIELD];\n    }\n  }\n\n  /**\n   * Get the active span for a given scope.\n   * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n   */\n  function _getSpanForScope(scope) {\n    return scope[SCOPE_SPAN_FIELD];\n  }\n});","lineCount":30,"map":[[7,2,1,0],[7,6,1,0,"_object"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[8,8,3,6,"SCOPE_SPAN_FIELD"],[8,24,3,22],[8,27,3,25],[8,40,3,38],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,2,9,0],[14,11,9,9,"_setSpanForScope"],[14,27,9,25,"_setSpanForScope"],[14,28,9,26,"scope"],[14,33,9,31],[14,35,9,33,"span"],[14,39,9,37],[14,41,9,39],[15,4,10,2],[15,8,10,6,"span"],[15,12,10,10],[15,14,10,12],[16,6,11,4],[16,10,11,4,"addNonEnumerableProperty"],[16,42,11,28],[16,44,11,29,"scope"],[16,49,11,34],[16,51,11,37,"SCOPE_SPAN_FIELD"],[16,67,11,53],[16,69,11,55,"span"],[16,73,11,59],[16,74,11,60],[17,4,12,2],[17,5,12,3],[17,11,12,9],[18,6,13,4],[19,6,14,4],[19,13,14,12,"scope"],[19,18,14,17],[19,19,14,20,"SCOPE_SPAN_FIELD"],[19,35,14,36],[19,36,14,37],[20,4,15,2],[21,2,16,0],[23,2,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,0],[27,11,22,9,"_getSpanForScope"],[27,27,22,25,"_getSpanForScope"],[27,28,22,26,"scope"],[27,33,22,31],[27,35,22,33],[28,4,23,2],[28,11,23,9,"scope"],[28,16,23,14],[28,17,23,15,"SCOPE_SPAN_FIELD"],[28,33,23,31],[28,34,23,32],[29,2,24,0],[30,0,24,1],[30,3]],"functionMap":{"names":["<global>","_setSpanForScope","_getSpanForScope"],"mappings":"AAA;ACQ;CDO;AEM;CFE"}},"type":"js/module"}]}