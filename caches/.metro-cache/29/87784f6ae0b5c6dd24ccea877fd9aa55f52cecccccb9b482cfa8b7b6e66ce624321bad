{"dependencies":[{"name":"./node-stack-trace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"I4HuW3JMH4XPRKx+RMlbO8AEW38=","exportNames":["*"]}},{"name":"./object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":48,"index":105}}],"key":"c+4yuYP7E2Xh9QIfj2WEKgywjI4=","exportNames":["*"]}},{"name":"./stacktrace.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":106},"end":{"line":3,"column":51,"index":157}}],"key":"aMpe18tuIEoMpnkxgMUgt39EQuk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.callFrameToStackFrame = callFrameToStackFrame;\n  exports.watchdogTimer = watchdogTimer;\n  var _nodeStackTrace = require(_dependencyMap[0], \"./node-stack-trace.js\");\n  var _object = require(_dependencyMap[1], \"./object.js\");\n  var _stacktrace = require(_dependencyMap[2], \"./stacktrace.js\");\n  /**\n   * A node.js watchdog timer\n   * @param pollInterval The interval that we expect to get polled at\n   * @param anrThreshold The threshold for when we consider ANR\n   * @param callback The callback to call for ANR\n   * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n   */\n  function watchdogTimer(createTimer, pollInterval, anrThreshold, callback) {\n    const timer = createTimer();\n    let triggered = false;\n    let enabled = true;\n    setInterval(() => {\n      const diffMs = timer.getTimeMs();\n      if (triggered === false && diffMs > pollInterval + anrThreshold) {\n        triggered = true;\n        if (enabled) {\n          callback();\n        }\n      }\n      if (diffMs < pollInterval + anrThreshold) {\n        triggered = false;\n      }\n    }, 20);\n    return {\n      poll: () => {\n        timer.reset();\n      },\n      enabled: state => {\n        enabled = state;\n      }\n    };\n  }\n\n  // types copied from inspector.d.ts\n\n  /**\n   * Converts Debugger.CallFrame to Sentry StackFrame\n   */\n  function callFrameToStackFrame(frame, url, getModuleFromFilename) {\n    const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n    // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n    const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n    const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n    return (0, _object.dropUndefinedKeys)({\n      filename,\n      module: getModuleFromFilename(filename),\n      function: frame.functionName || _stacktrace.UNKNOWN_FUNCTION,\n      colno,\n      lineno,\n      in_app: filename ? (0, _nodeStackTrace.filenameIsInApp)(filename) : undefined\n    });\n  }\n});","lineCount":63,"map":[[7,2,1,0],[7,6,1,0,"_nodeStackTrace"],[7,21,1,0],[7,24,1,0,"require"],[7,31,1,0],[7,32,1,0,"_dependencyMap"],[7,46,1,0],[8,2,2,0],[8,6,2,0,"_object"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,3,0],[9,6,3,0,"_stacktrace"],[9,17,3,0],[9,20,3,0,"require"],[9,27,3,0],[9,28,3,0,"_dependencyMap"],[9,42,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,2,12,0],[17,11,12,9,"watchdogTimer"],[17,24,12,22,"watchdogTimer"],[17,25,13,2,"createTimer"],[17,36,13,13],[17,38,14,2,"pollInterval"],[17,50,14,14],[17,52,15,2,"anrThreshold"],[17,64,15,14],[17,66,16,2,"callback"],[17,74,16,10],[17,76,17,2],[18,4,18,2],[18,10,18,8,"timer"],[18,15,18,13],[18,18,18,16,"createTimer"],[18,29,18,27],[18,30,18,28],[18,31,18,29],[19,4,19,2],[19,8,19,6,"triggered"],[19,17,19,15],[19,20,19,18],[19,25,19,23],[20,4,20,2],[20,8,20,6,"enabled"],[20,15,20,13],[20,18,20,16],[20,22,20,20],[21,4,22,2,"setInterval"],[21,15,22,13],[21,16,22,14],[21,22,22,20],[22,6,23,4],[22,12,23,10,"diffMs"],[22,18,23,16],[22,21,23,19,"timer"],[22,26,23,24],[22,27,23,25,"getTimeMs"],[22,36,23,34],[22,37,23,35],[22,38,23,36],[23,6,25,4],[23,10,25,8,"triggered"],[23,19,25,17],[23,24,25,22],[23,29,25,27],[23,33,25,31,"diffMs"],[23,39,25,37],[23,42,25,40,"pollInterval"],[23,54,25,52],[23,57,25,55,"anrThreshold"],[23,69,25,67],[23,71,25,69],[24,8,26,6,"triggered"],[24,17,26,15],[24,20,26,18],[24,24,26,22],[25,8,27,6],[25,12,27,10,"enabled"],[25,19,27,17],[25,21,27,19],[26,10,28,8,"callback"],[26,18,28,16],[26,19,28,17],[26,20,28,18],[27,8,29,6],[28,6,30,4],[29,6,32,4],[29,10,32,8,"diffMs"],[29,16,32,14],[29,19,32,17,"pollInterval"],[29,31,32,29],[29,34,32,32,"anrThreshold"],[29,46,32,44],[29,48,32,46],[30,8,33,6,"triggered"],[30,17,33,15],[30,20,33,18],[30,25,33,23],[31,6,34,4],[32,4,35,2],[32,5,35,3],[32,7,35,5],[32,9,35,7],[32,10,35,8],[33,4,37,2],[33,11,37,9],[34,6,38,4,"poll"],[34,10,38,8],[34,12,38,10,"poll"],[34,13,38,10],[34,18,38,16],[35,8,39,6,"timer"],[35,13,39,11],[35,14,39,12,"reset"],[35,19,39,17],[35,20,39,18],[35,21,39,19],[36,6,40,4],[36,7,40,5],[37,6,41,4,"enabled"],[37,13,41,11],[37,15,41,14,"state"],[37,20,41,19],[37,24,41,24],[38,8,42,6,"enabled"],[38,15,42,13],[38,18,42,16,"state"],[38,23,42,21],[39,6,43,4],[40,4,44,2],[40,5,44,3],[41,2,45,0],[43,2,47,0],[45,2,49,0],[46,0,50,0],[47,0,51,0],[48,2,52,0],[48,11,52,9,"callFrameToStackFrame"],[48,32,52,30,"callFrameToStackFrame"],[48,33,53,2,"frame"],[48,38,53,7],[48,40,54,2,"url"],[48,43,54,5],[48,45,55,2,"getModuleFromFilename"],[48,66,55,23],[48,68,56,2],[49,4,57,2],[49,10,57,8,"filename"],[49,18,57,16],[49,21,57,19,"url"],[49,24,57,22],[49,27,57,25,"url"],[49,30,57,28],[49,31,57,29,"replace"],[49,38,57,36],[49,39,57,37],[49,51,57,49],[49,53,57,51],[49,55,57,53],[49,56,57,54],[49,59,57,57,"undefined"],[49,68,57,66],[51,4,59,2],[52,4,60,2],[52,10,60,8,"colno"],[52,15,60,13],[52,18,60,16,"frame"],[52,23,60,21],[52,24,60,22,"location"],[52,32,60,30],[52,33,60,31,"columnNumber"],[52,45,60,43],[52,48,60,46,"frame"],[52,53,60,51],[52,54,60,52,"location"],[52,62,60,60],[52,63,60,61,"columnNumber"],[52,75,60,73],[52,78,60,76],[52,79,60,77],[52,82,60,80,"undefined"],[52,91,60,89],[53,4,61,2],[53,10,61,8,"lineno"],[53,16,61,14],[53,19,61,17,"frame"],[53,24,61,22],[53,25,61,23,"location"],[53,33,61,31],[53,34,61,32,"lineNumber"],[53,44,61,42],[53,47,61,45,"frame"],[53,52,61,50],[53,53,61,51,"location"],[53,61,61,59],[53,62,61,60,"lineNumber"],[53,72,61,70],[53,75,61,73],[53,76,61,74],[53,79,61,77,"undefined"],[53,88,61,86],[54,4,63,2],[54,11,63,9],[54,15,63,9,"dropUndefinedKeys"],[54,40,63,26],[54,42,63,27],[55,6,64,4,"filename"],[55,14,64,12],[56,6,65,4,"module"],[56,12,65,10],[56,14,65,12,"getModuleFromFilename"],[56,35,65,33],[56,36,65,34,"filename"],[56,44,65,42],[56,45,65,43],[57,6,66,4,"function"],[57,14,66,12],[57,16,66,14,"frame"],[57,21,66,19],[57,22,66,20,"functionName"],[57,34,66,32],[57,38,66,36,"UNKNOWN_FUNCTION"],[57,66,66,52],[58,6,67,4,"colno"],[58,11,67,9],[59,6,68,4,"lineno"],[59,12,68,10],[60,6,69,4,"in_app"],[60,12,69,10],[60,14,69,12,"filename"],[60,22,69,20],[60,25,69,23],[60,29,69,23,"filenameIsInApp"],[60,60,69,38],[60,62,69,39,"filename"],[60,70,69,47],[60,71,69,48],[60,74,69,51,"undefined"],[61,4,70,2],[61,5,70,3],[61,6,70,4],[62,2,71,0],[63,0,71,1],[63,3]],"functionMap":{"names":["<global>","watchdogTimer","setInterval$argument_0","poll","enabled","callFrameToStackFrame"],"mappings":"AAA;ACW;cCU;GDa;UEG;KFE;aGC;KHE;CDE;AKO;CLmB"}},"type":"js/module"}]}