{"dependencies":[{"name":"../utils-hoist/object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"IWRGqGXR51VGNaoabCqwsNvBzK0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getMetricSummaryJsonForSpan = getMetricSummaryJsonForSpan;\n  exports.updateMetricSummaryOnSpan = updateMetricSummaryOnSpan;\n  var _object = require(_dependencyMap[0], \"../utils-hoist/object.js\");\n  /**\n   * key: bucketKey\n   * value: [exportKey, MetricSummary]\n   */\n\n  const METRICS_SPAN_FIELD = '_sentryMetrics';\n\n  /**\n   * Fetches the metric summary if it exists for the passed span\n   */\n  function getMetricSummaryJsonForSpan(span) {\n    const storage = span[METRICS_SPAN_FIELD];\n    if (!storage) {\n      return undefined;\n    }\n    const output = {};\n    for (const [, [exportKey, summary]] of storage) {\n      const arr = output[exportKey] || (output[exportKey] = []);\n      arr.push((0, _object.dropUndefinedKeys)(summary));\n    }\n    return output;\n  }\n\n  /**\n   * Updates the metric summary on a span.\n   */\n  function updateMetricSummaryOnSpan(span, metricType, sanitizedName, value, unit, tags, bucketKey) {\n    const existingStorage = span[METRICS_SPAN_FIELD];\n    const storage = existingStorage || (span[METRICS_SPAN_FIELD] = new Map());\n    const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n    const bucketItem = storage.get(bucketKey);\n    if (bucketItem) {\n      const [, summary] = bucketItem;\n      storage.set(bucketKey, [exportKey, {\n        min: Math.min(summary.min, value),\n        max: Math.max(summary.max, value),\n        count: summary.count += 1,\n        sum: summary.sum += value,\n        tags: summary.tags\n      }]);\n    } else {\n      storage.set(bucketKey, [exportKey, {\n        min: value,\n        max: value,\n        count: 1,\n        sum: value,\n        tags\n      }]);\n    }\n  }\n});","lineCount":58,"map":[[7,2,1,0],[7,6,1,0,"_object"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[13,8,8,6,"METRICS_SPAN_FIELD"],[13,26,8,24],[13,29,8,27],[13,45,8,43],[15,2,10,0],[16,0,11,0],[17,0,12,0],[18,2,13,0],[18,11,13,9,"getMetricSummaryJsonForSpan"],[18,38,13,36,"getMetricSummaryJsonForSpan"],[18,39,13,37,"span"],[18,43,13,41],[18,45,13,43],[19,4,14,2],[19,10,14,8,"storage"],[19,17,14,15],[19,20,14,19,"span"],[19,24,14,23],[19,25,14,26,"METRICS_SPAN_FIELD"],[19,43,14,44],[19,44,14,45],[20,4,16,2],[20,8,16,6],[20,9,16,7,"storage"],[20,16,16,14],[20,18,16,16],[21,6,17,4],[21,13,17,11,"undefined"],[21,22,17,20],[22,4,18,2],[23,4,19,2],[23,10,19,8,"output"],[23,16,19,14],[23,19,19,17],[23,20,19,18],[23,21,19,19],[24,4,21,2],[24,9,21,7],[24,15,21,13],[24,18,21,16],[24,19,21,17,"exportKey"],[24,28,21,26],[24,30,21,28,"summary"],[24,37,21,35],[24,38,21,36],[24,39,21,37],[24,43,21,41,"storage"],[24,50,21,48],[24,52,21,50],[25,6,22,4],[25,12,22,10,"arr"],[25,15,22,13],[25,18,22,16,"output"],[25,24,22,22],[25,25,22,23,"exportKey"],[25,34,22,32],[25,35,22,33],[25,40,22,38,"output"],[25,46,22,44],[25,47,22,45,"exportKey"],[25,56,22,54],[25,57,22,55],[25,60,22,58],[25,62,22,60],[25,63,22,61],[26,6,23,4,"arr"],[26,9,23,7],[26,10,23,8,"push"],[26,14,23,12],[26,15,23,13],[26,19,23,13,"dropUndefinedKeys"],[26,44,23,30],[26,46,23,31,"summary"],[26,53,23,38],[26,54,23,39],[26,55,23,40],[27,4,24,2],[28,4,26,2],[28,11,26,9,"output"],[28,17,26,15],[29,2,27,0],[31,2,29,0],[32,0,30,0],[33,0,31,0],[34,2,32,0],[34,11,32,9,"updateMetricSummaryOnSpan"],[34,36,32,34,"updateMetricSummaryOnSpan"],[34,37,33,2,"span"],[34,41,33,6],[34,43,34,2,"metricType"],[34,53,34,12],[34,55,35,2,"sanitizedName"],[34,68,35,15],[34,70,36,2,"value"],[34,75,36,7],[34,77,37,2,"unit"],[34,81,37,6],[34,83,38,2,"tags"],[34,87,38,6],[34,89,39,2,"bucketKey"],[34,98,39,11],[34,100,40,2],[35,4,41,2],[35,10,41,8,"existingStorage"],[35,25,41,23],[35,28,41,27,"span"],[35,32,41,31],[35,33,41,34,"METRICS_SPAN_FIELD"],[35,51,41,52],[35,52,41,53],[36,4,42,2],[36,10,42,8,"storage"],[36,17,42,15],[36,20,43,4,"existingStorage"],[36,35,43,19],[36,40,44,6,"span"],[36,44,44,10],[36,45,44,13,"METRICS_SPAN_FIELD"],[36,63,44,31],[36,64,44,32],[36,67,44,35],[36,71,44,39,"Map"],[36,74,44,42],[36,75,44,43],[36,76,44,44],[36,77,44,45],[37,4,46,2],[37,10,46,8,"exportKey"],[37,19,46,17],[37,22,46,20],[37,25,46,23,"metricType"],[37,35,46,33],[37,39,46,37,"sanitizedName"],[37,52,46,50],[37,56,46,54,"unit"],[37,60,46,58],[37,62,46,60],[38,4,47,2],[38,10,47,8,"bucketItem"],[38,20,47,18],[38,23,47,21,"storage"],[38,30,47,28],[38,31,47,29,"get"],[38,34,47,32],[38,35,47,33,"bucketKey"],[38,44,47,42],[38,45,47,43],[39,4,49,2],[39,8,49,6,"bucketItem"],[39,18,49,16],[39,20,49,18],[40,6,50,4],[40,12,50,10],[40,15,50,13,"summary"],[40,22,50,20],[40,23,50,21],[40,26,50,24,"bucketItem"],[40,36,50,34],[41,6,51,4,"storage"],[41,13,51,11],[41,14,51,12,"set"],[41,17,51,15],[41,18,51,16,"bucketKey"],[41,27,51,25],[41,29,51,27],[41,30,52,6,"exportKey"],[41,39,52,15],[41,41,53,6],[42,8,54,8,"min"],[42,11,54,11],[42,13,54,13,"Math"],[42,17,54,17],[42,18,54,18,"min"],[42,21,54,21],[42,22,54,22,"summary"],[42,29,54,29],[42,30,54,30,"min"],[42,33,54,33],[42,35,54,35,"value"],[42,40,54,40],[42,41,54,41],[43,8,55,8,"max"],[43,11,55,11],[43,13,55,13,"Math"],[43,17,55,17],[43,18,55,18,"max"],[43,21,55,21],[43,22,55,22,"summary"],[43,29,55,29],[43,30,55,30,"max"],[43,33,55,33],[43,35,55,35,"value"],[43,40,55,40],[43,41,55,41],[44,8,56,8,"count"],[44,13,56,13],[44,15,56,16,"summary"],[44,22,56,23],[44,23,56,24,"count"],[44,28,56,29],[44,32,56,33],[44,33,56,35],[45,8,57,8,"sum"],[45,11,57,11],[45,13,57,14,"summary"],[45,20,57,21],[45,21,57,22,"sum"],[45,24,57,25],[45,28,57,29,"value"],[45,33,57,35],[46,8,58,8,"tags"],[46,12,58,12],[46,14,58,14,"summary"],[46,21,58,21],[46,22,58,22,"tags"],[47,6,59,6],[47,7,59,7],[47,8,60,5],[47,9,60,6],[48,4,61,2],[48,5,61,3],[48,11,61,9],[49,6,62,4,"storage"],[49,13,62,11],[49,14,62,12,"set"],[49,17,62,15],[49,18,62,16,"bucketKey"],[49,27,62,25],[49,29,62,27],[49,30,63,6,"exportKey"],[49,39,63,15],[49,41,64,6],[50,8,65,8,"min"],[50,11,65,11],[50,13,65,13,"value"],[50,18,65,18],[51,8,66,8,"max"],[51,11,66,11],[51,13,66,13,"value"],[51,18,66,18],[52,8,67,8,"count"],[52,13,67,13],[52,15,67,15],[52,16,67,16],[53,8,68,8,"sum"],[53,11,68,11],[53,13,68,13,"value"],[53,18,68,18],[54,8,69,8,"tags"],[55,6,70,6],[55,7,70,7],[55,8,71,5],[55,9,71,6],[56,4,72,2],[57,2,73,0],[58,0,73,1],[58,3]],"functionMap":{"names":["<global>","getMetricSummaryJsonForSpan","updateMetricSummaryOnSpan"],"mappings":"AAA;ACY;CDc;AEK;CFyC"}},"type":"js/module"}]}