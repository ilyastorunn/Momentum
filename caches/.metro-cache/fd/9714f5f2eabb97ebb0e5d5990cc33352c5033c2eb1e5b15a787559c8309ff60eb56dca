{"dependencies":[{"name":"./lib/bindReporter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"yZXTUsWh1M46DyxIbZ88NUHRymg=","exportNames":["*"]}},{"name":"./lib/initMetric.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":49,"index":103}}],"key":"3h8m+kvAV2o3xN93IHHrmBqzs4s=","exportNames":["*"]}},{"name":"./lib/observe.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":43,"index":147}}],"key":"Cz2RoRvLyGQyofIDJmcgFo6dicM=","exportNames":["*"]}},{"name":"./lib/onHidden.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":148},"end":{"line":4,"column":45,"index":193}}],"key":"Me8dIXVCoQX50hAKyNiBvASIs+8=","exportNames":["*"]}},{"name":"./lib/runOnce.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":194},"end":{"line":5,"column":43,"index":237}}],"key":"bwPHkAH8Ixo/Lbt+Aw9KJe855Jk=","exportNames":["*"]}},{"name":"./onFCP.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":238},"end":{"line":6,"column":35,"index":273}}],"key":"9wYIWX7pl9yGISdpNXhM9vCUFQk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.onCLS = exports.CLSThresholds = void 0;\n  var _bindReporter = require(_dependencyMap[0], \"./lib/bindReporter.js\");\n  var _initMetric = require(_dependencyMap[1], \"./lib/initMetric.js\");\n  var _observe = require(_dependencyMap[2], \"./lib/observe.js\");\n  var _onHidden = require(_dependencyMap[3], \"./lib/onHidden.js\");\n  var _runOnce = require(_dependencyMap[4], \"./lib/runOnce.js\");\n  var _onFCP = require(_dependencyMap[5], \"./onFCP.js\");\n  /*\n   * Copyright 2020 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\n  const CLSThresholds = exports.CLSThresholds = [0.1, 0.25];\n\n  /**\n   * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n   * calls the `callback` function once the value is ready to be reported, along\n   * with all `layout-shift` performance entries that were used in the metric\n   * value calculation. The reported value is a `double` (corresponding to a\n   * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n   *\n   * If the `reportAllChanges` configuration option is set to `true`, the\n   * `callback` function will be called as soon as the value is initially\n   * determined as well as any time the value changes throughout the page\n   * lifespan.\n   *\n   * _**Important:** CLS should be continually monitored for changes throughout\n   * the entire lifespan of a pageâ€”including if the user returns to the page after\n   * it's been hidden/backgrounded. However, since browsers often [will not fire\n   * additional callbacks once the user has backgrounded a\n   * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n   * `callback` is always called when the page's visibility state changes to\n   * hidden. As a result, the `callback` function might be called multiple times\n   * during the same page load._\n   */\n  const onCLS = (onReport, opts = {}) => {\n    // Start monitoring FCP so we can only report CLS if FCP is also reported.\n    // Note: this is done to match the current behavior of CrUX.\n    (0, _onFCP.onFCP)((0, _runOnce.runOnce)(() => {\n      const metric = (0, _initMetric.initMetric)('CLS', 0);\n      let report;\n      let sessionValue = 0;\n      let sessionEntries = [];\n      const handleEntries = entries => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (sessionValue && firstSessionEntry && lastSessionEntry && entry.startTime - lastSessionEntry.startTime < 1000 && entry.startTime - firstSessionEntry.startTime < 5000) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n      const po = (0, _observe.observe)('layout-shift', handleEntries);\n      if (po) {\n        report = (0, _bindReporter.bindReporter)(onReport, metric, CLSThresholds, opts.reportAllChanges);\n        (0, _onHidden.onHidden)(() => {\n          handleEntries(po.takeRecords());\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }));\n  };\n  exports.onCLS = onCLS;\n});","lineCount":105,"map":[[6,2,1,0],[6,6,1,0,"_bindReporter"],[6,19,1,0],[6,22,1,0,"require"],[6,29,1,0],[6,30,1,0,"_dependencyMap"],[6,44,1,0],[7,2,2,0],[7,6,2,0,"_initMetric"],[7,17,2,0],[7,20,2,0,"require"],[7,27,2,0],[7,28,2,0,"_dependencyMap"],[7,42,2,0],[8,2,3,0],[8,6,3,0,"_observe"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,6,4,0,"_onHidden"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[10,6,5,0,"_runOnce"],[10,14,5,0],[10,17,5,0,"require"],[10,24,5,0],[10,25,5,0,"_dependencyMap"],[10,39,5,0],[11,2,6,0],[11,6,6,0,"_onFCP"],[11,12,6,0],[11,15,6,0,"require"],[11,22,6,0],[11,23,6,0,"_dependencyMap"],[11,37,6,0],[12,2,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[28,2,25,0],[29,2,26,0],[29,8,26,6,"CLSThresholds"],[29,21,26,19],[29,24,26,19,"exports"],[29,31,26,19],[29,32,26,19,"CLSThresholds"],[29,45,26,19],[29,48,26,22],[29,49,26,23],[29,52,26,26],[29,54,26,28],[29,58,26,32],[29,59,26,33],[31,2,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,0,34,0],[38,0,35,0],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,0,39,0],[43,0,40,0],[44,0,41,0],[45,0,42,0],[46,0,43,0],[47,0,44,0],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,2,49,0],[52,8,49,6,"onCLS"],[52,13,49,11],[52,16,49,14,"onCLS"],[52,17,49,15,"onReport"],[52,25,49,23],[52,27,49,25,"opts"],[52,31,49,29],[52,34,49,32],[52,35,49,33],[52,36,49,34],[52,41,49,39],[53,4,50,2],[54,4,51,2],[55,4,52,2],[55,8,52,2,"onFCP"],[55,20,52,7],[55,22,53,4],[55,26,53,4,"runOnce"],[55,42,53,11],[55,44,53,12],[55,50,53,18],[56,6,54,6],[56,12,54,12,"metric"],[56,18,54,18],[56,21,54,21],[56,25,54,21,"initMetric"],[56,47,54,31],[56,49,54,32],[56,54,54,37],[56,56,54,39],[56,57,54,40],[56,58,54,41],[57,6,55,6],[57,10,55,10,"report"],[57,16,55,16],[58,6,57,6],[58,10,57,10,"sessionValue"],[58,22,57,22],[58,25,57,25],[58,26,57,26],[59,6,58,6],[59,10,58,10,"sessionEntries"],[59,24,58,24],[59,27,58,27],[59,29,58,29],[60,6,60,6],[60,12,60,12,"handleEntries"],[60,25,60,25],[60,28,60,29,"entries"],[60,35,60,36],[60,39,60,41],[61,8,61,8,"entries"],[61,15,61,15],[61,16,61,16,"forEach"],[61,23,61,23],[61,24,61,24,"entry"],[61,29,61,29],[61,33,61,33],[62,10,62,10],[63,10,63,10],[63,14,63,14],[63,15,63,15,"entry"],[63,20,63,20],[63,21,63,21,"hadRecentInput"],[63,35,63,35],[63,37,63,37],[64,12,64,12],[64,18,64,18,"firstSessionEntry"],[64,35,64,35],[64,38,64,38,"sessionEntries"],[64,52,64,52],[64,53,64,53],[64,54,64,54],[64,55,64,55],[65,12,65,12],[65,18,65,18,"lastSessionEntry"],[65,34,65,34],[65,37,65,37,"sessionEntries"],[65,51,65,51],[65,52,65,52,"sessionEntries"],[65,66,65,66],[65,67,65,67,"length"],[65,73,65,73],[65,76,65,76],[65,77,65,77],[65,78,65,78],[67,12,67,12],[68,12,68,12],[69,12,69,12],[70,12,70,12],[71,12,71,12],[71,16,72,14,"sessionValue"],[71,28,72,26],[71,32,73,14,"firstSessionEntry"],[71,49,73,31],[71,53,74,14,"lastSessionEntry"],[71,69,74,30],[71,73,75,14,"entry"],[71,78,75,19],[71,79,75,20,"startTime"],[71,88,75,29],[71,91,75,32,"lastSessionEntry"],[71,107,75,48],[71,108,75,49,"startTime"],[71,117,75,58],[71,120,75,61],[71,124,75,65],[71,128,76,14,"entry"],[71,133,76,19],[71,134,76,20,"startTime"],[71,143,76,29],[71,146,76,32,"firstSessionEntry"],[71,163,76,49],[71,164,76,50,"startTime"],[71,173,76,59],[71,176,76,62],[71,180,76,66],[71,182,77,14],[72,14,78,14,"sessionValue"],[72,26,78,26],[72,30,78,30,"entry"],[72,35,78,35],[72,36,78,36,"value"],[72,41,78,41],[73,14,79,14,"sessionEntries"],[73,28,79,28],[73,29,79,29,"push"],[73,33,79,33],[73,34,79,34,"entry"],[73,39,79,39],[73,40,79,40],[74,12,80,12],[74,13,80,13],[74,19,80,19],[75,14,81,14,"sessionValue"],[75,26,81,26],[75,29,81,29,"entry"],[75,34,81,34],[75,35,81,35,"value"],[75,40,81,40],[76,14,82,14,"sessionEntries"],[76,28,82,28],[76,31,82,31],[76,32,82,32,"entry"],[76,37,82,37],[76,38,82,38],[77,12,83,12],[78,10,84,10],[79,8,85,8],[79,9,85,9],[79,10,85,10],[81,8,87,8],[82,8,88,8],[83,8,89,8],[83,12,89,12,"sessionValue"],[83,24,89,24],[83,27,89,27,"metric"],[83,33,89,33],[83,34,89,34,"value"],[83,39,89,39],[83,41,89,41],[84,10,90,10,"metric"],[84,16,90,16],[84,17,90,17,"value"],[84,22,90,22],[84,25,90,25,"sessionValue"],[84,37,90,37],[85,10,91,10,"metric"],[85,16,91,16],[85,17,91,17,"entries"],[85,24,91,24],[85,27,91,27,"sessionEntries"],[85,41,91,41],[86,10,92,10,"report"],[86,16,92,16],[86,17,92,17],[86,18,92,18],[87,8,93,8],[88,6,94,6],[88,7,94,7],[89,6,96,6],[89,12,96,12,"po"],[89,14,96,14],[89,17,96,17],[89,21,96,17,"observe"],[89,37,96,24],[89,39,96,25],[89,53,96,39],[89,55,96,41,"handleEntries"],[89,68,96,54],[89,69,96,55],[90,6,97,6],[90,10,97,10,"po"],[90,12,97,12],[90,14,97,14],[91,8,98,8,"report"],[91,14,98,14],[91,17,98,17],[91,21,98,17,"bindReporter"],[91,47,98,29],[91,49,98,30,"onReport"],[91,57,98,38],[91,59,98,40,"metric"],[91,65,98,46],[91,67,98,48,"CLSThresholds"],[91,80,98,61],[91,82,98,63,"opts"],[91,86,98,67],[91,87,98,68,"reportAllChanges"],[91,103,98,84],[91,104,98,85],[92,8,100,8],[92,12,100,8,"onHidden"],[92,30,100,16],[92,32,100,17],[92,38,100,23],[93,10,101,10,"handleEntries"],[93,23,101,23],[93,24,101,24,"po"],[93,26,101,26],[93,27,101,27,"takeRecords"],[93,38,101,38],[93,39,101,39],[93,40,101,41],[93,41,101,42],[94,10,102,10,"report"],[94,16,102,16],[94,17,102,17],[94,21,102,21],[94,22,102,22],[95,8,103,8],[95,9,103,9],[95,10,103,10],[97,8,105,8],[98,8,106,8],[99,8,107,8],[100,8,108,8,"setTimeout"],[100,18,108,18],[100,19,108,19,"report"],[100,25,108,25],[100,27,108,27],[100,28,108,28],[100,29,108,29],[101,6,109,6],[102,4,110,4],[102,5,110,5],[102,6,111,2],[102,7,111,3],[103,2,112,0],[103,3,112,1],[104,2,112,2,"exports"],[104,9,112,2],[104,10,112,2,"onCLS"],[104,15,112,2],[104,18,112,2,"onCLS"],[104,23,112,2],[105,0,112,2],[105,3]],"functionMap":{"names":["<global>","onCLS","runOnce$argument_0","handleEntries","entries.forEach$argument_0","onHidden$argument_0"],"mappings":"AAA;cCgD;YCI;4BCO;wBCC;SDwB;ODS;iBGM;SHG;KDO;CDE"}},"type":"js/module"}]}