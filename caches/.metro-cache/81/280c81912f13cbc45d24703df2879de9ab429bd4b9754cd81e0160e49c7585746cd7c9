{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.replayCanvasIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var NodeType;\n  (function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n  })(NodeType || (NodeType = {}));\n  function elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n      const className = el.classList[eIndex];\n      if (regex.test(className)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node) return -1;\n    if (node.nodeType !== node.ELEMENT_NODE) return -1;\n    if (distance > limit) return -1;\n    if (matchPredicate(node)) return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n  }\n  function createMatchPredicate(className, selector) {\n    return node => {\n      const el = node;\n      if (el === null) return false;\n      try {\n        if (className) {\n          if (typeof className === 'string') {\n            if (el.matches(`.${className}`)) return true;\n          } else if (elementClassMatchesRegex(el, className)) {\n            return true;\n          }\n        }\n        if (selector && el.matches(selector)) return true;\n        return false;\n      } catch (e2) {\n        return false;\n      }\n    };\n  }\n  const DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' + '\\r\\n' + 'now you can use replayer.getMirror() to access the mirror instance of a replayer,' + '\\r\\n' + 'or you can use record.mirror to access the mirror instance during recording.';\n  let _mirror = {\n    map: {},\n    getId() {\n      console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      return -1;\n    },\n    getNode() {\n      console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      return null;\n    },\n    removeNodeFromMap() {\n      console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n      console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      return false;\n    },\n    reset() {\n      console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    }\n  };\n  if (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n      get(target, prop, receiver) {\n        if (prop === 'map') {\n          console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        }\n        return Reflect.get(target, prop, receiver);\n      }\n    });\n  }\n  function hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked ? d : {\n      set(value) {\n        setTimeout(() => {\n          d.set.call(this, value);\n        }, 0);\n        if (original && original.set) {\n          original.set.call(this, value);\n        }\n      }\n    });\n    return () => hookSetter(target, key, original || {}, true);\n  }\n  function patch(source, name, replacement) {\n    try {\n      if (!(name in source)) {\n        return () => {};\n      }\n      const original = source[name];\n      const wrapped = replacement(original);\n      if (typeof wrapped === 'function') {\n        wrapped.prototype = wrapped.prototype || {};\n        Object.defineProperties(wrapped, {\n          __rrweb_original__: {\n            enumerable: false,\n            value: original\n          }\n        });\n      }\n      source[name] = wrapped;\n      return () => {\n        source[name] = original;\n      };\n    } catch (e2) {\n      return () => {};\n    }\n  }\n  if (!/[1-9][0-9]{12}/.test(Date.now().toString())) ;\n  function closestElementOfNode(node) {\n    if (!node) {\n      return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE ? node : node.parentElement;\n    return el;\n  }\n  function isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n      return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n      return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n      return false;\n    }\n    if (unblockSelector) {\n      unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n      return true;\n    }\n    return blockDistance < unblockDistance;\n  }\n  const cachedImplementations = {};\n  function getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n      return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n      try {\n        const sandbox = document.createElement('iframe');\n        sandbox.hidden = true;\n        document.head.appendChild(sandbox);\n        const contentWindow = sandbox.contentWindow;\n        if (contentWindow && contentWindow[name]) {\n          impl = contentWindow[name];\n        }\n        document.head.removeChild(sandbox);\n      } catch (e) {}\n    }\n    return cachedImplementations[name] = impl.bind(window);\n  }\n  function onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n  }\n  function setTimeout(...rest) {\n    return getImplementation('setTimeout')(...rest);\n  }\n  var CanvasContext = /* @__PURE__ */(CanvasContext2 => {\n    CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n    CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n    CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n    return CanvasContext2;\n  })(CanvasContext || {});\n  let errorHandler;\n  function registerErrorHandler(handler) {\n    errorHandler = handler;\n  }\n  const callbackWrapper = cb => {\n    if (!errorHandler) {\n      return cb;\n    }\n    const rrwebWrapped = (...rest) => {\n      try {\n        return cb(...rest);\n      } catch (error) {\n        if (errorHandler && errorHandler(error) === true) {\n          return () => {};\n        }\n        throw error;\n      }\n    };\n    return rrwebWrapped;\n  };\n\n  /*\n   * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n   * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n   * Released under MIT License\n   */\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  // Use a lookup table to find the index.\n  var lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n  var encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n      i,\n      len = bytes.length,\n      base64 = '';\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n  };\n  const canvasVarMap = new Map();\n  function variableListFor(ctx, ctor) {\n    let contextMap = canvasVarMap.get(ctx);\n    if (!contextMap) {\n      contextMap = new Map();\n      canvasVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n      contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n  }\n  const saveWebGLVar = (value, win, ctx) => {\n    if (!value || !(isInstanceOfWebGLObject(value, win) || typeof value === 'object')) return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n      index = list.length;\n      list.push(value);\n    }\n    return index;\n  };\n  function serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n      return value.map(arg => serializeArg(arg, win, ctx));\n    } else if (value === null) {\n      return value;\n    } else if (value instanceof Float32Array || value instanceof Float64Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Uint8Array || value instanceof Uint16Array || value instanceof Int16Array || value instanceof Int8Array || value instanceof Uint8ClampedArray) {\n      const name = value.constructor.name;\n      return {\n        rr_type: name,\n        args: [Object.values(value)]\n      };\n    } else if (value instanceof ArrayBuffer) {\n      const name = value.constructor.name;\n      const base64 = encode(value);\n      return {\n        rr_type: name,\n        base64\n      };\n    } else if (value instanceof DataView) {\n      const name = value.constructor.name;\n      return {\n        rr_type: name,\n        args: [serializeArg(value.buffer, win, ctx), value.byteOffset, value.byteLength]\n      };\n    } else if (value instanceof HTMLImageElement) {\n      const name = value.constructor.name;\n      const {\n        src\n      } = value;\n      return {\n        rr_type: name,\n        src\n      };\n    } else if (value instanceof HTMLCanvasElement) {\n      const name = 'HTMLImageElement';\n      const src = value.toDataURL();\n      return {\n        rr_type: name,\n        src\n      };\n    } else if (value instanceof ImageData) {\n      const name = value.constructor.name;\n      return {\n        rr_type: name,\n        args: [serializeArg(value.data, win, ctx), value.width, value.height]\n      };\n    } else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n      const name = value.constructor.name;\n      const index = saveWebGLVar(value, win, ctx);\n      return {\n        rr_type: name,\n        index: index\n      };\n    }\n    return value;\n  }\n  const serializeArgs = (args, win, ctx) => {\n    return args.map(arg => serializeArg(arg, win, ctx));\n  };\n  const isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = ['WebGLActiveInfo', 'WebGLBuffer', 'WebGLFramebuffer', 'WebGLProgram', 'WebGLRenderbuffer', 'WebGLShader', 'WebGLShaderPrecisionFormat', 'WebGLTexture', 'WebGLUniformLocation', 'WebGLVertexArrayObject', 'WebGLVertexArrayObjectOES'];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter(name => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find(name => value instanceof win[name]));\n  };\n  function initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n      try {\n        if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n          continue;\n        }\n        const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n          return function (...args) {\n            if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n              setTimeout(() => {\n                const recordArgs = serializeArgs(args, win, this);\n                cb(this.canvas, {\n                  type: CanvasContext['2D'],\n                  property: prop,\n                  args: recordArgs\n                });\n              }, 0);\n            }\n            return original.apply(this, args);\n          };\n        });\n        handlers.push(restoreHandler);\n      } catch (e) {\n        const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n          set(v) {\n            cb(this.canvas, {\n              type: CanvasContext['2D'],\n              property: prop,\n              args: [v],\n              setter: true\n            });\n          }\n        });\n        handlers.push(hookHandler);\n      }\n    }\n    return () => {\n      handlers.forEach(h => h());\n    };\n  }\n  function getNormalizedContextName(contextType) {\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\n  }\n  function initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n    const handlers = [];\n    try {\n      const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n        return function (contextType, ...args) {\n          if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n            const ctxName = getNormalizedContextName(contextType);\n            if (!('__context' in this)) this.__context = ctxName;\n            if (setPreserveDrawingBufferToTrue && ['webgl', 'webgl2'].includes(ctxName)) {\n              if (args[0] && typeof args[0] === 'object') {\n                const contextAttributes = args[0];\n                if (!contextAttributes.preserveDrawingBuffer) {\n                  contextAttributes.preserveDrawingBuffer = true;\n                }\n              } else {\n                args.splice(0, 1, {\n                  preserveDrawingBuffer: true\n                });\n              }\n            }\n          }\n          return original.apply(this, [contextType, ...args]);\n        };\n      });\n      handlers.push(restoreHandler);\n    } catch (e) {\n      console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n      handlers.forEach(h => h());\n    };\n  }\n  function patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n      if (['isContextLost', 'canvas', 'drawingBufferWidth', 'drawingBufferHeight'].includes(prop)) {\n        continue;\n      }\n      try {\n        if (typeof prototype[prop] !== 'function') {\n          continue;\n        }\n        const restoreHandler = patch(prototype, prop, function (original) {\n          return function (...args) {\n            const result = original.apply(this, args);\n            saveWebGLVar(result, win, this);\n            if ('tagName' in this.canvas && !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n              const recordArgs = serializeArgs(args, win, this);\n              const mutation = {\n                type,\n                property: prop,\n                args: recordArgs\n              };\n              cb(this.canvas, mutation);\n            }\n            return result;\n          };\n        });\n        handlers.push(restoreHandler);\n      } catch (e) {\n        const hookHandler = hookSetter(prototype, prop, {\n          set(v) {\n            cb(this.canvas, {\n              type,\n              property: prop,\n              args: [v],\n              setter: true\n            });\n          }\n        });\n        handlers.push(hookHandler);\n      }\n    }\n    return handlers;\n  }\n  function initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n      handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n      handlers.forEach(h => h());\n    };\n  }\n  var r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n  function t() {\n    const t = new Blob([r]);\n    return URL.createObjectURL(t);\n  }\n  class CanvasManager {\n    reset() {\n      this.pendingCanvasMutations.clear();\n      this.restoreHandlers.forEach(handler => {\n        try {\n          handler();\n        } catch (e) {}\n      });\n      this.restoreHandlers = [];\n      this.windowsSet = new WeakSet();\n      this.windows = [];\n      this.shadowDoms = new Set();\n      (0, _core._optionalChain)([this, 'access', _ => _.worker, 'optionalAccess', _2 => _2.terminate, 'call', _3 => _3()]);\n      this.worker = null;\n      this.snapshotInProgressMap = new Map();\n    }\n    freeze() {\n      this.frozen = true;\n    }\n    unfreeze() {\n      this.frozen = false;\n    }\n    lock() {\n      this.locked = true;\n    }\n    unlock() {\n      this.locked = false;\n    }\n    constructor(options) {\n      this.pendingCanvasMutations = new Map();\n      this.rafStamps = {\n        latestId: 0,\n        invokeId: null\n      };\n      this.shadowDoms = new Set();\n      this.windowsSet = new WeakSet();\n      this.windows = [];\n      this.restoreHandlers = [];\n      this.frozen = false;\n      this.locked = false;\n      this.snapshotInProgressMap = new Map();\n      this.worker = null;\n      this.processMutation = (target, mutation) => {\n        const newFrame = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;\n        if (newFrame || !this.rafStamps.invokeId) this.rafStamps.invokeId = this.rafStamps.latestId;\n        if (!this.pendingCanvasMutations.has(target)) {\n          this.pendingCanvasMutations.set(target, []);\n        }\n        this.pendingCanvasMutations.get(target).push(mutation);\n      };\n      const {\n        sampling = 'all',\n        win,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maxCanvasSize,\n        recordCanvas,\n        dataURLOptions,\n        errorHandler\n      } = options;\n      this.mutationCb = options.mutationCb;\n      this.mirror = options.mirror;\n      this.options = options;\n      if (errorHandler) {\n        registerErrorHandler(errorHandler);\n      }\n      if (recordCanvas && typeof sampling === 'number' || options.enableManualSnapshot) {\n        this.worker = this.initFPSWorker();\n      }\n      this.addWindow(win);\n      if (options.enableManualSnapshot) {\n        return;\n      }\n      callbackWrapper(() => {\n        if (recordCanvas && sampling === 'all') {\n          this.startRAFTimestamping();\n          this.startPendingCanvasMutationFlusher();\n        }\n        if (recordCanvas && typeof sampling === 'number') {\n          this.initCanvasFPSObserver(sampling, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\n            dataURLOptions\n          });\n        }\n      })();\n    }\n    addWindow(win) {\n      const {\n        sampling = 'all',\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        recordCanvas,\n        enableManualSnapshot\n      } = this.options;\n      if (this.windowsSet.has(win)) return;\n      if (enableManualSnapshot) {\n        this.windowsSet.add(win);\n        this.windows.push(new WeakRef(win));\n        return;\n      }\n      callbackWrapper(() => {\n        if (recordCanvas && sampling === 'all') {\n          this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\n        }\n        if (recordCanvas && typeof sampling === 'number') {\n          const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\n          this.restoreHandlers.push(() => {\n            canvasContextReset();\n          });\n        }\n      })();\n      this.windowsSet.add(win);\n      this.windows.push(new WeakRef(win));\n    }\n    addShadowRoot(shadowRoot) {\n      this.shadowDoms.add(new WeakRef(shadowRoot));\n    }\n    resetShadowRoots() {\n      this.shadowDoms = new Set();\n    }\n    initFPSWorker() {\n      const worker = new Worker(t());\n      worker.onmessage = e => {\n        const data = e.data;\n        const {\n          id\n        } = data;\n        this.snapshotInProgressMap.set(id, false);\n        if (!('base64' in data)) return;\n        const {\n          base64,\n          type,\n          width,\n          height\n        } = data;\n        this.mutationCb({\n          id,\n          type: CanvasContext['2D'],\n          commands: [{\n            property: 'clearRect',\n            args: [0, 0, width, height]\n          }, {\n            property: 'drawImage',\n            args: [{\n              rr_type: 'ImageBitmap',\n              args: [{\n                rr_type: 'Blob',\n                data: [{\n                  rr_type: 'ArrayBuffer',\n                  base64\n                }],\n                type\n              }]\n            }, 0, 0, width, height]\n          }]\n        });\n      };\n      return worker;\n    }\n    initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n      const rafId = this.takeSnapshot(false, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\n      this.restoreHandlers.push(() => {\n        cancelAnimationFrame(rafId);\n      });\n    }\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n      const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\n      const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\n      const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n      this.restoreHandlers.push(() => {\n        canvasContextReset();\n        canvas2DReset();\n        canvasWebGL1and2Reset();\n      });\n    }\n    snapshot(canvasElement) {\n      const {\n        options\n      } = this;\n      const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\n      this.restoreHandlers.push(() => {\n        cancelAnimationFrame(rafId);\n      });\n    }\n    takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n      const timeBetweenSnapshots = 1000 / fps;\n      let lastSnapshotTime = 0;\n      let rafId;\n      const getCanvas = canvasElement => {\n        if (canvasElement) {\n          return [canvasElement];\n        }\n        const matchedCanvas = [];\n        const searchCanvas = root => {\n          root.querySelectorAll('canvas').forEach(canvas => {\n            if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector)) {\n              matchedCanvas.push(canvas);\n            }\n          });\n        };\n        for (const item of this.windows) {\n          const window = item.deref();\n          if (window) {\n            searchCanvas(window.document);\n          }\n        }\n        for (const item of this.shadowDoms) {\n          const shadowRoot = item.deref();\n          if (shadowRoot) {\n            searchCanvas(shadowRoot);\n          }\n        }\n        return matchedCanvas;\n      };\n      const takeCanvasSnapshots = timestamp => {\n        if (!this.windows.length) {\n          return;\n        }\n        if (lastSnapshotTime && timestamp - lastSnapshotTime < timeBetweenSnapshots) {\n          rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n          return;\n        }\n        lastSnapshotTime = timestamp;\n        getCanvas(canvasElement).forEach(canvas => {\n          if (!this.mirror.hasNode(canvas)) {\n            return;\n          }\n          const id = this.mirror.getId(canvas);\n          if (this.snapshotInProgressMap.get(id)) return;\n          if (!canvas.width || !canvas.height) return;\n          this.snapshotInProgressMap.set(id, true);\n          if (!isManualSnapshot && ['webgl', 'webgl2'].includes(canvas.__context)) {\n            const context = canvas.getContext(canvas.__context);\n            if ((0, _core._optionalChain)([context, 'optionalAccess', _4 => _4.getContextAttributes, 'call', _5 => _5(), 'optionalAccess', _6 => _6.preserveDrawingBuffer]) === false) {\n              context.clear(context.COLOR_BUFFER_BIT);\n            }\n          }\n          createImageBitmap(canvas).then(bitmap => {\n            (0, _core._optionalChain)([this, 'access', _7 => _7.worker, 'optionalAccess', _8 => _8.postMessage, 'call', _9 => _9({\n              id,\n              bitmap,\n              width: canvas.width,\n              height: canvas.height,\n              dataURLOptions,\n              maxCanvasSize\n            }, [bitmap])]);\n          }).catch(error => {\n            callbackWrapper(() => {\n              throw error;\n            })();\n          });\n        });\n        if (!isManualSnapshot) {\n          rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        }\n      };\n      rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n      return rafId;\n    }\n    startPendingCanvasMutationFlusher() {\n      onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n      const setLatestRAFTimestamp = timestamp => {\n        this.rafStamps.latestId = timestamp;\n        onRequestAnimationFrame(setLatestRAFTimestamp);\n      };\n      onRequestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n      this.pendingCanvasMutations.forEach((values, canvas) => {\n        const id = this.mirror.getId(canvas);\n        this.flushPendingCanvasMutationFor(canvas, id);\n      });\n      onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n      if (this.frozen || this.locked) {\n        return;\n      }\n      const valuesWithType = this.pendingCanvasMutations.get(canvas);\n      if (!valuesWithType || id === -1) return;\n      const values = valuesWithType.map(value => {\n        const {\n          type,\n          ...rest\n        } = value;\n        return rest;\n      });\n      const {\n        type\n      } = valuesWithType[0];\n      this.mutationCb({\n        id,\n        type,\n        commands: values\n      });\n      this.pendingCanvasMutations.delete(canvas);\n    }\n  }\n  const CANVAS_QUALITY = {\n    low: {\n      sampling: {\n        canvas: 1\n      },\n      dataURLOptions: {\n        type: 'image/webp',\n        quality: 0.25\n      }\n    },\n    medium: {\n      sampling: {\n        canvas: 2\n      },\n      dataURLOptions: {\n        type: 'image/webp',\n        quality: 0.4\n      }\n    },\n    high: {\n      sampling: {\n        canvas: 4\n      },\n      dataURLOptions: {\n        type: 'image/webp',\n        quality: 0.5\n      }\n    }\n  };\n  const INTEGRATION_NAME = 'ReplayCanvas';\n  const DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n  /** Exported only for type safe tests. */\n  const _replayCanvasIntegration = (options = {}) => {\n    const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n    const _canvasOptions = {\n      quality: options.quality || 'medium',\n      enableManualSnapshot: options.enableManualSnapshot,\n      maxCanvasSize: [maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE, maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE]\n    };\n    let canvasManagerResolve;\n    const _canvasManager = new Promise(resolve => canvasManagerResolve = resolve);\n    return {\n      name: INTEGRATION_NAME,\n      getOptions() {\n        const {\n          quality,\n          enableManualSnapshot,\n          maxCanvasSize\n        } = _canvasOptions;\n        return {\n          enableManualSnapshot,\n          recordCanvas: true,\n          getCanvasManager: getCanvasManagerOptions => {\n            const manager = new CanvasManager({\n              ...getCanvasManagerOptions,\n              enableManualSnapshot,\n              maxCanvasSize,\n              errorHandler: err => {\n                try {\n                  if (typeof err === 'object') {\n                    err.__rrweb__ = true;\n                  }\n                } catch (error) {\n                  // ignore errors here\n                  // this can happen if the error is frozen or does not allow mutation for other reasons\n                }\n              }\n            });\n            canvasManagerResolve(manager);\n            return manager;\n          },\n          ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium)\n        };\n      },\n      async snapshot(canvasElement) {\n        const canvasManager = await _canvasManager;\n        canvasManager.snapshot(canvasElement);\n      }\n    };\n  };\n\n  /**\n   * Add this in addition to `replayIntegration()` to enable canvas recording.\n   */\n  const replayCanvasIntegration = exports.replayCanvasIntegration = (0, _core.defineIntegration)(_replayCanvasIntegration);\n});","lineCount":845,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,4,0],[7,6,4,4,"NodeType"],[7,14,4,12],[8,2,5,0],[8,3,5,1],[8,13,5,11,"NodeType"],[8,21,5,19],[8,23,5,21],[9,4,6,4,"NodeType"],[9,12,6,12],[9,13,6,13,"NodeType"],[9,21,6,21],[9,22,6,22],[9,32,6,32],[9,33,6,33],[9,36,6,36],[9,37,6,37],[9,38,6,38],[9,41,6,41],[9,51,6,51],[10,4,7,4,"NodeType"],[10,12,7,12],[10,13,7,13,"NodeType"],[10,21,7,21],[10,22,7,22],[10,36,7,36],[10,37,7,37],[10,40,7,40],[10,41,7,41],[10,42,7,42],[10,45,7,45],[10,59,7,59],[11,4,8,4,"NodeType"],[11,12,8,12],[11,13,8,13,"NodeType"],[11,21,8,21],[11,22,8,22],[11,31,8,31],[11,32,8,32],[11,35,8,35],[11,36,8,36],[11,37,8,37],[11,40,8,40],[11,49,8,49],[12,4,9,4,"NodeType"],[12,12,9,12],[12,13,9,13,"NodeType"],[12,21,9,21],[12,22,9,22],[12,28,9,28],[12,29,9,29],[12,32,9,32],[12,33,9,33],[12,34,9,34],[12,37,9,37],[12,43,9,43],[13,4,10,4,"NodeType"],[13,12,10,12],[13,13,10,13,"NodeType"],[13,21,10,21],[13,22,10,22],[13,29,10,29],[13,30,10,30],[13,33,10,33],[13,34,10,34],[13,35,10,35],[13,38,10,38],[13,45,10,45],[14,4,11,4,"NodeType"],[14,12,11,12],[14,13,11,13,"NodeType"],[14,21,11,21],[14,22,11,22],[14,31,11,31],[14,32,11,32],[14,35,11,35],[14,36,11,36],[14,37,11,37],[14,40,11,40],[14,49,11,49],[15,2,12,0],[15,3,12,1],[15,5,12,3,"NodeType"],[15,13,12,11],[15,18,12,16,"NodeType"],[15,26,12,24],[15,29,12,27],[15,30,12,28],[15,31,12,29],[15,32,12,30],[15,33,12,31],[16,2,13,0],[16,11,13,9,"elementClassMatchesRegex"],[16,35,13,33,"elementClassMatchesRegex"],[16,36,13,34,"el"],[16,38,13,36],[16,40,13,38,"regex"],[16,45,13,43],[16,47,13,45],[17,4,14,4],[17,9,14,9],[17,13,14,13,"eIndex"],[17,19,14,19],[17,22,14,22,"el"],[17,24,14,24],[17,25,14,25,"classList"],[17,34,14,34],[17,35,14,35,"length"],[17,41,14,41],[17,43,14,43,"eIndex"],[17,49,14,49],[17,51,14,51],[17,54,14,54],[18,6,15,8],[18,12,15,14,"className"],[18,21,15,23],[18,24,15,26,"el"],[18,26,15,28],[18,27,15,29,"classList"],[18,36,15,38],[18,37,15,39,"eIndex"],[18,43,15,45],[18,44,15,46],[19,6,16,8],[19,10,16,12,"regex"],[19,15,16,17],[19,16,16,18,"test"],[19,20,16,22],[19,21,16,23,"className"],[19,30,16,32],[19,31,16,33],[19,33,16,35],[20,8,17,12],[20,15,17,19],[20,19,17,23],[21,6,18,8],[22,4,19,4],[23,4,20,4],[23,11,20,11],[23,16,20,16],[24,2,21,0],[25,2,22,0],[25,11,22,9,"distanceToMatch"],[25,26,22,24,"distanceToMatch"],[25,27,22,25,"node"],[25,31,22,29],[25,33,22,31,"matchPredicate"],[25,47,22,45],[25,49,22,47,"limit"],[25,54,22,52],[25,57,22,55,"Infinity"],[25,65,22,63],[25,67,22,65,"distance"],[25,75,22,73],[25,78,22,76],[25,79,22,77],[25,81,22,79],[26,4,23,4],[26,8,23,8],[26,9,23,9,"node"],[26,13,23,13],[26,15,24,8],[26,22,24,15],[26,23,24,16],[26,24,24,17],[27,4,25,4],[27,8,25,8,"node"],[27,12,25,12],[27,13,25,13,"nodeType"],[27,21,25,21],[27,26,25,26,"node"],[27,30,25,30],[27,31,25,31,"ELEMENT_NODE"],[27,43,25,43],[27,45,26,8],[27,52,26,15],[27,53,26,16],[27,54,26,17],[28,4,27,4],[28,8,27,8,"distance"],[28,16,27,16],[28,19,27,19,"limit"],[28,24,27,24],[28,26,28,8],[28,33,28,15],[28,34,28,16],[28,35,28,17],[29,4,29,4],[29,8,29,8,"matchPredicate"],[29,22,29,22],[29,23,29,23,"node"],[29,27,29,27],[29,28,29,28],[29,30,30,8],[29,37,30,15,"distance"],[29,45,30,23],[30,4,31,4],[30,11,31,11,"distanceToMatch"],[30,26,31,26],[30,27,31,27,"node"],[30,31,31,31],[30,32,31,32,"parentNode"],[30,42,31,42],[30,44,31,44,"matchPredicate"],[30,58,31,58],[30,60,31,60,"limit"],[30,65,31,65],[30,67,31,67,"distance"],[30,75,31,75],[30,78,31,78],[30,79,31,79],[30,80,31,80],[31,2,32,0],[32,2,33,0],[32,11,33,9,"createMatchPredicate"],[32,31,33,29,"createMatchPredicate"],[32,32,33,30,"className"],[32,41,33,39],[32,43,33,41,"selector"],[32,51,33,49],[32,53,33,51],[33,4,34,4],[33,11,34,12,"node"],[33,15,34,16],[33,19,34,21],[34,6,35,8],[34,12,35,14,"el"],[34,14,35,16],[34,17,35,19,"node"],[34,21,35,23],[35,6,36,8],[35,10,36,12,"el"],[35,12,36,14],[35,17,36,19],[35,21,36,23],[35,23,37,12],[35,30,37,19],[35,35,37,24],[36,6,38,8],[36,10,38,12],[37,8,39,12],[37,12,39,16,"className"],[37,21,39,25],[37,23,39,27],[38,10,40,16],[38,14,40,20],[38,21,40,27,"className"],[38,30,40,36],[38,35,40,41],[38,43,40,49],[38,45,40,51],[39,12,41,20],[39,16,41,24,"el"],[39,18,41,26],[39,19,41,27,"matches"],[39,26,41,34],[39,27,41,35],[39,31,41,39,"className"],[39,40,41,48],[39,42,41,50],[39,43,41,51],[39,45,42,24],[39,52,42,31],[39,56,42,35],[40,10,43,16],[40,11,43,17],[40,17,44,21],[40,21,44,25,"elementClassMatchesRegex"],[40,45,44,49],[40,46,44,50,"el"],[40,48,44,52],[40,50,44,54,"className"],[40,59,44,63],[40,60,44,64],[40,62,44,66],[41,12,45,20],[41,19,45,27],[41,23,45,31],[42,10,46,16],[43,8,47,12],[44,8,48,12],[44,12,48,16,"selector"],[44,20,48,24],[44,24,48,28,"el"],[44,26,48,30],[44,27,48,31,"matches"],[44,34,48,38],[44,35,48,39,"selector"],[44,43,48,47],[44,44,48,48],[44,46,49,16],[44,53,49,23],[44,57,49,27],[45,8,50,12],[45,15,50,19],[45,20,50,24],[46,6,51,8],[46,7,51,9],[46,8,52,8],[46,15,52,15,"e2"],[46,17,52,17],[46,19,52,19],[47,8,53,12],[47,15,53,19],[47,20,53,24],[48,6,54,8],[49,4,55,4],[49,5,55,5],[50,2,56,0],[51,2,58,0],[51,8,58,6,"DEPARTED_MIRROR_ACCESS_WARNING"],[51,38,58,36],[51,41,58,39],[51,95,58,93],[51,98,59,4],[51,104,59,10],[51,107,60,4],[51,190,60,87],[51,193,61,4],[51,199,61,10],[51,202,62,4],[51,280,62,82],[52,2,63,0],[52,6,63,4,"_mirror"],[52,13,63,11],[52,16,63,14],[53,4,64,4,"map"],[53,7,64,7],[53,9,64,9],[53,10,64,10],[53,11,64,11],[54,4,65,4,"getId"],[54,9,65,9,"getId"],[54,10,65,9],[54,12,65,12],[55,6,66,8,"console"],[55,13,66,15],[55,14,66,16,"error"],[55,19,66,21],[55,20,66,22,"DEPARTED_MIRROR_ACCESS_WARNING"],[55,50,66,52],[55,51,66,53],[56,6,67,8],[56,13,67,15],[56,14,67,16],[56,15,67,17],[57,4,68,4],[57,5,68,5],[58,4,69,4,"getNode"],[58,11,69,11,"getNode"],[58,12,69,11],[58,14,69,14],[59,6,70,8,"console"],[59,13,70,15],[59,14,70,16,"error"],[59,19,70,21],[59,20,70,22,"DEPARTED_MIRROR_ACCESS_WARNING"],[59,50,70,52],[59,51,70,53],[60,6,71,8],[60,13,71,15],[60,17,71,19],[61,4,72,4],[61,5,72,5],[62,4,73,4,"removeNodeFromMap"],[62,21,73,21,"removeNodeFromMap"],[62,22,73,21],[62,24,73,24],[63,6,74,8,"console"],[63,13,74,15],[63,14,74,16,"error"],[63,19,74,21],[63,20,74,22,"DEPARTED_MIRROR_ACCESS_WARNING"],[63,50,74,52],[63,51,74,53],[64,4,75,4],[64,5,75,5],[65,4,76,4,"has"],[65,7,76,7,"has"],[65,8,76,7],[65,10,76,10],[66,6,77,8,"console"],[66,13,77,15],[66,14,77,16,"error"],[66,19,77,21],[66,20,77,22,"DEPARTED_MIRROR_ACCESS_WARNING"],[66,50,77,52],[66,51,77,53],[67,6,78,8],[67,13,78,15],[67,18,78,20],[68,4,79,4],[68,5,79,5],[69,4,80,4,"reset"],[69,9,80,9,"reset"],[69,10,80,9],[69,12,80,12],[70,6,81,8,"console"],[70,13,81,15],[70,14,81,16,"error"],[70,19,81,21],[70,20,81,22,"DEPARTED_MIRROR_ACCESS_WARNING"],[70,50,81,52],[70,51,81,53],[71,4,82,4],[72,2,83,0],[72,3,83,1],[73,2,84,0],[73,6,84,4],[73,13,84,11,"window"],[73,19,84,17],[73,24,84,22],[73,35,84,33],[73,39,84,37,"window"],[73,45,84,43],[73,46,84,44,"Proxy"],[73,51,84,49],[73,55,84,53,"window"],[73,61,84,59],[73,62,84,60,"Reflect"],[73,69,84,67],[73,71,84,69],[74,4,85,4,"_mirror"],[74,11,85,11],[74,14,85,14],[74,18,85,18,"Proxy"],[74,23,85,23],[74,24,85,24,"_mirror"],[74,31,85,31],[74,33,85,33],[75,6,86,8,"get"],[75,9,86,11,"get"],[75,10,86,12,"target"],[75,16,86,18],[75,18,86,20,"prop"],[75,22,86,24],[75,24,86,26,"receiver"],[75,32,86,34],[75,34,86,36],[76,8,87,12],[76,12,87,16,"prop"],[76,16,87,20],[76,21,87,25],[76,26,87,30],[76,28,87,32],[77,10,88,16,"console"],[77,17,88,23],[77,18,88,24,"error"],[77,23,88,29],[77,24,88,30,"DEPARTED_MIRROR_ACCESS_WARNING"],[77,54,88,60],[77,55,88,61],[78,8,89,12],[79,8,90,12],[79,15,90,19,"Reflect"],[79,22,90,26],[79,23,90,27,"get"],[79,26,90,30],[79,27,90,31,"target"],[79,33,90,37],[79,35,90,39,"prop"],[79,39,90,43],[79,41,90,45,"receiver"],[79,49,90,53],[79,50,90,54],[80,6,91,8],[81,4,92,4],[81,5,92,5],[81,6,92,6],[82,2,93,0],[83,2,94,0],[83,11,94,9,"hookSetter"],[83,21,94,19,"hookSetter"],[83,22,94,20,"target"],[83,28,94,26],[83,30,94,28,"key"],[83,33,94,31],[83,35,94,33,"d"],[83,36,94,34],[83,38,94,36,"isRevoked"],[83,47,94,45],[83,49,94,47,"win"],[83,52,94,50],[83,55,94,53,"window"],[83,61,94,59],[83,63,94,61],[84,4,95,4],[84,10,95,10,"original"],[84,18,95,18],[84,21,95,21,"win"],[84,24,95,24],[84,25,95,25,"Object"],[84,31,95,31],[84,32,95,32,"getOwnPropertyDescriptor"],[84,56,95,56],[84,57,95,57,"target"],[84,63,95,63],[84,65,95,65,"key"],[84,68,95,68],[84,69,95,69],[85,4,96,4,"win"],[85,7,96,7],[85,8,96,8,"Object"],[85,14,96,14],[85,15,96,15,"defineProperty"],[85,29,96,29],[85,30,96,30,"target"],[85,36,96,36],[85,38,96,38,"key"],[85,41,96,41],[85,43,96,43,"isRevoked"],[85,52,96,52],[85,55,97,10,"d"],[85,56,97,11],[85,59,98,10],[86,6,99,12,"set"],[86,9,99,15,"set"],[86,10,99,16,"value"],[86,15,99,21],[86,17,99,23],[87,8,100,16,"setTimeout"],[87,18,100,26],[87,19,100,27],[87,25,100,33],[88,10,101,20,"d"],[88,11,101,21],[88,12,101,22,"set"],[88,15,101,25],[88,16,101,26,"call"],[88,20,101,30],[88,21,101,31],[88,25,101,35],[88,27,101,37,"value"],[88,32,101,42],[88,33,101,43],[89,8,102,16],[89,9,102,17],[89,11,102,19],[89,12,102,20],[89,13,102,21],[90,8,103,16],[90,12,103,20,"original"],[90,20,103,28],[90,24,103,32,"original"],[90,32,103,40],[90,33,103,41,"set"],[90,36,103,44],[90,38,103,46],[91,10,104,20,"original"],[91,18,104,28],[91,19,104,29,"set"],[91,22,104,32],[91,23,104,33,"call"],[91,27,104,37],[91,28,104,38],[91,32,104,42],[91,34,104,44,"value"],[91,39,104,49],[91,40,104,50],[92,8,105,16],[93,6,106,12],[94,4,107,8],[94,5,107,9],[94,6,107,10],[95,4,108,4],[95,11,108,11],[95,17,108,17,"hookSetter"],[95,27,108,27],[95,28,108,28,"target"],[95,34,108,34],[95,36,108,36,"key"],[95,39,108,39],[95,41,108,41,"original"],[95,49,108,49],[95,53,108,53],[95,54,108,54],[95,55,108,55],[95,57,108,57],[95,61,108,61],[95,62,108,62],[96,2,109,0],[97,2,110,0],[97,11,110,9,"patch"],[97,16,110,14,"patch"],[97,17,110,15,"source"],[97,23,110,21],[97,25,110,23,"name"],[97,29,110,27],[97,31,110,29,"replacement"],[97,42,110,40],[97,44,110,42],[98,4,111,4],[98,8,111,8],[99,6,112,8],[99,10,112,12],[99,12,112,14,"name"],[99,16,112,18],[99,20,112,22,"source"],[99,26,112,28],[99,27,112,29],[99,29,112,31],[100,8,113,12],[100,15,113,19],[100,21,113,25],[100,22,114,12],[100,23,114,13],[101,6,115,8],[102,6,116,8],[102,12,116,14,"original"],[102,20,116,22],[102,23,116,25,"source"],[102,29,116,31],[102,30,116,32,"name"],[102,34,116,36],[102,35,116,37],[103,6,117,8],[103,12,117,14,"wrapped"],[103,19,117,21],[103,22,117,24,"replacement"],[103,33,117,35],[103,34,117,36,"original"],[103,42,117,44],[103,43,117,45],[104,6,118,8],[104,10,118,12],[104,17,118,19,"wrapped"],[104,24,118,26],[104,29,118,31],[104,39,118,41],[104,41,118,43],[105,8,119,12,"wrapped"],[105,15,119,19],[105,16,119,20,"prototype"],[105,25,119,29],[105,28,119,32,"wrapped"],[105,35,119,39],[105,36,119,40,"prototype"],[105,45,119,49],[105,49,119,53],[105,50,119,54],[105,51,119,55],[106,8,120,12,"Object"],[106,14,120,18],[106,15,120,19,"defineProperties"],[106,31,120,35],[106,32,120,36,"wrapped"],[106,39,120,43],[106,41,120,45],[107,10,121,16,"__rrweb_original__"],[107,28,121,34],[107,30,121,36],[108,12,122,20,"enumerable"],[108,22,122,30],[108,24,122,32],[108,29,122,37],[109,12,123,20,"value"],[109,17,123,25],[109,19,123,27,"original"],[110,10,124,16],[111,8,125,12],[111,9,125,13],[111,10,125,14],[112,6,126,8],[113,6,127,8,"source"],[113,12,127,14],[113,13,127,15,"name"],[113,17,127,19],[113,18,127,20],[113,21,127,23,"wrapped"],[113,28,127,30],[114,6,128,8],[114,13,128,15],[114,19,128,21],[115,8,129,12,"source"],[115,14,129,18],[115,15,129,19,"name"],[115,19,129,23],[115,20,129,24],[115,23,129,27,"original"],[115,31,129,35],[116,6,130,8],[116,7,130,9],[117,4,131,4],[117,5,131,5],[117,6,132,4],[117,13,132,11,"e2"],[117,15,132,13],[117,17,132,15],[118,6,133,8],[118,13,133,15],[118,19,133,21],[118,20,134,8],[118,21,134,9],[119,4,135,4],[120,2,136,0],[121,2,137,0],[121,6,137,4],[121,7,137,6],[121,23,137,22],[121,24,137,23,"test"],[121,28,137,27],[121,29,137,28,"Date"],[121,33,137,32],[121,34,137,33,"now"],[121,37,137,36],[121,38,137,37],[121,39,137,38],[121,40,137,39,"toString"],[121,48,137,47],[121,49,137,48],[121,50,137,49],[121,51,137,51],[121,53,137,53],[122,2,138,0],[122,11,138,9,"closestElementOfNode"],[122,31,138,29,"closestElementOfNode"],[122,32,138,30,"node"],[122,36,138,34],[122,38,138,36],[123,4,139,4],[123,8,139,8],[123,9,139,9,"node"],[123,13,139,13],[123,15,139,15],[124,6,140,8],[124,13,140,15],[124,17,140,19],[125,4,141,4],[126,4,142,4],[126,10,142,10,"el"],[126,12,142,12],[126,15,142,15,"node"],[126,19,142,19],[126,20,142,20,"nodeType"],[126,28,142,28],[126,33,142,33,"node"],[126,37,142,37],[126,38,142,38,"ELEMENT_NODE"],[126,50,142,50],[126,53,143,10,"node"],[126,57,143,14],[126,60,144,10,"node"],[126,64,144,14],[126,65,144,15,"parentElement"],[126,78,144,28],[127,4,145,4],[127,11,145,11,"el"],[127,13,145,13],[128,2,146,0],[129,2,147,0],[129,11,147,9,"isBlocked"],[129,20,147,18,"isBlocked"],[129,21,147,19,"node"],[129,25,147,23],[129,27,147,25,"blockClass"],[129,37,147,35],[129,39,147,37,"blockSelector"],[129,52,147,50],[129,54,147,52,"unblockSelector"],[129,69,147,67],[129,71,147,69,"checkAncestors"],[129,85,147,83],[129,87,147,85],[130,4,148,4],[130,8,148,8],[130,9,148,9,"node"],[130,13,148,13],[130,15,148,15],[131,6,149,8],[131,13,149,15],[131,18,149,20],[132,4,150,4],[133,4,151,4],[133,10,151,10,"el"],[133,12,151,12],[133,15,151,15,"closestElementOfNode"],[133,35,151,35],[133,36,151,36,"node"],[133,40,151,40],[133,41,151,41],[134,4,152,4],[134,8,152,8],[134,9,152,9,"el"],[134,11,152,11],[134,13,152,13],[135,6,153,8],[135,13,153,15],[135,18,153,20],[136,4,154,4],[137,4,155,4],[137,10,155,10,"blockedPredicate"],[137,26,155,26],[137,29,155,29,"createMatchPredicate"],[137,49,155,49],[137,50,155,50,"blockClass"],[137,60,155,60],[137,62,155,62,"blockSelector"],[137,75,155,75],[137,76,155,76],[138,4,156,4],[138,10,156,10,"blockDistance"],[138,23,156,23],[138,26,156,26,"distanceToMatch"],[138,41,156,41],[138,42,156,42,"el"],[138,44,156,44],[138,46,156,46,"blockedPredicate"],[138,62,156,62],[138,63,156,63],[139,4,157,4],[139,8,157,8,"unblockDistance"],[139,23,157,23],[139,26,157,26],[139,27,157,27],[139,28,157,28],[140,4,158,4],[140,8,158,8,"blockDistance"],[140,21,158,21],[140,24,158,24],[140,25,158,25],[140,27,158,27],[141,6,159,8],[141,13,159,15],[141,18,159,20],[142,4,160,4],[143,4,161,4],[143,8,161,8,"unblockSelector"],[143,23,161,23],[143,25,161,25],[144,6,162,8,"unblockDistance"],[144,21,162,23],[144,24,162,26,"distanceToMatch"],[144,39,162,41],[144,40,162,42,"el"],[144,42,162,44],[144,44,162,46,"createMatchPredicate"],[144,64,162,66],[144,65,162,67],[144,69,162,71],[144,71,162,73,"unblockSelector"],[144,86,162,88],[144,87,162,89],[144,88,162,90],[145,4,163,4],[146,4,164,4],[146,8,164,8,"blockDistance"],[146,21,164,21],[146,24,164,24],[146,25,164,25],[146,26,164,26],[146,30,164,30,"unblockDistance"],[146,45,164,45],[146,48,164,48],[146,49,164,49],[146,51,164,51],[147,6,165,8],[147,13,165,15],[147,17,165,19],[148,4,166,4],[149,4,167,4],[149,11,167,11,"blockDistance"],[149,24,167,24],[149,27,167,27,"unblockDistance"],[149,42,167,42],[150,2,168,0],[151,2,169,0],[151,8,169,6,"cachedImplementations"],[151,29,169,27],[151,32,169,30],[151,33,169,31],[151,34,169,32],[152,2,170,0],[152,11,170,9,"getImplementation"],[152,28,170,26,"getImplementation"],[152,29,170,27,"name"],[152,33,170,31],[152,35,170,33],[153,4,171,4],[153,10,171,10,"cached"],[153,16,171,16],[153,19,171,19,"cachedImplementations"],[153,40,171,40],[153,41,171,41,"name"],[153,45,171,45],[153,46,171,46],[154,4,172,4],[154,8,172,8,"cached"],[154,14,172,14],[154,16,172,16],[155,6,173,8],[155,13,173,15,"cached"],[155,19,173,21],[156,4,174,4],[157,4,175,4],[157,10,175,10,"document"],[157,18,175,18],[157,21,175,21,"window"],[157,27,175,27],[157,28,175,28,"document"],[157,36,175,36],[158,4,176,4],[158,8,176,8,"impl"],[158,12,176,12],[158,15,176,15,"window"],[158,21,176,21],[158,22,176,22,"name"],[158,26,176,26],[158,27,176,27],[159,4,177,4],[159,8,177,8,"document"],[159,16,177,16],[159,20,177,20],[159,27,177,27,"document"],[159,35,177,35],[159,36,177,36,"createElement"],[159,49,177,49],[159,54,177,54],[159,64,177,64],[159,66,177,66],[160,6,178,8],[160,10,178,12],[161,8,179,12],[161,14,179,18,"sandbox"],[161,21,179,25],[161,24,179,28,"document"],[161,32,179,36],[161,33,179,37,"createElement"],[161,46,179,50],[161,47,179,51],[161,55,179,59],[161,56,179,60],[162,8,180,12,"sandbox"],[162,15,180,19],[162,16,180,20,"hidden"],[162,22,180,26],[162,25,180,29],[162,29,180,33],[163,8,181,12,"document"],[163,16,181,20],[163,17,181,21,"head"],[163,21,181,25],[163,22,181,26,"appendChild"],[163,33,181,37],[163,34,181,38,"sandbox"],[163,41,181,45],[163,42,181,46],[164,8,182,12],[164,14,182,18,"contentWindow"],[164,27,182,31],[164,30,182,34,"sandbox"],[164,37,182,41],[164,38,182,42,"contentWindow"],[164,51,182,55],[165,8,183,12],[165,12,183,16,"contentWindow"],[165,25,183,29],[165,29,183,33,"contentWindow"],[165,42,183,46],[165,43,183,47,"name"],[165,47,183,51],[165,48,183,52],[165,50,183,54],[166,10,184,16,"impl"],[166,14,184,20],[166,17,185,20,"contentWindow"],[166,30,185,33],[166,31,185,34,"name"],[166,35,185,38],[166,36,185,39],[167,8,186,12],[168,8,187,12,"document"],[168,16,187,20],[168,17,187,21,"head"],[168,21,187,25],[168,22,187,26,"removeChild"],[168,33,187,37],[168,34,187,38,"sandbox"],[168,41,187,45],[168,42,187,46],[169,6,188,8],[169,7,188,9],[169,8,189,8],[169,15,189,15,"e"],[169,16,189,16],[169,18,189,18],[169,19,190,8],[170,4,191,4],[171,4,192,4],[171,11,192,12,"cachedImplementations"],[171,32,192,33],[171,33,192,34,"name"],[171,37,192,38],[171,38,192,39],[171,41,192,42,"impl"],[171,45,192,46],[171,46,192,47,"bind"],[171,50,192,51],[171,51,192,52,"window"],[171,57,192,58],[171,58,192,59],[172,2,193,0],[173,2,194,0],[173,11,194,9,"onRequestAnimationFrame"],[173,34,194,32,"onRequestAnimationFrame"],[173,35,194,33],[173,38,194,36,"rest"],[173,42,194,40],[173,44,194,42],[174,4,195,4],[174,11,195,11,"getImplementation"],[174,28,195,28],[174,29,195,29],[174,52,195,52],[174,53,195,53],[174,54,195,54],[174,57,195,57,"rest"],[174,61,195,61],[174,62,195,62],[175,2,196,0],[176,2,197,0],[176,11,197,9,"setTimeout"],[176,21,197,19,"setTimeout"],[176,22,197,20],[176,25,197,23,"rest"],[176,29,197,27],[176,31,197,29],[177,4,198,4],[177,11,198,11,"getImplementation"],[177,28,198,28],[177,29,198,29],[177,41,198,41],[177,42,198,42],[177,43,198,43],[177,46,198,46,"rest"],[177,50,198,50],[177,51,198,51],[178,2,199,0],[179,2,201,0],[179,6,201,4,"CanvasContext"],[179,19,201,17],[179,22,201,20],[179,37,201,36],[179,38,201,38,"CanvasContext2"],[179,52,201,52],[179,56,201,57],[180,4,202,2,"CanvasContext2"],[180,18,202,16],[180,19,202,17,"CanvasContext2"],[180,33,202,31],[180,34,202,32],[180,38,202,36],[180,39,202,37],[180,42,202,40],[180,43,202,41],[180,44,202,42],[180,47,202,45],[180,51,202,49],[181,4,203,2,"CanvasContext2"],[181,18,203,16],[181,19,203,17,"CanvasContext2"],[181,33,203,31],[181,34,203,32],[181,41,203,39],[181,42,203,40],[181,45,203,43],[181,46,203,44],[181,47,203,45],[181,50,203,48],[181,57,203,55],[182,4,204,2,"CanvasContext2"],[182,18,204,16],[182,19,204,17,"CanvasContext2"],[182,33,204,31],[182,34,204,32],[182,42,204,40],[182,43,204,41],[182,46,204,44],[182,47,204,45],[182,48,204,46],[182,51,204,49],[182,59,204,57],[183,4,205,2],[183,11,205,9,"CanvasContext2"],[183,25,205,23],[184,2,206,0],[184,3,206,1],[184,5,206,3,"CanvasContext"],[184,18,206,16],[184,22,206,20],[184,23,206,21],[184,24,206,22],[184,25,206,23],[185,2,208,0],[185,6,208,4,"errorHandler"],[185,18,208,16],[186,2,209,0],[186,11,209,9,"registerErrorHandler"],[186,31,209,29,"registerErrorHandler"],[186,32,209,30,"handler"],[186,39,209,37],[186,41,209,39],[187,4,210,4,"errorHandler"],[187,16,210,16],[187,19,210,19,"handler"],[187,26,210,26],[188,2,211,0],[189,2,212,0],[189,8,212,6,"callbackWrapper"],[189,23,212,21],[189,26,212,25,"cb"],[189,28,212,27],[189,32,212,32],[190,4,213,4],[190,8,213,8],[190,9,213,9,"errorHandler"],[190,21,213,21],[190,23,213,23],[191,6,214,8],[191,13,214,15,"cb"],[191,15,214,17],[192,4,215,4],[193,4,216,4],[193,10,216,10,"rrwebWrapped"],[193,22,216,22],[193,25,216,26,"rrwebWrapped"],[193,26,216,27],[193,29,216,30,"rest"],[193,33,216,34],[193,38,216,39],[194,6,217,8],[194,10,217,12],[195,8,218,12],[195,15,218,19,"cb"],[195,17,218,21],[195,18,218,22],[195,21,218,25,"rest"],[195,25,218,29],[195,26,218,30],[196,6,219,8],[196,7,219,9],[196,8,220,8],[196,15,220,15,"error"],[196,20,220,20],[196,22,220,22],[197,8,221,12],[197,12,221,16,"errorHandler"],[197,24,221,28],[197,28,221,32,"errorHandler"],[197,40,221,44],[197,41,221,45,"error"],[197,46,221,50],[197,47,221,51],[197,52,221,56],[197,56,221,60],[197,58,221,62],[198,10,222,16],[198,17,222,23],[198,23,222,29],[198,24,223,16],[198,25,223,17],[199,8,224,12],[200,8,225,12],[200,14,225,18,"error"],[200,19,225,23],[201,6,226,8],[202,4,227,4],[202,5,227,6],[203,4,228,4],[203,11,228,11,"rrwebWrapped"],[203,23,228,23],[204,2,229,0],[204,3,229,1],[206,2,231,0],[207,0,232,0],[208,0,233,0],[209,0,234,0],[210,0,235,0],[211,2,236,0],[211,6,236,4,"chars"],[211,11,236,9],[211,14,236,12],[211,80,236,78],[212,2,237,0],[213,2,238,0],[213,6,238,4,"lookup"],[213,12,238,10],[213,15,238,13],[213,22,238,20,"Uint8Array"],[213,32,238,30],[213,37,238,35],[213,48,238,46],[213,51,238,49],[213,53,238,51],[213,56,238,54],[213,60,238,58,"Uint8Array"],[213,70,238,68],[213,71,238,69],[213,74,238,72],[213,75,238,73],[214,2,239,0],[214,7,239,5],[214,11,239,9,"i"],[214,12,239,10],[214,15,239,13],[214,16,239,14],[214,18,239,16,"i"],[214,19,239,17],[214,22,239,20,"chars"],[214,27,239,25],[214,28,239,26,"length"],[214,34,239,32],[214,36,239,34,"i"],[214,37,239,35],[214,39,239,37],[214,41,239,39],[215,4,240,4,"lookup"],[215,10,240,10],[215,11,240,11,"chars"],[215,16,240,16],[215,17,240,17,"charCodeAt"],[215,27,240,27],[215,28,240,28,"i"],[215,29,240,29],[215,30,240,30],[215,31,240,31],[215,34,240,34,"i"],[215,35,240,35],[216,2,241,0],[217,2,242,0],[217,6,242,4,"encode"],[217,12,242,10],[217,15,242,13],[217,24,242,13,"encode"],[217,25,242,23,"arraybuffer"],[217,36,242,34],[217,38,242,36],[218,4,243,4],[218,8,243,8,"bytes"],[218,13,243,13],[218,16,243,16],[218,20,243,20,"Uint8Array"],[218,30,243,30],[218,31,243,31,"arraybuffer"],[218,42,243,42],[218,43,243,43],[219,6,243,45,"i"],[219,7,243,46],[220,6,243,48,"len"],[220,9,243,51],[220,12,243,54,"bytes"],[220,17,243,59],[220,18,243,60,"length"],[220,24,243,66],[221,6,243,68,"base64"],[221,12,243,74],[221,15,243,77],[221,17,243,79],[222,4,244,4],[222,9,244,9,"i"],[222,10,244,10],[222,13,244,13],[222,14,244,14],[222,16,244,16,"i"],[222,17,244,17],[222,20,244,20,"len"],[222,23,244,23],[222,25,244,25,"i"],[222,26,244,26],[222,30,244,30],[222,31,244,31],[222,33,244,33],[223,6,245,8,"base64"],[223,12,245,14],[223,16,245,18,"chars"],[223,21,245,23],[223,22,245,24,"bytes"],[223,27,245,29],[223,28,245,30,"i"],[223,29,245,31],[223,30,245,32],[223,34,245,36],[223,35,245,37],[223,36,245,38],[224,6,246,8,"base64"],[224,12,246,14],[224,16,246,18,"chars"],[224,21,246,23],[224,22,246,25],[224,23,246,26,"bytes"],[224,28,246,31],[224,29,246,32,"i"],[224,30,246,33],[224,31,246,34],[224,34,246,37],[224,35,246,38],[224,40,246,43],[224,41,246,44],[224,44,246,49,"bytes"],[224,49,246,54],[224,50,246,55,"i"],[224,51,246,56],[224,54,246,59],[224,55,246,60],[224,56,246,61],[224,60,246,65],[224,61,246,67],[224,62,246,68],[225,6,247,8,"base64"],[225,12,247,14],[225,16,247,18,"chars"],[225,21,247,23],[225,22,247,25],[225,23,247,26,"bytes"],[225,28,247,31],[225,29,247,32,"i"],[225,30,247,33],[225,33,247,36],[225,34,247,37],[225,35,247,38],[225,38,247,41],[225,40,247,43],[225,45,247,48],[225,46,247,49],[225,49,247,54,"bytes"],[225,54,247,59],[225,55,247,60,"i"],[225,56,247,61],[225,59,247,64],[225,60,247,65],[225,61,247,66],[225,65,247,70],[225,66,247,72],[225,67,247,73],[226,6,248,8,"base64"],[226,12,248,14],[226,16,248,18,"chars"],[226,21,248,23],[226,22,248,24,"bytes"],[226,27,248,29],[226,28,248,30,"i"],[226,29,248,31],[226,32,248,34],[226,33,248,35],[226,34,248,36],[226,37,248,39],[226,39,248,41],[226,40,248,42],[227,4,249,4],[228,4,250,4],[228,8,250,8,"len"],[228,11,250,11],[228,14,250,14],[228,15,250,15],[228,20,250,20],[228,21,250,21],[228,23,250,23],[229,6,251,8,"base64"],[229,12,251,14],[229,15,251,17,"base64"],[229,21,251,23],[229,22,251,24,"substring"],[229,31,251,33],[229,32,251,34],[229,33,251,35],[229,35,251,37,"base64"],[229,41,251,43],[229,42,251,44,"length"],[229,48,251,50],[229,51,251,53],[229,52,251,54],[229,53,251,55],[229,56,251,58],[229,59,251,61],[230,4,252,4],[230,5,252,5],[230,11,253,9],[230,15,253,13,"len"],[230,18,253,16],[230,21,253,19],[230,22,253,20],[230,27,253,25],[230,28,253,26],[230,30,253,28],[231,6,254,8,"base64"],[231,12,254,14],[231,15,254,17,"base64"],[231,21,254,23],[231,22,254,24,"substring"],[231,31,254,33],[231,32,254,34],[231,33,254,35],[231,35,254,37,"base64"],[231,41,254,43],[231,42,254,44,"length"],[231,48,254,50],[231,51,254,53],[231,52,254,54],[231,53,254,55],[231,56,254,58],[231,60,254,62],[232,4,255,4],[233,4,256,4],[233,11,256,11,"base64"],[233,17,256,17],[234,2,257,0],[234,3,257,1],[235,2,259,0],[235,8,259,6,"canvasVarMap"],[235,20,259,18],[235,23,259,21],[235,27,259,25,"Map"],[235,30,259,28],[235,31,259,29],[235,32,259,30],[236,2,260,0],[236,11,260,9,"variableListFor"],[236,26,260,24,"variableListFor"],[236,27,260,25,"ctx"],[236,30,260,28],[236,32,260,30,"ctor"],[236,36,260,34],[236,38,260,36],[237,4,261,4],[237,8,261,8,"contextMap"],[237,18,261,18],[237,21,261,21,"canvasVarMap"],[237,33,261,33],[237,34,261,34,"get"],[237,37,261,37],[237,38,261,38,"ctx"],[237,41,261,41],[237,42,261,42],[238,4,262,4],[238,8,262,8],[238,9,262,9,"contextMap"],[238,19,262,19],[238,21,262,21],[239,6,263,8,"contextMap"],[239,16,263,18],[239,19,263,21],[239,23,263,25,"Map"],[239,26,263,28],[239,27,263,29],[239,28,263,30],[240,6,264,8,"canvasVarMap"],[240,18,264,20],[240,19,264,21,"set"],[240,22,264,24],[240,23,264,25,"ctx"],[240,26,264,28],[240,28,264,30,"contextMap"],[240,38,264,40],[240,39,264,41],[241,4,265,4],[242,4,266,4],[242,8,266,8],[242,9,266,9,"contextMap"],[242,19,266,19],[242,20,266,20,"has"],[242,23,266,23],[242,24,266,24,"ctor"],[242,28,266,28],[242,29,266,29],[242,31,266,31],[243,6,267,8,"contextMap"],[243,16,267,18],[243,17,267,19,"set"],[243,20,267,22],[243,21,267,23,"ctor"],[243,25,267,27],[243,27,267,29],[243,29,267,31],[243,30,267,32],[244,4,268,4],[245,4,269,4],[245,11,269,11,"contextMap"],[245,21,269,21],[245,22,269,22,"get"],[245,25,269,25],[245,26,269,26,"ctor"],[245,30,269,30],[245,31,269,31],[246,2,270,0],[247,2,271,0],[247,8,271,6,"saveWebGLVar"],[247,20,271,18],[247,23,271,21,"saveWebGLVar"],[247,24,271,22,"value"],[247,29,271,27],[247,31,271,29,"win"],[247,34,271,32],[247,36,271,34,"ctx"],[247,39,271,37],[247,44,271,42],[248,4,272,4],[248,8,272,8],[248,9,272,9,"value"],[248,14,272,14],[248,18,273,8],[248,20,273,10,"isInstanceOfWebGLObject"],[248,43,273,33],[248,44,273,34,"value"],[248,49,273,39],[248,51,273,41,"win"],[248,54,273,44],[248,55,273,45],[248,59,273,49],[248,66,273,56,"value"],[248,71,273,61],[248,76,273,66],[248,84,273,74],[248,85,273,75],[248,87,274,8],[249,4,275,4],[249,10,275,10,"name"],[249,14,275,14],[249,17,275,17,"value"],[249,22,275,22],[249,23,275,23,"constructor"],[249,34,275,34],[249,35,275,35,"name"],[249,39,275,39],[250,4,276,4],[250,10,276,10,"list"],[250,14,276,14],[250,17,276,17,"variableListFor"],[250,32,276,32],[250,33,276,33,"ctx"],[250,36,276,36],[250,38,276,38,"name"],[250,42,276,42],[250,43,276,43],[251,4,277,4],[251,8,277,8,"index"],[251,13,277,13],[251,16,277,16,"list"],[251,20,277,20],[251,21,277,21,"indexOf"],[251,28,277,28],[251,29,277,29,"value"],[251,34,277,34],[251,35,277,35],[252,4,278,4],[252,8,278,8,"index"],[252,13,278,13],[252,18,278,18],[252,19,278,19],[252,20,278,20],[252,22,278,22],[253,6,279,8,"index"],[253,11,279,13],[253,14,279,16,"list"],[253,18,279,20],[253,19,279,21,"length"],[253,25,279,27],[254,6,280,8,"list"],[254,10,280,12],[254,11,280,13,"push"],[254,15,280,17],[254,16,280,18,"value"],[254,21,280,23],[254,22,280,24],[255,4,281,4],[256,4,282,4],[256,11,282,11,"index"],[256,16,282,16],[257,2,283,0],[257,3,283,1],[258,2,284,0],[258,11,284,9,"serializeArg"],[258,23,284,21,"serializeArg"],[258,24,284,22,"value"],[258,29,284,27],[258,31,284,29,"win"],[258,34,284,32],[258,36,284,34,"ctx"],[258,39,284,37],[258,41,284,39],[259,4,285,4],[259,8,285,8,"value"],[259,13,285,13],[259,25,285,25,"Array"],[259,30,285,30],[259,32,285,32],[260,6,286,8],[260,13,286,15,"value"],[260,18,286,20],[260,19,286,21,"map"],[260,22,286,24],[260,23,286,26,"arg"],[260,26,286,29],[260,30,286,34,"serializeArg"],[260,42,286,46],[260,43,286,47,"arg"],[260,46,286,50],[260,48,286,52,"win"],[260,51,286,55],[260,53,286,57,"ctx"],[260,56,286,60],[260,57,286,61],[260,58,286,62],[261,4,287,4],[261,5,287,5],[261,11,288,9],[261,15,288,13,"value"],[261,20,288,18],[261,25,288,23],[261,29,288,27],[261,31,288,29],[262,6,289,8],[262,13,289,15,"value"],[262,18,289,20],[263,4,290,4],[263,5,290,5],[263,11,291,9],[263,15,291,13,"value"],[263,20,291,18],[263,32,291,30,"Float32Array"],[263,44,291,42],[263,48,292,8,"value"],[263,53,292,13],[263,65,292,25,"Float64Array"],[263,77,292,37],[263,81,293,8,"value"],[263,86,293,13],[263,98,293,25,"Int32Array"],[263,108,293,35],[263,112,294,8,"value"],[263,117,294,13],[263,129,294,25,"Uint32Array"],[263,140,294,36],[263,144,295,8,"value"],[263,149,295,13],[263,161,295,25,"Uint8Array"],[263,171,295,35],[263,175,296,8,"value"],[263,180,296,13],[263,192,296,25,"Uint16Array"],[263,203,296,36],[263,207,297,8,"value"],[263,212,297,13],[263,224,297,25,"Int16Array"],[263,234,297,35],[263,238,298,8,"value"],[263,243,298,13],[263,255,298,25,"Int8Array"],[263,264,298,34],[263,268,299,8,"value"],[263,273,299,13],[263,285,299,25,"Uint8ClampedArray"],[263,302,299,42],[263,304,299,44],[264,6,300,8],[264,12,300,14,"name"],[264,16,300,18],[264,19,300,21,"value"],[264,24,300,26],[264,25,300,27,"constructor"],[264,36,300,38],[264,37,300,39,"name"],[264,41,300,43],[265,6,301,8],[265,13,301,15],[266,8,302,12,"rr_type"],[266,15,302,19],[266,17,302,21,"name"],[266,21,302,25],[267,8,303,12,"args"],[267,12,303,16],[267,14,303,18],[267,15,303,19,"Object"],[267,21,303,25],[267,22,303,26,"values"],[267,28,303,32],[267,29,303,33,"value"],[267,34,303,38],[267,35,303,39],[268,6,304,8],[268,7,304,9],[269,4,305,4],[269,5,305,5],[269,11,306,9],[269,15,306,13,"value"],[269,20,306,18],[269,32,306,30,"ArrayBuffer"],[269,43,306,41],[269,45,306,43],[270,6,307,8],[270,12,307,14,"name"],[270,16,307,18],[270,19,307,21,"value"],[270,24,307,26],[270,25,307,27,"constructor"],[270,36,307,38],[270,37,307,39,"name"],[270,41,307,43],[271,6,308,8],[271,12,308,14,"base64"],[271,18,308,20],[271,21,308,23,"encode"],[271,27,308,29],[271,28,308,30,"value"],[271,33,308,35],[271,34,308,36],[272,6,309,8],[272,13,309,15],[273,8,310,12,"rr_type"],[273,15,310,19],[273,17,310,21,"name"],[273,21,310,25],[274,8,311,12,"base64"],[275,6,312,8],[275,7,312,9],[276,4,313,4],[276,5,313,5],[276,11,314,9],[276,15,314,13,"value"],[276,20,314,18],[276,32,314,30,"DataView"],[276,40,314,38],[276,42,314,40],[277,6,315,8],[277,12,315,14,"name"],[277,16,315,18],[277,19,315,21,"value"],[277,24,315,26],[277,25,315,27,"constructor"],[277,36,315,38],[277,37,315,39,"name"],[277,41,315,43],[278,6,316,8],[278,13,316,15],[279,8,317,12,"rr_type"],[279,15,317,19],[279,17,317,21,"name"],[279,21,317,25],[280,8,318,12,"args"],[280,12,318,16],[280,14,318,18],[280,15,319,16,"serializeArg"],[280,27,319,28],[280,28,319,29,"value"],[280,33,319,34],[280,34,319,35,"buffer"],[280,40,319,41],[280,42,319,43,"win"],[280,45,319,46],[280,47,319,48,"ctx"],[280,50,319,51],[280,51,319,52],[280,53,320,16,"value"],[280,58,320,21],[280,59,320,22,"byteOffset"],[280,69,320,32],[280,71,321,16,"value"],[280,76,321,21],[280,77,321,22,"byteLength"],[280,87,321,32],[281,6,323,8],[281,7,323,9],[282,4,324,4],[282,5,324,5],[282,11,325,9],[282,15,325,13,"value"],[282,20,325,18],[282,32,325,30,"HTMLImageElement"],[282,48,325,46],[282,50,325,48],[283,6,326,8],[283,12,326,14,"name"],[283,16,326,18],[283,19,326,21,"value"],[283,24,326,26],[283,25,326,27,"constructor"],[283,36,326,38],[283,37,326,39,"name"],[283,41,326,43],[284,6,327,8],[284,12,327,14],[285,8,327,16,"src"],[286,6,327,20],[286,7,327,21],[286,10,327,24,"value"],[286,15,327,29],[287,6,328,8],[287,13,328,15],[288,8,329,12,"rr_type"],[288,15,329,19],[288,17,329,21,"name"],[288,21,329,25],[289,8,330,12,"src"],[290,6,331,8],[290,7,331,9],[291,4,332,4],[291,5,332,5],[291,11,333,9],[291,15,333,13,"value"],[291,20,333,18],[291,32,333,30,"HTMLCanvasElement"],[291,49,333,47],[291,51,333,49],[292,6,334,8],[292,12,334,14,"name"],[292,16,334,18],[292,19,334,21],[292,37,334,39],[293,6,335,8],[293,12,335,14,"src"],[293,15,335,17],[293,18,335,20,"value"],[293,23,335,25],[293,24,335,26,"toDataURL"],[293,33,335,35],[293,34,335,36],[293,35,335,37],[294,6,336,8],[294,13,336,15],[295,8,337,12,"rr_type"],[295,15,337,19],[295,17,337,21,"name"],[295,21,337,25],[296,8,338,12,"src"],[297,6,339,8],[297,7,339,9],[298,4,340,4],[298,5,340,5],[298,11,341,9],[298,15,341,13,"value"],[298,20,341,18],[298,32,341,30,"ImageData"],[298,41,341,39],[298,43,341,41],[299,6,342,8],[299,12,342,14,"name"],[299,16,342,18],[299,19,342,21,"value"],[299,24,342,26],[299,25,342,27,"constructor"],[299,36,342,38],[299,37,342,39,"name"],[299,41,342,43],[300,6,343,8],[300,13,343,15],[301,8,344,12,"rr_type"],[301,15,344,19],[301,17,344,21,"name"],[301,21,344,25],[302,8,345,12,"args"],[302,12,345,16],[302,14,345,18],[302,15,345,19,"serializeArg"],[302,27,345,31],[302,28,345,32,"value"],[302,33,345,37],[302,34,345,38,"data"],[302,38,345,42],[302,40,345,44,"win"],[302,43,345,47],[302,45,345,49,"ctx"],[302,48,345,52],[302,49,345,53],[302,51,345,55,"value"],[302,56,345,60],[302,57,345,61,"width"],[302,62,345,66],[302,64,345,68,"value"],[302,69,345,73],[302,70,345,74,"height"],[302,76,345,80],[303,6,346,8],[303,7,346,9],[304,4,347,4],[304,5,347,5],[304,11,348,9],[304,15,348,13,"isInstanceOfWebGLObject"],[304,38,348,36],[304,39,348,37,"value"],[304,44,348,42],[304,46,348,44,"win"],[304,49,348,47],[304,50,348,48],[304,54,348,52],[304,61,348,59,"value"],[304,66,348,64],[304,71,348,69],[304,79,348,77],[304,81,348,79],[305,6,349,8],[305,12,349,14,"name"],[305,16,349,18],[305,19,349,21,"value"],[305,24,349,26],[305,25,349,27,"constructor"],[305,36,349,38],[305,37,349,39,"name"],[305,41,349,43],[306,6,350,8],[306,12,350,14,"index"],[306,17,350,19],[306,20,350,22,"saveWebGLVar"],[306,32,350,34],[306,33,350,35,"value"],[306,38,350,40],[306,40,350,42,"win"],[306,43,350,45],[306,45,350,47,"ctx"],[306,48,350,50],[306,49,350,51],[307,6,351,8],[307,13,351,15],[308,8,352,12,"rr_type"],[308,15,352,19],[308,17,352,21,"name"],[308,21,352,25],[309,8,353,12,"index"],[309,13,353,17],[309,15,353,19,"index"],[310,6,354,8],[310,7,354,9],[311,4,355,4],[312,4,356,4],[312,11,356,11,"value"],[312,16,356,16],[313,2,357,0],[314,2,358,0],[314,8,358,6,"serializeArgs"],[314,21,358,19],[314,24,358,22,"serializeArgs"],[314,25,358,23,"args"],[314,29,358,27],[314,31,358,29,"win"],[314,34,358,32],[314,36,358,34,"ctx"],[314,39,358,37],[314,44,358,42],[315,4,359,4],[315,11,359,11,"args"],[315,15,359,15],[315,16,359,16,"map"],[315,19,359,19],[315,20,359,21,"arg"],[315,23,359,24],[315,27,359,29,"serializeArg"],[315,39,359,41],[315,40,359,42,"arg"],[315,43,359,45],[315,45,359,47,"win"],[315,48,359,50],[315,50,359,52,"ctx"],[315,53,359,55],[315,54,359,56],[315,55,359,57],[316,2,360,0],[316,3,360,1],[317,2,361,0],[317,8,361,6,"isInstanceOfWebGLObject"],[317,31,361,29],[317,34,361,32,"isInstanceOfWebGLObject"],[317,35,361,33,"value"],[317,40,361,38],[317,42,361,40,"win"],[317,45,361,43],[317,50,361,48],[318,4,362,4],[318,10,362,10,"webGLConstructorNames"],[318,31,362,31],[318,34,362,34],[318,35,363,8],[318,52,363,25],[318,54,364,8],[318,67,364,21],[318,69,365,8],[318,87,365,26],[318,89,366,8],[318,103,366,22],[318,105,367,8],[318,124,367,27],[318,126,368,8],[318,139,368,21],[318,141,369,8],[318,169,369,36],[318,171,370,8],[318,185,370,22],[318,187,371,8],[318,209,371,30],[318,211,372,8],[318,235,372,32],[318,237,373,8],[318,264,373,35],[318,265,374,5],[319,4,375,4],[319,10,375,10,"supportedWebGLConstructorNames"],[319,40,375,40],[319,43,375,43,"webGLConstructorNames"],[319,64,375,64],[319,65,375,65,"filter"],[319,71,375,71],[319,72,375,73,"name"],[319,76,375,77],[319,80,375,82],[319,87,375,89,"win"],[319,90,375,92],[319,91,375,93,"name"],[319,95,375,97],[319,96,375,98],[319,101,375,103],[319,111,375,113],[319,112,375,114],[320,4,376,4],[320,11,376,11,"Boolean"],[320,18,376,18],[320,19,376,19,"supportedWebGLConstructorNames"],[320,49,376,49],[320,50,376,50,"find"],[320,54,376,54],[320,55,376,56,"name"],[320,59,376,60],[320,63,376,65,"value"],[320,68,376,70],[320,80,376,82,"win"],[320,83,376,85],[320,84,376,86,"name"],[320,88,376,90],[320,89,376,91],[320,90,376,92],[320,91,376,93],[321,2,377,0],[321,3,377,1],[322,2,379,0],[322,11,379,9,"initCanvas2DMutationObserver"],[322,39,379,37,"initCanvas2DMutationObserver"],[322,40,379,38,"cb"],[322,42,379,40],[322,44,379,42,"win"],[322,47,379,45],[322,49,379,47,"blockClass"],[322,59,379,57],[322,61,379,59,"blockSelector"],[322,74,379,72],[322,76,379,74,"unblockSelector"],[322,91,379,89],[322,93,379,91],[323,4,380,4],[323,10,380,10,"handlers"],[323,18,380,18],[323,21,380,21],[323,23,380,23],[324,4,381,4],[324,10,381,10,"props2D"],[324,17,381,17],[324,20,381,20,"Object"],[324,26,381,26],[324,27,381,27,"getOwnPropertyNames"],[324,46,381,46],[324,47,381,47,"win"],[324,50,381,50],[324,51,381,51,"CanvasRenderingContext2D"],[324,75,381,75],[324,76,381,76,"prototype"],[324,85,381,85],[324,86,381,86],[325,4,382,4],[325,9,382,9],[325,15,382,15,"prop"],[325,19,382,19],[325,23,382,23,"props2D"],[325,30,382,30],[325,32,382,32],[326,6,383,8],[326,10,383,12],[327,8,384,12],[327,12,384,16],[327,19,384,23,"win"],[327,22,384,26],[327,23,384,27,"CanvasRenderingContext2D"],[327,47,384,51],[327,48,384,52,"prototype"],[327,57,384,61],[327,58,384,62,"prop"],[327,62,384,66],[327,63,384,67],[327,68,384,72],[327,78,384,82],[327,80,384,84],[328,10,385,16],[329,8,386,12],[330,8,387,12],[330,14,387,18,"restoreHandler"],[330,28,387,32],[330,31,387,35,"patch"],[330,36,387,40],[330,37,387,41,"win"],[330,40,387,44],[330,41,387,45,"CanvasRenderingContext2D"],[330,65,387,69],[330,66,387,70,"prototype"],[330,75,387,79],[330,77,387,81,"prop"],[330,81,387,85],[330,83,387,87],[330,93,387,97,"original"],[330,101,387,105],[330,103,387,107],[331,10,388,16],[331,17,388,23],[331,27,388,33],[331,30,388,36,"args"],[331,34,388,40],[331,36,388,42],[332,12,389,20],[332,16,389,24],[332,17,389,25,"isBlocked"],[332,26,389,34],[332,27,389,35],[332,31,389,39],[332,32,389,40,"canvas"],[332,38,389,46],[332,40,389,48,"blockClass"],[332,50,389,58],[332,52,389,60,"blockSelector"],[332,65,389,73],[332,67,389,75,"unblockSelector"],[332,82,389,90],[332,84,389,92],[332,88,389,96],[332,89,389,97],[332,91,389,99],[333,14,390,24,"setTimeout"],[333,24,390,34],[333,25,390,35],[333,31,390,41],[334,16,391,28],[334,22,391,34,"recordArgs"],[334,32,391,44],[334,35,391,47,"serializeArgs"],[334,48,391,60],[334,49,391,61,"args"],[334,53,391,65],[334,55,391,67,"win"],[334,58,391,70],[334,60,391,72],[334,64,391,76],[334,65,391,77],[335,16,392,28,"cb"],[335,18,392,30],[335,19,392,31],[335,23,392,35],[335,24,392,36,"canvas"],[335,30,392,42],[335,32,392,44],[336,18,393,32,"type"],[336,22,393,36],[336,24,393,38,"CanvasContext"],[336,37,393,51],[336,38,393,52],[336,42,393,56],[336,43,393,57],[337,18,394,32,"property"],[337,26,394,40],[337,28,394,42,"prop"],[337,32,394,46],[338,18,395,32,"args"],[338,22,395,36],[338,24,395,38,"recordArgs"],[339,16,396,28],[339,17,396,29],[339,18,396,30],[340,14,397,24],[340,15,397,25],[340,17,397,27],[340,18,397,28],[340,19,397,29],[341,12,398,20],[342,12,399,20],[342,19,399,27,"original"],[342,27,399,35],[342,28,399,36,"apply"],[342,33,399,41],[342,34,399,42],[342,38,399,46],[342,40,399,48,"args"],[342,44,399,52],[342,45,399,53],[343,10,400,16],[343,11,400,17],[344,8,401,12],[344,9,401,13],[344,10,401,14],[345,8,402,12,"handlers"],[345,16,402,20],[345,17,402,21,"push"],[345,21,402,25],[345,22,402,26,"restoreHandler"],[345,36,402,40],[345,37,402,41],[346,6,403,8],[346,7,403,9],[346,8,404,8],[346,15,404,15,"e"],[346,16,404,16],[346,18,404,18],[347,8,405,12],[347,14,405,18,"hookHandler"],[347,25,405,29],[347,28,405,32,"hookSetter"],[347,38,405,42],[347,39,405,43,"win"],[347,42,405,46],[347,43,405,47,"CanvasRenderingContext2D"],[347,67,405,71],[347,68,405,72,"prototype"],[347,77,405,81],[347,79,405,83,"prop"],[347,83,405,87],[347,85,405,89],[348,10,406,16,"set"],[348,13,406,19,"set"],[348,14,406,20,"v"],[348,15,406,21],[348,17,406,23],[349,12,407,20,"cb"],[349,14,407,22],[349,15,407,23],[349,19,407,27],[349,20,407,28,"canvas"],[349,26,407,34],[349,28,407,36],[350,14,408,24,"type"],[350,18,408,28],[350,20,408,30,"CanvasContext"],[350,33,408,43],[350,34,408,44],[350,38,408,48],[350,39,408,49],[351,14,409,24,"property"],[351,22,409,32],[351,24,409,34,"prop"],[351,28,409,38],[352,14,410,24,"args"],[352,18,410,28],[352,20,410,30],[352,21,410,31,"v"],[352,22,410,32],[352,23,410,33],[353,14,411,24,"setter"],[353,20,411,30],[353,22,411,32],[354,12,412,20],[354,13,412,21],[354,14,412,22],[355,10,413,16],[356,8,414,12],[356,9,414,13],[356,10,414,14],[357,8,415,12,"handlers"],[357,16,415,20],[357,17,415,21,"push"],[357,21,415,25],[357,22,415,26,"hookHandler"],[357,33,415,37],[357,34,415,38],[358,6,416,8],[359,4,417,4],[360,4,418,4],[360,11,418,11],[360,17,418,17],[361,6,419,8,"handlers"],[361,14,419,16],[361,15,419,17,"forEach"],[361,22,419,24],[361,23,419,26,"h"],[361,24,419,27],[361,28,419,32,"h"],[361,29,419,33],[361,30,419,34],[361,31,419,35],[361,32,419,36],[362,4,420,4],[362,5,420,5],[363,2,421,0],[364,2,423,0],[364,11,423,9,"getNormalizedContextName"],[364,35,423,33,"getNormalizedContextName"],[364,36,423,34,"contextType"],[364,47,423,45],[364,49,423,47],[365,4,424,4],[365,11,424,11,"contextType"],[365,22,424,22],[365,27,424,27],[365,47,424,47],[365,50,424,50],[365,57,424,57],[365,60,424,60,"contextType"],[365,71,424,71],[366,2,425,0],[367,2,426,0],[367,11,426,9,"initCanvasContextObserver"],[367,36,426,34,"initCanvasContextObserver"],[367,37,426,35,"win"],[367,40,426,38],[367,42,426,40,"blockClass"],[367,52,426,50],[367,54,426,52,"blockSelector"],[367,67,426,65],[367,69,426,67,"unblockSelector"],[367,84,426,82],[367,86,426,84,"setPreserveDrawingBufferToTrue"],[367,116,426,114],[367,118,426,116],[368,4,427,4],[368,10,427,10,"handlers"],[368,18,427,18],[368,21,427,21],[368,23,427,23],[369,4,428,4],[369,8,428,8],[370,6,429,8],[370,12,429,14,"restoreHandler"],[370,26,429,28],[370,29,429,31,"patch"],[370,34,429,36],[370,35,429,37,"win"],[370,38,429,40],[370,39,429,41,"HTMLCanvasElement"],[370,56,429,58],[370,57,429,59,"prototype"],[370,66,429,68],[370,68,429,70],[370,80,429,82],[370,82,429,84],[370,92,429,94,"original"],[370,100,429,102],[370,102,429,104],[371,8,430,12],[371,15,430,19],[371,25,430,29,"contextType"],[371,36,430,40],[371,38,430,42],[371,41,430,45,"args"],[371,45,430,49],[371,47,430,51],[372,10,431,16],[372,14,431,20],[372,15,431,21,"isBlocked"],[372,24,431,30],[372,25,431,31],[372,29,431,35],[372,31,431,37,"blockClass"],[372,41,431,47],[372,43,431,49,"blockSelector"],[372,56,431,62],[372,58,431,64,"unblockSelector"],[372,73,431,79],[372,75,431,81],[372,79,431,85],[372,80,431,86],[372,82,431,88],[373,12,432,20],[373,18,432,26,"ctxName"],[373,25,432,33],[373,28,432,36,"getNormalizedContextName"],[373,52,432,60],[373,53,432,61,"contextType"],[373,64,432,72],[373,65,432,73],[374,12,433,20],[374,16,433,24],[374,18,433,26],[374,29,433,37],[374,33,433,41],[374,37,433,45],[374,38,433,46],[374,40,434,24],[374,44,434,28],[374,45,434,29,"__context"],[374,54,434,38],[374,57,434,41,"ctxName"],[374,64,434,48],[375,12,435,20],[375,16,435,24,"setPreserveDrawingBufferToTrue"],[375,46,435,54],[375,50,436,24],[375,51,436,25],[375,58,436,32],[375,60,436,34],[375,68,436,42],[375,69,436,43],[375,70,436,44,"includes"],[375,78,436,52],[375,79,436,53,"ctxName"],[375,86,436,60],[375,87,436,61],[375,89,436,63],[376,14,437,24],[376,18,437,28,"args"],[376,22,437,32],[376,23,437,33],[376,24,437,34],[376,25,437,35],[376,29,437,39],[376,36,437,46,"args"],[376,40,437,50],[376,41,437,51],[376,42,437,52],[376,43,437,53],[376,48,437,58],[376,56,437,66],[376,58,437,68],[377,16,438,28],[377,22,438,34,"contextAttributes"],[377,39,438,51],[377,42,438,54,"args"],[377,46,438,58],[377,47,438,59],[377,48,438,60],[377,49,438,61],[378,16,439,28],[378,20,439,32],[378,21,439,33,"contextAttributes"],[378,38,439,50],[378,39,439,51,"preserveDrawingBuffer"],[378,60,439,72],[378,62,439,74],[379,18,440,32,"contextAttributes"],[379,35,440,49],[379,36,440,50,"preserveDrawingBuffer"],[379,57,440,71],[379,60,440,74],[379,64,440,78],[380,16,441,28],[381,14,442,24],[381,15,442,25],[381,21,443,29],[382,16,444,28,"args"],[382,20,444,32],[382,21,444,33,"splice"],[382,27,444,39],[382,28,444,40],[382,29,444,41],[382,31,444,43],[382,32,444,44],[382,34,444,46],[383,18,445,32,"preserveDrawingBuffer"],[383,39,445,53],[383,41,445,55],[384,16,446,28],[384,17,446,29],[384,18,446,30],[385,14,447,24],[386,12,448,20],[387,10,449,16],[388,10,450,16],[388,17,450,23,"original"],[388,25,450,31],[388,26,450,32,"apply"],[388,31,450,37],[388,32,450,38],[388,36,450,42],[388,38,450,44],[388,39,450,45,"contextType"],[388,50,450,56],[388,52,450,58],[388,55,450,61,"args"],[388,59,450,65],[388,60,450,66],[388,61,450,67],[389,8,451,12],[389,9,451,13],[390,6,452,8],[390,7,452,9],[390,8,452,10],[391,6,453,8,"handlers"],[391,14,453,16],[391,15,453,17,"push"],[391,19,453,21],[391,20,453,22,"restoreHandler"],[391,34,453,36],[391,35,453,37],[392,4,454,4],[392,5,454,5],[392,6,455,4],[392,13,455,11,"e"],[392,14,455,12],[392,16,455,14],[393,6,456,8,"console"],[393,13,456,15],[393,14,456,16,"error"],[393,19,456,21],[393,20,456,22],[393,76,456,78],[393,77,456,79],[394,4,457,4],[395,4,458,4],[395,11,458,11],[395,17,458,17],[396,6,459,8,"handlers"],[396,14,459,16],[396,15,459,17,"forEach"],[396,22,459,24],[396,23,459,26,"h"],[396,24,459,27],[396,28,459,32,"h"],[396,29,459,33],[396,30,459,34],[396,31,459,35],[396,32,459,36],[397,4,460,4],[397,5,460,5],[398,2,461,0],[399,2,463,0],[399,11,463,9,"patchGLPrototype"],[399,27,463,25,"patchGLPrototype"],[399,28,463,26,"prototype"],[399,37,463,35],[399,39,463,37,"type"],[399,43,463,41],[399,45,463,43,"cb"],[399,47,463,45],[399,49,463,47,"blockClass"],[399,59,463,57],[399,61,463,59,"blockSelector"],[399,74,463,72],[399,76,463,74,"unblockSelector"],[399,91,463,89],[399,93,463,91,"mirror"],[399,99,463,97],[399,101,463,99,"win"],[399,104,463,102],[399,106,463,104],[400,4,464,4],[400,10,464,10,"handlers"],[400,18,464,18],[400,21,464,21],[400,23,464,23],[401,4,465,4],[401,10,465,10,"props"],[401,15,465,15],[401,18,465,18,"Object"],[401,24,465,24],[401,25,465,25,"getOwnPropertyNames"],[401,44,465,44],[401,45,465,45,"prototype"],[401,54,465,54],[401,55,465,55],[402,4,466,4],[402,9,466,9],[402,15,466,15,"prop"],[402,19,466,19],[402,23,466,23,"props"],[402,28,466,28],[402,30,466,30],[403,6,467,8],[403,10,467,12],[403,11,468,12],[403,26,468,27],[403,28,469,12],[403,36,469,20],[403,38,470,12],[403,58,470,32],[403,60,471,12],[403,81,471,33],[403,82,472,9],[403,83,472,10,"includes"],[403,91,472,18],[403,92,472,19,"prop"],[403,96,472,23],[403,97,472,24],[403,99,472,26],[404,8,473,12],[405,6,474,8],[406,6,475,8],[406,10,475,12],[407,8,476,12],[407,12,476,16],[407,19,476,23,"prototype"],[407,28,476,32],[407,29,476,33,"prop"],[407,33,476,37],[407,34,476,38],[407,39,476,43],[407,49,476,53],[407,51,476,55],[408,10,477,16],[409,8,478,12],[410,8,479,12],[410,14,479,18,"restoreHandler"],[410,28,479,32],[410,31,479,35,"patch"],[410,36,479,40],[410,37,479,41,"prototype"],[410,46,479,50],[410,48,479,52,"prop"],[410,52,479,56],[410,54,479,58],[410,64,479,68,"original"],[410,72,479,76],[410,74,479,78],[411,10,480,16],[411,17,480,23],[411,27,480,33],[411,30,480,36,"args"],[411,34,480,40],[411,36,480,42],[412,12,481,20],[412,18,481,26,"result"],[412,24,481,32],[412,27,481,35,"original"],[412,35,481,43],[412,36,481,44,"apply"],[412,41,481,49],[412,42,481,50],[412,46,481,54],[412,48,481,56,"args"],[412,52,481,60],[412,53,481,61],[413,12,482,20,"saveWebGLVar"],[413,24,482,32],[413,25,482,33,"result"],[413,31,482,39],[413,33,482,41,"win"],[413,36,482,44],[413,38,482,46],[413,42,482,50],[413,43,482,51],[414,12,483,20],[414,16,483,24],[414,25,483,33],[414,29,483,37],[414,33,483,41],[414,34,483,42,"canvas"],[414,40,483,48],[414,44,484,24],[414,45,484,25,"isBlocked"],[414,54,484,34],[414,55,484,35],[414,59,484,39],[414,60,484,40,"canvas"],[414,66,484,46],[414,68,484,48,"blockClass"],[414,78,484,58],[414,80,484,60,"blockSelector"],[414,93,484,73],[414,95,484,75,"unblockSelector"],[414,110,484,90],[414,112,484,92],[414,116,484,96],[414,117,484,97],[414,119,484,99],[415,14,485,24],[415,20,485,30,"recordArgs"],[415,30,485,40],[415,33,485,43,"serializeArgs"],[415,46,485,56],[415,47,485,57,"args"],[415,51,485,61],[415,53,485,63,"win"],[415,56,485,66],[415,58,485,68],[415,62,485,72],[415,63,485,73],[416,14,486,24],[416,20,486,30,"mutation"],[416,28,486,38],[416,31,486,41],[417,16,487,28,"type"],[417,20,487,32],[418,16,488,28,"property"],[418,24,488,36],[418,26,488,38,"prop"],[418,30,488,42],[419,16,489,28,"args"],[419,20,489,32],[419,22,489,34,"recordArgs"],[420,14,490,24],[420,15,490,25],[421,14,491,24,"cb"],[421,16,491,26],[421,17,491,27],[421,21,491,31],[421,22,491,32,"canvas"],[421,28,491,38],[421,30,491,40,"mutation"],[421,38,491,48],[421,39,491,49],[422,12,492,20],[423,12,493,20],[423,19,493,27,"result"],[423,25,493,33],[424,10,494,16],[424,11,494,17],[425,8,495,12],[425,9,495,13],[425,10,495,14],[426,8,496,12,"handlers"],[426,16,496,20],[426,17,496,21,"push"],[426,21,496,25],[426,22,496,26,"restoreHandler"],[426,36,496,40],[426,37,496,41],[427,6,497,8],[427,7,497,9],[427,8,498,8],[427,15,498,15,"e"],[427,16,498,16],[427,18,498,18],[428,8,499,12],[428,14,499,18,"hookHandler"],[428,25,499,29],[428,28,499,32,"hookSetter"],[428,38,499,42],[428,39,499,43,"prototype"],[428,48,499,52],[428,50,499,54,"prop"],[428,54,499,58],[428,56,499,60],[429,10,500,16,"set"],[429,13,500,19,"set"],[429,14,500,20,"v"],[429,15,500,21],[429,17,500,23],[430,12,501,20,"cb"],[430,14,501,22],[430,15,501,23],[430,19,501,27],[430,20,501,28,"canvas"],[430,26,501,34],[430,28,501,36],[431,14,502,24,"type"],[431,18,502,28],[432,14,503,24,"property"],[432,22,503,32],[432,24,503,34,"prop"],[432,28,503,38],[433,14,504,24,"args"],[433,18,504,28],[433,20,504,30],[433,21,504,31,"v"],[433,22,504,32],[433,23,504,33],[434,14,505,24,"setter"],[434,20,505,30],[434,22,505,32],[435,12,506,20],[435,13,506,21],[435,14,506,22],[436,10,507,16],[437,8,508,12],[437,9,508,13],[437,10,508,14],[438,8,509,12,"handlers"],[438,16,509,20],[438,17,509,21,"push"],[438,21,509,25],[438,22,509,26,"hookHandler"],[438,33,509,37],[438,34,509,38],[439,6,510,8],[440,4,511,4],[441,4,512,4],[441,11,512,11,"handlers"],[441,19,512,19],[442,2,513,0],[443,2,514,0],[443,11,514,9,"initCanvasWebGLMutationObserver"],[443,42,514,40,"initCanvasWebGLMutationObserver"],[443,43,514,41,"cb"],[443,45,514,43],[443,47,514,45,"win"],[443,50,514,48],[443,52,514,50,"blockClass"],[443,62,514,60],[443,64,514,62,"blockSelector"],[443,77,514,75],[443,79,514,77,"unblockSelector"],[443,94,514,92],[443,96,514,94,"mirror"],[443,102,514,100],[443,104,514,102],[444,4,515,4],[444,10,515,10,"handlers"],[444,18,515,18],[444,21,515,21],[444,23,515,23],[445,4,516,4,"handlers"],[445,12,516,12],[445,13,516,13,"push"],[445,17,516,17],[445,18,516,18],[445,21,516,21,"patchGLPrototype"],[445,37,516,37],[445,38,516,38,"win"],[445,41,516,41],[445,42,516,42,"WebGLRenderingContext"],[445,63,516,63],[445,64,516,64,"prototype"],[445,73,516,73],[445,75,516,75,"CanvasContext"],[445,88,516,88],[445,89,516,89,"WebGL"],[445,94,516,94],[445,96,516,96,"cb"],[445,98,516,98],[445,100,516,100,"blockClass"],[445,110,516,110],[445,112,516,112,"blockSelector"],[445,125,516,125],[445,127,516,127,"unblockSelector"],[445,142,516,142],[445,144,516,144,"mirror"],[445,150,516,150],[445,152,516,152,"win"],[445,155,516,155],[445,156,516,156],[445,157,516,157],[446,4,517,4],[446,8,517,8],[446,15,517,15,"win"],[446,18,517,18],[446,19,517,19,"WebGL2RenderingContext"],[446,41,517,41],[446,46,517,46],[446,57,517,57],[446,59,517,59],[447,6,518,8,"handlers"],[447,14,518,16],[447,15,518,17,"push"],[447,19,518,21],[447,20,518,22],[447,23,518,25,"patchGLPrototype"],[447,39,518,41],[447,40,518,42,"win"],[447,43,518,45],[447,44,518,46,"WebGL2RenderingContext"],[447,66,518,68],[447,67,518,69,"prototype"],[447,76,518,78],[447,78,518,80,"CanvasContext"],[447,91,518,93],[447,92,518,94,"WebGL2"],[447,98,518,100],[447,100,518,102,"cb"],[447,102,518,104],[447,104,518,106,"blockClass"],[447,114,518,116],[447,116,518,118,"blockSelector"],[447,129,518,131],[447,131,518,133,"unblockSelector"],[447,146,518,148],[447,148,518,150,"mirror"],[447,154,518,156],[447,156,518,158,"win"],[447,159,518,161],[447,160,518,162],[447,161,518,163],[448,4,519,4],[449,4,520,4],[449,11,520,11],[449,17,520,17],[450,6,521,8,"handlers"],[450,14,521,16],[450,15,521,17,"forEach"],[450,22,521,24],[450,23,521,26,"h"],[450,24,521,27],[450,28,521,32,"h"],[450,29,521,33],[450,30,521,34],[450,31,521,35],[450,32,521,36],[451,4,522,4],[451,5,522,5],[452,2,523,0],[453,2,525,0],[453,6,525,4,"r"],[453,7,525,5],[453,10,525,8],[453,1545,525,1543],[454,2,527,0],[454,11,527,9,"t"],[454,12,527,10,"t"],[454,13,527,10],[454,15,527,12],[455,4,527,13],[455,10,527,19,"t"],[455,11,527,20],[455,14,527,21],[455,18,527,25,"Blob"],[455,22,527,29],[455,23,527,30],[455,24,527,31,"r"],[455,25,527,32],[455,26,527,33],[455,27,527,34],[456,4,527,35],[456,11,527,42,"URL"],[456,14,527,45],[456,15,527,46,"createObjectURL"],[456,30,527,61],[456,31,527,62,"t"],[456,32,527,63],[456,33,527,64],[457,2,527,64],[458,2,529,0],[458,8,529,6,"CanvasManager"],[458,21,529,19],[458,22,529,20],[459,4,530,4,"reset"],[459,9,530,9,"reset"],[459,10,530,9],[459,12,530,12],[460,6,531,8],[460,10,531,12],[460,11,531,13,"pendingCanvasMutations"],[460,33,531,35],[460,34,531,36,"clear"],[460,39,531,41],[460,40,531,42],[460,41,531,43],[461,6,532,8],[461,10,532,12],[461,11,532,13,"restoreHandlers"],[461,26,532,28],[461,27,532,29,"forEach"],[461,34,532,36],[461,35,532,38,"handler"],[461,42,532,45],[461,46,532,50],[462,8,533,12],[462,12,533,16],[463,10,534,16,"handler"],[463,17,534,23],[463,18,534,24],[463,19,534,25],[464,8,535,12],[464,9,535,13],[464,10,536,12],[464,17,536,19,"e"],[464,18,536,20],[464,20,536,22],[464,21,537,12],[465,6,538,8],[465,7,538,9],[465,8,538,10],[466,6,539,8],[466,10,539,12],[466,11,539,13,"restoreHandlers"],[466,26,539,28],[466,29,539,31],[466,31,539,33],[467,6,540,8],[467,10,540,12],[467,11,540,13,"windowsSet"],[467,21,540,23],[467,24,540,26],[467,28,540,30,"WeakSet"],[467,35,540,37],[467,36,540,38],[467,37,540,39],[468,6,541,8],[468,10,541,12],[468,11,541,13,"windows"],[468,18,541,20],[468,21,541,23],[468,23,541,25],[469,6,542,8],[469,10,542,12],[469,11,542,13,"shadowDoms"],[469,21,542,23],[469,24,542,26],[469,28,542,30,"Set"],[469,31,542,33],[469,32,542,34],[469,33,542,35],[470,6,543,8],[470,10,543,8,"_optionalChain"],[470,30,543,22],[470,32,543,23],[470,33,543,24],[470,37,543,28],[470,39,543,30],[470,47,543,38],[470,49,543,40,"_"],[470,50,543,41],[470,54,543,45,"_"],[470,55,543,46],[470,56,543,47,"worker"],[470,62,543,53],[470,64,543,55],[470,80,543,71],[470,82,543,73,"_2"],[470,84,543,75],[470,88,543,79,"_2"],[470,90,543,81],[470,91,543,82,"terminate"],[470,100,543,91],[470,102,543,93],[470,108,543,99],[470,110,543,101,"_3"],[470,112,543,103],[470,116,543,107,"_3"],[470,118,543,109],[470,119,543,110],[470,120,543,111],[470,121,543,112],[470,122,543,113],[471,6,544,8],[471,10,544,12],[471,11,544,13,"worker"],[471,17,544,19],[471,20,544,22],[471,24,544,26],[472,6,545,8],[472,10,545,12],[472,11,545,13,"snapshotInProgressMap"],[472,32,545,34],[472,35,545,37],[472,39,545,41,"Map"],[472,42,545,44],[472,43,545,45],[472,44,545,46],[473,4,546,4],[474,4,547,4,"freeze"],[474,10,547,10,"freeze"],[474,11,547,10],[474,13,547,13],[475,6,548,8],[475,10,548,12],[475,11,548,13,"frozen"],[475,17,548,19],[475,20,548,22],[475,24,548,26],[476,4,549,4],[477,4,550,4,"unfreeze"],[477,12,550,12,"unfreeze"],[477,13,550,12],[477,15,550,15],[478,6,551,8],[478,10,551,12],[478,11,551,13,"frozen"],[478,17,551,19],[478,20,551,22],[478,25,551,27],[479,4,552,4],[480,4,553,4,"lock"],[480,8,553,8,"lock"],[480,9,553,8],[480,11,553,11],[481,6,554,8],[481,10,554,12],[481,11,554,13,"locked"],[481,17,554,19],[481,20,554,22],[481,24,554,26],[482,4,555,4],[483,4,556,4,"unlock"],[483,10,556,10,"unlock"],[483,11,556,10],[483,13,556,13],[484,6,557,8],[484,10,557,12],[484,11,557,13,"locked"],[484,17,557,19],[484,20,557,22],[484,25,557,27],[485,4,558,4],[486,4,559,4,"constructor"],[486,15,559,15,"constructor"],[486,16,559,16,"options"],[486,23,559,23],[486,25,559,25],[487,6,560,8],[487,10,560,12],[487,11,560,13,"pendingCanvasMutations"],[487,33,560,35],[487,36,560,38],[487,40,560,42,"Map"],[487,43,560,45],[487,44,560,46],[487,45,560,47],[488,6,561,8],[488,10,561,12],[488,11,561,13,"rafStamps"],[488,20,561,22],[488,23,561,25],[489,8,561,27,"latestId"],[489,16,561,35],[489,18,561,37],[489,19,561,38],[490,8,561,40,"invokeId"],[490,16,561,48],[490,18,561,50],[491,6,561,55],[491,7,561,56],[492,6,562,8],[492,10,562,12],[492,11,562,13,"shadowDoms"],[492,21,562,23],[492,24,562,26],[492,28,562,30,"Set"],[492,31,562,33],[492,32,562,34],[492,33,562,35],[493,6,563,8],[493,10,563,12],[493,11,563,13,"windowsSet"],[493,21,563,23],[493,24,563,26],[493,28,563,30,"WeakSet"],[493,35,563,37],[493,36,563,38],[493,37,563,39],[494,6,564,8],[494,10,564,12],[494,11,564,13,"windows"],[494,18,564,20],[494,21,564,23],[494,23,564,25],[495,6,565,8],[495,10,565,12],[495,11,565,13,"restoreHandlers"],[495,26,565,28],[495,29,565,31],[495,31,565,33],[496,6,566,8],[496,10,566,12],[496,11,566,13,"frozen"],[496,17,566,19],[496,20,566,22],[496,25,566,27],[497,6,567,8],[497,10,567,12],[497,11,567,13,"locked"],[497,17,567,19],[497,20,567,22],[497,25,567,27],[498,6,568,8],[498,10,568,12],[498,11,568,13,"snapshotInProgressMap"],[498,32,568,34],[498,35,568,37],[498,39,568,41,"Map"],[498,42,568,44],[498,43,568,45],[498,44,568,46],[499,6,569,8],[499,10,569,12],[499,11,569,13,"worker"],[499,17,569,19],[499,20,569,22],[499,24,569,26],[500,6,570,8],[500,10,570,12],[500,11,570,13,"processMutation"],[500,26,570,28],[500,29,570,31],[500,30,570,32,"target"],[500,36,570,38],[500,38,570,40,"mutation"],[500,46,570,48],[500,51,570,53],[501,8,571,12],[501,14,571,18,"newFrame"],[501,22,571,26],[501,25,571,29],[501,29,571,33],[501,30,571,34,"rafStamps"],[501,39,571,43],[501,40,571,44,"invokeId"],[501,48,571,52],[501,52,572,16],[501,56,572,20],[501,57,572,21,"rafStamps"],[501,66,572,30],[501,67,572,31,"latestId"],[501,75,572,39],[501,80,572,44],[501,84,572,48],[501,85,572,49,"rafStamps"],[501,94,572,58],[501,95,572,59,"invokeId"],[501,103,572,67],[502,8,573,12],[502,12,573,16,"newFrame"],[502,20,573,24],[502,24,573,28],[502,25,573,29],[502,29,573,33],[502,30,573,34,"rafStamps"],[502,39,573,43],[502,40,573,44,"invokeId"],[502,48,573,52],[502,50,574,16],[502,54,574,20],[502,55,574,21,"rafStamps"],[502,64,574,30],[502,65,574,31,"invokeId"],[502,73,574,39],[502,76,574,42],[502,80,574,46],[502,81,574,47,"rafStamps"],[502,90,574,56],[502,91,574,57,"latestId"],[502,99,574,65],[503,8,575,12],[503,12,575,16],[503,13,575,17],[503,17,575,21],[503,18,575,22,"pendingCanvasMutations"],[503,40,575,44],[503,41,575,45,"has"],[503,44,575,48],[503,45,575,49,"target"],[503,51,575,55],[503,52,575,56],[503,54,575,58],[504,10,576,16],[504,14,576,20],[504,15,576,21,"pendingCanvasMutations"],[504,37,576,43],[504,38,576,44,"set"],[504,41,576,47],[504,42,576,48,"target"],[504,48,576,54],[504,50,576,56],[504,52,576,58],[504,53,576,59],[505,8,577,12],[506,8,578,12],[506,12,578,16],[506,13,578,17,"pendingCanvasMutations"],[506,35,578,39],[506,36,578,40,"get"],[506,39,578,43],[506,40,578,44,"target"],[506,46,578,50],[506,47,578,51],[506,48,578,52,"push"],[506,52,578,56],[506,53,578,57,"mutation"],[506,61,578,65],[506,62,578,66],[507,6,579,8],[507,7,579,9],[508,6,580,8],[508,12,580,14],[509,8,580,16,"sampling"],[509,16,580,24],[509,19,580,27],[509,24,580,32],[510,8,580,34,"win"],[510,11,580,37],[511,8,580,39,"blockClass"],[511,18,580,49],[512,8,580,51,"blockSelector"],[512,21,580,64],[513,8,580,66,"unblockSelector"],[513,23,580,81],[514,8,580,83,"maxCanvasSize"],[514,21,580,96],[515,8,580,98,"recordCanvas"],[515,20,580,110],[516,8,580,112,"dataURLOptions"],[516,22,580,126],[517,8,580,128,"errorHandler"],[518,6,580,142],[518,7,580,143],[518,10,580,146,"options"],[518,17,580,153],[519,6,581,8],[519,10,581,12],[519,11,581,13,"mutationCb"],[519,21,581,23],[519,24,581,26,"options"],[519,31,581,33],[519,32,581,34,"mutationCb"],[519,42,581,44],[520,6,582,8],[520,10,582,12],[520,11,582,13,"mirror"],[520,17,582,19],[520,20,582,22,"options"],[520,27,582,29],[520,28,582,30,"mirror"],[520,34,582,36],[521,6,583,8],[521,10,583,12],[521,11,583,13,"options"],[521,18,583,20],[521,21,583,23,"options"],[521,28,583,30],[522,6,584,8],[522,10,584,12,"errorHandler"],[522,22,584,24],[522,24,584,26],[523,8,585,12,"registerErrorHandler"],[523,28,585,32],[523,29,585,33,"errorHandler"],[523,41,585,45],[523,42,585,46],[524,6,586,8],[525,6,587,8],[525,10,587,13,"recordCanvas"],[525,22,587,25],[525,26,587,29],[525,33,587,36,"sampling"],[525,41,587,44],[525,46,587,49],[525,54,587,57],[525,58,588,12,"options"],[525,65,588,19],[525,66,588,20,"enableManualSnapshot"],[525,86,588,40],[525,88,588,42],[526,8,589,12],[526,12,589,16],[526,13,589,17,"worker"],[526,19,589,23],[526,22,589,26],[526,26,589,30],[526,27,589,31,"initFPSWorker"],[526,40,589,44],[526,41,589,45],[526,42,589,46],[527,6,590,8],[528,6,591,8],[528,10,591,12],[528,11,591,13,"addWindow"],[528,20,591,22],[528,21,591,23,"win"],[528,24,591,26],[528,25,591,27],[529,6,592,8],[529,10,592,12,"options"],[529,17,592,19],[529,18,592,20,"enableManualSnapshot"],[529,38,592,40],[529,40,592,42],[530,8,593,12],[531,6,594,8],[532,6,595,8,"callbackWrapper"],[532,21,595,23],[532,22,595,24],[532,28,595,30],[533,8,596,12],[533,12,596,16,"recordCanvas"],[533,24,596,28],[533,28,596,32,"sampling"],[533,36,596,40],[533,41,596,45],[533,46,596,50],[533,48,596,52],[534,10,597,16],[534,14,597,20],[534,15,597,21,"startRAFTimestamping"],[534,35,597,41],[534,36,597,42],[534,37,597,43],[535,10,598,16],[535,14,598,20],[535,15,598,21,"startPendingCanvasMutationFlusher"],[535,48,598,54],[535,49,598,55],[535,50,598,56],[536,8,599,12],[537,8,600,12],[537,12,600,16,"recordCanvas"],[537,24,600,28],[537,28,600,32],[537,35,600,39,"sampling"],[537,43,600,47],[537,48,600,52],[537,56,600,60],[537,58,600,62],[538,10,601,16],[538,14,601,20],[538,15,601,21,"initCanvasFPSObserver"],[538,36,601,42],[538,37,601,43,"sampling"],[538,45,601,51],[538,47,601,53,"blockClass"],[538,57,601,63],[538,59,601,65,"blockSelector"],[538,72,601,78],[538,74,601,80,"unblockSelector"],[538,89,601,95],[538,91,601,97,"maxCanvasSize"],[538,104,601,110],[538,106,601,112],[539,12,602,20,"dataURLOptions"],[540,10,603,16],[540,11,603,17],[540,12,603,18],[541,8,604,12],[542,6,605,8],[542,7,605,9],[542,8,605,10],[542,9,605,11],[542,10,605,12],[543,4,606,4],[544,4,607,4,"addWindow"],[544,13,607,13,"addWindow"],[544,14,607,14,"win"],[544,17,607,17],[544,19,607,19],[545,6,608,8],[545,12,608,14],[546,8,608,16,"sampling"],[546,16,608,24],[546,19,608,27],[546,24,608,32],[547,8,608,34,"blockClass"],[547,18,608,44],[548,8,608,46,"blockSelector"],[548,21,608,59],[549,8,608,61,"unblockSelector"],[549,23,608,76],[550,8,608,78,"recordCanvas"],[550,20,608,90],[551,8,608,92,"enableManualSnapshot"],[552,6,608,114],[552,7,608,115],[552,10,608,118],[552,14,608,122],[552,15,608,123,"options"],[552,22,608,130],[553,6,609,8],[553,10,609,12],[553,14,609,16],[553,15,609,17,"windowsSet"],[553,25,609,27],[553,26,609,28,"has"],[553,29,609,31],[553,30,609,32,"win"],[553,33,609,35],[553,34,609,36],[553,36,610,12],[554,6,611,8],[554,10,611,12,"enableManualSnapshot"],[554,30,611,32],[554,32,611,34],[555,8,612,12],[555,12,612,16],[555,13,612,17,"windowsSet"],[555,23,612,27],[555,24,612,28,"add"],[555,27,612,31],[555,28,612,32,"win"],[555,31,612,35],[555,32,612,36],[556,8,613,12],[556,12,613,16],[556,13,613,17,"windows"],[556,20,613,24],[556,21,613,25,"push"],[556,25,613,29],[556,26,613,30],[556,30,613,34,"WeakRef"],[556,37,613,41],[556,38,613,42,"win"],[556,41,613,45],[556,42,613,46],[556,43,613,47],[557,8,614,12],[558,6,615,8],[559,6,616,8,"callbackWrapper"],[559,21,616,23],[559,22,616,24],[559,28,616,30],[560,8,617,12],[560,12,617,16,"recordCanvas"],[560,24,617,28],[560,28,617,32,"sampling"],[560,36,617,40],[560,41,617,45],[560,46,617,50],[560,48,617,52],[561,10,618,16],[561,14,618,20],[561,15,618,21,"initCanvasMutationObserver"],[561,41,618,47],[561,42,618,48,"win"],[561,45,618,51],[561,47,618,53,"blockClass"],[561,57,618,63],[561,59,618,65,"blockSelector"],[561,72,618,78],[561,74,618,80,"unblockSelector"],[561,89,618,95],[561,90,618,96],[562,8,619,12],[563,8,620,12],[563,12,620,16,"recordCanvas"],[563,24,620,28],[563,28,620,32],[563,35,620,39,"sampling"],[563,43,620,47],[563,48,620,52],[563,56,620,60],[563,58,620,62],[564,10,621,16],[564,16,621,22,"canvasContextReset"],[564,34,621,40],[564,37,621,43,"initCanvasContextObserver"],[564,62,621,68],[564,63,621,69,"win"],[564,66,621,72],[564,68,621,74,"blockClass"],[564,78,621,84],[564,80,621,86,"blockSelector"],[564,93,621,99],[564,95,621,101,"unblockSelector"],[564,110,621,116],[564,112,621,118],[564,116,621,122],[564,117,621,123],[565,10,622,16],[565,14,622,20],[565,15,622,21,"restoreHandlers"],[565,30,622,36],[565,31,622,37,"push"],[565,35,622,41],[565,36,622,42],[565,42,622,48],[566,12,623,20,"canvasContextReset"],[566,30,623,38],[566,31,623,39],[566,32,623,40],[567,10,624,16],[567,11,624,17],[567,12,624,18],[568,8,625,12],[569,6,626,8],[569,7,626,9],[569,8,626,10],[569,9,626,11],[569,10,626,12],[570,6,627,8],[570,10,627,12],[570,11,627,13,"windowsSet"],[570,21,627,23],[570,22,627,24,"add"],[570,25,627,27],[570,26,627,28,"win"],[570,29,627,31],[570,30,627,32],[571,6,628,8],[571,10,628,12],[571,11,628,13,"windows"],[571,18,628,20],[571,19,628,21,"push"],[571,23,628,25],[571,24,628,26],[571,28,628,30,"WeakRef"],[571,35,628,37],[571,36,628,38,"win"],[571,39,628,41],[571,40,628,42],[571,41,628,43],[572,4,629,4],[573,4,630,4,"addShadowRoot"],[573,17,630,17,"addShadowRoot"],[573,18,630,18,"shadowRoot"],[573,28,630,28],[573,30,630,30],[574,6,631,8],[574,10,631,12],[574,11,631,13,"shadowDoms"],[574,21,631,23],[574,22,631,24,"add"],[574,25,631,27],[574,26,631,28],[574,30,631,32,"WeakRef"],[574,37,631,39],[574,38,631,40,"shadowRoot"],[574,48,631,50],[574,49,631,51],[574,50,631,52],[575,4,632,4],[576,4,633,4,"resetShadowRoots"],[576,20,633,20,"resetShadowRoots"],[576,21,633,20],[576,23,633,23],[577,6,634,8],[577,10,634,12],[577,11,634,13,"shadowDoms"],[577,21,634,23],[577,24,634,26],[577,28,634,30,"Set"],[577,31,634,33],[577,32,634,34],[577,33,634,35],[578,4,635,4],[579,4,636,4,"initFPSWorker"],[579,17,636,17,"initFPSWorker"],[579,18,636,17],[579,20,636,20],[580,6,637,8],[580,12,637,14,"worker"],[580,18,637,20],[580,21,637,23],[580,25,637,27,"Worker"],[580,31,637,33],[580,32,637,34,"t"],[580,33,637,35],[580,34,637,36],[580,35,637,37],[580,36,637,38],[581,6,638,8,"worker"],[581,12,638,14],[581,13,638,15,"onmessage"],[581,22,638,24],[581,25,638,28,"e"],[581,26,638,29],[581,30,638,34],[582,8,639,12],[582,14,639,18,"data"],[582,18,639,22],[582,21,639,25,"e"],[582,22,639,26],[582,23,639,27,"data"],[582,27,639,31],[583,8,640,12],[583,14,640,18],[584,10,640,20,"id"],[585,8,640,23],[585,9,640,24],[585,12,640,27,"data"],[585,16,640,31],[586,8,641,12],[586,12,641,16],[586,13,641,17,"snapshotInProgressMap"],[586,34,641,38],[586,35,641,39,"set"],[586,38,641,42],[586,39,641,43,"id"],[586,41,641,45],[586,43,641,47],[586,48,641,52],[586,49,641,53],[587,8,642,12],[587,12,642,16],[587,14,642,18],[587,22,642,26],[587,26,642,30,"data"],[587,30,642,34],[587,31,642,35],[587,33,643,16],[588,8,644,12],[588,14,644,18],[589,10,644,20,"base64"],[589,16,644,26],[590,10,644,28,"type"],[590,14,644,32],[591,10,644,34,"width"],[591,15,644,39],[592,10,644,41,"height"],[593,8,644,48],[593,9,644,49],[593,12,644,52,"data"],[593,16,644,56],[594,8,645,12],[594,12,645,16],[594,13,645,17,"mutationCb"],[594,23,645,27],[594,24,645,28],[595,10,646,16,"id"],[595,12,646,18],[596,10,647,16,"type"],[596,14,647,20],[596,16,647,22,"CanvasContext"],[596,29,647,35],[596,30,647,36],[596,34,647,40],[596,35,647,41],[597,10,648,16,"commands"],[597,18,648,24],[597,20,648,26],[597,21,649,20],[598,12,650,24,"property"],[598,20,650,32],[598,22,650,34],[598,33,650,45],[599,12,651,24,"args"],[599,16,651,28],[599,18,651,30],[599,19,651,31],[599,20,651,32],[599,22,651,34],[599,23,651,35],[599,25,651,37,"width"],[599,30,651,42],[599,32,651,44,"height"],[599,38,651,50],[600,10,652,20],[600,11,652,21],[600,13,653,20],[601,12,654,24,"property"],[601,20,654,32],[601,22,654,34],[601,33,654,45],[602,12,655,24,"args"],[602,16,655,28],[602,18,655,30],[602,19,656,28],[603,14,657,32,"rr_type"],[603,21,657,39],[603,23,657,41],[603,36,657,54],[604,14,658,32,"args"],[604,18,658,36],[604,20,658,38],[604,21,659,36],[605,16,660,40,"rr_type"],[605,23,660,47],[605,25,660,49],[605,31,660,55],[606,16,661,40,"data"],[606,20,661,44],[606,22,661,46],[606,23,661,47],[607,18,661,49,"rr_type"],[607,25,661,56],[607,27,661,58],[607,40,661,71],[608,18,661,73,"base64"],[609,16,661,80],[609,17,661,81],[609,18,661,82],[610,16,662,40,"type"],[611,14,663,36],[611,15,663,37],[612,12,665,28],[612,13,665,29],[612,15,666,28],[612,16,666,29],[612,18,667,28],[612,19,667,29],[612,21,668,28,"width"],[612,26,668,33],[612,28,669,28,"height"],[612,34,669,34],[613,10,671,20],[613,11,671,21],[614,8,673,12],[614,9,673,13],[614,10,673,14],[615,6,674,8],[615,7,674,9],[616,6,675,8],[616,13,675,15,"worker"],[616,19,675,21],[617,4,676,4],[618,4,677,4,"initCanvasFPSObserver"],[618,25,677,25,"initCanvasFPSObserver"],[618,26,677,26,"fps"],[618,29,677,29],[618,31,677,31,"blockClass"],[618,41,677,41],[618,43,677,43,"blockSelector"],[618,56,677,56],[618,58,677,58,"unblockSelector"],[618,73,677,73],[618,75,677,75,"maxCanvasSize"],[618,88,677,88],[618,90,677,90,"options"],[618,97,677,97],[618,99,677,99],[619,6,678,8],[619,12,678,14,"rafId"],[619,17,678,19],[619,20,678,22],[619,24,678,26],[619,25,678,27,"takeSnapshot"],[619,37,678,39],[619,38,678,40],[619,43,678,45],[619,45,678,47,"fps"],[619,48,678,50],[619,50,678,52,"blockClass"],[619,60,678,62],[619,62,678,64,"blockSelector"],[619,75,678,77],[619,77,678,79,"unblockSelector"],[619,92,678,94],[619,94,678,96,"maxCanvasSize"],[619,107,678,109],[619,109,678,111,"options"],[619,116,678,118],[619,117,678,119,"dataURLOptions"],[619,131,678,133],[619,132,678,134],[620,6,679,8],[620,10,679,12],[620,11,679,13,"restoreHandlers"],[620,26,679,28],[620,27,679,29,"push"],[620,31,679,33],[620,32,679,34],[620,38,679,40],[621,8,680,12,"cancelAnimationFrame"],[621,28,680,32],[621,29,680,33,"rafId"],[621,34,680,38],[621,35,680,39],[622,6,681,8],[622,7,681,9],[622,8,681,10],[623,4,682,4],[624,4,683,4,"initCanvasMutationObserver"],[624,30,683,30,"initCanvasMutationObserver"],[624,31,683,31,"win"],[624,34,683,34],[624,36,683,36,"blockClass"],[624,46,683,46],[624,48,683,48,"blockSelector"],[624,61,683,61],[624,63,683,63,"unblockSelector"],[624,78,683,78],[624,80,683,80],[625,6,684,8],[625,12,684,14,"canvasContextReset"],[625,30,684,32],[625,33,684,35,"initCanvasContextObserver"],[625,58,684,60],[625,59,684,61,"win"],[625,62,684,64],[625,64,684,66,"blockClass"],[625,74,684,76],[625,76,684,78,"blockSelector"],[625,89,684,91],[625,91,684,93,"unblockSelector"],[625,106,684,108],[625,108,684,110],[625,113,684,115],[625,114,684,116],[626,6,685,8],[626,12,685,14,"canvas2DReset"],[626,25,685,27],[626,28,685,30,"initCanvas2DMutationObserver"],[626,56,685,58],[626,57,685,59],[626,61,685,63],[626,62,685,64,"processMutation"],[626,77,685,79],[626,78,685,80,"bind"],[626,82,685,84],[626,83,685,85],[626,87,685,89],[626,88,685,90],[626,90,685,92,"win"],[626,93,685,95],[626,95,685,97,"blockClass"],[626,105,685,107],[626,107,685,109,"blockSelector"],[626,120,685,122],[626,122,685,124,"unblockSelector"],[626,137,685,139],[626,138,685,140],[627,6,686,8],[627,12,686,14,"canvasWebGL1and2Reset"],[627,33,686,35],[627,36,686,38,"initCanvasWebGLMutationObserver"],[627,67,686,69],[627,68,686,70],[627,72,686,74],[627,73,686,75,"processMutation"],[627,88,686,90],[627,89,686,91,"bind"],[627,93,686,95],[627,94,686,96],[627,98,686,100],[627,99,686,101],[627,101,686,103,"win"],[627,104,686,106],[627,106,686,108,"blockClass"],[627,116,686,118],[627,118,686,120,"blockSelector"],[627,131,686,133],[627,133,686,135,"unblockSelector"],[627,148,686,150],[627,150,686,152],[627,154,686,156],[627,155,686,157,"mirror"],[627,161,686,163],[627,162,686,164],[628,6,687,8],[628,10,687,12],[628,11,687,13,"restoreHandlers"],[628,26,687,28],[628,27,687,29,"push"],[628,31,687,33],[628,32,687,34],[628,38,687,40],[629,8,688,12,"canvasContextReset"],[629,26,688,30],[629,27,688,31],[629,28,688,32],[630,8,689,12,"canvas2DReset"],[630,21,689,25],[630,22,689,26],[630,23,689,27],[631,8,690,12,"canvasWebGL1and2Reset"],[631,29,690,33],[631,30,690,34],[631,31,690,35],[632,6,691,8],[632,7,691,9],[632,8,691,10],[633,4,692,4],[634,4,693,4,"snapshot"],[634,12,693,12,"snapshot"],[634,13,693,13,"canvasElement"],[634,26,693,26],[634,28,693,28],[635,6,694,8],[635,12,694,14],[636,8,694,16,"options"],[637,6,694,24],[637,7,694,25],[637,10,694,28],[637,14,694,32],[638,6,695,8],[638,12,695,14,"rafId"],[638,17,695,19],[638,20,695,22],[638,24,695,26],[638,25,695,27,"takeSnapshot"],[638,37,695,39],[638,38,695,40],[638,42,695,44],[638,44,695,46,"options"],[638,51,695,53],[638,52,695,54,"sampling"],[638,60,695,62],[638,65,695,67],[638,70,695,72],[638,73,695,75],[638,74,695,76],[638,77,695,79,"options"],[638,84,695,86],[638,85,695,87,"sampling"],[638,93,695,95],[638,97,695,99],[638,98,695,100],[638,100,695,102,"options"],[638,107,695,109],[638,108,695,110,"blockClass"],[638,118,695,120],[638,120,695,122,"options"],[638,127,695,129],[638,128,695,130,"blockSelector"],[638,141,695,143],[638,143,695,145,"options"],[638,150,695,152],[638,151,695,153,"unblockSelector"],[638,166,695,168],[638,168,695,170,"options"],[638,175,695,177],[638,176,695,178,"maxCanvasSize"],[638,189,695,191],[638,191,695,193,"options"],[638,198,695,200],[638,199,695,201,"dataURLOptions"],[638,213,695,215],[638,215,695,217,"canvasElement"],[638,228,695,230],[638,229,695,231],[639,6,696,8],[639,10,696,12],[639,11,696,13,"restoreHandlers"],[639,26,696,28],[639,27,696,29,"push"],[639,31,696,33],[639,32,696,34],[639,38,696,40],[640,8,697,12,"cancelAnimationFrame"],[640,28,697,32],[640,29,697,33,"rafId"],[640,34,697,38],[640,35,697,39],[641,6,698,8],[641,7,698,9],[641,8,698,10],[642,4,699,4],[643,4,700,4,"takeSnapshot"],[643,16,700,16,"takeSnapshot"],[643,17,700,17,"isManualSnapshot"],[643,33,700,33],[643,35,700,35,"fps"],[643,38,700,38],[643,40,700,40,"blockClass"],[643,50,700,50],[643,52,700,52,"blockSelector"],[643,65,700,65],[643,67,700,67,"unblockSelector"],[643,82,700,82],[643,84,700,84,"maxCanvasSize"],[643,97,700,97],[643,99,700,99,"dataURLOptions"],[643,113,700,113],[643,115,700,115,"canvasElement"],[643,128,700,128],[643,130,700,130],[644,6,701,8],[644,12,701,14,"timeBetweenSnapshots"],[644,32,701,34],[644,35,701,37],[644,39,701,41],[644,42,701,44,"fps"],[644,45,701,47],[645,6,702,8],[645,10,702,12,"lastSnapshotTime"],[645,26,702,28],[645,29,702,31],[645,30,702,32],[646,6,703,8],[646,10,703,12,"rafId"],[646,15,703,17],[647,6,704,8],[647,12,704,14,"getCanvas"],[647,21,704,23],[647,24,704,27,"canvasElement"],[647,37,704,40],[647,41,704,45],[648,8,705,12],[648,12,705,16,"canvasElement"],[648,25,705,29],[648,27,705,31],[649,10,706,16],[649,17,706,23],[649,18,706,24,"canvasElement"],[649,31,706,37],[649,32,706,38],[650,8,707,12],[651,8,708,12],[651,14,708,18,"matchedCanvas"],[651,27,708,31],[651,30,708,34],[651,32,708,36],[652,8,709,12],[652,14,709,18,"searchCanvas"],[652,26,709,30],[652,29,709,34,"root"],[652,33,709,38],[652,37,709,43],[653,10,710,16,"root"],[653,14,710,20],[653,15,710,21,"querySelectorAll"],[653,31,710,37],[653,32,710,38],[653,40,710,46],[653,41,710,47],[653,42,710,48,"forEach"],[653,49,710,55],[653,50,710,57,"canvas"],[653,56,710,63],[653,60,710,68],[654,12,711,20],[654,16,711,24],[654,17,711,25,"isBlocked"],[654,26,711,34],[654,27,711,35,"canvas"],[654,33,711,41],[654,35,711,43,"blockClass"],[654,45,711,53],[654,47,711,55,"blockSelector"],[654,60,711,68],[654,62,711,70,"unblockSelector"],[654,77,711,85],[654,78,711,86],[654,80,711,88],[655,14,712,24,"matchedCanvas"],[655,27,712,37],[655,28,712,38,"push"],[655,32,712,42],[655,33,712,43,"canvas"],[655,39,712,49],[655,40,712,50],[656,12,713,20],[657,10,714,16],[657,11,714,17],[657,12,714,18],[658,8,715,12],[658,9,715,13],[659,8,716,12],[659,13,716,17],[659,19,716,23,"item"],[659,23,716,27],[659,27,716,31],[659,31,716,35],[659,32,716,36,"windows"],[659,39,716,43],[659,41,716,45],[660,10,717,16],[660,16,717,22,"window"],[660,22,717,28],[660,25,717,31,"item"],[660,29,717,35],[660,30,717,36,"deref"],[660,35,717,41],[660,36,717,42],[660,37,717,43],[661,10,718,16],[661,14,718,20,"window"],[661,20,718,26],[661,22,718,28],[662,12,719,20,"searchCanvas"],[662,24,719,32],[662,25,719,33,"window"],[662,31,719,39],[662,32,719,40,"document"],[662,40,719,48],[662,41,719,49],[663,10,720,16],[664,8,721,12],[665,8,722,12],[665,13,722,17],[665,19,722,23,"item"],[665,23,722,27],[665,27,722,31],[665,31,722,35],[665,32,722,36,"shadowDoms"],[665,42,722,46],[665,44,722,48],[666,10,723,16],[666,16,723,22,"shadowRoot"],[666,26,723,32],[666,29,723,35,"item"],[666,33,723,39],[666,34,723,40,"deref"],[666,39,723,45],[666,40,723,46],[666,41,723,47],[667,10,724,16],[667,14,724,20,"shadowRoot"],[667,24,724,30],[667,26,724,32],[668,12,725,20,"searchCanvas"],[668,24,725,32],[668,25,725,33,"shadowRoot"],[668,35,725,43],[668,36,725,44],[669,10,726,16],[670,8,727,12],[671,8,728,12],[671,15,728,19,"matchedCanvas"],[671,28,728,32],[672,6,729,8],[672,7,729,9],[673,6,730,8],[673,12,730,14,"takeCanvasSnapshots"],[673,31,730,33],[673,34,730,37,"timestamp"],[673,43,730,46],[673,47,730,51],[674,8,731,12],[674,12,731,16],[674,13,731,17],[674,17,731,21],[674,18,731,22,"windows"],[674,25,731,29],[674,26,731,30,"length"],[674,32,731,36],[674,34,731,38],[675,10,732,16],[676,8,733,12],[677,8,734,12],[677,12,734,16,"lastSnapshotTime"],[677,28,734,32],[677,32,735,16,"timestamp"],[677,41,735,25],[677,44,735,28,"lastSnapshotTime"],[677,60,735,44],[677,63,735,47,"timeBetweenSnapshots"],[677,83,735,67],[677,85,735,69],[678,10,736,16,"rafId"],[678,15,736,21],[678,18,736,24,"onRequestAnimationFrame"],[678,41,736,47],[678,42,736,48,"takeCanvasSnapshots"],[678,61,736,67],[678,62,736,68],[679,10,737,16],[680,8,738,12],[681,8,739,12,"lastSnapshotTime"],[681,24,739,28],[681,27,739,31,"timestamp"],[681,36,739,40],[682,8,740,12,"getCanvas"],[682,17,740,21],[682,18,740,22,"canvasElement"],[682,31,740,35],[682,32,740,36],[682,33,740,37,"forEach"],[682,40,740,44],[682,41,740,46,"canvas"],[682,47,740,52],[682,51,740,57],[683,10,741,16],[683,14,741,20],[683,15,741,21],[683,19,741,25],[683,20,741,26,"mirror"],[683,26,741,32],[683,27,741,33,"hasNode"],[683,34,741,40],[683,35,741,41,"canvas"],[683,41,741,47],[683,42,741,48],[683,44,741,50],[684,12,742,20],[685,10,743,16],[686,10,744,16],[686,16,744,22,"id"],[686,18,744,24],[686,21,744,27],[686,25,744,31],[686,26,744,32,"mirror"],[686,32,744,38],[686,33,744,39,"getId"],[686,38,744,44],[686,39,744,45,"canvas"],[686,45,744,51],[686,46,744,52],[687,10,745,16],[687,14,745,20],[687,18,745,24],[687,19,745,25,"snapshotInProgressMap"],[687,40,745,46],[687,41,745,47,"get"],[687,44,745,50],[687,45,745,51,"id"],[687,47,745,53],[687,48,745,54],[687,50,746,20],[688,10,747,16],[688,14,747,20],[688,15,747,21,"canvas"],[688,21,747,27],[688,22,747,28,"width"],[688,27,747,33],[688,31,747,37],[688,32,747,38,"canvas"],[688,38,747,44],[688,39,747,45,"height"],[688,45,747,51],[688,47,748,20],[689,10,749,16],[689,14,749,20],[689,15,749,21,"snapshotInProgressMap"],[689,36,749,42],[689,37,749,43,"set"],[689,40,749,46],[689,41,749,47,"id"],[689,43,749,49],[689,45,749,51],[689,49,749,55],[689,50,749,56],[690,10,750,16],[690,14,750,20],[690,15,750,21,"isManualSnapshot"],[690,31,750,37],[690,35,751,20],[690,36,751,21],[690,43,751,28],[690,45,751,30],[690,53,751,38],[690,54,751,39],[690,55,751,40,"includes"],[690,63,751,48],[690,64,751,49,"canvas"],[690,70,751,55],[690,71,751,56,"__context"],[690,80,751,65],[690,81,751,66],[690,83,751,68],[691,12,752,20],[691,18,752,26,"context"],[691,25,752,33],[691,28,752,36,"canvas"],[691,34,752,42],[691,35,752,43,"getContext"],[691,45,752,53],[691,46,752,54,"canvas"],[691,52,752,60],[691,53,752,61,"__context"],[691,62,752,70],[691,63,752,71],[692,12,753,20],[692,16,753,24],[692,20,753,24,"_optionalChain"],[692,40,753,38],[692,42,753,39],[692,43,753,40,"context"],[692,50,753,47],[692,52,753,49],[692,68,753,65],[692,70,753,67,"_4"],[692,72,753,69],[692,76,753,73,"_4"],[692,78,753,75],[692,79,753,76,"getContextAttributes"],[692,99,753,96],[692,101,753,98],[692,107,753,104],[692,109,753,106,"_5"],[692,111,753,108],[692,115,753,112,"_5"],[692,117,753,114],[692,118,753,115],[692,119,753,116],[692,121,753,118],[692,137,753,134],[692,139,753,136,"_6"],[692,141,753,138],[692,145,753,142,"_6"],[692,147,753,144],[692,148,753,145,"preserveDrawingBuffer"],[692,169,753,166],[692,170,753,167],[692,171,753,168],[692,176,753,173],[692,181,753,178],[692,183,753,180],[693,14,754,24,"context"],[693,21,754,31],[693,22,754,32,"clear"],[693,27,754,37],[693,28,754,38,"context"],[693,35,754,45],[693,36,754,46,"COLOR_BUFFER_BIT"],[693,52,754,62],[693,53,754,63],[694,12,755,20],[695,10,756,16],[696,10,757,16,"createImageBitmap"],[696,27,757,33],[696,28,757,34,"canvas"],[696,34,757,40],[696,35,757,41],[696,36,758,21,"then"],[696,40,758,25],[696,41,758,27,"bitmap"],[696,47,758,33],[696,51,758,38],[697,12,759,20],[697,16,759,20,"_optionalChain"],[697,36,759,34],[697,38,759,35],[697,39,759,36],[697,43,759,40],[697,45,759,42],[697,53,759,50],[697,55,759,52,"_7"],[697,57,759,54],[697,61,759,58,"_7"],[697,63,759,60],[697,64,759,61,"worker"],[697,70,759,67],[697,72,759,69],[697,88,759,85],[697,90,759,87,"_8"],[697,92,759,89],[697,96,759,93,"_8"],[697,98,759,95],[697,99,759,96,"postMessage"],[697,110,759,107],[697,112,759,109],[697,118,759,115],[697,120,759,117,"_9"],[697,122,759,119],[697,126,759,123,"_9"],[697,128,759,125],[697,129,759,126],[698,14,760,24,"id"],[698,16,760,26],[699,14,761,24,"bitmap"],[699,20,761,30],[700,14,762,24,"width"],[700,19,762,29],[700,21,762,31,"canvas"],[700,27,762,37],[700,28,762,38,"width"],[700,33,762,43],[701,14,763,24,"height"],[701,20,763,30],[701,22,763,32,"canvas"],[701,28,763,38],[701,29,763,39,"height"],[701,35,763,45],[702,14,764,24,"dataURLOptions"],[702,28,764,38],[703,14,765,24,"maxCanvasSize"],[704,12,766,20],[704,13,766,21],[704,15,766,23],[704,16,766,24,"bitmap"],[704,22,766,30],[704,23,766,31],[704,24,766,32],[704,25,766,33],[704,26,766,34],[705,10,767,16],[705,11,767,17],[705,12,767,18],[705,13,768,21,"catch"],[705,18,768,26],[705,19,768,28,"error"],[705,24,768,33],[705,28,768,38],[706,12,769,20,"callbackWrapper"],[706,27,769,35],[706,28,769,36],[706,34,769,42],[707,14,770,24],[707,20,770,30,"error"],[707,25,770,35],[708,12,771,20],[708,13,771,21],[708,14,771,22],[708,15,771,23],[708,16,771,24],[709,10,772,16],[709,11,772,17],[709,12,772,18],[710,8,773,12],[710,9,773,13],[710,10,773,14],[711,8,774,12],[711,12,774,16],[711,13,774,17,"isManualSnapshot"],[711,29,774,33],[711,31,774,35],[712,10,775,16,"rafId"],[712,15,775,21],[712,18,775,24,"onRequestAnimationFrame"],[712,41,775,47],[712,42,775,48,"takeCanvasSnapshots"],[712,61,775,67],[712,62,775,68],[713,8,776,12],[714,6,777,8],[714,7,777,9],[715,6,778,8,"rafId"],[715,11,778,13],[715,14,778,16,"onRequestAnimationFrame"],[715,37,778,39],[715,38,778,40,"takeCanvasSnapshots"],[715,57,778,59],[715,58,778,60],[716,6,779,8],[716,13,779,15,"rafId"],[716,18,779,20],[717,4,780,4],[718,4,781,4,"startPendingCanvasMutationFlusher"],[718,37,781,37,"startPendingCanvasMutationFlusher"],[718,38,781,37],[718,40,781,40],[719,6,782,8,"onRequestAnimationFrame"],[719,29,782,31],[719,30,782,32],[719,36,782,38],[719,40,782,42],[719,41,782,43,"flushPendingCanvasMutations"],[719,68,782,70],[719,69,782,71],[719,70,782,72],[719,71,782,73],[720,4,783,4],[721,4,784,4,"startRAFTimestamping"],[721,24,784,24,"startRAFTimestamping"],[721,25,784,24],[721,27,784,27],[722,6,785,8],[722,12,785,14,"setLatestRAFTimestamp"],[722,33,785,35],[722,36,785,39,"timestamp"],[722,45,785,48],[722,49,785,53],[723,8,786,12],[723,12,786,16],[723,13,786,17,"rafStamps"],[723,22,786,26],[723,23,786,27,"latestId"],[723,31,786,35],[723,34,786,38,"timestamp"],[723,43,786,47],[724,8,787,12,"onRequestAnimationFrame"],[724,31,787,35],[724,32,787,36,"setLatestRAFTimestamp"],[724,53,787,57],[724,54,787,58],[725,6,788,8],[725,7,788,9],[726,6,789,8,"onRequestAnimationFrame"],[726,29,789,31],[726,30,789,32,"setLatestRAFTimestamp"],[726,51,789,53],[726,52,789,54],[727,4,790,4],[728,4,791,4,"flushPendingCanvasMutations"],[728,31,791,31,"flushPendingCanvasMutations"],[728,32,791,31],[728,34,791,34],[729,6,792,8],[729,10,792,12],[729,11,792,13,"pendingCanvasMutations"],[729,33,792,35],[729,34,792,36,"forEach"],[729,41,792,43],[729,42,792,44],[729,43,792,45,"values"],[729,49,792,51],[729,51,792,53,"canvas"],[729,57,792,59],[729,62,792,64],[730,8,793,12],[730,14,793,18,"id"],[730,16,793,20],[730,19,793,23],[730,23,793,27],[730,24,793,28,"mirror"],[730,30,793,34],[730,31,793,35,"getId"],[730,36,793,40],[730,37,793,41,"canvas"],[730,43,793,47],[730,44,793,48],[731,8,794,12],[731,12,794,16],[731,13,794,17,"flushPendingCanvasMutationFor"],[731,42,794,46],[731,43,794,47,"canvas"],[731,49,794,53],[731,51,794,55,"id"],[731,53,794,57],[731,54,794,58],[732,6,795,8],[732,7,795,9],[732,8,795,10],[733,6,796,8,"onRequestAnimationFrame"],[733,29,796,31],[733,30,796,32],[733,36,796,38],[733,40,796,42],[733,41,796,43,"flushPendingCanvasMutations"],[733,68,796,70],[733,69,796,71],[733,70,796,72],[733,71,796,73],[734,4,797,4],[735,4,798,4,"flushPendingCanvasMutationFor"],[735,33,798,33,"flushPendingCanvasMutationFor"],[735,34,798,34,"canvas"],[735,40,798,40],[735,42,798,42,"id"],[735,44,798,44],[735,46,798,46],[736,6,799,8],[736,10,799,12],[736,14,799,16],[736,15,799,17,"frozen"],[736,21,799,23],[736,25,799,27],[736,29,799,31],[736,30,799,32,"locked"],[736,36,799,38],[736,38,799,40],[737,8,800,12],[738,6,801,8],[739,6,802,8],[739,12,802,14,"valuesWithType"],[739,26,802,28],[739,29,802,31],[739,33,802,35],[739,34,802,36,"pendingCanvasMutations"],[739,56,802,58],[739,57,802,59,"get"],[739,60,802,62],[739,61,802,63,"canvas"],[739,67,802,69],[739,68,802,70],[740,6,803,8],[740,10,803,12],[740,11,803,13,"valuesWithType"],[740,25,803,27],[740,29,803,31,"id"],[740,31,803,33],[740,36,803,38],[740,37,803,39],[740,38,803,40],[740,40,804,12],[741,6,805,8],[741,12,805,14,"values"],[741,18,805,20],[741,21,805,23,"valuesWithType"],[741,35,805,37],[741,36,805,38,"map"],[741,39,805,41],[741,40,805,43,"value"],[741,45,805,48],[741,49,805,53],[742,8,806,12],[742,14,806,18],[743,10,806,20,"type"],[743,14,806,24],[744,10,806,26],[744,13,806,29,"rest"],[745,8,806,34],[745,9,806,35],[745,12,806,38,"value"],[745,17,806,43],[746,8,807,12],[746,15,807,19,"rest"],[746,19,807,23],[747,6,808,8],[747,7,808,9],[747,8,808,10],[748,6,809,8],[748,12,809,14],[749,8,809,16,"type"],[750,6,809,21],[750,7,809,22],[750,10,809,25,"valuesWithType"],[750,24,809,39],[750,25,809,40],[750,26,809,41],[750,27,809,42],[751,6,810,8],[751,10,810,12],[751,11,810,13,"mutationCb"],[751,21,810,23],[751,22,810,24],[752,8,810,26,"id"],[752,10,810,28],[753,8,810,30,"type"],[753,12,810,34],[754,8,810,36,"commands"],[754,16,810,44],[754,18,810,46,"values"],[755,6,810,53],[755,7,810,54],[755,8,810,55],[756,6,811,8],[756,10,811,12],[756,11,811,13,"pendingCanvasMutations"],[756,33,811,35],[756,34,811,36,"delete"],[756,40,811,42],[756,41,811,43,"canvas"],[756,47,811,49],[756,48,811,50],[757,4,812,4],[758,2,813,0],[759,2,815,0],[759,8,815,6,"CANVAS_QUALITY"],[759,22,815,20],[759,25,815,23],[760,4,816,2,"low"],[760,7,816,5],[760,9,816,7],[761,6,817,4,"sampling"],[761,14,817,12],[761,16,817,14],[762,8,818,6,"canvas"],[762,14,818,12],[762,16,818,14],[763,6,819,4],[763,7,819,5],[764,6,820,4,"dataURLOptions"],[764,20,820,18],[764,22,820,20],[765,8,821,6,"type"],[765,12,821,10],[765,14,821,12],[765,26,821,24],[766,8,822,6,"quality"],[766,15,822,13],[766,17,822,15],[767,6,823,4],[768,4,824,2],[768,5,824,3],[769,4,825,2,"medium"],[769,10,825,8],[769,12,825,10],[770,6,826,4,"sampling"],[770,14,826,12],[770,16,826,14],[771,8,827,6,"canvas"],[771,14,827,12],[771,16,827,14],[772,6,828,4],[772,7,828,5],[773,6,829,4,"dataURLOptions"],[773,20,829,18],[773,22,829,20],[774,8,830,6,"type"],[774,12,830,10],[774,14,830,12],[774,26,830,24],[775,8,831,6,"quality"],[775,15,831,13],[775,17,831,15],[776,6,832,4],[777,4,833,2],[777,5,833,3],[778,4,834,2,"high"],[778,8,834,6],[778,10,834,8],[779,6,835,4,"sampling"],[779,14,835,12],[779,16,835,14],[780,8,836,6,"canvas"],[780,14,836,12],[780,16,836,14],[781,6,837,4],[781,7,837,5],[782,6,838,4,"dataURLOptions"],[782,20,838,18],[782,22,838,20],[783,8,839,6,"type"],[783,12,839,10],[783,14,839,12],[783,26,839,24],[784,8,840,6,"quality"],[784,15,840,13],[784,17,840,15],[785,6,841,4],[786,4,842,2],[787,2,843,0],[787,3,843,1],[788,2,845,0],[788,8,845,6,"INTEGRATION_NAME"],[788,24,845,22],[788,27,845,25],[788,41,845,39],[789,2,846,0],[789,8,846,6,"DEFAULT_MAX_CANVAS_SIZE"],[789,31,846,29],[789,34,846,32],[789,38,846,36],[791,2,848,0],[792,2,849,0],[792,8,849,6,"_replayCanvasIntegration"],[792,32,849,30],[792,35,849,34,"_replayCanvasIntegration"],[792,36,849,35,"options"],[792,43,849,42],[792,46,849,45],[792,47,849,46],[792,48,849,47],[792,53,849,52],[793,4,850,2],[793,10,850,8],[793,11,850,9,"maxCanvasWidth"],[793,25,850,23],[793,27,850,25,"maxCanvasHeight"],[793,42,850,40],[793,43,850,41],[793,46,850,44,"options"],[793,53,850,51],[793,54,850,52,"maxCanvasSize"],[793,67,850,65],[793,71,850,69],[793,73,850,71],[794,4,851,2],[794,10,851,8,"_canvasOptions"],[794,24,851,22],[794,27,851,25],[795,6,852,4,"quality"],[795,13,852,11],[795,15,852,13,"options"],[795,22,852,20],[795,23,852,21,"quality"],[795,30,852,28],[795,34,852,32],[795,42,852,40],[796,6,853,4,"enableManualSnapshot"],[796,26,853,24],[796,28,853,26,"options"],[796,35,853,33],[796,36,853,34,"enableManualSnapshot"],[796,56,853,54],[797,6,854,4,"maxCanvasSize"],[797,19,854,17],[797,21,854,19],[797,22,855,6,"maxCanvasWidth"],[797,36,855,20],[797,39,855,23,"Math"],[797,43,855,27],[797,44,855,28,"min"],[797,47,855,31],[797,48,855,32,"maxCanvasWidth"],[797,62,855,46],[797,64,855,48,"DEFAULT_MAX_CANVAS_SIZE"],[797,87,855,71],[797,88,855,72],[797,91,855,75,"DEFAULT_MAX_CANVAS_SIZE"],[797,114,855,98],[797,116,856,6,"maxCanvasHeight"],[797,131,856,21],[797,134,856,24,"Math"],[797,138,856,28],[797,139,856,29,"min"],[797,142,856,32],[797,143,856,33,"maxCanvasHeight"],[797,158,856,48],[797,160,856,50,"DEFAULT_MAX_CANVAS_SIZE"],[797,183,856,73],[797,184,856,74],[797,187,856,77,"DEFAULT_MAX_CANVAS_SIZE"],[797,210,856,100],[798,4,858,2],[798,5,858,3],[799,4,860,2],[799,8,860,6,"canvasManagerResolve"],[799,28,860,26],[800,4,861,2],[800,10,861,8,"_canvasManager"],[800,24,861,22],[800,27,861,25],[800,31,861,29,"Promise"],[800,38,861,36],[800,39,861,37,"resolve"],[800,46,861,44],[800,50,861,49,"canvasManagerResolve"],[800,70,861,69],[800,73,861,72,"resolve"],[800,80,861,80],[800,81,861,81],[801,4,863,2],[801,11,863,9],[802,6,864,4,"name"],[802,10,864,8],[802,12,864,10,"INTEGRATION_NAME"],[802,28,864,26],[803,6,865,4,"getOptions"],[803,16,865,14,"getOptions"],[803,17,865,14],[803,19,865,17],[804,8,866,6],[804,14,866,12],[805,10,866,14,"quality"],[805,17,866,21],[806,10,866,23,"enableManualSnapshot"],[806,30,866,43],[807,10,866,45,"maxCanvasSize"],[808,8,866,59],[808,9,866,60],[808,12,866,63,"_canvasOptions"],[808,26,866,77],[809,8,868,6],[809,15,868,13],[810,10,869,8,"enableManualSnapshot"],[810,30,869,28],[811,10,870,8,"recordCanvas"],[811,22,870,20],[811,24,870,22],[811,28,870,26],[812,10,871,8,"getCanvasManager"],[812,26,871,24],[812,28,871,27,"getCanvasManagerOptions"],[812,51,871,50],[812,55,871,55],[813,12,872,10],[813,18,872,16,"manager"],[813,25,872,23],[813,28,872,26],[813,32,872,30,"CanvasManager"],[813,45,872,43],[813,46,872,44],[814,14,873,12],[814,17,873,15,"getCanvasManagerOptions"],[814,40,873,38],[815,14,874,12,"enableManualSnapshot"],[815,34,874,32],[816,14,875,12,"maxCanvasSize"],[816,27,875,25],[817,14,876,12,"errorHandler"],[817,26,876,24],[817,28,876,27,"err"],[817,31,876,30],[817,35,876,35],[818,16,877,14],[818,20,877,18],[819,18,878,16],[819,22,878,20],[819,29,878,27,"err"],[819,32,878,30],[819,37,878,35],[819,45,878,43],[819,47,878,45],[820,20,879,19,"err"],[820,23,879,22],[820,24,879,25,"__rrweb__"],[820,33,879,34],[820,36,879,37],[820,40,879,41],[821,18,880,16],[822,16,881,14],[822,17,881,15],[822,18,881,16],[822,25,881,23,"error"],[822,30,881,28],[822,32,881,30],[823,18,882,16],[824,18,883,16],[825,16,883,16],[826,14,885,12],[827,12,886,10],[827,13,886,11],[827,14,886,12],[828,12,887,10,"canvasManagerResolve"],[828,32,887,30],[828,33,887,31,"manager"],[828,40,887,38],[828,41,887,39],[829,12,888,10],[829,19,888,17,"manager"],[829,26,888,24],[830,10,889,8],[830,11,889,9],[831,10,890,8],[831,14,890,12,"CANVAS_QUALITY"],[831,28,890,26],[831,29,890,27,"quality"],[831,36,890,34],[831,40,890,38],[831,48,890,46],[831,49,890,47],[831,53,890,51,"CANVAS_QUALITY"],[831,67,890,65],[831,68,890,66,"medium"],[831,74,890,72],[832,8,891,6],[832,9,891,7],[833,6,892,4],[833,7,892,5],[834,6,893,4],[834,12,893,10,"snapshot"],[834,20,893,18,"snapshot"],[834,21,893,19,"canvasElement"],[834,34,893,32],[834,36,893,34],[835,8,894,6],[835,14,894,12,"canvasManager"],[835,27,894,25],[835,30,894,28],[835,36,894,34,"_canvasManager"],[835,50,894,48],[836,8,895,6,"canvasManager"],[836,21,895,19],[836,22,895,20,"snapshot"],[836,30,895,28],[836,31,895,29,"canvasElement"],[836,44,895,42],[836,45,895,43],[837,6,896,4],[838,4,897,2],[838,5,897,3],[839,2,898,0],[839,3,898,2],[841,2,900,0],[842,0,901,0],[843,0,902,0],[844,2,903,0],[844,8,903,6,"replayCanvasIntegration"],[844,31,903,29],[844,34,903,29,"exports"],[844,41,903,29],[844,42,903,29,"replayCanvasIntegration"],[844,65,903,29],[844,68,903,32],[844,72,903,32,"defineIntegration"],[844,95,903,49],[844,97,904,2,"_replayCanvasIntegration"],[844,121,905,0],[844,122,905,1],[845,0,905,3],[845,3]],"functionMap":{"names":["<global>","<anonymous>","elementClassMatchesRegex","distanceToMatch","createMatchPredicate","_mirror.getId","_mirror.getNode","_mirror.removeNodeFromMap","_mirror.has","_mirror.reset","Proxy$argument_1.get","hookSetter","set","setTimeout$argument_0","patch","closestElementOfNode","isBlocked","getImplementation","onRequestAnimationFrame","setTimeout","registerErrorHandler","callbackWrapper","rrwebWrapped","encode","variableListFor","saveWebGLVar","serializeArg","value.map$argument_0","serializeArgs","args.map$argument_0","isInstanceOfWebGLObject","webGLConstructorNames.filter$argument_0","supportedWebGLConstructorNames.find$argument_0","initCanvas2DMutationObserver","patch$argument_2","hookSetter$argument_2.set","handlers.forEach$argument_0","getNormalizedContextName","initCanvasContextObserver","patchGLPrototype","initCanvasWebGLMutationObserver","t","CanvasManager","CanvasManager#reset","restoreHandlers.forEach$argument_0","CanvasManager#freeze","CanvasManager#unfreeze","CanvasManager#lock","CanvasManager#unlock","CanvasManager#constructor","processMutation","callbackWrapper$argument_0","CanvasManager#addWindow","restoreHandlers.push$argument_0","CanvasManager#addShadowRoot","CanvasManager#resetShadowRoots","CanvasManager#initFPSWorker","worker.onmessage","CanvasManager#initCanvasFPSObserver","CanvasManager#initCanvasMutationObserver","CanvasManager#snapshot","CanvasManager#takeSnapshot","getCanvas","searchCanvas","root.querySelectorAll.forEach$argument_0","takeCanvasSnapshots","getCanvas.forEach$argument_0","createImageBitmap.then$argument_0","createImageBitmap.then._catch$argument_0","CanvasManager#startPendingCanvasMutationFlusher","onRequestAnimationFrame$argument_0","CanvasManager#startRAFTimestamping","setLatestRAFTimestamp","CanvasManager#flushPendingCanvasMutations","pendingCanvasMutations.forEach$argument_0","CanvasManager#flushPendingCanvasMutationFor","valuesWithType.map$argument_0","_replayCanvasIntegration","Promise$argument_0","getOptions","getCanvasManager","CanvasManager$argument_0.errorHandler","snapshot"],"mappings":"AAA;CCI;CDO;AEC;CFQ;AGC;CHU;AIC;WHC;KGqB;CJC;IKS;KLG;IMC;KNG;IOC;KPE;IQC;KRG;ISC;KTE;QUI;SVK;AWG;YCK;2BCC;iBDE;aDI;WVE,mDU;CXC;AcC;mBbG;aaC;ebc;SaE;ebG;SaC;CdE;AeE;CfQ;AgBC;ChBqB;AiBE;CjBuB;AkBC;ClBE;AmBC;CnBE;qCCE;CDK;AoBG;CpBE;wBqBC;0BCI;uBrBM;iBqBC;KDI;CrBE;auBa;CvBe;AwBG;CxBU;qByBC;CzBY;A0BC;yBCE,oCD;C1BuE;sB4BC;oBCC,oCD;C5BC;gC8BC;wECc,yCD;uDEC,oCF;C9BC;AiCE;uFCQ;uBjCC;mCYE;yBZO;iBiCG;aDC;gBEK;iBFO;WhCK;yBmCC,UnC;KgCC;CjCC;AqCE;CrCE;AsCC;oFJG;mBjCC;aiCqB;SIC;WrCM;yBmCC,UnC;KqCC;CtCC;AuCE;0DLgB;uBjCC;iBiCc;aKC;gBJK;iBIO;CvCM;AwCC;WvCM;yBmCC,UnC;KuCC;CxCC;AyCI,iEzC;A0CE;ICC;qCCE;SDM;wC1CK,a0C,oB1C,kB0C,U1C,U0C;KDG;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;IOC;+BCW;SDS;wBEgB;SFU;KPC;IUC;wBDS;0CEM;iBFE;SCE;KVG;IYC;KZE;IaC;KbE;IcC;2BCE;SDoC;KdE;IgBC;kCLE;SKE;KhBC;IiBC;kCNI;SMI;KjBC;IkBC;kCPG;SOE;KlBC;ImBC;0BCI;iCCK;wDCC;iBDI;aDC;SDc;oCIC;6CCU;mEjEa,6BiE,UjE,UiE,oBjE,8BiE;0BCK;oDlEC,ekE,oBlE,oBkE,UlE;gCkEO;iBDC;2BEC;oCjBC;qBiBE;iBFC;aDC;SJI;KnBG;I2BC;gCCC,wCD;K3BC;I6BC;sCCC;SDG;K7BE;I+BC;4CCC;SDG;gCHC,wCG;K/BC;IiCC;0CCO;SDG;KjCI;C1CC;kC6EoC;qCCY,2CD;IEI;0BCM;0BCK;aDS;SDI;KFG;IKC;KLG;C7EE"}},"type":"js/module"}]}