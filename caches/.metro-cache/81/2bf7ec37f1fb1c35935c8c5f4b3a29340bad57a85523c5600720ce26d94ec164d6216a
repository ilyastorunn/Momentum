{"dependencies":[{"name":"./worldwide","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"Jz7SQ0fn8+9QB7IybfKNe7aKFdY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.XHR_READYSTATE_DONE = void 0;\n  exports.createStealthXhr = createStealthXhr;\n  var _worldwide = require(_dependencyMap[0], \"./worldwide\");\n  const __sentry_original__ = '__sentry_original__';\n  /**\n   * The DONE ready state for XmlHttpRequest\n   *\n   * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n   * (e.g. during testing, it is `undefined`)\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n   */\n  const XHR_READYSTATE_DONE = exports.XHR_READYSTATE_DONE = 4;\n  /**\n   * Creates a new XMLHttpRequest object which is not instrumented by the SDK.\n   *\n   * This request won't be captured by the HttpClient Errors integration\n   * and won't be added to breadcrumbs and won't be traced.\n   */\n  function createStealthXhr(customGlobal = _worldwide.RN_GLOBAL_OBJ) {\n    if (!customGlobal.XMLHttpRequest) {\n      return null;\n    }\n    const xhr = new customGlobal.XMLHttpRequest();\n    if (xhr.open.__sentry_original__) {\n      xhr.open = xhr.open.__sentry_original__;\n    }\n    if (xhr.send.__sentry_original__) {\n      xhr.send = xhr.send.__sentry_original__;\n    }\n    return xhr;\n  }\n});","lineCount":37,"map":[[7,2,1,0],[7,6,1,0,"_worldwide"],[7,16,1,0],[7,19,1,0,"require"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,2,0],[8,8,2,6,"__sentry_original__"],[8,27,2,25],[8,30,2,28],[8,51,2,49],[9,2,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,2,11,7],[17,8,11,13,"XHR_READYSTATE_DONE"],[17,27,11,32],[17,30,11,32,"exports"],[17,37,11,32],[17,38,11,32,"XHR_READYSTATE_DONE"],[17,57,11,32],[17,60,11,35],[17,61,11,36],[18,2,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,2,18,7],[24,11,18,16,"createStealthXhr"],[24,27,18,32,"createStealthXhr"],[24,28,18,33,"customGlobal"],[24,40,18,45],[24,43,18,48,"RN_GLOBAL_OBJ"],[24,67,18,61],[24,69,18,63],[25,4,19,4],[25,8,19,8],[25,9,19,9,"customGlobal"],[25,21,19,21],[25,22,19,22,"XMLHttpRequest"],[25,36,19,36],[25,38,19,38],[26,6,20,8],[26,13,20,15],[26,17,20,19],[27,4,21,4],[28,4,22,4],[28,10,22,10,"xhr"],[28,13,22,13],[28,16,22,16],[28,20,22,20,"customGlobal"],[28,32,22,32],[28,33,22,33,"XMLHttpRequest"],[28,47,22,47],[28,48,22,48],[28,49,22,49],[29,4,23,4],[29,8,23,8,"xhr"],[29,11,23,11],[29,12,23,12,"open"],[29,16,23,16],[29,17,23,17,"__sentry_original__"],[29,36,23,36],[29,38,23,38],[30,6,24,8,"xhr"],[30,9,24,11],[30,10,24,12,"open"],[30,14,24,16],[30,17,24,19,"xhr"],[30,20,24,22],[30,21,24,23,"open"],[30,25,24,27],[30,26,24,28,"__sentry_original__"],[30,45,24,47],[31,4,25,4],[32,4,26,4],[32,8,26,8,"xhr"],[32,11,26,11],[32,12,26,12,"send"],[32,16,26,16],[32,17,26,17,"__sentry_original__"],[32,36,26,36],[32,38,26,38],[33,6,27,8,"xhr"],[33,9,27,11],[33,10,27,12,"send"],[33,14,27,16],[33,17,27,19,"xhr"],[33,20,27,22],[33,21,27,23,"send"],[33,25,27,27],[33,26,27,28,"__sentry_original__"],[33,45,27,47],[34,4,28,4],[35,4,29,4],[35,11,29,11,"xhr"],[35,14,29,14],[36,2,30,0],[37,0,30,1],[37,3]],"functionMap":{"names":["<global>","createStealthXhr"],"mappings":"AAA;OCiB;CDY"}},"type":"js/module"}]}