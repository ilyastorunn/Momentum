{"dependencies":[{"name":"./supabaseService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":163,"index":163}}],"key":"GUJNLVn6i615L2pk4825u+0UNDs=","exportNames":["*"]}},{"name":"./localStorageService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":164},"end":{"line":2,"column":103,"index":267}}],"key":"fbxx240o5qt1PVa9UI4JQD0gLE0=","exportNames":["*"]}},{"name":"./supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":268},"end":{"line":3,"column":49,"index":317}}],"key":"nombsjMCzh8A1aWqTxUa62QcPc0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.unifiedProgressService = exports.unifiedHabitsService = exports.unifiedCalendarService = exports.syncService = void 0;\n  var _supabaseService = require(_dependencyMap[0], \"./supabaseService\");\n  var _localStorageService = require(_dependencyMap[1], \"./localStorageService\");\n  var _supabase = require(_dependencyMap[2], \"./supabase\");\n  /**\n   * Unified Service\n   * Kullanıcı giriş yapmışsa Supabase, yapmamışsa Local Storage kullanır\n   */\n\n  // Auth durumunu kontrol eden helper\n  const shouldUseSupabase = isAuthenticated => {\n    return isAuthenticated && _supabase.hasValidCredentials;\n  };\n\n  // =================== UNIFIED HABITS SERVICES ===================\n\n  const unifiedHabitsService = exports.unifiedHabitsService = {\n    // Tüm alışkanlıkları getir\n    async getAll(isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.getAll');\n          return await _supabaseService.habitsService.getAll();\n        } else {\n          console.log('💾 Using Local Storage for habits.getAll');\n          return await _localStorageService.localHabitsService.getAll();\n        }\n      } catch (error) {\n        console.error('Unified habits.getAll error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.getAll();\n        }\n        throw error;\n      }\n    },\n    // Yeni alışkanlık oluştur\n    async create(habitData, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.create');\n          return await _supabaseService.habitsService.create(habitData);\n        } else {\n          console.log('💾 Using Local Storage for habits.create');\n          return await _localStorageService.localHabitsService.create(habitData);\n        }\n      } catch (error) {\n        console.error('Unified habits.create error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.create(habitData);\n        }\n        throw error;\n      }\n    },\n    // Alışkanlık güncelle\n    async update(id, updates, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.update');\n          return await _supabaseService.habitsService.update(id, updates);\n        } else {\n          console.log('💾 Using Local Storage for habits.update');\n          return await _localStorageService.localHabitsService.update(id, updates);\n        }\n      } catch (error) {\n        console.error('Unified habits.update error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.update(id, updates);\n        }\n        throw error;\n      }\n    },\n    // Alışkanlık sil\n    async delete(id, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.delete');\n          return await _supabaseService.habitsService.delete(id);\n        } else {\n          console.log('💾 Using Local Storage for habits.delete');\n          return await _localStorageService.localHabitsService.delete(id);\n        }\n      } catch (error) {\n        console.error('Unified habits.delete error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.delete(id);\n        }\n        throw error;\n      }\n    },\n    // Tek alışkanlık detayını getir\n    async getById(id, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.getById');\n          return await _supabaseService.habitsService.getById(id);\n        } else {\n          console.log('💾 Using Local Storage for habits.getById');\n          return await _localStorageService.localHabitsService.getById(id);\n        }\n      } catch (error) {\n        console.error('Unified habits.getById error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.getById(id);\n        }\n        throw error;\n      }\n    },\n    // Streak güncellemesi\n    async updateStreaks(habitId, completed, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for habits.updateStreaks');\n          return await _supabaseService.habitsService.updateStreaks(habitId, completed);\n        } else {\n          console.log('💾 Using Local Storage for habits.updateStreaks');\n          return await _localStorageService.localHabitsService.updateStreaks(habitId, completed);\n        }\n      } catch (error) {\n        console.error('Unified habits.updateStreaks error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localHabitsService.updateStreaks(habitId, completed);\n        }\n        throw error;\n      }\n    }\n  };\n\n  // =================== UNIFIED PROGRESS SERVICES ===================\n\n  const unifiedProgressService = exports.unifiedProgressService = {\n    // Belirli tarih için progress getir\n    async getByDate(date, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for progress.getByDate');\n          return await _supabaseService.progressService.getByDate(date);\n        } else {\n          console.log('💾 Using Local Storage for progress.getByDate');\n          return await _localStorageService.localProgressService.getByDate(date);\n        }\n      } catch (error) {\n        console.error('Unified progress.getByDate error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localProgressService.getByDate(date);\n        }\n        throw error;\n      }\n    },\n    // Progress güncelle\n    async update(habitId, date, completed, note = '', isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for progress.update');\n          return await _supabaseService.progressService.update(habitId, date, completed, note);\n        } else {\n          console.log('💾 Using Local Storage for progress.update');\n          return await _localStorageService.localProgressService.update(habitId, date, completed, note);\n        }\n      } catch (error) {\n        console.error('Unified progress.update error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localProgressService.update(habitId, date, completed, note);\n        }\n        throw error;\n      }\n    },\n    // Belirli habit ve tarih aralığı için progress getir\n    async getByHabitAndDateRange(habitId, startDate, endDate, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for progress.getByHabitAndDateRange');\n          return await _supabaseService.progressService.getByHabitAndDateRange(habitId, startDate, endDate);\n        } else {\n          console.log('💾 Using Local Storage for progress.getByHabitAndDateRange');\n          return await _localStorageService.localProgressService.getByHabitAndDateRange(habitId, startDate, endDate);\n        }\n      } catch (error) {\n        console.error('Unified progress.getByHabitAndDateRange error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localProgressService.getByHabitAndDateRange(habitId, startDate, endDate);\n        }\n        throw error;\n      }\n    }\n  };\n\n  // =================== UNIFIED CALENDAR/STATS SERVICES ===================\n\n  const unifiedCalendarService = exports.unifiedCalendarService = {\n    // Belirli ay için calendar data getir\n    async getMonthData(year, month, isAuthenticated = false) {\n      try {\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('📊 Using Supabase for calendar.getMonthData');\n          return await _supabaseService.calendarService.getMonthData(year, month);\n        } else {\n          console.log('💾 Using Local Storage for calendar.getMonthData');\n          return await _localStorageService.localCalendarService.getMonthData(year, month);\n        }\n      } catch (error) {\n        console.error('Unified calendar.getMonthData error:', error);\n        // Fallback to local storage if Supabase fails\n        if (shouldUseSupabase(isAuthenticated)) {\n          console.log('⚠️ Supabase failed, falling back to local storage');\n          return await _localStorageService.localCalendarService.getMonthData(year, month);\n        }\n        throw error;\n      }\n    }\n  };\n\n  // =================== DATA SYNC HELPERS ===================\n\n  const syncService = exports.syncService = {\n    // Local data'yı Supabase'e sync et (kullanıcı giriş yaptığında)\n    async syncLocalToSupabase() {\n      try {\n        console.log('🔄 Starting local to Supabase sync...');\n\n        // Local habits'i al\n        const {\n          habits: localHabits\n        } = await _localStorageService.localHabitsService.getAll();\n        const localProgress = await _localStorageService.localProgressService.getAll();\n\n        // Her local habit'i Supabase'e ekle\n        for (const localHabit of localHabits) {\n          try {\n            const habitData = {\n              name: localHabit.name,\n              icon: localHabit.icon,\n              category: localHabit.category\n            };\n            const {\n              habit: newSupabaseHabit\n            } = await _supabaseService.habitsService.create(habitData);\n\n            // İlgili progress kayıtlarını da sync et\n            const relatedProgress = localProgress.filter(p => p.habit_id === localHabit.id);\n            for (const progress of relatedProgress) {\n              await _supabaseService.progressService.update(newSupabaseHabit.id, progress.completion_date, progress.completed, progress.note || '');\n            }\n            console.log(`✅ Synced habit: ${localHabit.name}`);\n          } catch (error) {\n            console.error(`❌ Failed to sync habit: ${localHabit.name}`, error);\n          }\n        }\n        console.log('🔄 Sync completed');\n        return {\n          success: true,\n          syncedHabits: localHabits.length\n        };\n      } catch (error) {\n        console.error('Sync error:', error);\n        throw new Error('Failed to sync data to Supabase');\n      }\n    },\n    // Supabase data'yı local'e sync et (backup için)\n    async syncSupabaseToLocal() {\n      try {\n        console.log('🔄 Starting Supabase to local backup sync...');\n\n        // Bu özelliği daha sonra implement edebiliriz\n        // Şu an için local storage primary source olacak\n\n        console.log('🔄 Backup sync completed');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Backup sync error:', error);\n        throw new Error('Failed to backup data to local storage');\n      }\n    }\n  };\n});","lineCount":298,"map":[[6,2,1,0],[6,6,1,0,"_supabaseService"],[6,22,1,0],[6,25,1,0,"require"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,6,2,0,"_localStorageService"],[7,26,2,0],[7,29,2,0,"require"],[7,36,2,0],[7,37,2,0,"_dependencyMap"],[7,51,2,0],[8,2,3,0],[8,6,3,0,"_supabase"],[8,15,3,0],[8,18,3,0,"require"],[8,25,3,0],[8,26,3,0,"_dependencyMap"],[8,40,3,0],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[14,2,10,0],[15,2,11,0],[15,8,11,6,"shouldUseSupabase"],[15,25,11,23],[15,28,11,27,"isAuthenticated"],[15,43,11,42],[15,47,11,47],[16,4,12,2],[16,11,12,9,"isAuthenticated"],[16,26,12,24],[16,30,12,28,"hasValidCredentials"],[16,59,12,47],[17,2,13,0],[17,3,13,1],[19,2,15,0],[21,2,17,7],[21,8,17,13,"unifiedHabitsService"],[21,28,17,33],[21,31,17,33,"exports"],[21,38,17,33],[21,39,17,33,"unifiedHabitsService"],[21,59,17,33],[21,62,17,36],[22,4,18,2],[23,4,19,2],[23,10,19,8,"getAll"],[23,16,19,14,"getAll"],[23,17,19,15,"isAuthenticated"],[23,32,19,30],[23,35,19,33],[23,40,19,38],[23,42,19,40],[24,6,20,4],[24,10,20,8],[25,8,21,6],[25,12,21,10,"shouldUseSupabase"],[25,29,21,27],[25,30,21,28,"isAuthenticated"],[25,45,21,43],[25,46,21,44],[25,48,21,46],[26,10,22,8,"console"],[26,17,22,15],[26,18,22,16,"log"],[26,21,22,19],[26,22,22,20],[26,59,22,57],[26,60,22,58],[27,10,23,8],[27,17,23,15],[27,23,23,21,"supabaseHabitsService"],[27,53,23,42],[27,54,23,43,"getAll"],[27,60,23,49],[27,61,23,50],[27,62,23,51],[28,8,24,6],[28,9,24,7],[28,15,24,13],[29,10,25,8,"console"],[29,17,25,15],[29,18,25,16,"log"],[29,21,25,19],[29,22,25,20],[29,64,25,62],[29,65,25,63],[30,10,26,8],[30,17,26,15],[30,23,26,21,"localHabitsService"],[30,62,26,39],[30,63,26,40,"getAll"],[30,69,26,46],[30,70,26,47],[30,71,26,48],[31,8,27,6],[32,6,28,4],[32,7,28,5],[32,8,28,6],[32,15,28,13,"error"],[32,20,28,18],[32,22,28,20],[33,8,29,6,"console"],[33,15,29,13],[33,16,29,14,"error"],[33,21,29,19],[33,22,29,20],[33,52,29,50],[33,54,29,52,"error"],[33,59,29,57],[33,60,29,58],[34,8,30,6],[35,8,31,6],[35,12,31,10,"shouldUseSupabase"],[35,29,31,27],[35,30,31,28,"isAuthenticated"],[35,45,31,43],[35,46,31,44],[35,48,31,46],[36,10,32,8,"console"],[36,17,32,15],[36,18,32,16,"log"],[36,21,32,19],[36,22,32,20],[36,73,32,71],[36,74,32,72],[37,10,33,8],[37,17,33,15],[37,23,33,21,"localHabitsService"],[37,62,33,39],[37,63,33,40,"getAll"],[37,69,33,46],[37,70,33,47],[37,71,33,48],[38,8,34,6],[39,8,35,6],[39,14,35,12,"error"],[39,19,35,17],[40,6,36,4],[41,4,37,2],[41,5,37,3],[42,4,39,2],[43,4,40,2],[43,10,40,8,"create"],[43,16,40,14,"create"],[43,17,40,15,"habitData"],[43,26,40,24],[43,28,40,26,"isAuthenticated"],[43,43,40,41],[43,46,40,44],[43,51,40,49],[43,53,40,51],[44,6,41,4],[44,10,41,8],[45,8,42,6],[45,12,42,10,"shouldUseSupabase"],[45,29,42,27],[45,30,42,28,"isAuthenticated"],[45,45,42,43],[45,46,42,44],[45,48,42,46],[46,10,43,8,"console"],[46,17,43,15],[46,18,43,16,"log"],[46,21,43,19],[46,22,43,20],[46,59,43,57],[46,60,43,58],[47,10,44,8],[47,17,44,15],[47,23,44,21,"supabaseHabitsService"],[47,53,44,42],[47,54,44,43,"create"],[47,60,44,49],[47,61,44,50,"habitData"],[47,70,44,59],[47,71,44,60],[48,8,45,6],[48,9,45,7],[48,15,45,13],[49,10,46,8,"console"],[49,17,46,15],[49,18,46,16,"log"],[49,21,46,19],[49,22,46,20],[49,64,46,62],[49,65,46,63],[50,10,47,8],[50,17,47,15],[50,23,47,21,"localHabitsService"],[50,62,47,39],[50,63,47,40,"create"],[50,69,47,46],[50,70,47,47,"habitData"],[50,79,47,56],[50,80,47,57],[51,8,48,6],[52,6,49,4],[52,7,49,5],[52,8,49,6],[52,15,49,13,"error"],[52,20,49,18],[52,22,49,20],[53,8,50,6,"console"],[53,15,50,13],[53,16,50,14,"error"],[53,21,50,19],[53,22,50,20],[53,52,50,50],[53,54,50,52,"error"],[53,59,50,57],[53,60,50,58],[54,8,51,6],[55,8,52,6],[55,12,52,10,"shouldUseSupabase"],[55,29,52,27],[55,30,52,28,"isAuthenticated"],[55,45,52,43],[55,46,52,44],[55,48,52,46],[56,10,53,8,"console"],[56,17,53,15],[56,18,53,16,"log"],[56,21,53,19],[56,22,53,20],[56,73,53,71],[56,74,53,72],[57,10,54,8],[57,17,54,15],[57,23,54,21,"localHabitsService"],[57,62,54,39],[57,63,54,40,"create"],[57,69,54,46],[57,70,54,47,"habitData"],[57,79,54,56],[57,80,54,57],[58,8,55,6],[59,8,56,6],[59,14,56,12,"error"],[59,19,56,17],[60,6,57,4],[61,4,58,2],[61,5,58,3],[62,4,60,2],[63,4,61,2],[63,10,61,8,"update"],[63,16,61,14,"update"],[63,17,61,15,"id"],[63,19,61,17],[63,21,61,19,"updates"],[63,28,61,26],[63,30,61,28,"isAuthenticated"],[63,45,61,43],[63,48,61,46],[63,53,61,51],[63,55,61,53],[64,6,62,4],[64,10,62,8],[65,8,63,6],[65,12,63,10,"shouldUseSupabase"],[65,29,63,27],[65,30,63,28,"isAuthenticated"],[65,45,63,43],[65,46,63,44],[65,48,63,46],[66,10,64,8,"console"],[66,17,64,15],[66,18,64,16,"log"],[66,21,64,19],[66,22,64,20],[66,59,64,57],[66,60,64,58],[67,10,65,8],[67,17,65,15],[67,23,65,21,"supabaseHabitsService"],[67,53,65,42],[67,54,65,43,"update"],[67,60,65,49],[67,61,65,50,"id"],[67,63,65,52],[67,65,65,54,"updates"],[67,72,65,61],[67,73,65,62],[68,8,66,6],[68,9,66,7],[68,15,66,13],[69,10,67,8,"console"],[69,17,67,15],[69,18,67,16,"log"],[69,21,67,19],[69,22,67,20],[69,64,67,62],[69,65,67,63],[70,10,68,8],[70,17,68,15],[70,23,68,21,"localHabitsService"],[70,62,68,39],[70,63,68,40,"update"],[70,69,68,46],[70,70,68,47,"id"],[70,72,68,49],[70,74,68,51,"updates"],[70,81,68,58],[70,82,68,59],[71,8,69,6],[72,6,70,4],[72,7,70,5],[72,8,70,6],[72,15,70,13,"error"],[72,20,70,18],[72,22,70,20],[73,8,71,6,"console"],[73,15,71,13],[73,16,71,14,"error"],[73,21,71,19],[73,22,71,20],[73,52,71,50],[73,54,71,52,"error"],[73,59,71,57],[73,60,71,58],[74,8,72,6],[75,8,73,6],[75,12,73,10,"shouldUseSupabase"],[75,29,73,27],[75,30,73,28,"isAuthenticated"],[75,45,73,43],[75,46,73,44],[75,48,73,46],[76,10,74,8,"console"],[76,17,74,15],[76,18,74,16,"log"],[76,21,74,19],[76,22,74,20],[76,73,74,71],[76,74,74,72],[77,10,75,8],[77,17,75,15],[77,23,75,21,"localHabitsService"],[77,62,75,39],[77,63,75,40,"update"],[77,69,75,46],[77,70,75,47,"id"],[77,72,75,49],[77,74,75,51,"updates"],[77,81,75,58],[77,82,75,59],[78,8,76,6],[79,8,77,6],[79,14,77,12,"error"],[79,19,77,17],[80,6,78,4],[81,4,79,2],[81,5,79,3],[82,4,81,2],[83,4,82,2],[83,10,82,8,"delete"],[83,16,82,14,"delete"],[83,17,82,15,"id"],[83,19,82,17],[83,21,82,19,"isAuthenticated"],[83,36,82,34],[83,39,82,37],[83,44,82,42],[83,46,82,44],[84,6,83,4],[84,10,83,8],[85,8,84,6],[85,12,84,10,"shouldUseSupabase"],[85,29,84,27],[85,30,84,28,"isAuthenticated"],[85,45,84,43],[85,46,84,44],[85,48,84,46],[86,10,85,8,"console"],[86,17,85,15],[86,18,85,16,"log"],[86,21,85,19],[86,22,85,20],[86,59,85,57],[86,60,85,58],[87,10,86,8],[87,17,86,15],[87,23,86,21,"supabaseHabitsService"],[87,53,86,42],[87,54,86,43,"delete"],[87,60,86,49],[87,61,86,50,"id"],[87,63,86,52],[87,64,86,53],[88,8,87,6],[88,9,87,7],[88,15,87,13],[89,10,88,8,"console"],[89,17,88,15],[89,18,88,16,"log"],[89,21,88,19],[89,22,88,20],[89,64,88,62],[89,65,88,63],[90,10,89,8],[90,17,89,15],[90,23,89,21,"localHabitsService"],[90,62,89,39],[90,63,89,40,"delete"],[90,69,89,46],[90,70,89,47,"id"],[90,72,89,49],[90,73,89,50],[91,8,90,6],[92,6,91,4],[92,7,91,5],[92,8,91,6],[92,15,91,13,"error"],[92,20,91,18],[92,22,91,20],[93,8,92,6,"console"],[93,15,92,13],[93,16,92,14,"error"],[93,21,92,19],[93,22,92,20],[93,52,92,50],[93,54,92,52,"error"],[93,59,92,57],[93,60,92,58],[94,8,93,6],[95,8,94,6],[95,12,94,10,"shouldUseSupabase"],[95,29,94,27],[95,30,94,28,"isAuthenticated"],[95,45,94,43],[95,46,94,44],[95,48,94,46],[96,10,95,8,"console"],[96,17,95,15],[96,18,95,16,"log"],[96,21,95,19],[96,22,95,20],[96,73,95,71],[96,74,95,72],[97,10,96,8],[97,17,96,15],[97,23,96,21,"localHabitsService"],[97,62,96,39],[97,63,96,40,"delete"],[97,69,96,46],[97,70,96,47,"id"],[97,72,96,49],[97,73,96,50],[98,8,97,6],[99,8,98,6],[99,14,98,12,"error"],[99,19,98,17],[100,6,99,4],[101,4,100,2],[101,5,100,3],[102,4,102,2],[103,4,103,2],[103,10,103,8,"getById"],[103,17,103,15,"getById"],[103,18,103,16,"id"],[103,20,103,18],[103,22,103,20,"isAuthenticated"],[103,37,103,35],[103,40,103,38],[103,45,103,43],[103,47,103,45],[104,6,104,4],[104,10,104,8],[105,8,105,6],[105,12,105,10,"shouldUseSupabase"],[105,29,105,27],[105,30,105,28,"isAuthenticated"],[105,45,105,43],[105,46,105,44],[105,48,105,46],[106,10,106,8,"console"],[106,17,106,15],[106,18,106,16,"log"],[106,21,106,19],[106,22,106,20],[106,60,106,58],[106,61,106,59],[107,10,107,8],[107,17,107,15],[107,23,107,21,"supabaseHabitsService"],[107,53,107,42],[107,54,107,43,"getById"],[107,61,107,50],[107,62,107,51,"id"],[107,64,107,53],[107,65,107,54],[108,8,108,6],[108,9,108,7],[108,15,108,13],[109,10,109,8,"console"],[109,17,109,15],[109,18,109,16,"log"],[109,21,109,19],[109,22,109,20],[109,65,109,63],[109,66,109,64],[110,10,110,8],[110,17,110,15],[110,23,110,21,"localHabitsService"],[110,62,110,39],[110,63,110,40,"getById"],[110,70,110,47],[110,71,110,48,"id"],[110,73,110,50],[110,74,110,51],[111,8,111,6],[112,6,112,4],[112,7,112,5],[112,8,112,6],[112,15,112,13,"error"],[112,20,112,18],[112,22,112,20],[113,8,113,6,"console"],[113,15,113,13],[113,16,113,14,"error"],[113,21,113,19],[113,22,113,20],[113,53,113,51],[113,55,113,53,"error"],[113,60,113,58],[113,61,113,59],[114,8,114,6],[115,8,115,6],[115,12,115,10,"shouldUseSupabase"],[115,29,115,27],[115,30,115,28,"isAuthenticated"],[115,45,115,43],[115,46,115,44],[115,48,115,46],[116,10,116,8,"console"],[116,17,116,15],[116,18,116,16,"log"],[116,21,116,19],[116,22,116,20],[116,73,116,71],[116,74,116,72],[117,10,117,8],[117,17,117,15],[117,23,117,21,"localHabitsService"],[117,62,117,39],[117,63,117,40,"getById"],[117,70,117,47],[117,71,117,48,"id"],[117,73,117,50],[117,74,117,51],[118,8,118,6],[119,8,119,6],[119,14,119,12,"error"],[119,19,119,17],[120,6,120,4],[121,4,121,2],[121,5,121,3],[122,4,123,2],[123,4,124,2],[123,10,124,8,"updateStreaks"],[123,23,124,21,"updateStreaks"],[123,24,124,22,"habitId"],[123,31,124,29],[123,33,124,31,"completed"],[123,42,124,40],[123,44,124,42,"isAuthenticated"],[123,59,124,57],[123,62,124,60],[123,67,124,65],[123,69,124,67],[124,6,125,4],[124,10,125,8],[125,8,126,6],[125,12,126,10,"shouldUseSupabase"],[125,29,126,27],[125,30,126,28,"isAuthenticated"],[125,45,126,43],[125,46,126,44],[125,48,126,46],[126,10,127,8,"console"],[126,17,127,15],[126,18,127,16,"log"],[126,21,127,19],[126,22,127,20],[126,66,127,64],[126,67,127,65],[127,10,128,8],[127,17,128,15],[127,23,128,21,"supabaseHabitsService"],[127,53,128,42],[127,54,128,43,"updateStreaks"],[127,67,128,56],[127,68,128,57,"habitId"],[127,75,128,64],[127,77,128,66,"completed"],[127,86,128,75],[127,87,128,76],[128,8,129,6],[128,9,129,7],[128,15,129,13],[129,10,130,8,"console"],[129,17,130,15],[129,18,130,16,"log"],[129,21,130,19],[129,22,130,20],[129,71,130,69],[129,72,130,70],[130,10,131,8],[130,17,131,15],[130,23,131,21,"localHabitsService"],[130,62,131,39],[130,63,131,40,"updateStreaks"],[130,76,131,53],[130,77,131,54,"habitId"],[130,84,131,61],[130,86,131,63,"completed"],[130,95,131,72],[130,96,131,73],[131,8,132,6],[132,6,133,4],[132,7,133,5],[132,8,133,6],[132,15,133,13,"error"],[132,20,133,18],[132,22,133,20],[133,8,134,6,"console"],[133,15,134,13],[133,16,134,14,"error"],[133,21,134,19],[133,22,134,20],[133,59,134,57],[133,61,134,59,"error"],[133,66,134,64],[133,67,134,65],[134,8,135,6],[135,8,136,6],[135,12,136,10,"shouldUseSupabase"],[135,29,136,27],[135,30,136,28,"isAuthenticated"],[135,45,136,43],[135,46,136,44],[135,48,136,46],[136,10,137,8,"console"],[136,17,137,15],[136,18,137,16,"log"],[136,21,137,19],[136,22,137,20],[136,73,137,71],[136,74,137,72],[137,10,138,8],[137,17,138,15],[137,23,138,21,"localHabitsService"],[137,62,138,39],[137,63,138,40,"updateStreaks"],[137,76,138,53],[137,77,138,54,"habitId"],[137,84,138,61],[137,86,138,63,"completed"],[137,95,138,72],[137,96,138,73],[138,8,139,6],[139,8,140,6],[139,14,140,12,"error"],[139,19,140,17],[140,6,141,4],[141,4,142,2],[142,2,143,0],[142,3,143,1],[144,2,145,0],[146,2,147,7],[146,8,147,13,"unifiedProgressService"],[146,30,147,35],[146,33,147,35,"exports"],[146,40,147,35],[146,41,147,35,"unifiedProgressService"],[146,63,147,35],[146,66,147,38],[147,4,148,2],[148,4,149,2],[148,10,149,8,"getByDate"],[148,19,149,17,"getByDate"],[148,20,149,18,"date"],[148,24,149,22],[148,26,149,24,"isAuthenticated"],[148,41,149,39],[148,44,149,42],[148,49,149,47],[148,51,149,49],[149,6,150,4],[149,10,150,8],[150,8,151,6],[150,12,151,10,"shouldUseSupabase"],[150,29,151,27],[150,30,151,28,"isAuthenticated"],[150,45,151,43],[150,46,151,44],[150,48,151,46],[151,10,152,8,"console"],[151,17,152,15],[151,18,152,16,"log"],[151,21,152,19],[151,22,152,20],[151,64,152,62],[151,65,152,63],[152,10,153,8],[152,17,153,15],[152,23,153,21,"supabaseProgressService"],[152,55,153,44],[152,56,153,45,"getByDate"],[152,65,153,54],[152,66,153,55,"date"],[152,70,153,59],[152,71,153,60],[153,8,154,6],[153,9,154,7],[153,15,154,13],[154,10,155,8,"console"],[154,17,155,15],[154,18,155,16,"log"],[154,21,155,19],[154,22,155,20],[154,69,155,67],[154,70,155,68],[155,10,156,8],[155,17,156,15],[155,23,156,21,"localProgressService"],[155,64,156,41],[155,65,156,42,"getByDate"],[155,74,156,51],[155,75,156,52,"date"],[155,79,156,56],[155,80,156,57],[156,8,157,6],[157,6,158,4],[157,7,158,5],[157,8,158,6],[157,15,158,13,"error"],[157,20,158,18],[157,22,158,20],[158,8,159,6,"console"],[158,15,159,13],[158,16,159,14,"error"],[158,21,159,19],[158,22,159,20],[158,57,159,55],[158,59,159,57,"error"],[158,64,159,62],[158,65,159,63],[159,8,160,6],[160,8,161,6],[160,12,161,10,"shouldUseSupabase"],[160,29,161,27],[160,30,161,28,"isAuthenticated"],[160,45,161,43],[160,46,161,44],[160,48,161,46],[161,10,162,8,"console"],[161,17,162,15],[161,18,162,16,"log"],[161,21,162,19],[161,22,162,20],[161,73,162,71],[161,74,162,72],[162,10,163,8],[162,17,163,15],[162,23,163,21,"localProgressService"],[162,64,163,41],[162,65,163,42,"getByDate"],[162,74,163,51],[162,75,163,52,"date"],[162,79,163,56],[162,80,163,57],[163,8,164,6],[164,8,165,6],[164,14,165,12,"error"],[164,19,165,17],[165,6,166,4],[166,4,167,2],[166,5,167,3],[167,4,169,2],[168,4,170,2],[168,10,170,8,"update"],[168,16,170,14,"update"],[168,17,170,15,"habitId"],[168,24,170,22],[168,26,170,24,"date"],[168,30,170,28],[168,32,170,30,"completed"],[168,41,170,39],[168,43,170,41,"note"],[168,47,170,45],[168,50,170,48],[168,52,170,50],[168,54,170,52,"isAuthenticated"],[168,69,170,67],[168,72,170,70],[168,77,170,75],[168,79,170,77],[169,6,171,4],[169,10,171,8],[170,8,172,6],[170,12,172,10,"shouldUseSupabase"],[170,29,172,27],[170,30,172,28,"isAuthenticated"],[170,45,172,43],[170,46,172,44],[170,48,172,46],[171,10,173,8,"console"],[171,17,173,15],[171,18,173,16,"log"],[171,21,173,19],[171,22,173,20],[171,61,173,59],[171,62,173,60],[172,10,174,8],[172,17,174,15],[172,23,174,21,"supabaseProgressService"],[172,55,174,44],[172,56,174,45,"update"],[172,62,174,51],[172,63,174,52,"habitId"],[172,70,174,59],[172,72,174,61,"date"],[172,76,174,65],[172,78,174,67,"completed"],[172,87,174,76],[172,89,174,78,"note"],[172,93,174,82],[172,94,174,83],[173,8,175,6],[173,9,175,7],[173,15,175,13],[174,10,176,8,"console"],[174,17,176,15],[174,18,176,16,"log"],[174,21,176,19],[174,22,176,20],[174,66,176,64],[174,67,176,65],[175,10,177,8],[175,17,177,15],[175,23,177,21,"localProgressService"],[175,64,177,41],[175,65,177,42,"update"],[175,71,177,48],[175,72,177,49,"habitId"],[175,79,177,56],[175,81,177,58,"date"],[175,85,177,62],[175,87,177,64,"completed"],[175,96,177,73],[175,98,177,75,"note"],[175,102,177,79],[175,103,177,80],[176,8,178,6],[177,6,179,4],[177,7,179,5],[177,8,179,6],[177,15,179,13,"error"],[177,20,179,18],[177,22,179,20],[178,8,180,6,"console"],[178,15,180,13],[178,16,180,14,"error"],[178,21,180,19],[178,22,180,20],[178,54,180,52],[178,56,180,54,"error"],[178,61,180,59],[178,62,180,60],[179,8,181,6],[180,8,182,6],[180,12,182,10,"shouldUseSupabase"],[180,29,182,27],[180,30,182,28,"isAuthenticated"],[180,45,182,43],[180,46,182,44],[180,48,182,46],[181,10,183,8,"console"],[181,17,183,15],[181,18,183,16,"log"],[181,21,183,19],[181,22,183,20],[181,73,183,71],[181,74,183,72],[182,10,184,8],[182,17,184,15],[182,23,184,21,"localProgressService"],[182,64,184,41],[182,65,184,42,"update"],[182,71,184,48],[182,72,184,49,"habitId"],[182,79,184,56],[182,81,184,58,"date"],[182,85,184,62],[182,87,184,64,"completed"],[182,96,184,73],[182,98,184,75,"note"],[182,102,184,79],[182,103,184,80],[183,8,185,6],[184,8,186,6],[184,14,186,12,"error"],[184,19,186,17],[185,6,187,4],[186,4,188,2],[186,5,188,3],[187,4,190,2],[188,4,191,2],[188,10,191,8,"getByHabitAndDateRange"],[188,32,191,30,"getByHabitAndDateRange"],[188,33,191,31,"habitId"],[188,40,191,38],[188,42,191,40,"startDate"],[188,51,191,49],[188,53,191,51,"endDate"],[188,60,191,58],[188,62,191,60,"isAuthenticated"],[188,77,191,75],[188,80,191,78],[188,85,191,83],[188,87,191,85],[189,6,192,4],[189,10,192,8],[190,8,193,6],[190,12,193,10,"shouldUseSupabase"],[190,29,193,27],[190,30,193,28,"isAuthenticated"],[190,45,193,43],[190,46,193,44],[190,48,193,46],[191,10,194,8,"console"],[191,17,194,15],[191,18,194,16,"log"],[191,21,194,19],[191,22,194,20],[191,77,194,75],[191,78,194,76],[192,10,195,8],[192,17,195,15],[192,23,195,21,"supabaseProgressService"],[192,55,195,44],[192,56,195,45,"getByHabitAndDateRange"],[192,78,195,67],[192,79,195,68,"habitId"],[192,86,195,75],[192,88,195,77,"startDate"],[192,97,195,86],[192,99,195,88,"endDate"],[192,106,195,95],[192,107,195,96],[193,8,196,6],[193,9,196,7],[193,15,196,13],[194,10,197,8,"console"],[194,17,197,15],[194,18,197,16,"log"],[194,21,197,19],[194,22,197,20],[194,82,197,80],[194,83,197,81],[195,10,198,8],[195,17,198,15],[195,23,198,21,"localProgressService"],[195,64,198,41],[195,65,198,42,"getByHabitAndDateRange"],[195,87,198,64],[195,88,198,65,"habitId"],[195,95,198,72],[195,97,198,74,"startDate"],[195,106,198,83],[195,108,198,85,"endDate"],[195,115,198,92],[195,116,198,93],[196,8,199,6],[197,6,200,4],[197,7,200,5],[197,8,200,6],[197,15,200,13,"error"],[197,20,200,18],[197,22,200,20],[198,8,201,6,"console"],[198,15,201,13],[198,16,201,14,"error"],[198,21,201,19],[198,22,201,20],[198,70,201,68],[198,72,201,70,"error"],[198,77,201,75],[198,78,201,76],[199,8,202,6],[200,8,203,6],[200,12,203,10,"shouldUseSupabase"],[200,29,203,27],[200,30,203,28,"isAuthenticated"],[200,45,203,43],[200,46,203,44],[200,48,203,46],[201,10,204,8,"console"],[201,17,204,15],[201,18,204,16,"log"],[201,21,204,19],[201,22,204,20],[201,73,204,71],[201,74,204,72],[202,10,205,8],[202,17,205,15],[202,23,205,21,"localProgressService"],[202,64,205,41],[202,65,205,42,"getByHabitAndDateRange"],[202,87,205,64],[202,88,205,65,"habitId"],[202,95,205,72],[202,97,205,74,"startDate"],[202,106,205,83],[202,108,205,85,"endDate"],[202,115,205,92],[202,116,205,93],[203,8,206,6],[204,8,207,6],[204,14,207,12,"error"],[204,19,207,17],[205,6,208,4],[206,4,209,2],[207,2,210,0],[207,3,210,1],[209,2,212,0],[211,2,214,7],[211,8,214,13,"unifiedCalendarService"],[211,30,214,35],[211,33,214,35,"exports"],[211,40,214,35],[211,41,214,35,"unifiedCalendarService"],[211,63,214,35],[211,66,214,38],[212,4,215,2],[213,4,216,2],[213,10,216,8,"getMonthData"],[213,22,216,20,"getMonthData"],[213,23,216,21,"year"],[213,27,216,25],[213,29,216,27,"month"],[213,34,216,32],[213,36,216,34,"isAuthenticated"],[213,51,216,49],[213,54,216,52],[213,59,216,57],[213,61,216,59],[214,6,217,4],[214,10,217,8],[215,8,218,6],[215,12,218,10,"shouldUseSupabase"],[215,29,218,27],[215,30,218,28,"isAuthenticated"],[215,45,218,43],[215,46,218,44],[215,48,218,46],[216,10,219,8,"console"],[216,17,219,15],[216,18,219,16,"log"],[216,21,219,19],[216,22,219,20],[216,67,219,65],[216,68,219,66],[217,10,220,8],[217,17,220,15],[217,23,220,21,"supabaseCalendarService"],[217,55,220,44],[217,56,220,45,"getMonthData"],[217,68,220,57],[217,69,220,58,"year"],[217,73,220,62],[217,75,220,64,"month"],[217,80,220,69],[217,81,220,70],[218,8,221,6],[218,9,221,7],[218,15,221,13],[219,10,222,8,"console"],[219,17,222,15],[219,18,222,16,"log"],[219,21,222,19],[219,22,222,20],[219,72,222,70],[219,73,222,71],[220,10,223,8],[220,17,223,15],[220,23,223,21,"localCalendarService"],[220,64,223,41],[220,65,223,42,"getMonthData"],[220,77,223,54],[220,78,223,55,"year"],[220,82,223,59],[220,84,223,61,"month"],[220,89,223,66],[220,90,223,67],[221,8,224,6],[222,6,225,4],[222,7,225,5],[222,8,225,6],[222,15,225,13,"error"],[222,20,225,18],[222,22,225,20],[223,8,226,6,"console"],[223,15,226,13],[223,16,226,14,"error"],[223,21,226,19],[223,22,226,20],[223,60,226,58],[223,62,226,60,"error"],[223,67,226,65],[223,68,226,66],[224,8,227,6],[225,8,228,6],[225,12,228,10,"shouldUseSupabase"],[225,29,228,27],[225,30,228,28,"isAuthenticated"],[225,45,228,43],[225,46,228,44],[225,48,228,46],[226,10,229,8,"console"],[226,17,229,15],[226,18,229,16,"log"],[226,21,229,19],[226,22,229,20],[226,73,229,71],[226,74,229,72],[227,10,230,8],[227,17,230,15],[227,23,230,21,"localCalendarService"],[227,64,230,41],[227,65,230,42,"getMonthData"],[227,77,230,54],[227,78,230,55,"year"],[227,82,230,59],[227,84,230,61,"month"],[227,89,230,66],[227,90,230,67],[228,8,231,6],[229,8,232,6],[229,14,232,12,"error"],[229,19,232,17],[230,6,233,4],[231,4,234,2],[232,2,235,0],[232,3,235,1],[234,2,237,0],[236,2,239,7],[236,8,239,13,"syncService"],[236,19,239,24],[236,22,239,24,"exports"],[236,29,239,24],[236,30,239,24,"syncService"],[236,41,239,24],[236,44,239,27],[237,4,240,2],[238,4,241,2],[238,10,241,8,"syncLocalToSupabase"],[238,29,241,27,"syncLocalToSupabase"],[238,30,241,27],[238,32,241,30],[239,6,242,4],[239,10,242,8],[240,8,243,6,"console"],[240,15,243,13],[240,16,243,14,"log"],[240,19,243,17],[240,20,243,18],[240,59,243,57],[240,60,243,58],[242,8,245,6],[243,8,246,6],[243,14,246,12],[244,10,246,14,"habits"],[244,16,246,20],[244,18,246,22,"localHabits"],[245,8,246,34],[245,9,246,35],[245,12,246,38],[245,18,246,44,"localHabitsService"],[245,57,246,62],[245,58,246,63,"getAll"],[245,64,246,69],[245,65,246,70],[245,66,246,71],[246,8,247,6],[246,14,247,12,"localProgress"],[246,27,247,25],[246,30,247,28],[246,36,247,34,"localProgressService"],[246,77,247,54],[246,78,247,55,"getAll"],[246,84,247,61],[246,85,247,62],[246,86,247,63],[248,8,249,6],[249,8,250,6],[249,13,250,11],[249,19,250,17,"localHabit"],[249,29,250,27],[249,33,250,31,"localHabits"],[249,44,250,42],[249,46,250,44],[250,10,251,8],[250,14,251,12],[251,12,252,10],[251,18,252,16,"habitData"],[251,27,252,25],[251,30,252,28],[252,14,253,12,"name"],[252,18,253,16],[252,20,253,18,"localHabit"],[252,30,253,28],[252,31,253,29,"name"],[252,35,253,33],[253,14,254,12,"icon"],[253,18,254,16],[253,20,254,18,"localHabit"],[253,30,254,28],[253,31,254,29,"icon"],[253,35,254,33],[254,14,255,12,"category"],[254,22,255,20],[254,24,255,22,"localHabit"],[254,34,255,32],[254,35,255,33,"category"],[255,12,256,10],[255,13,256,11],[256,12,258,10],[256,18,258,16],[257,14,258,18,"habit"],[257,19,258,23],[257,21,258,25,"newSupabaseHabit"],[258,12,258,42],[258,13,258,43],[258,16,258,46],[258,22,258,52,"supabaseHabitsService"],[258,52,258,73],[258,53,258,74,"create"],[258,59,258,80],[258,60,258,81,"habitData"],[258,69,258,90],[258,70,258,91],[260,12,260,10],[261,12,261,10],[261,18,261,16,"relatedProgress"],[261,33,261,31],[261,36,261,34,"localProgress"],[261,49,261,47],[261,50,261,48,"filter"],[261,56,261,54],[261,57,261,55,"p"],[261,58,261,56],[261,62,261,60,"p"],[261,63,261,61],[261,64,261,62,"habit_id"],[261,72,261,70],[261,77,261,75,"localHabit"],[261,87,261,85],[261,88,261,86,"id"],[261,90,261,88],[261,91,261,89],[262,12,263,10],[262,17,263,15],[262,23,263,21,"progress"],[262,31,263,29],[262,35,263,33,"relatedProgress"],[262,50,263,48],[262,52,263,50],[263,14,264,12],[263,20,264,18,"supabaseProgressService"],[263,52,264,41],[263,53,264,42,"update"],[263,59,264,48],[263,60,265,14,"newSupabaseHabit"],[263,76,265,30],[263,77,265,31,"id"],[263,79,265,33],[263,81,266,14,"progress"],[263,89,266,22],[263,90,266,23,"completion_date"],[263,105,266,38],[263,107,267,14,"progress"],[263,115,267,22],[263,116,267,23,"completed"],[263,125,267,32],[263,127,268,14,"progress"],[263,135,268,22],[263,136,268,23,"note"],[263,140,268,27],[263,144,268,31],[263,146,269,12],[263,147,269,13],[264,12,270,10],[265,12,272,10,"console"],[265,19,272,17],[265,20,272,18,"log"],[265,23,272,21],[265,24,272,22],[265,43,272,41,"localHabit"],[265,53,272,51],[265,54,272,52,"name"],[265,58,272,56],[265,60,272,58],[265,61,272,59],[266,10,273,8],[266,11,273,9],[266,12,273,10],[266,19,273,17,"error"],[266,24,273,22],[266,26,273,24],[267,12,274,10,"console"],[267,19,274,17],[267,20,274,18,"error"],[267,25,274,23],[267,26,274,24],[267,53,274,51,"localHabit"],[267,63,274,61],[267,64,274,62,"name"],[267,68,274,66],[267,70,274,68],[267,72,274,70,"error"],[267,77,274,75],[267,78,274,76],[268,10,275,8],[269,8,276,6],[270,8,278,6,"console"],[270,15,278,13],[270,16,278,14,"log"],[270,19,278,17],[270,20,278,18],[270,39,278,37],[270,40,278,38],[271,8,279,6],[271,15,279,13],[272,10,279,15,"success"],[272,17,279,22],[272,19,279,24],[272,23,279,28],[273,10,279,30,"syncedHabits"],[273,22,279,42],[273,24,279,44,"localHabits"],[273,35,279,55],[273,36,279,56,"length"],[274,8,279,63],[274,9,279,64],[275,6,280,4],[275,7,280,5],[275,8,280,6],[275,15,280,13,"error"],[275,20,280,18],[275,22,280,20],[276,8,281,6,"console"],[276,15,281,13],[276,16,281,14,"error"],[276,21,281,19],[276,22,281,20],[276,35,281,33],[276,37,281,35,"error"],[276,42,281,40],[276,43,281,41],[277,8,282,6],[277,14,282,12],[277,18,282,16,"Error"],[277,23,282,21],[277,24,282,22],[277,57,282,55],[277,58,282,56],[278,6,283,4],[279,4,284,2],[279,5,284,3],[280,4,286,2],[281,4,287,2],[281,10,287,8,"syncSupabaseToLocal"],[281,29,287,27,"syncSupabaseToLocal"],[281,30,287,27],[281,32,287,30],[282,6,288,4],[282,10,288,8],[283,8,289,6,"console"],[283,15,289,13],[283,16,289,14,"log"],[283,19,289,17],[283,20,289,18],[283,66,289,64],[283,67,289,65],[285,8,291,6],[286,8,292,6],[288,8,294,6,"console"],[288,15,294,13],[288,16,294,14,"log"],[288,19,294,17],[288,20,294,18],[288,46,294,44],[288,47,294,45],[289,8,295,6],[289,15,295,13],[290,10,295,15,"success"],[290,17,295,22],[290,19,295,24],[291,8,295,29],[291,9,295,30],[292,6,296,4],[292,7,296,5],[292,8,296,6],[292,15,296,13,"error"],[292,20,296,18],[292,22,296,20],[293,8,297,6,"console"],[293,15,297,13],[293,16,297,14,"error"],[293,21,297,19],[293,22,297,20],[293,42,297,40],[293,44,297,42,"error"],[293,49,297,47],[293,50,297,48],[294,8,298,6],[294,14,298,12],[294,18,298,16,"Error"],[294,23,298,21],[294,24,298,22],[294,64,298,62],[294,65,298,63],[295,6,299,4],[296,4,300,2],[297,2,301,0],[297,3,301,1],[298,0,301,2],[298,3]],"functionMap":{"names":["<global>","shouldUseSupabase","unifiedHabitsService.getAll","unifiedHabitsService.create","unifiedHabitsService.update","unifiedHabitsService._delete","unifiedHabitsService.getById","unifiedHabitsService.updateStreaks","unifiedProgressService.getByDate","unifiedProgressService.update","unifiedProgressService.getByHabitAndDateRange","unifiedCalendarService.getMonthData","syncService.syncLocalToSupabase","localProgress.filter$argument_0","syncService.syncSupabaseToLocal"],"mappings":"AAA;0BCU;CDE;EEM;GFkB;EGG;GHkB;EIG;GJkB;EKG;GLkB;EMG;GNkB;EOG;GPkB;EQO;GRkB;ESG;GTkB;EUG;GVkB;EWO;GXkB;EYO;uDCoB,iCD;GZuB;EcG;Gda"}},"type":"js/module"}]}