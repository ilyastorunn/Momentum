{"dependencies":[{"name":"@sentry-internal/browser-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":173,"index":173}}],"key":"NhwjGxy6N7nYR3SR4JfgASTvmbA=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":174},"end":{"line":2,"column":292,"index":466}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":467},"end":{"line":3,"column":48,"index":515}}],"key":"rfhktnzi6PvZxT1xtyHWbBktN/w=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":516},"end":{"line":4,"column":39,"index":555}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.breadcrumbsIntegration = void 0;\n  var _browserUtils = require(_dependencyMap[0], \"@sentry-internal/browser-utils\");\n  var _core = require(_dependencyMap[1], \"@sentry/core\");\n  var _debugBuild = require(_dependencyMap[2], \"../debug-build.js\");\n  var _helpers = require(_dependencyMap[3], \"../helpers.js\");\n  /* eslint-disable max-lines */\n\n  /** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\n  const MAX_ALLOWED_STRING_LENGTH = 1024;\n  const INTEGRATION_NAME = 'Breadcrumbs';\n  const _breadcrumbsIntegration = (options = {}) => {\n    const _options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options\n    };\n    return {\n      name: INTEGRATION_NAME,\n      setup(client) {\n        if (_options.console) {\n          (0, _core.addConsoleInstrumentationHandler)(_getConsoleBreadcrumbHandler(client));\n        }\n        if (_options.dom) {\n          (0, _browserUtils.addClickKeypressInstrumentationHandler)(_getDomBreadcrumbHandler(client, _options.dom));\n        }\n        if (_options.xhr) {\n          (0, _browserUtils.addXhrInstrumentationHandler)(_getXhrBreadcrumbHandler(client));\n        }\n        if (_options.fetch) {\n          (0, _core.addFetchInstrumentationHandler)(_getFetchBreadcrumbHandler(client));\n        }\n        if (_options.history) {\n          (0, _browserUtils.addHistoryInstrumentationHandler)(_getHistoryBreadcrumbHandler(client));\n        }\n        if (_options.sentry) {\n          client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n        }\n      }\n    };\n  };\n  const breadcrumbsIntegration = exports.breadcrumbsIntegration = (0, _core.defineIntegration)(_breadcrumbsIntegration);\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n  function _getSentryBreadcrumbHandler(client) {\n    return function addSentryBreadcrumb(event) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      (0, _core.addBreadcrumb)({\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: (0, _core.getEventDescription)(event)\n      }, {\n        event\n      });\n    };\n  }\n\n  /**\n   * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n   * This is a HOC so that we get access to dom options in the closure.\n   */\n  function _getDomBreadcrumbHandler(client, dom) {\n    return function _innerDomBreadcrumb(handlerData) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      let target;\n      let componentName;\n      let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n      let maxStringLength = typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n      if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n        _debugBuild.DEBUG_BUILD && _core.logger.warn(`\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`);\n        maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n      }\n      if (typeof keyAttrs === 'string') {\n        keyAttrs = [keyAttrs];\n      }\n\n      // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n      try {\n        const event = handlerData.event;\n        const element = _isEvent(event) ? event.target : event;\n        target = (0, _core.htmlTreeAsString)(element, {\n          keyAttrs,\n          maxStringLength\n        });\n        componentName = (0, _core.getComponentName)(element);\n      } catch (e) {\n        target = '<unknown>';\n      }\n      if (target.length === 0) {\n        return;\n      }\n      const breadcrumb = {\n        category: `ui.${handlerData.name}`,\n        message: target\n      };\n      if (componentName) {\n        breadcrumb.data = {\n          'ui.component_name': componentName\n        };\n      }\n      (0, _core.addBreadcrumb)(breadcrumb, {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global\n      });\n    };\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  function _getConsoleBreadcrumbHandler(client) {\n    return function _consoleBreadcrumb(handlerData) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      const breadcrumb = {\n        category: 'console',\n        data: {\n          arguments: handlerData.args,\n          logger: 'console'\n        },\n        level: (0, _core.severityLevelFromString)(handlerData.level),\n        message: (0, _core.safeJoin)(handlerData.args, ' ')\n      };\n      if (handlerData.level === 'assert') {\n        if (handlerData.args[0] === false) {\n          breadcrumb.message = `Assertion failed: ${(0, _core.safeJoin)(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n          breadcrumb.data.arguments = handlerData.args.slice(1);\n        } else {\n          // Don't capture a breadcrumb for passed assertions\n          return;\n        }\n      }\n      (0, _core.addBreadcrumb)(breadcrumb, {\n        input: handlerData.args,\n        level: handlerData.level\n      });\n    };\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  function _getXhrBreadcrumbHandler(client) {\n    return function _xhrBreadcrumb(handlerData) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      const {\n        startTimestamp,\n        endTimestamp\n      } = handlerData;\n      const sentryXhrData = handlerData.xhr[_browserUtils.SENTRY_XHR_DATA_KEY];\n\n      // We only capture complete, non-sentry requests\n      if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n        return;\n      }\n      const {\n        method,\n        url,\n        status_code,\n        body\n      } = sentryXhrData;\n      const data = {\n        method,\n        url,\n        status_code\n      };\n      const hint = {\n        xhr: handlerData.xhr,\n        input: body,\n        startTimestamp,\n        endTimestamp\n      };\n      const level = (0, _core.getBreadcrumbLogLevelFromHttpStatusCode)(status_code);\n      (0, _core.addBreadcrumb)({\n        category: 'xhr',\n        data,\n        type: 'http',\n        level\n      }, hint);\n    };\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  function _getFetchBreadcrumbHandler(client) {\n    return function _fetchBreadcrumb(handlerData) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      const {\n        startTimestamp,\n        endTimestamp\n      } = handlerData;\n\n      // We only capture complete fetch requests\n      if (!endTimestamp) {\n        return;\n      }\n      if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n        // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n        return;\n      }\n      if (handlerData.error) {\n        const data = handlerData.fetchData;\n        const hint = {\n          data: handlerData.error,\n          input: handlerData.args,\n          startTimestamp,\n          endTimestamp\n        };\n        (0, _core.addBreadcrumb)({\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http'\n        }, hint);\n      } else {\n        const response = handlerData.response;\n        const data = {\n          ...handlerData.fetchData,\n          status_code: response && response.status\n        };\n        const hint = {\n          input: handlerData.args,\n          response,\n          startTimestamp,\n          endTimestamp\n        };\n        const level = (0, _core.getBreadcrumbLogLevelFromHttpStatusCode)(data.status_code);\n        (0, _core.addBreadcrumb)({\n          category: 'fetch',\n          data,\n          type: 'http',\n          level\n        }, hint);\n      }\n    };\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  function _getHistoryBreadcrumbHandler(client) {\n    return function _historyBreadcrumb(handlerData) {\n      if ((0, _core.getClient)() !== client) {\n        return;\n      }\n      let from = handlerData.from;\n      let to = handlerData.to;\n      const parsedLoc = (0, _core.parseUrl)(_helpers.WINDOW.location.href);\n      let parsedFrom = from ? (0, _core.parseUrl)(from) : undefined;\n      const parsedTo = (0, _core.parseUrl)(to);\n\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom || !parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        from = parsedFrom.relative;\n      }\n      (0, _core.addBreadcrumb)({\n        category: 'navigation',\n        data: {\n          from,\n          to\n        }\n      });\n    };\n  }\n  function _isEvent(event) {\n    return !!event && !!event.target;\n  }\n});","lineCount":298,"map":[[6,2,1,0],[6,6,1,0,"_browserUtils"],[6,19,1,0],[6,22,1,0,"require"],[6,29,1,0],[6,30,1,0,"_dependencyMap"],[6,44,1,0],[7,2,2,0],[7,6,2,0,"_core"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,3,0],[8,6,3,0,"_debugBuild"],[8,17,3,0],[8,20,3,0,"require"],[8,27,3,0],[8,28,3,0,"_dependencyMap"],[8,42,3,0],[9,2,4,0],[9,6,4,0,"_helpers"],[9,14,4,0],[9,17,4,0,"require"],[9,24,4,0],[9,25,4,0,"_dependencyMap"],[9,39,4,0],[10,2,6,0],[12,2,9,0],[13,2,10,0],[13,8,10,6,"MAX_ALLOWED_STRING_LENGTH"],[13,33,10,31],[13,36,10,34],[13,40,10,38],[14,2,12,0],[14,8,12,6,"INTEGRATION_NAME"],[14,24,12,22],[14,27,12,25],[14,40,12,38],[15,2,14,0],[15,8,14,6,"_breadcrumbsIntegration"],[15,31,14,29],[15,34,14,33,"_breadcrumbsIntegration"],[15,35,14,34,"options"],[15,42,14,41],[15,45,14,44],[15,46,14,45],[15,47,14,46],[15,52,14,51],[16,4,15,2],[16,10,15,8,"_options"],[16,18,15,16],[16,21,15,19],[17,6,16,4,"console"],[17,13,16,11],[17,15,16,13],[17,19,16,17],[18,6,17,4,"dom"],[18,9,17,7],[18,11,17,9],[18,15,17,13],[19,6,18,4,"fetch"],[19,11,18,9],[19,13,18,11],[19,17,18,15],[20,6,19,4,"history"],[20,13,19,11],[20,15,19,13],[20,19,19,17],[21,6,20,4,"sentry"],[21,12,20,10],[21,14,20,12],[21,18,20,16],[22,6,21,4,"xhr"],[22,9,21,7],[22,11,21,9],[22,15,21,13],[23,6,22,4],[23,9,22,7,"options"],[24,4,23,2],[24,5,23,3],[25,4,25,2],[25,11,25,9],[26,6,26,4,"name"],[26,10,26,8],[26,12,26,10,"INTEGRATION_NAME"],[26,28,26,26],[27,6,27,4,"setup"],[27,11,27,9,"setup"],[27,12,27,10,"client"],[27,18,27,16],[27,20,27,18],[28,8,28,6],[28,12,28,10,"_options"],[28,20,28,18],[28,21,28,19,"console"],[28,28,28,26],[28,30,28,28],[29,10,29,8],[29,14,29,8,"addConsoleInstrumentationHandler"],[29,52,29,40],[29,54,29,41,"_getConsoleBreadcrumbHandler"],[29,82,29,69],[29,83,29,70,"client"],[29,89,29,76],[29,90,29,77],[29,91,29,78],[30,8,30,6],[31,8,31,6],[31,12,31,10,"_options"],[31,20,31,18],[31,21,31,19,"dom"],[31,24,31,22],[31,26,31,24],[32,10,32,8],[32,14,32,8,"addClickKeypressInstrumentationHandler"],[32,66,32,46],[32,68,32,47,"_getDomBreadcrumbHandler"],[32,92,32,71],[32,93,32,72,"client"],[32,99,32,78],[32,101,32,80,"_options"],[32,109,32,88],[32,110,32,89,"dom"],[32,113,32,92],[32,114,32,93],[32,115,32,94],[33,8,33,6],[34,8,34,6],[34,12,34,10,"_options"],[34,20,34,18],[34,21,34,19,"xhr"],[34,24,34,22],[34,26,34,24],[35,10,35,8],[35,14,35,8,"addXhrInstrumentationHandler"],[35,56,35,36],[35,58,35,37,"_getXhrBreadcrumbHandler"],[35,82,35,61],[35,83,35,62,"client"],[35,89,35,68],[35,90,35,69],[35,91,35,70],[36,8,36,6],[37,8,37,6],[37,12,37,10,"_options"],[37,20,37,18],[37,21,37,19,"fetch"],[37,26,37,24],[37,28,37,26],[38,10,38,8],[38,14,38,8,"addFetchInstrumentationHandler"],[38,50,38,38],[38,52,38,39,"_getFetchBreadcrumbHandler"],[38,78,38,65],[38,79,38,66,"client"],[38,85,38,72],[38,86,38,73],[38,87,38,74],[39,8,39,6],[40,8,40,6],[40,12,40,10,"_options"],[40,20,40,18],[40,21,40,19,"history"],[40,28,40,26],[40,30,40,28],[41,10,41,8],[41,14,41,8,"addHistoryInstrumentationHandler"],[41,60,41,40],[41,62,41,41,"_getHistoryBreadcrumbHandler"],[41,90,41,69],[41,91,41,70,"client"],[41,97,41,76],[41,98,41,77],[41,99,41,78],[42,8,42,6],[43,8,43,6],[43,12,43,10,"_options"],[43,20,43,18],[43,21,43,19,"sentry"],[43,27,43,25],[43,29,43,27],[44,10,44,8,"client"],[44,16,44,14],[44,17,44,15,"on"],[44,19,44,17],[44,20,44,18],[44,37,44,35],[44,39,44,37,"_getSentryBreadcrumbHandler"],[44,66,44,64],[44,67,44,65,"client"],[44,73,44,71],[44,74,44,72],[44,75,44,73],[45,8,45,6],[46,6,46,4],[47,4,47,2],[47,5,47,3],[48,2,48,0],[48,3,48,2],[49,2,50,0],[49,8,50,6,"breadcrumbsIntegration"],[49,30,50,28],[49,33,50,28,"exports"],[49,40,50,28],[49,41,50,28,"breadcrumbsIntegration"],[49,63,50,28],[49,66,50,31],[49,70,50,31,"defineIntegration"],[49,93,50,48],[49,95,50,49,"_breadcrumbsIntegration"],[49,118,50,72],[49,119,50,73],[51,2,52,0],[52,0,53,0],[53,0,54,0],[54,2,55,0],[54,11,55,9,"_getSentryBreadcrumbHandler"],[54,38,55,36,"_getSentryBreadcrumbHandler"],[54,39,55,37,"client"],[54,45,55,43],[54,47,55,45],[55,4,56,2],[55,11,56,9],[55,20,56,18,"addSentryBreadcrumb"],[55,39,56,37,"addSentryBreadcrumb"],[55,40,56,38,"event"],[55,45,56,43],[55,47,56,45],[56,6,57,4],[56,10,57,8],[56,14,57,8,"getClient"],[56,29,57,17],[56,31,57,18],[56,32,57,19],[56,37,57,24,"client"],[56,43,57,30],[56,45,57,32],[57,8,58,6],[58,6,59,4],[59,6,61,4],[59,10,61,4,"addBreadcrumb"],[59,29,61,17],[59,31,62,6],[60,8,63,8,"category"],[60,16,63,16],[60,18,63,18],[60,28,63,28,"event"],[60,33,63,33],[60,34,63,34,"type"],[60,38,63,38],[60,43,63,43],[60,56,63,56],[60,59,63,59],[60,72,63,72],[60,75,63,75],[60,82,63,82],[60,84,63,84],[61,8,64,8,"event_id"],[61,16,64,16],[61,18,64,18,"event"],[61,23,64,23],[61,24,64,24,"event_id"],[61,32,64,32],[62,8,65,8,"level"],[62,13,65,13],[62,15,65,15,"event"],[62,20,65,20],[62,21,65,21,"level"],[62,26,65,26],[63,8,66,8,"message"],[63,15,66,15],[63,17,66,17],[63,21,66,17,"getEventDescription"],[63,46,66,36],[63,48,66,37,"event"],[63,53,66,42],[64,6,67,6],[64,7,67,7],[64,9,68,6],[65,8,69,8,"event"],[66,6,70,6],[66,7,71,4],[66,8,71,5],[67,4,72,2],[67,5,72,3],[68,2,73,0],[70,2,75,0],[71,0,76,0],[72,0,77,0],[73,0,78,0],[74,2,79,0],[74,11,79,9,"_getDomBreadcrumbHandler"],[74,35,79,33,"_getDomBreadcrumbHandler"],[74,36,80,2,"client"],[74,42,80,8],[74,44,81,2,"dom"],[74,47,81,5],[74,49,82,2],[75,4,83,2],[75,11,83,9],[75,20,83,18,"_innerDomBreadcrumb"],[75,39,83,37,"_innerDomBreadcrumb"],[75,40,83,38,"handlerData"],[75,51,83,49],[75,53,83,51],[76,6,84,4],[76,10,84,8],[76,14,84,8,"getClient"],[76,29,84,17],[76,31,84,18],[76,32,84,19],[76,37,84,24,"client"],[76,43,84,30],[76,45,84,32],[77,8,85,6],[78,6,86,4],[79,6,88,4],[79,10,88,8,"target"],[79,16,88,14],[80,6,89,4],[80,10,89,8,"componentName"],[80,23,89,21],[81,6,90,4],[81,10,90,8,"keyAttrs"],[81,18,90,16],[81,21,90,19],[81,28,90,26,"dom"],[81,31,90,29],[81,36,90,34],[81,44,90,42],[81,47,90,45,"dom"],[81,50,90,48],[81,51,90,49,"serializeAttribute"],[81,69,90,67],[81,72,90,70,"undefined"],[81,81,90,79],[82,6,92,4],[82,10,92,8,"maxStringLength"],[82,25,92,23],[82,28,93,6],[82,35,93,13,"dom"],[82,38,93,16],[82,43,93,21],[82,51,93,29],[82,55,93,33],[82,62,93,40,"dom"],[82,65,93,43],[82,66,93,44,"maxStringLength"],[82,81,93,59],[82,86,93,64],[82,94,93,72],[82,97,93,75,"dom"],[82,100,93,78],[82,101,93,79,"maxStringLength"],[82,116,93,94],[82,119,93,97,"undefined"],[82,128,93,106],[83,6,94,4],[83,10,94,8,"maxStringLength"],[83,25,94,23],[83,29,94,27,"maxStringLength"],[83,44,94,42],[83,47,94,45,"MAX_ALLOWED_STRING_LENGTH"],[83,72,94,70],[83,74,94,72],[84,8,95,6,"DEBUG_BUILD"],[84,31,95,17],[84,35,96,8,"logger"],[84,47,96,14],[84,48,96,15,"warn"],[84,52,96,19],[84,53,97,10],[84,94,97,51,"MAX_ALLOWED_STRING_LENGTH"],[84,119,97,76],[84,139,97,96,"maxStringLength"],[84,154,97,111],[84,190,97,147,"MAX_ALLOWED_STRING_LENGTH"],[84,215,97,172],[84,226,98,8],[84,227,98,9],[85,8,99,6,"maxStringLength"],[85,23,99,21],[85,26,99,24,"MAX_ALLOWED_STRING_LENGTH"],[85,51,99,49],[86,6,100,4],[87,6,102,4],[87,10,102,8],[87,17,102,15,"keyAttrs"],[87,25,102,23],[87,30,102,28],[87,38,102,36],[87,40,102,38],[88,8,103,6,"keyAttrs"],[88,16,103,14],[88,19,103,17],[88,20,103,18,"keyAttrs"],[88,28,103,26],[88,29,103,27],[89,6,104,4],[91,6,106,4],[92,6,107,4],[92,10,107,8],[93,8,108,6],[93,14,108,12,"event"],[93,19,108,17],[93,22,108,20,"handlerData"],[93,33,108,31],[93,34,108,32,"event"],[93,39,108,37],[94,8,109,6],[94,14,109,12,"element"],[94,21,109,19],[94,24,109,22,"_isEvent"],[94,32,109,30],[94,33,109,31,"event"],[94,38,109,36],[94,39,109,37],[94,42,109,40,"event"],[94,47,109,45],[94,48,109,46,"target"],[94,54,109,52],[94,57,109,55,"event"],[94,62,109,60],[95,8,111,6,"target"],[95,14,111,12],[95,17,111,15],[95,21,111,15,"htmlTreeAsString"],[95,43,111,31],[95,45,111,32,"element"],[95,52,111,39],[95,54,111,41],[96,10,111,43,"keyAttrs"],[96,18,111,51],[97,10,111,53,"maxStringLength"],[98,8,111,69],[98,9,111,70],[98,10,111,71],[99,8,112,6,"componentName"],[99,21,112,19],[99,24,112,22],[99,28,112,22,"getComponentName"],[99,50,112,38],[99,52,112,39,"element"],[99,59,112,46],[99,60,112,47],[100,6,113,4],[100,7,113,5],[100,8,113,6],[100,15,113,13,"e"],[100,16,113,14],[100,18,113,16],[101,8,114,6,"target"],[101,14,114,12],[101,17,114,15],[101,28,114,26],[102,6,115,4],[103,6,117,4],[103,10,117,8,"target"],[103,16,117,14],[103,17,117,15,"length"],[103,23,117,21],[103,28,117,26],[103,29,117,27],[103,31,117,29],[104,8,118,6],[105,6,119,4],[106,6,121,4],[106,12,121,10,"breadcrumb"],[106,22,121,20],[106,25,121,23],[107,8,122,6,"category"],[107,16,122,14],[107,18,122,16],[107,24,122,22,"handlerData"],[107,35,122,33],[107,36,122,34,"name"],[107,40,122,38],[107,42,122,40],[108,8,123,6,"message"],[108,15,123,13],[108,17,123,15,"target"],[109,6,124,4],[109,7,124,5],[110,6,126,4],[110,10,126,8,"componentName"],[110,23,126,21],[110,25,126,23],[111,8,127,6,"breadcrumb"],[111,18,127,16],[111,19,127,17,"data"],[111,23,127,21],[111,26,127,24],[112,10,127,26],[112,29,127,45],[112,31,127,47,"componentName"],[113,8,127,61],[113,9,127,62],[114,6,128,4],[115,6,130,4],[115,10,130,4,"addBreadcrumb"],[115,29,130,17],[115,31,130,18,"breadcrumb"],[115,41,130,28],[115,43,130,30],[116,8,131,6,"event"],[116,13,131,11],[116,15,131,13,"handlerData"],[116,26,131,24],[116,27,131,25,"event"],[116,32,131,30],[117,8,132,6,"name"],[117,12,132,10],[117,14,132,12,"handlerData"],[117,25,132,23],[117,26,132,24,"name"],[117,30,132,28],[118,8,133,6,"global"],[118,14,133,12],[118,16,133,14,"handlerData"],[118,27,133,25],[118,28,133,26,"global"],[119,6,134,4],[119,7,134,5],[119,8,134,6],[120,4,135,2],[120,5,135,3],[121,2,136,0],[123,2,138,0],[124,0,139,0],[125,0,140,0],[126,2,141,0],[126,11,141,9,"_getConsoleBreadcrumbHandler"],[126,39,141,37,"_getConsoleBreadcrumbHandler"],[126,40,141,38,"client"],[126,46,141,44],[126,48,141,46],[127,4,142,2],[127,11,142,9],[127,20,142,18,"_consoleBreadcrumb"],[127,38,142,36,"_consoleBreadcrumb"],[127,39,142,37,"handlerData"],[127,50,142,48],[127,52,142,50],[128,6,143,4],[128,10,143,8],[128,14,143,8,"getClient"],[128,29,143,17],[128,31,143,18],[128,32,143,19],[128,37,143,24,"client"],[128,43,143,30],[128,45,143,32],[129,8,144,6],[130,6,145,4],[131,6,147,4],[131,12,147,10,"breadcrumb"],[131,22,147,20],[131,25,147,23],[132,8,148,6,"category"],[132,16,148,14],[132,18,148,16],[132,27,148,25],[133,8,149,6,"data"],[133,12,149,10],[133,14,149,12],[134,10,150,8,"arguments"],[134,19,150,17],[134,21,150,19,"handlerData"],[134,32,150,30],[134,33,150,31,"args"],[134,37,150,35],[135,10,151,8,"logger"],[135,16,151,14],[135,18,151,16],[136,8,152,6],[136,9,152,7],[137,8,153,6,"level"],[137,13,153,11],[137,15,153,13],[137,19,153,13,"severityLevelFromString"],[137,48,153,36],[137,50,153,37,"handlerData"],[137,61,153,48],[137,62,153,49,"level"],[137,67,153,54],[137,68,153,55],[138,8,154,6,"message"],[138,15,154,13],[138,17,154,15],[138,21,154,15,"safeJoin"],[138,35,154,23],[138,37,154,24,"handlerData"],[138,48,154,35],[138,49,154,36,"args"],[138,53,154,40],[138,55,154,42],[138,58,154,45],[139,6,155,4],[139,7,155,5],[140,6,157,4],[140,10,157,8,"handlerData"],[140,21,157,19],[140,22,157,20,"level"],[140,27,157,25],[140,32,157,30],[140,40,157,38],[140,42,157,40],[141,8,158,6],[141,12,158,10,"handlerData"],[141,23,158,21],[141,24,158,22,"args"],[141,28,158,26],[141,29,158,27],[141,30,158,28],[141,31,158,29],[141,36,158,34],[141,41,158,39],[141,43,158,41],[142,10,159,8,"breadcrumb"],[142,20,159,18],[142,21,159,19,"message"],[142,28,159,26],[142,31,159,29],[142,52,159,50],[142,56,159,50,"safeJoin"],[142,70,159,58],[142,72,159,59,"handlerData"],[142,83,159,70],[142,84,159,71,"args"],[142,88,159,75],[142,89,159,76,"slice"],[142,94,159,81],[142,95,159,82],[142,96,159,83],[142,97,159,84],[142,99,159,86],[142,102,159,89],[142,103,159,90],[142,107,159,94],[142,123,159,110],[142,125,159,112],[143,10,160,8,"breadcrumb"],[143,20,160,18],[143,21,160,19,"data"],[143,25,160,23],[143,26,160,24,"arguments"],[143,35,160,33],[143,38,160,36,"handlerData"],[143,49,160,47],[143,50,160,48,"args"],[143,54,160,52],[143,55,160,53,"slice"],[143,60,160,58],[143,61,160,59],[143,62,160,60],[143,63,160,61],[144,8,161,6],[144,9,161,7],[144,15,161,13],[145,10,162,8],[146,10,163,8],[147,8,164,6],[148,6,165,4],[149,6,167,4],[149,10,167,4,"addBreadcrumb"],[149,29,167,17],[149,31,167,18,"breadcrumb"],[149,41,167,28],[149,43,167,30],[150,8,168,6,"input"],[150,13,168,11],[150,15,168,13,"handlerData"],[150,26,168,24],[150,27,168,25,"args"],[150,31,168,29],[151,8,169,6,"level"],[151,13,169,11],[151,15,169,13,"handlerData"],[151,26,169,24],[151,27,169,25,"level"],[152,6,170,4],[152,7,170,5],[152,8,170,6],[153,4,171,2],[153,5,171,3],[154,2,172,0],[156,2,174,0],[157,0,175,0],[158,0,176,0],[159,2,177,0],[159,11,177,9,"_getXhrBreadcrumbHandler"],[159,35,177,33,"_getXhrBreadcrumbHandler"],[159,36,177,34,"client"],[159,42,177,40],[159,44,177,42],[160,4,178,2],[160,11,178,9],[160,20,178,18,"_xhrBreadcrumb"],[160,34,178,32,"_xhrBreadcrumb"],[160,35,178,33,"handlerData"],[160,46,178,44],[160,48,178,46],[161,6,179,4],[161,10,179,8],[161,14,179,8,"getClient"],[161,29,179,17],[161,31,179,18],[161,32,179,19],[161,37,179,24,"client"],[161,43,179,30],[161,45,179,32],[162,8,180,6],[163,6,181,4],[164,6,183,4],[164,12,183,10],[165,8,183,12,"startTimestamp"],[165,22,183,26],[166,8,183,28,"endTimestamp"],[167,6,183,41],[167,7,183,42],[167,10,183,45,"handlerData"],[167,21,183,56],[168,6,185,4],[168,12,185,10,"sentryXhrData"],[168,25,185,23],[168,28,185,26,"handlerData"],[168,39,185,37],[168,40,185,38,"xhr"],[168,43,185,41],[168,44,185,42,"SENTRY_XHR_DATA_KEY"],[168,77,185,61],[168,78,185,62],[170,6,187,4],[171,6,188,4],[171,10,188,8],[171,11,188,9,"startTimestamp"],[171,25,188,23],[171,29,188,27],[171,30,188,28,"endTimestamp"],[171,42,188,40],[171,46,188,44],[171,47,188,45,"sentryXhrData"],[171,60,188,58],[171,62,188,60],[172,8,189,6],[173,6,190,4],[174,6,192,4],[174,12,192,10],[175,8,192,12,"method"],[175,14,192,18],[176,8,192,20,"url"],[176,11,192,23],[177,8,192,25,"status_code"],[177,19,192,36],[178,8,192,38,"body"],[179,6,192,43],[179,7,192,44],[179,10,192,47,"sentryXhrData"],[179,23,192,60],[180,6,194,4],[180,12,194,10,"data"],[180,16,194,14],[180,19,194,17],[181,8,195,6,"method"],[181,14,195,12],[182,8,196,6,"url"],[182,11,196,9],[183,8,197,6,"status_code"],[184,6,198,4],[184,7,198,5],[185,6,200,4],[185,12,200,10,"hint"],[185,16,200,14],[185,19,200,17],[186,8,201,6,"xhr"],[186,11,201,9],[186,13,201,11,"handlerData"],[186,24,201,22],[186,25,201,23,"xhr"],[186,28,201,26],[187,8,202,6,"input"],[187,13,202,11],[187,15,202,13,"body"],[187,19,202,17],[188,8,203,6,"startTimestamp"],[188,22,203,20],[189,8,204,6,"endTimestamp"],[190,6,205,4],[190,7,205,5],[191,6,207,4],[191,12,207,10,"level"],[191,17,207,15],[191,20,207,18],[191,24,207,18,"getBreadcrumbLogLevelFromHttpStatusCode"],[191,69,207,57],[191,71,207,58,"status_code"],[191,82,207,69],[191,83,207,70],[192,6,209,4],[192,10,209,4,"addBreadcrumb"],[192,29,209,17],[192,31,210,6],[193,8,211,8,"category"],[193,16,211,16],[193,18,211,18],[193,23,211,23],[194,8,212,8,"data"],[194,12,212,12],[195,8,213,8,"type"],[195,12,213,12],[195,14,213,14],[195,20,213,20],[196,8,214,8,"level"],[197,6,215,6],[197,7,215,7],[197,9,216,6,"hint"],[197,13,217,4],[197,14,217,5],[198,4,218,2],[198,5,218,3],[199,2,219,0],[201,2,221,0],[202,0,222,0],[203,0,223,0],[204,2,224,0],[204,11,224,9,"_getFetchBreadcrumbHandler"],[204,37,224,35,"_getFetchBreadcrumbHandler"],[204,38,224,36,"client"],[204,44,224,42],[204,46,224,44],[205,4,225,2],[205,11,225,9],[205,20,225,18,"_fetchBreadcrumb"],[205,36,225,34,"_fetchBreadcrumb"],[205,37,225,35,"handlerData"],[205,48,225,46],[205,50,225,48],[206,6,226,4],[206,10,226,8],[206,14,226,8,"getClient"],[206,29,226,17],[206,31,226,18],[206,32,226,19],[206,37,226,24,"client"],[206,43,226,30],[206,45,226,32],[207,8,227,6],[208,6,228,4],[209,6,230,4],[209,12,230,10],[210,8,230,12,"startTimestamp"],[210,22,230,26],[211,8,230,28,"endTimestamp"],[212,6,230,41],[212,7,230,42],[212,10,230,45,"handlerData"],[212,21,230,56],[214,6,232,4],[215,6,233,4],[215,10,233,8],[215,11,233,9,"endTimestamp"],[215,23,233,21],[215,25,233,23],[216,8,234,6],[217,6,235,4],[218,6,237,4],[218,10,237,8,"handlerData"],[218,21,237,19],[218,22,237,20,"fetchData"],[218,31,237,29],[218,32,237,30,"url"],[218,35,237,33],[218,36,237,34,"match"],[218,41,237,39],[218,42,237,40],[218,54,237,52],[218,55,237,53],[218,59,237,57,"handlerData"],[218,70,237,68],[218,71,237,69,"fetchData"],[218,80,237,78],[218,81,237,79,"method"],[218,87,237,85],[218,92,237,90],[218,98,237,96],[218,100,237,98],[219,8,238,6],[220,8,239,6],[221,6,240,4],[222,6,242,4],[222,10,242,8,"handlerData"],[222,21,242,19],[222,22,242,20,"error"],[222,27,242,25],[222,29,242,27],[223,8,243,6],[223,14,243,12,"data"],[223,18,243,16],[223,21,243,19,"handlerData"],[223,32,243,30],[223,33,243,31,"fetchData"],[223,42,243,40],[224,8,244,6],[224,14,244,12,"hint"],[224,18,244,16],[224,21,244,19],[225,10,245,8,"data"],[225,14,245,12],[225,16,245,14,"handlerData"],[225,27,245,25],[225,28,245,26,"error"],[225,33,245,31],[226,10,246,8,"input"],[226,15,246,13],[226,17,246,15,"handlerData"],[226,28,246,26],[226,29,246,27,"args"],[226,33,246,31],[227,10,247,8,"startTimestamp"],[227,24,247,22],[228,10,248,8,"endTimestamp"],[229,8,249,6],[229,9,249,7],[230,8,251,6],[230,12,251,6,"addBreadcrumb"],[230,31,251,19],[230,33,252,8],[231,10,253,10,"category"],[231,18,253,18],[231,20,253,20],[231,27,253,27],[232,10,254,10,"data"],[232,14,254,14],[233,10,255,10,"level"],[233,15,255,15],[233,17,255,17],[233,24,255,24],[234,10,256,10,"type"],[234,14,256,14],[234,16,256,16],[235,8,257,8],[235,9,257,9],[235,11,258,8,"hint"],[235,15,259,6],[235,16,259,7],[236,6,260,4],[236,7,260,5],[236,13,260,11],[237,8,261,6],[237,14,261,12,"response"],[237,22,261,20],[237,25,261,23,"handlerData"],[237,36,261,34],[237,37,261,35,"response"],[237,45,261,43],[238,8,262,6],[238,14,262,12,"data"],[238,18,262,16],[238,21,262,19],[239,10,263,8],[239,13,263,11,"handlerData"],[239,24,263,22],[239,25,263,23,"fetchData"],[239,34,263,32],[240,10,264,8,"status_code"],[240,21,264,19],[240,23,264,21,"response"],[240,31,264,29],[240,35,264,33,"response"],[240,43,264,41],[240,44,264,42,"status"],[241,8,265,6],[241,9,265,7],[242,8,266,6],[242,14,266,12,"hint"],[242,18,266,16],[242,21,266,19],[243,10,267,8,"input"],[243,15,267,13],[243,17,267,15,"handlerData"],[243,28,267,26],[243,29,267,27,"args"],[243,33,267,31],[244,10,268,8,"response"],[244,18,268,16],[245,10,269,8,"startTimestamp"],[245,24,269,22],[246,10,270,8,"endTimestamp"],[247,8,271,6],[247,9,271,7],[248,8,272,6],[248,14,272,12,"level"],[248,19,272,17],[248,22,272,20],[248,26,272,20,"getBreadcrumbLogLevelFromHttpStatusCode"],[248,71,272,59],[248,73,272,60,"data"],[248,77,272,64],[248,78,272,65,"status_code"],[248,89,272,76],[248,90,272,77],[249,8,274,6],[249,12,274,6,"addBreadcrumb"],[249,31,274,19],[249,33,275,8],[250,10,276,10,"category"],[250,18,276,18],[250,20,276,20],[250,27,276,27],[251,10,277,10,"data"],[251,14,277,14],[252,10,278,10,"type"],[252,14,278,14],[252,16,278,16],[252,22,278,22],[253,10,279,10,"level"],[254,8,280,8],[254,9,280,9],[254,11,281,8,"hint"],[254,15,282,6],[254,16,282,7],[255,6,283,4],[256,4,284,2],[256,5,284,3],[257,2,285,0],[259,2,287,0],[260,0,288,0],[261,0,289,0],[262,2,290,0],[262,11,290,9,"_getHistoryBreadcrumbHandler"],[262,39,290,37,"_getHistoryBreadcrumbHandler"],[262,40,290,38,"client"],[262,46,290,44],[262,48,290,46],[263,4,291,2],[263,11,291,9],[263,20,291,18,"_historyBreadcrumb"],[263,38,291,36,"_historyBreadcrumb"],[263,39,291,37,"handlerData"],[263,50,291,48],[263,52,291,50],[264,6,292,4],[264,10,292,8],[264,14,292,8,"getClient"],[264,29,292,17],[264,31,292,18],[264,32,292,19],[264,37,292,24,"client"],[264,43,292,30],[264,45,292,32],[265,8,293,6],[266,6,294,4],[267,6,296,4],[267,10,296,8,"from"],[267,14,296,12],[267,17,296,15,"handlerData"],[267,28,296,26],[267,29,296,27,"from"],[267,33,296,31],[268,6,297,4],[268,10,297,8,"to"],[268,12,297,10],[268,15,297,13,"handlerData"],[268,26,297,24],[268,27,297,25,"to"],[268,29,297,27],[269,6,298,4],[269,12,298,10,"parsedLoc"],[269,21,298,19],[269,24,298,22],[269,28,298,22,"parseUrl"],[269,42,298,30],[269,44,298,31,"WINDOW"],[269,59,298,37],[269,60,298,38,"location"],[269,68,298,46],[269,69,298,47,"href"],[269,73,298,51],[269,74,298,52],[270,6,299,4],[270,10,299,8,"parsedFrom"],[270,20,299,18],[270,23,299,21,"from"],[270,27,299,25],[270,30,299,28],[270,34,299,28,"parseUrl"],[270,48,299,36],[270,50,299,37,"from"],[270,54,299,41],[270,55,299,42],[270,58,299,45,"undefined"],[270,67,299,54],[271,6,300,4],[271,12,300,10,"parsedTo"],[271,20,300,18],[271,23,300,21],[271,27,300,21,"parseUrl"],[271,41,300,29],[271,43,300,30,"to"],[271,45,300,32],[271,46,300,33],[273,6,302,4],[274,6,303,4],[274,10,303,8],[274,11,303,9,"parsedFrom"],[274,21,303,19],[274,25,303,23],[274,26,303,24,"parsedFrom"],[274,36,303,34],[274,37,303,35,"path"],[274,41,303,39],[274,43,303,41],[275,8,304,6,"parsedFrom"],[275,18,304,16],[275,21,304,19,"parsedLoc"],[275,30,304,28],[276,6,305,4],[278,6,307,4],[279,6,308,4],[280,6,309,4],[280,10,309,8,"parsedLoc"],[280,19,309,17],[280,20,309,18,"protocol"],[280,28,309,26],[280,33,309,31,"parsedTo"],[280,41,309,39],[280,42,309,40,"protocol"],[280,50,309,48],[280,54,309,52,"parsedLoc"],[280,63,309,61],[280,64,309,62,"host"],[280,68,309,66],[280,73,309,71,"parsedTo"],[280,81,309,79],[280,82,309,80,"host"],[280,86,309,84],[280,88,309,86],[281,8,310,6,"to"],[281,10,310,8],[281,13,310,11,"parsedTo"],[281,21,310,19],[281,22,310,20,"relative"],[281,30,310,28],[282,6,311,4],[283,6,312,4],[283,10,312,8,"parsedLoc"],[283,19,312,17],[283,20,312,18,"protocol"],[283,28,312,26],[283,33,312,31,"parsedFrom"],[283,43,312,41],[283,44,312,42,"protocol"],[283,52,312,50],[283,56,312,54,"parsedLoc"],[283,65,312,63],[283,66,312,64,"host"],[283,70,312,68],[283,75,312,73,"parsedFrom"],[283,85,312,83],[283,86,312,84,"host"],[283,90,312,88],[283,92,312,90],[284,8,313,6,"from"],[284,12,313,10],[284,15,313,13,"parsedFrom"],[284,25,313,23],[284,26,313,24,"relative"],[284,34,313,32],[285,6,314,4],[286,6,316,4],[286,10,316,4,"addBreadcrumb"],[286,29,316,17],[286,31,316,18],[287,8,317,6,"category"],[287,16,317,14],[287,18,317,16],[287,30,317,28],[288,8,318,6,"data"],[288,12,318,10],[288,14,318,12],[289,10,319,8,"from"],[289,14,319,12],[290,10,320,8,"to"],[291,8,321,6],[292,6,322,4],[292,7,322,5],[292,8,322,6],[293,4,323,2],[293,5,323,3],[294,2,324,0],[295,2,326,0],[295,11,326,9,"_isEvent"],[295,19,326,17,"_isEvent"],[295,20,326,18,"event"],[295,25,326,23],[295,27,326,25],[296,4,327,2],[296,11,327,9],[296,12,327,10],[296,13,327,11,"event"],[296,18,327,16],[296,22,327,20],[296,23,327,21],[296,24,327,23,"event"],[296,29,327,28],[296,30,327,31,"target"],[296,36,327,37],[297,2,328,0],[298,0,328,1],[298,3]],"functionMap":{"names":["<global>","_breadcrumbsIntegration","setup","_getSentryBreadcrumbHandler","addSentryBreadcrumb","_getDomBreadcrumbHandler","_innerDomBreadcrumb","_getConsoleBreadcrumbHandler","_consoleBreadcrumb","_getXhrBreadcrumbHandler","_xhrBreadcrumb","_getFetchBreadcrumbHandler","_fetchBreadcrumb","_getHistoryBreadcrumbHandler","_historyBreadcrumb","_isEvent"],"mappings":"AAA;iCCa;ICa;KDmB;CDE;AGO;SCC;GDgB;CHC;AKM;SCI;GDoD;CLC;AOK;SCC;GD6B;CPC;ASK;SCC;GDwC;CTC;AWK;SCC;GD2D;CXC;AaK;SCC;GDgC;CbC;AeE;CfE"}},"type":"js/module"}]}