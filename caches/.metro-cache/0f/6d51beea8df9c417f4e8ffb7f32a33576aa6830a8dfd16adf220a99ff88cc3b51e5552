{"dependencies":[{"name":"../../Platform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"AXHAxFjlDdeq1JxYZnWn+aHYhYU=","exportNames":["*"]}},{"name":"../Skia","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":31,"index":74}}],"key":"5eRJ3Y/mp/EEiynYa3WwzXcSMXc=","exportNames":["*"]}},{"name":"./Data","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":134},"end":{"line":5,"column":36,"index":170}}],"key":"0fS75tjqpJdM3ThONBfvzOQKEI0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useImage = exports.makeImageFromView = void 0;\n  var _Platform = require(_dependencyMap[0], \"../../Platform\");\n  var _Skia = require(_dependencyMap[1], \"../Skia\");\n  var _Data = require(_dependencyMap[2], \"./Data\");\n  var imgFactory = _Skia.Skia.Image.MakeImageFromEncoded.bind(_Skia.Skia.Image);\n\n  /**\n   * Returns a Skia Image object\n   * */\n  var useImage = (source, onError) => (0, _Data.useRawData)(source, imgFactory, onError);\n\n  /**\n   * Creates an image from a given view reference. NOTE: This method has different implementations\n   * on web/native. On web, the callback is called with the view ref and the callback is expected to\n   * return a promise that resolves to a Skia Image object. On native, the view ref is used to\n   * find the view tag and the Skia Image object is created from the view tag. This means that on web\n   * you will need to implement the logic to create the image from the view ref yourself.\n   * @param viewRef Ref to the view we're creating an image from\n   * @returns A promise that resolves to a Skia Image object or rejects\n   * with an error id the view tag is invalid.\n   */\n  exports.useImage = useImage;\n  var makeImageFromView = function (viewRef) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    // In web implementation we just delegate the work to the provided callback\n    if (_Platform.Platform.OS === \"web\") {\n      if (callback) {\n        return callback(viewRef);\n      } else {\n        Promise.reject(new Error(\"Callback is required on web in the makeImageFromView function.\"));\n      }\n    }\n    var viewTag = _Platform.Platform.findNodeHandle(viewRef.current);\n    if (viewTag !== null && viewTag !== 0) {\n      return _Skia.Skia.Image.MakeImageFromViewTag(viewTag);\n    }\n    return Promise.reject(new Error(\"Invalid view tag\"));\n  };\n  exports.makeImageFromView = makeImageFromView;\n});","lineCount":44,"map":[[6,2,1,0],[6,6,1,0,"_Platform"],[6,15,1,0],[6,18,1,0,"require"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,2,0],[7,6,2,0,"_Skia"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,5,0],[8,6,5,0,"_Data"],[8,11,5,0],[8,14,5,0,"require"],[8,21,5,0],[8,22,5,0,"_dependencyMap"],[8,36,5,0],[9,2,7,0],[9,6,7,6,"imgFactory"],[9,16,7,16],[9,19,7,19,"Skia"],[9,29,7,23],[9,30,7,24,"Image"],[9,35,7,29],[9,36,7,30,"MakeImageFromEncoded"],[9,56,7,50],[9,57,7,51,"bind"],[9,61,7,55],[9,62,7,56,"Skia"],[9,72,7,60],[9,73,7,61,"Image"],[9,78,7,66],[9,79,7,67],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,2,12,7],[14,6,12,13,"useImage"],[14,14,12,21],[14,17,12,24,"useImage"],[14,18,13,2,"source"],[14,24,13,25],[14,26,14,2,"onError"],[14,33,14,32],[14,38,15,5],[14,42,15,5,"useRawData"],[14,58,15,15],[14,60,15,16,"source"],[14,66,15,22],[14,68,15,24,"imgFactory"],[14,78,15,34],[14,80,15,36,"onError"],[14,87,15,43],[14,88,15,44],[16,2,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,0,25,0],[25,0,26,0],[26,2,17,0,"exports"],[26,9,17,0],[26,10,17,0,"useImage"],[26,18,17,0],[26,21,17,0,"useImage"],[26,29,17,0],[27,2,27,7],[27,6,27,13,"makeImageFromView"],[27,23,27,30],[27,26,27,33],[27,35,27,33,"makeImageFromView"],[27,36,33,2,"viewRef"],[27,43,33,29],[27,45,37,5],[28,4,37,5],[28,8,34,2,"callback"],[28,16,36,64],[28,19,36,64,"arguments"],[28,28,36,64],[28,29,36,64,"length"],[28,35,36,64],[28,43,36,64,"arguments"],[28,52,36,64],[28,60,36,64,"undefined"],[28,69,36,64],[28,72,36,64,"arguments"],[28,81,36,64],[28,87,36,67],[28,91,36,71],[29,4,38,2],[30,4,39,2],[30,8,39,6,"Platform"],[30,26,39,14],[30,27,39,15,"OS"],[30,29,39,17],[30,34,39,22],[30,39,39,27],[30,41,39,29],[31,6,40,4],[31,10,40,8,"callback"],[31,18,40,16],[31,20,40,18],[32,8,41,6],[32,15,41,13,"callback"],[32,23,41,21],[32,24,41,22,"viewRef"],[32,31,41,29],[32,32,41,30],[33,6,42,4],[33,7,42,5],[33,13,42,11],[34,8,43,6,"Promise"],[34,15,43,13],[34,16,43,14,"reject"],[34,22,43,20],[34,23,44,8],[34,27,44,12,"Error"],[34,32,44,17],[34,33,45,10],[34,97,46,8],[34,98,47,6],[34,99,47,7],[35,6,48,4],[36,4,49,2],[37,4,50,2],[37,8,50,8,"viewTag"],[37,15,50,15],[37,18,50,18,"Platform"],[37,36,50,26],[37,37,50,27,"findNodeHandle"],[37,51,50,41],[37,52,50,42,"viewRef"],[37,59,50,49],[37,60,50,50,"current"],[37,67,50,57],[37,68,50,58],[38,4,51,2],[38,8,51,6,"viewTag"],[38,15,51,13],[38,20,51,18],[38,24,51,22],[38,28,51,26,"viewTag"],[38,35,51,33],[38,40,51,38],[38,41,51,39],[38,43,51,41],[39,6,52,4],[39,13,52,11,"Skia"],[39,23,52,15],[39,24,52,16,"Image"],[39,29,52,21],[39,30,52,22,"MakeImageFromViewTag"],[39,50,52,42],[39,51,52,43,"viewTag"],[39,58,52,50],[39,59,52,51],[40,4,53,2],[41,4,54,2],[41,11,54,9,"Promise"],[41,18,54,16],[41,19,54,17,"reject"],[41,25,54,23],[41,26,54,24],[41,30,54,28,"Error"],[41,35,54,33],[41,36,54,34],[41,54,54,52],[41,55,54,53],[41,56,54,54],[42,2,55,0],[42,3,55,1],[43,2,55,2,"exports"],[43,9,55,2],[43,10,55,2,"makeImageFromView"],[43,27,55,2],[43,30,55,2,"makeImageFromView"],[43,47,55,2],[44,0,55,2],[44,3]],"functionMap":{"names":["<global>","useImage","makeImageFromView"],"mappings":"AAA;wBCW;4CDG;iCEY;CF4B"}},"type":"js/module"}]}