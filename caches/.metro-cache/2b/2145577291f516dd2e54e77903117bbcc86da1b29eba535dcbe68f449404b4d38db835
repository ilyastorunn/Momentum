{"dependencies":[{"name":"../../../types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"How8xsoS0dUDpKnVy0jHSdmxOM4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getVisibilityWatcher = void 0;\n  var _types = require(_dependencyMap[0], \"../../../types.js\");\n  /*\n   * Copyright 2020 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  let firstHiddenTime = -1;\n  const initHiddenTime = () => {\n    // If the document is hidden when this code runs, assume it was always\n    // hidden and the page was loaded in the background, with the one exception\n    // that visibility state is always 'hidden' during prerendering, so we have\n    // to ignore that case until prerendering finishes (see: `prerenderingchange`\n    // event logic below).\n    return _types.WINDOW.document.visibilityState === 'hidden' && !_types.WINDOW.document.prerendering ? 0 : Infinity;\n  };\n  const onVisibilityUpdate = event => {\n    // If the document is 'hidden' and no previous hidden timestamp has been\n    // set, update it based on the current event data.\n    if (_types.WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n      // If the event is a 'visibilitychange' event, it means the page was\n      // visible prior to this change, so the event timestamp is the first\n      // hidden time.\n      // However, if the event is not a 'visibilitychange' event, then it must\n      // be a 'prerenderingchange' event, and the fact that the document is\n      // still 'hidden' from the above check means the tab was activated\n      // in a background state and so has always been hidden.\n      firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n      // Remove all listeners now that a `firstHiddenTime` value has been set.\n      removeChangeListeners();\n    }\n  };\n  const addChangeListeners = () => {\n    addEventListener('visibilitychange', onVisibilityUpdate, true);\n    // IMPORTANT: when a page is prerendering, its `visibilityState` is\n    // 'hidden', so in order to account for cases where this module checks for\n    // visibility during prerendering, an additional check after prerendering\n    // completes is also required.\n    addEventListener('prerenderingchange', onVisibilityUpdate, true);\n  };\n  const removeChangeListeners = () => {\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n  };\n  const getVisibilityWatcher = () => {\n    if (_types.WINDOW.document && firstHiddenTime < 0) {\n      // If the document is hidden when this code runs, assume it was hidden\n      // since navigation start. This isn't a perfect heuristic, but it's the\n      // best we can do until an API is available to support querying past\n      // visibilityState.\n      firstHiddenTime = initHiddenTime();\n      addChangeListeners();\n    }\n    return {\n      get firstHiddenTime() {\n        return firstHiddenTime;\n      }\n    };\n  };\n  exports.getVisibilityWatcher = getVisibilityWatcher;\n});","lineCount":77,"map":[[6,2,1,0],[6,6,1,0,"_types"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[23,2,20,0],[23,6,20,4,"firstHiddenTime"],[23,21,20,19],[23,24,20,22],[23,25,20,23],[23,26,20,24],[24,2,22,0],[24,8,22,6,"initHiddenTime"],[24,22,22,20],[24,25,22,23,"initHiddenTime"],[24,26,22,23],[24,31,22,29],[25,4,23,2],[26,4,24,2],[27,4,25,2],[28,4,26,2],[29,4,27,2],[30,4,28,2],[30,11,28,9,"WINDOW"],[30,24,28,15],[30,25,28,16,"document"],[30,33,28,24],[30,34,28,25,"visibilityState"],[30,49,28,40],[30,54,28,45],[30,62,28,53],[30,66,28,57],[30,67,28,58,"WINDOW"],[30,80,28,64],[30,81,28,65,"document"],[30,89,28,73],[30,90,28,74,"prerendering"],[30,102,28,86],[30,105,28,89],[30,106,28,90],[30,109,28,93,"Infinity"],[30,117,28,101],[31,2,29,0],[31,3,29,1],[32,2,31,0],[32,8,31,6,"onVisibilityUpdate"],[32,26,31,24],[32,29,31,28,"event"],[32,34,31,33],[32,38,31,38],[33,4,32,2],[34,4,33,2],[35,4,34,2],[35,8,34,6,"WINDOW"],[35,21,34,12],[35,22,34,13,"document"],[35,30,34,21],[35,31,34,22,"visibilityState"],[35,46,34,37],[35,51,34,42],[35,59,34,50],[35,63,34,54,"firstHiddenTime"],[35,78,34,69],[35,81,34,72],[35,82,34,73],[35,83,34,74],[35,85,34,76],[36,6,35,4],[37,6,36,4],[38,6,37,4],[39,6,38,4],[40,6,39,4],[41,6,40,4],[42,6,41,4],[43,6,42,4,"firstHiddenTime"],[43,21,42,19],[43,24,42,22,"event"],[43,29,42,27],[43,30,42,28,"type"],[43,34,42,32],[43,39,42,37],[43,57,42,55],[43,60,42,58,"event"],[43,65,42,63],[43,66,42,64,"timeStamp"],[43,75,42,73],[43,78,42,76],[43,79,42,77],[45,6,44,4],[46,6,45,4,"removeChangeListeners"],[46,27,45,25],[46,28,45,26],[46,29,45,27],[47,4,46,2],[48,2,47,0],[48,3,47,1],[49,2,49,0],[49,8,49,6,"addChangeListeners"],[49,26,49,24],[49,29,49,27,"addChangeListeners"],[49,30,49,27],[49,35,49,33],[50,4,50,2,"addEventListener"],[50,20,50,18],[50,21,50,19],[50,39,50,37],[50,41,50,39,"onVisibilityUpdate"],[50,59,50,57],[50,61,50,59],[50,65,50,63],[50,66,50,64],[51,4,51,2],[52,4,52,2],[53,4,53,2],[54,4,54,2],[55,4,55,2,"addEventListener"],[55,20,55,18],[55,21,55,19],[55,41,55,39],[55,43,55,41,"onVisibilityUpdate"],[55,61,55,59],[55,63,55,61],[55,67,55,65],[55,68,55,66],[56,2,56,0],[56,3,56,1],[57,2,58,0],[57,8,58,6,"removeChangeListeners"],[57,29,58,27],[57,32,58,30,"removeChangeListeners"],[57,33,58,30],[57,38,58,36],[58,4,59,2,"removeEventListener"],[58,23,59,21],[58,24,59,22],[58,42,59,40],[58,44,59,42,"onVisibilityUpdate"],[58,62,59,60],[58,64,59,62],[58,68,59,66],[58,69,59,67],[59,4,60,2,"removeEventListener"],[59,23,60,21],[59,24,60,22],[59,44,60,42],[59,46,60,44,"onVisibilityUpdate"],[59,64,60,62],[59,66,60,64],[59,70,60,68],[59,71,60,69],[60,2,61,0],[60,3,61,1],[61,2,63,0],[61,8,63,6,"getVisibilityWatcher"],[61,28,63,26],[61,31,63,29,"getVisibilityWatcher"],[61,32,63,29],[61,37,63,35],[62,4,64,2],[62,8,64,6,"WINDOW"],[62,21,64,12],[62,22,64,13,"document"],[62,30,64,21],[62,34,64,25,"firstHiddenTime"],[62,49,64,40],[62,52,64,43],[62,53,64,44],[62,55,64,46],[63,6,65,4],[64,6,66,4],[65,6,67,4],[66,6,68,4],[67,6,69,4,"firstHiddenTime"],[67,21,69,19],[67,24,69,22,"initHiddenTime"],[67,38,69,36],[67,39,69,37],[67,40,69,38],[68,6,70,4,"addChangeListeners"],[68,24,70,22],[68,25,70,23],[68,26,70,24],[69,4,71,2],[70,4,72,2],[70,11,72,9],[71,6,73,4],[71,10,73,8,"firstHiddenTime"],[71,25,73,23,"firstHiddenTime"],[71,26,73,23],[71,28,73,26],[72,8,74,6],[72,15,74,13,"firstHiddenTime"],[72,30,74,28],[73,6,75,4],[74,4,76,2],[74,5,76,3],[75,2,77,0],[75,3,77,1],[76,2,77,2,"exports"],[76,9,77,2],[76,10,77,2,"getVisibilityWatcher"],[76,30,77,2],[76,33,77,2,"getVisibilityWatcher"],[76,53,77,2],[77,0,77,2],[77,3]],"functionMap":{"names":["<global>","initHiddenTime","onVisibilityUpdate","addChangeListeners","removeChangeListeners","getVisibilityWatcher","get__firstHiddenTime"],"mappings":"AAA;uBCqB;CDO;2BEE;CFgB;2BGE;CHO;8BIE;CJG;6BKE;ICU;KDE;CLE"}},"type":"js/module"}]}