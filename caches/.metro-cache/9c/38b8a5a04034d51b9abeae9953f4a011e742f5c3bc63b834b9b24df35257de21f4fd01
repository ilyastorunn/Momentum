{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.makeFifoCache = makeFifoCache;\n  /**\n   * Creates a cache that evicts keys in fifo order\n   * @param size {Number}\n   *\n   * @deprecated This function is deprecated and will be removed in the next major version.\n   */\n  function makeFifoCache(size) {\n    // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n    let evictionOrder = [];\n    let cache = {};\n    return {\n      add(key, value) {\n        while (evictionOrder.length >= size) {\n          // shift is O(n) but this is small size and only happens if we are\n          // exceeding the cache size so it should be fine.\n          const evictCandidate = evictionOrder.shift();\n          if (evictCandidate !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete cache[evictCandidate];\n          }\n        }\n\n        // in case we have a collision, delete the old key.\n        if (cache[key]) {\n          this.delete(key);\n        }\n        evictionOrder.push(key);\n        cache[key] = value;\n      },\n      clear() {\n        cache = {};\n        evictionOrder = [];\n      },\n      get(key) {\n        return cache[key];\n      },\n      size() {\n        return evictionOrder.length;\n      },\n      // Delete cache key and return true if it existed, false otherwise.\n      delete(key) {\n        if (!cache[key]) {\n          return false;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete cache[key];\n        for (let i = 0; i < evictionOrder.length; i++) {\n          if (evictionOrder[i] === key) {\n            evictionOrder.splice(i, 1);\n            break;\n          }\n        }\n        return true;\n      }\n    };\n  }\n});","lineCount":63,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,2,7,0],[12,11,7,9,"makeFifoCache"],[12,24,7,22,"makeFifoCache"],[12,25,8,2,"size"],[12,29,8,6],[12,31,11,1],[13,4,12,2],[14,4,13,2],[14,8,13,6,"evictionOrder"],[14,21,13,19],[14,24,13,22],[14,26,13,24],[15,4,14,2],[15,8,14,6,"cache"],[15,13,14,11],[15,16,14,14],[15,17,14,15],[15,18,14,16],[16,4,16,2],[16,11,16,9],[17,6,17,4,"add"],[17,9,17,7,"add"],[17,10,17,8,"key"],[17,13,17,11],[17,15,17,13,"value"],[17,20,17,18],[17,22,17,20],[18,8,18,6],[18,15,18,13,"evictionOrder"],[18,28,18,26],[18,29,18,27,"length"],[18,35,18,33],[18,39,18,37,"size"],[18,43,18,41],[18,45,18,43],[19,10,19,8],[20,10,20,8],[21,10,21,8],[21,16,21,14,"evictCandidate"],[21,30,21,28],[21,33,21,31,"evictionOrder"],[21,46,21,44],[21,47,21,45,"shift"],[21,52,21,50],[21,53,21,51],[21,54,21,52],[22,10,23,8],[22,14,23,12,"evictCandidate"],[22,28,23,26],[22,33,23,31,"undefined"],[22,42,23,40],[22,44,23,42],[23,12,24,10],[24,12,25,10],[24,19,25,17,"cache"],[24,24,25,22],[24,25,25,23,"evictCandidate"],[24,39,25,37],[24,40,25,38],[25,10,26,8],[26,8,27,6],[28,8,29,6],[29,8,30,6],[29,12,30,10,"cache"],[29,17,30,15],[29,18,30,16,"key"],[29,21,30,19],[29,22,30,20],[29,24,30,22],[30,10,31,8],[30,14,31,12],[30,15,31,13,"delete"],[30,21,31,19],[30,22,31,20,"key"],[30,25,31,23],[30,26,31,24],[31,8,32,6],[32,8,34,6,"evictionOrder"],[32,21,34,19],[32,22,34,20,"push"],[32,26,34,24],[32,27,34,25,"key"],[32,30,34,28],[32,31,34,29],[33,8,35,6,"cache"],[33,13,35,11],[33,14,35,12,"key"],[33,17,35,15],[33,18,35,16],[33,21,35,19,"value"],[33,26,35,24],[34,6,36,4],[34,7,36,5],[35,6,37,4,"clear"],[35,11,37,9,"clear"],[35,12,37,9],[35,14,37,12],[36,8,38,6,"cache"],[36,13,38,11],[36,16,38,14],[36,17,38,15],[36,18,38,16],[37,8,39,6,"evictionOrder"],[37,21,39,19],[37,24,39,22],[37,26,39,24],[38,6,40,4],[38,7,40,5],[39,6,41,4,"get"],[39,9,41,7,"get"],[39,10,41,8,"key"],[39,13,41,11],[39,15,41,13],[40,8,42,6],[40,15,42,13,"cache"],[40,20,42,18],[40,21,42,19,"key"],[40,24,42,22],[40,25,42,23],[41,6,43,4],[41,7,43,5],[42,6,44,4,"size"],[42,10,44,8,"size"],[42,11,44,8],[42,13,44,11],[43,8,45,6],[43,15,45,13,"evictionOrder"],[43,28,45,26],[43,29,45,27,"length"],[43,35,45,33],[44,6,46,4],[44,7,46,5],[45,6,47,4],[46,6,48,4,"delete"],[46,12,48,10,"delete"],[46,13,48,11,"key"],[46,16,48,14],[46,18,48,16],[47,8,49,6],[47,12,49,10],[47,13,49,11,"cache"],[47,18,49,16],[47,19,49,17,"key"],[47,22,49,20],[47,23,49,21],[47,25,49,23],[48,10,50,8],[48,17,50,15],[48,22,50,20],[49,8,51,6],[51,8,53,6],[52,8,54,6],[52,15,54,13,"cache"],[52,20,54,18],[52,21,54,19,"key"],[52,24,54,22],[52,25,54,23],[53,8,56,6],[53,13,56,11],[53,17,56,15,"i"],[53,18,56,16],[53,21,56,19],[53,22,56,20],[53,24,56,22,"i"],[53,25,56,23],[53,28,56,26,"evictionOrder"],[53,41,56,39],[53,42,56,40,"length"],[53,48,56,46],[53,50,56,48,"i"],[53,51,56,49],[53,53,56,51],[53,55,56,53],[54,10,57,8],[54,14,57,12,"evictionOrder"],[54,27,57,25],[54,28,57,26,"i"],[54,29,57,27],[54,30,57,28],[54,35,57,33,"key"],[54,38,57,36],[54,40,57,38],[55,12,58,10,"evictionOrder"],[55,25,58,23],[55,26,58,24,"splice"],[55,32,58,30],[55,33,58,31,"i"],[55,34,58,32],[55,36,58,34],[55,37,58,35],[55,38,58,36],[56,12,59,10],[57,10,60,8],[58,8,61,6],[59,8,63,6],[59,15,63,13],[59,19,63,17],[60,6,64,4],[61,4,65,2],[61,5,65,3],[62,2,66,0],[63,0,66,1],[63,3]],"functionMap":{"names":["<global>","makeFifoCache","add","clear","get","size","_delete"],"mappings":"AAA;ACM;ICU;KDmB;IEC;KFG;IGC;KHE;IIC;KJE;IKE;KLgB;CDE"}},"type":"js/module"}]}