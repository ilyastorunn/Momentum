{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../../../utils/featureFlags.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":94,"index":144}}],"key":"rZi75susrW6b4U5MRcW9aF3kKeg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.buildLaunchDarklyFlagUsedHandler = buildLaunchDarklyFlagUsedHandler;\n  exports.launchDarklyIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _featureFlags = require(_dependencyMap[1], \"../../../utils/featureFlags.js\");\n  /**\n   * Sentry integration for capturing feature flags from LaunchDarkly.\n   *\n   * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n   *\n   * @example\n   * ```\n   * import * as Sentry from '@sentry/browser';\n   * import {launchDarklyIntegration, buildLaunchDarklyFlagUsedInspector} from '@sentry/browser';\n   * import * as LaunchDarkly from 'launchdarkly-js-client-sdk';\n   *\n   * Sentry.init(..., integrations: [launchDarklyIntegration()])\n   * const ldClient = LaunchDarkly.initialize(..., {inspectors: [buildLaunchDarklyFlagUsedHandler()]});\n   * ```\n   */\n  const launchDarklyIntegration = exports.launchDarklyIntegration = (0, _core.defineIntegration)(() => {\n    return {\n      name: 'LaunchDarkly',\n      processEvent(event, _hint, _client) {\n        return (0, _featureFlags.copyFlagsFromScopeToEvent)(event);\n      }\n    };\n  });\n\n  /**\n   * LaunchDarkly hook that listens for flag evaluations and updates the `flags`\n   * context in our Sentry scope. This needs to be registered as an\n   * 'inspector' in LaunchDarkly initialize() options, separately from\n   * `launchDarklyIntegration`. Both are needed to collect feature flags on error.\n   */\n  function buildLaunchDarklyFlagUsedHandler() {\n    return {\n      name: 'sentry-flag-auditor',\n      type: 'flag-used',\n      synchronous: true,\n      /**\n       * Handle a flag evaluation by storing its name and value on the current scope.\n       */\n      method: (flagKey, flagDetail, _context) => {\n        (0, _featureFlags.insertFlagToScope)(flagKey, flagDetail.value);\n      }\n    };\n  }\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_core"],[7,11,1,0],[7,14,1,0,"require"],[7,21,1,0],[7,22,1,0,"_dependencyMap"],[7,36,1,0],[8,2,2,0],[8,6,2,0,"_featureFlags"],[8,19,2,0],[8,22,2,0,"require"],[8,29,2,0],[8,30,2,0,"_dependencyMap"],[8,44,2,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,2,19,0],[24,8,19,6,"launchDarklyIntegration"],[24,31,19,29],[24,34,19,29,"exports"],[24,41,19,29],[24,42,19,29,"launchDarklyIntegration"],[24,65,19,29],[24,68,19,32],[24,72,19,32,"defineIntegration"],[24,95,19,49],[24,97,19,50],[24,103,19,56],[25,4,20,2],[25,11,20,9],[26,6,21,4,"name"],[26,10,21,8],[26,12,21,10],[26,26,21,24],[27,6,23,4,"processEvent"],[27,18,23,16,"processEvent"],[27,19,23,17,"event"],[27,24,23,22],[27,26,23,24,"_hint"],[27,31,23,29],[27,33,23,31,"_client"],[27,40,23,38],[27,42,23,40],[28,8,24,6],[28,15,24,13],[28,19,24,13,"copyFlagsFromScopeToEvent"],[28,58,24,38],[28,60,24,39,"event"],[28,65,24,44],[28,66,24,45],[29,6,25,4],[30,4,26,2],[30,5,26,3],[31,2,27,0],[31,3,27,1],[31,4,27,2],[33,2,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,2,35,0],[39,11,35,9,"buildLaunchDarklyFlagUsedHandler"],[39,43,35,41,"buildLaunchDarklyFlagUsedHandler"],[39,44,35,41],[39,46,35,44],[40,4,36,2],[40,11,36,9],[41,6,37,4,"name"],[41,10,37,8],[41,12,37,10],[41,33,37,31],[42,6,38,4,"type"],[42,10,38,8],[42,12,38,10],[42,23,38,21],[43,6,40,4,"synchronous"],[43,17,40,15],[43,19,40,17],[43,23,40,21],[44,6,42,4],[45,0,43,0],[46,0,44,0],[47,6,45,4,"method"],[47,12,45,10],[47,14,45,12,"method"],[47,15,45,13,"flagKey"],[47,22,45,20],[47,24,45,22,"flagDetail"],[47,34,45,32],[47,36,45,34,"_context"],[47,44,45,42],[47,49,45,47],[48,8,46,6],[48,12,46,6,"insertFlagToScope"],[48,43,46,23],[48,45,46,24,"flagKey"],[48,52,46,31],[48,54,46,33,"flagDetail"],[48,64,46,43],[48,65,46,44,"value"],[48,70,46,49],[48,71,46,50],[49,6,47,4],[50,4,48,2],[50,5,48,3],[51,2,49,0],[52,0,49,1],[52,3]],"functionMap":{"names":["<global>","defineIntegration$argument_0","processEvent","buildLaunchDarklyFlagUsedHandler","method"],"mappings":"AAA;kDCkB;ICI;KDE;CDE;AGQ;YCU;KDE;CHE"}},"type":"js/module"}]}