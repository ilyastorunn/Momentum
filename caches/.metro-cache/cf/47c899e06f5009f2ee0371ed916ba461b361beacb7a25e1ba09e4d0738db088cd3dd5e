{"dependencies":[{"name":"./utils-hoist/debug-build.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"m8KfYj+k/3+bPHhnkEVLMr3nakA=","exportNames":["*"]}},{"name":"./utils-hoist/logger.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":33,"index":72}}],"key":"stoPaR3Pn8Ep3TScuCh6EHiT7Fo=","exportNames":["*"]}},{"name":"./utils-hoist/object.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":73},"end":{"line":3,"column":60,"index":133}}],"key":"RfsNMlgLcOaD/y3311U8j2nQAiE=","exportNames":["*"]}},{"name":"./utils-hoist/time.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":134},"end":{"line":4,"column":59,"index":193}}],"key":"CDYXZ+Iu2qXN5epbbNjMwVJRDIA=","exportNames":["*"]}},{"name":"./utils-hoist/misc.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":194},"end":{"line":5,"column":46,"index":240}}],"key":"4J8iL1cu5xJLfk84TOyyT/H2FWI=","exportNames":["*"]}},{"name":"./utils-hoist/syncpromise.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":241},"end":{"line":6,"column":38,"index":279}}],"key":"gwGYC9zGsq15kFPabL3tTNAvIUc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.closeSession = closeSession;\n  exports.makeSession = makeSession;\n  exports.updateSession = updateSession;\n  require(_dependencyMap[0], \"./utils-hoist/debug-build.js\");\n  require(_dependencyMap[1], \"./utils-hoist/logger.js\");\n  var _object = require(_dependencyMap[2], \"./utils-hoist/object.js\");\n  var _time = require(_dependencyMap[3], \"./utils-hoist/time.js\");\n  var _misc = require(_dependencyMap[4], \"./utils-hoist/misc.js\");\n  require(_dependencyMap[5], \"./utils-hoist/syncpromise.js\");\n  /**\n   * Creates a new `Session` object by setting certain default parameters. If optional @param context\n   * is passed, the passed properties are applied to the session object.\n   *\n   * @param context (optional) additional properties to be applied to the returned session object\n   *\n   * @returns a new `Session` object\n   */\n  function makeSession(context) {\n    // Both timestamp and started are in seconds since the UNIX epoch.\n    const startingTime = (0, _time.timestampInSeconds)();\n    const session = {\n      sid: (0, _misc.uuid4)(),\n      init: true,\n      timestamp: startingTime,\n      started: startingTime,\n      duration: 0,\n      status: 'ok',\n      errors: 0,\n      ignoreDuration: false,\n      toJSON: () => sessionToJSON(session)\n    };\n    if (context) {\n      updateSession(session, context);\n    }\n    return session;\n  }\n\n  /**\n   * Updates a session object with the properties passed in the context.\n   *\n   * Note that this function mutates the passed object and returns void.\n   * (Had to do this instead of returning a new and updated session because closing and sending a session\n   * makes an update to the session after it was passed to the sending logic.\n   * @see BaseClient.captureSession )\n   *\n   * @param session the `Session` to update\n   * @param context the `SessionContext` holding the properties that should be updated in @param session\n   */\n  // eslint-disable-next-line complexity\n  function updateSession(session, context = {}) {\n    if (context.user) {\n      if (!session.ipAddress && context.user.ip_address) {\n        session.ipAddress = context.user.ip_address;\n      }\n      if (!session.did && !context.did) {\n        session.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n    session.timestamp = context.timestamp || (0, _time.timestampInSeconds)();\n    if (context.abnormal_mechanism) {\n      session.abnormal_mechanism = context.abnormal_mechanism;\n    }\n    if (context.ignoreDuration) {\n      session.ignoreDuration = context.ignoreDuration;\n    }\n    if (context.sid) {\n      // Good enough uuid validation. â€” Kamil\n      session.sid = context.sid.length === 32 ? context.sid : (0, _misc.uuid4)();\n    }\n    if (context.init !== undefined) {\n      session.init = context.init;\n    }\n    if (!session.did && context.did) {\n      session.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      session.started = context.started;\n    }\n    if (session.ignoreDuration) {\n      session.duration = undefined;\n    } else if (typeof context.duration === 'number') {\n      session.duration = context.duration;\n    } else {\n      const duration = session.timestamp - session.started;\n      session.duration = duration >= 0 ? duration : 0;\n    }\n    if (context.release) {\n      session.release = context.release;\n    }\n    if (context.environment) {\n      session.environment = context.environment;\n    }\n    if (!session.ipAddress && context.ipAddress) {\n      session.ipAddress = context.ipAddress;\n    }\n    if (!session.userAgent && context.userAgent) {\n      session.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      session.errors = context.errors;\n    }\n    if (context.status) {\n      session.status = context.status;\n    }\n  }\n\n  /**\n   * Closes a session by setting its status and updating the session object with it.\n   * Internally calls `updateSession` to update the passed session object.\n   *\n   * Note that this function mutates the passed session (@see updateSession for explanation).\n   *\n   * @param session the `Session` object to be closed\n   * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n   *               this function will keep the previously set status, unless it was `'ok'` in which case\n   *               it is changed to `'exited'`.\n   */\n  function closeSession(session, status) {\n    let context = {};\n    if (status) {\n      context = {\n        status\n      };\n    } else if (session.status === 'ok') {\n      context = {\n        status: 'exited'\n      };\n    }\n    updateSession(session, context);\n  }\n\n  /**\n   * Serializes a passed session object to a JSON object with a slightly different structure.\n   * This is necessary because the Sentry backend requires a slightly different schema of a session\n   * than the one the JS SDKs use internally.\n   *\n   * @param session the session to be converted\n   *\n   * @returns a JSON object of the passed session\n   */\n  function sessionToJSON(session) {\n    return (0, _object.dropUndefinedKeys)({\n      sid: `${session.sid}`,\n      init: session.init,\n      // Make sure that sec is converted to ms for date constructor\n      started: new Date(session.started * 1000).toISOString(),\n      timestamp: new Date(session.timestamp * 1000).toISOString(),\n      status: session.status,\n      errors: session.errors,\n      did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n      duration: session.duration,\n      abnormal_mechanism: session.abnormal_mechanism,\n      attrs: {\n        release: session.release,\n        environment: session.environment,\n        ip_address: session.ipAddress,\n        user_agent: session.userAgent\n      }\n    });\n  }\n});","lineCount":165,"map":[[8,2,1,0,"require"],[8,9,1,0],[8,10,1,0,"_dependencyMap"],[8,24,1,0],[9,2,2,0,"require"],[9,9,2,0],[9,10,2,0,"_dependencyMap"],[9,24,2,0],[10,2,3,0],[10,6,3,0,"_object"],[10,13,3,0],[10,16,3,0,"require"],[10,23,3,0],[10,24,3,0,"_dependencyMap"],[10,38,3,0],[11,2,4,0],[11,6,4,0,"_time"],[11,11,4,0],[11,14,4,0,"require"],[11,21,4,0],[11,22,4,0,"_dependencyMap"],[11,36,4,0],[12,2,5,0],[12,6,5,0,"_misc"],[12,11,5,0],[12,14,5,0,"require"],[12,21,5,0],[12,22,5,0,"_dependencyMap"],[12,36,5,0],[13,2,6,0,"require"],[13,9,6,0],[13,10,6,0,"_dependencyMap"],[13,24,6,0],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,2,16,0],[22,11,16,9,"makeSession"],[22,22,16,20,"makeSession"],[22,23,16,21,"context"],[22,30,16,28],[22,32,16,30],[23,4,17,2],[24,4,18,2],[24,10,18,8,"startingTime"],[24,22,18,20],[24,25,18,23],[24,29,18,23,"timestampInSeconds"],[24,53,18,41],[24,55,18,42],[24,56,18,43],[25,4,20,2],[25,10,20,8,"session"],[25,17,20,15],[25,20,20,18],[26,6,21,4,"sid"],[26,9,21,7],[26,11,21,9],[26,15,21,9,"uuid4"],[26,26,21,14],[26,28,21,15],[26,29,21,16],[27,6,22,4,"init"],[27,10,22,8],[27,12,22,10],[27,16,22,14],[28,6,23,4,"timestamp"],[28,15,23,13],[28,17,23,15,"startingTime"],[28,29,23,27],[29,6,24,4,"started"],[29,13,24,11],[29,15,24,13,"startingTime"],[29,27,24,25],[30,6,25,4,"duration"],[30,14,25,12],[30,16,25,14],[30,17,25,15],[31,6,26,4,"status"],[31,12,26,10],[31,14,26,12],[31,18,26,16],[32,6,27,4,"errors"],[32,12,27,10],[32,14,27,12],[32,15,27,13],[33,6,28,4,"ignoreDuration"],[33,20,28,18],[33,22,28,20],[33,27,28,25],[34,6,29,4,"toJSON"],[34,12,29,10],[34,14,29,12,"toJSON"],[34,15,29,12],[34,20,29,18,"sessionToJSON"],[34,33,29,31],[34,34,29,32,"session"],[34,41,29,39],[35,4,30,2],[35,5,30,3],[36,4,32,2],[36,8,32,6,"context"],[36,15,32,13],[36,17,32,15],[37,6,33,4,"updateSession"],[37,19,33,17],[37,20,33,18,"session"],[37,27,33,25],[37,29,33,27,"context"],[37,36,33,34],[37,37,33,35],[38,4,34,2],[39,4,36,2],[39,11,36,9,"session"],[39,18,36,16],[40,2,37,0],[42,2,39,0],[43,0,40,0],[44,0,41,0],[45,0,42,0],[46,0,43,0],[47,0,44,0],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,0,49,0],[53,2,50,0],[54,2,51,0],[54,11,51,9,"updateSession"],[54,24,51,22,"updateSession"],[54,25,51,23,"session"],[54,32,51,30],[54,34,51,32,"context"],[54,41,51,39],[54,44,51,42],[54,45,51,43],[54,46,51,44],[54,48,51,46],[55,4,52,2],[55,8,52,6,"context"],[55,15,52,13],[55,16,52,14,"user"],[55,20,52,18],[55,22,52,20],[56,6,53,4],[56,10,53,8],[56,11,53,9,"session"],[56,18,53,16],[56,19,53,17,"ipAddress"],[56,28,53,26],[56,32,53,30,"context"],[56,39,53,37],[56,40,53,38,"user"],[56,44,53,42],[56,45,53,43,"ip_address"],[56,55,53,53],[56,57,53,55],[57,8,54,6,"session"],[57,15,54,13],[57,16,54,14,"ipAddress"],[57,25,54,23],[57,28,54,26,"context"],[57,35,54,33],[57,36,54,34,"user"],[57,40,54,38],[57,41,54,39,"ip_address"],[57,51,54,49],[58,6,55,4],[59,6,57,4],[59,10,57,8],[59,11,57,9,"session"],[59,18,57,16],[59,19,57,17,"did"],[59,22,57,20],[59,26,57,24],[59,27,57,25,"context"],[59,34,57,32],[59,35,57,33,"did"],[59,38,57,36],[59,40,57,38],[60,8,58,6,"session"],[60,15,58,13],[60,16,58,14,"did"],[60,19,58,17],[60,22,58,20,"context"],[60,29,58,27],[60,30,58,28,"user"],[60,34,58,32],[60,35,58,33,"id"],[60,37,58,35],[60,41,58,39,"context"],[60,48,58,46],[60,49,58,47,"user"],[60,53,58,51],[60,54,58,52,"email"],[60,59,58,57],[60,63,58,61,"context"],[60,70,58,68],[60,71,58,69,"user"],[60,75,58,73],[60,76,58,74,"username"],[60,84,58,82],[61,6,59,4],[62,4,60,2],[63,4,62,2,"session"],[63,11,62,9],[63,12,62,10,"timestamp"],[63,21,62,19],[63,24,62,22,"context"],[63,31,62,29],[63,32,62,30,"timestamp"],[63,41,62,39],[63,45,62,43],[63,49,62,43,"timestampInSeconds"],[63,73,62,61],[63,75,62,62],[63,76,62,63],[64,4,64,2],[64,8,64,6,"context"],[64,15,64,13],[64,16,64,14,"abnormal_mechanism"],[64,34,64,32],[64,36,64,34],[65,6,65,4,"session"],[65,13,65,11],[65,14,65,12,"abnormal_mechanism"],[65,32,65,30],[65,35,65,33,"context"],[65,42,65,40],[65,43,65,41,"abnormal_mechanism"],[65,61,65,59],[66,4,66,2],[67,4,68,2],[67,8,68,6,"context"],[67,15,68,13],[67,16,68,14,"ignoreDuration"],[67,30,68,28],[67,32,68,30],[68,6,69,4,"session"],[68,13,69,11],[68,14,69,12,"ignoreDuration"],[68,28,69,26],[68,31,69,29,"context"],[68,38,69,36],[68,39,69,37,"ignoreDuration"],[68,53,69,51],[69,4,70,2],[70,4,71,2],[70,8,71,6,"context"],[70,15,71,13],[70,16,71,14,"sid"],[70,19,71,17],[70,21,71,19],[71,6,72,4],[72,6,73,4,"session"],[72,13,73,11],[72,14,73,12,"sid"],[72,17,73,15],[72,20,73,18,"context"],[72,27,73,25],[72,28,73,26,"sid"],[72,31,73,29],[72,32,73,30,"length"],[72,38,73,36],[72,43,73,41],[72,45,73,43],[72,48,73,46,"context"],[72,55,73,53],[72,56,73,54,"sid"],[72,59,73,57],[72,62,73,60],[72,66,73,60,"uuid4"],[72,77,73,65],[72,79,73,66],[72,80,73,67],[73,4,74,2],[74,4,75,2],[74,8,75,6,"context"],[74,15,75,13],[74,16,75,14,"init"],[74,20,75,18],[74,25,75,23,"undefined"],[74,34,75,32],[74,36,75,34],[75,6,76,4,"session"],[75,13,76,11],[75,14,76,12,"init"],[75,18,76,16],[75,21,76,19,"context"],[75,28,76,26],[75,29,76,27,"init"],[75,33,76,31],[76,4,77,2],[77,4,78,2],[77,8,78,6],[77,9,78,7,"session"],[77,16,78,14],[77,17,78,15,"did"],[77,20,78,18],[77,24,78,22,"context"],[77,31,78,29],[77,32,78,30,"did"],[77,35,78,33],[77,37,78,35],[78,6,79,4,"session"],[78,13,79,11],[78,14,79,12,"did"],[78,17,79,15],[78,20,79,18],[78,23,79,21,"context"],[78,30,79,28],[78,31,79,29,"did"],[78,34,79,32],[78,36,79,34],[79,4,80,2],[80,4,81,2],[80,8,81,6],[80,15,81,13,"context"],[80,22,81,20],[80,23,81,21,"started"],[80,30,81,28],[80,35,81,33],[80,43,81,41],[80,45,81,43],[81,6,82,4,"session"],[81,13,82,11],[81,14,82,12,"started"],[81,21,82,19],[81,24,82,22,"context"],[81,31,82,29],[81,32,82,30,"started"],[81,39,82,37],[82,4,83,2],[83,4,84,2],[83,8,84,6,"session"],[83,15,84,13],[83,16,84,14,"ignoreDuration"],[83,30,84,28],[83,32,84,30],[84,6,85,4,"session"],[84,13,85,11],[84,14,85,12,"duration"],[84,22,85,20],[84,25,85,23,"undefined"],[84,34,85,32],[85,4,86,2],[85,5,86,3],[85,11,86,9],[85,15,86,13],[85,22,86,20,"context"],[85,29,86,27],[85,30,86,28,"duration"],[85,38,86,36],[85,43,86,41],[85,51,86,49],[85,53,86,51],[86,6,87,4,"session"],[86,13,87,11],[86,14,87,12,"duration"],[86,22,87,20],[86,25,87,23,"context"],[86,32,87,30],[86,33,87,31,"duration"],[86,41,87,39],[87,4,88,2],[87,5,88,3],[87,11,88,9],[88,6,89,4],[88,12,89,10,"duration"],[88,20,89,18],[88,23,89,21,"session"],[88,30,89,28],[88,31,89,29,"timestamp"],[88,40,89,38],[88,43,89,41,"session"],[88,50,89,48],[88,51,89,49,"started"],[88,58,89,56],[89,6,90,4,"session"],[89,13,90,11],[89,14,90,12,"duration"],[89,22,90,20],[89,25,90,23,"duration"],[89,33,90,31],[89,37,90,35],[89,38,90,36],[89,41,90,39,"duration"],[89,49,90,47],[89,52,90,50],[89,53,90,51],[90,4,91,2],[91,4,92,2],[91,8,92,6,"context"],[91,15,92,13],[91,16,92,14,"release"],[91,23,92,21],[91,25,92,23],[92,6,93,4,"session"],[92,13,93,11],[92,14,93,12,"release"],[92,21,93,19],[92,24,93,22,"context"],[92,31,93,29],[92,32,93,30,"release"],[92,39,93,37],[93,4,94,2],[94,4,95,2],[94,8,95,6,"context"],[94,15,95,13],[94,16,95,14,"environment"],[94,27,95,25],[94,29,95,27],[95,6,96,4,"session"],[95,13,96,11],[95,14,96,12,"environment"],[95,25,96,23],[95,28,96,26,"context"],[95,35,96,33],[95,36,96,34,"environment"],[95,47,96,45],[96,4,97,2],[97,4,98,2],[97,8,98,6],[97,9,98,7,"session"],[97,16,98,14],[97,17,98,15,"ipAddress"],[97,26,98,24],[97,30,98,28,"context"],[97,37,98,35],[97,38,98,36,"ipAddress"],[97,47,98,45],[97,49,98,47],[98,6,99,4,"session"],[98,13,99,11],[98,14,99,12,"ipAddress"],[98,23,99,21],[98,26,99,24,"context"],[98,33,99,31],[98,34,99,32,"ipAddress"],[98,43,99,41],[99,4,100,2],[100,4,101,2],[100,8,101,6],[100,9,101,7,"session"],[100,16,101,14],[100,17,101,15,"userAgent"],[100,26,101,24],[100,30,101,28,"context"],[100,37,101,35],[100,38,101,36,"userAgent"],[100,47,101,45],[100,49,101,47],[101,6,102,4,"session"],[101,13,102,11],[101,14,102,12,"userAgent"],[101,23,102,21],[101,26,102,24,"context"],[101,33,102,31],[101,34,102,32,"userAgent"],[101,43,102,41],[102,4,103,2],[103,4,104,2],[103,8,104,6],[103,15,104,13,"context"],[103,22,104,20],[103,23,104,21,"errors"],[103,29,104,27],[103,34,104,32],[103,42,104,40],[103,44,104,42],[104,6,105,4,"session"],[104,13,105,11],[104,14,105,12,"errors"],[104,20,105,18],[104,23,105,21,"context"],[104,30,105,28],[104,31,105,29,"errors"],[104,37,105,35],[105,4,106,2],[106,4,107,2],[106,8,107,6,"context"],[106,15,107,13],[106,16,107,14,"status"],[106,22,107,20],[106,24,107,22],[107,6,108,4,"session"],[107,13,108,11],[107,14,108,12,"status"],[107,20,108,18],[107,23,108,21,"context"],[107,30,108,28],[107,31,108,29,"status"],[107,37,108,35],[108,4,109,2],[109,2,110,0],[111,2,112,0],[112,0,113,0],[113,0,114,0],[114,0,115,0],[115,0,116,0],[116,0,117,0],[117,0,118,0],[118,0,119,0],[119,0,120,0],[120,0,121,0],[121,0,122,0],[122,2,123,0],[122,11,123,9,"closeSession"],[122,23,123,21,"closeSession"],[122,24,123,22,"session"],[122,31,123,29],[122,33,123,31,"status"],[122,39,123,37],[122,41,123,39],[123,4,124,2],[123,8,124,6,"context"],[123,15,124,13],[123,18,124,16],[123,19,124,17],[123,20,124,18],[124,4,125,2],[124,8,125,6,"status"],[124,14,125,12],[124,16,125,14],[125,6,126,4,"context"],[125,13,126,11],[125,16,126,14],[126,8,126,16,"status"],[127,6,126,23],[127,7,126,24],[128,4,127,2],[128,5,127,3],[128,11,127,9],[128,15,127,13,"session"],[128,22,127,20],[128,23,127,21,"status"],[128,29,127,27],[128,34,127,32],[128,38,127,36],[128,40,127,38],[129,6,128,4,"context"],[129,13,128,11],[129,16,128,14],[130,8,128,16,"status"],[130,14,128,22],[130,16,128,24],[131,6,128,33],[131,7,128,34],[132,4,129,2],[133,4,131,2,"updateSession"],[133,17,131,15],[133,18,131,16,"session"],[133,25,131,23],[133,27,131,25,"context"],[133,34,131,32],[133,35,131,33],[134,2,132,0],[136,2,134,0],[137,0,135,0],[138,0,136,0],[139,0,137,0],[140,0,138,0],[141,0,139,0],[142,0,140,0],[143,0,141,0],[144,0,142,0],[145,2,143,0],[145,11,143,9,"sessionToJSON"],[145,24,143,22,"sessionToJSON"],[145,25,143,23,"session"],[145,32,143,30],[145,34,143,32],[146,4,144,2],[146,11,144,9],[146,15,144,9,"dropUndefinedKeys"],[146,40,144,26],[146,42,144,27],[147,6,145,4,"sid"],[147,9,145,7],[147,11,145,9],[147,14,145,12,"session"],[147,21,145,19],[147,22,145,20,"sid"],[147,25,145,23],[147,27,145,25],[148,6,146,4,"init"],[148,10,146,8],[148,12,146,10,"session"],[148,19,146,17],[148,20,146,18,"init"],[148,24,146,22],[149,6,147,4],[150,6,148,4,"started"],[150,13,148,11],[150,15,148,13],[150,19,148,17,"Date"],[150,23,148,21],[150,24,148,22,"session"],[150,31,148,29],[150,32,148,30,"started"],[150,39,148,37],[150,42,148,40],[150,46,148,44],[150,47,148,45],[150,48,148,46,"toISOString"],[150,59,148,57],[150,60,148,58],[150,61,148,59],[151,6,149,4,"timestamp"],[151,15,149,13],[151,17,149,15],[151,21,149,19,"Date"],[151,25,149,23],[151,26,149,24,"session"],[151,33,149,31],[151,34,149,32,"timestamp"],[151,43,149,41],[151,46,149,44],[151,50,149,48],[151,51,149,49],[151,52,149,50,"toISOString"],[151,63,149,61],[151,64,149,62],[151,65,149,63],[152,6,150,4,"status"],[152,12,150,10],[152,14,150,12,"session"],[152,21,150,19],[152,22,150,20,"status"],[152,28,150,26],[153,6,151,4,"errors"],[153,12,151,10],[153,14,151,12,"session"],[153,21,151,19],[153,22,151,20,"errors"],[153,28,151,26],[154,6,152,4,"did"],[154,9,152,7],[154,11,152,9],[154,18,152,16,"session"],[154,25,152,23],[154,26,152,24,"did"],[154,29,152,27],[154,34,152,32],[154,42,152,40],[154,46,152,44],[154,53,152,51,"session"],[154,60,152,58],[154,61,152,59,"did"],[154,64,152,62],[154,69,152,67],[154,77,152,75],[154,80,152,78],[154,83,152,81,"session"],[154,90,152,88],[154,91,152,89,"did"],[154,94,152,92],[154,96,152,94],[154,99,152,97,"undefined"],[154,108,152,106],[155,6,153,4,"duration"],[155,14,153,12],[155,16,153,14,"session"],[155,23,153,21],[155,24,153,22,"duration"],[155,32,153,30],[156,6,154,4,"abnormal_mechanism"],[156,24,154,22],[156,26,154,24,"session"],[156,33,154,31],[156,34,154,32,"abnormal_mechanism"],[156,52,154,50],[157,6,155,4,"attrs"],[157,11,155,9],[157,13,155,11],[158,8,156,6,"release"],[158,15,156,13],[158,17,156,15,"session"],[158,24,156,22],[158,25,156,23,"release"],[158,32,156,30],[159,8,157,6,"environment"],[159,19,157,17],[159,21,157,19,"session"],[159,28,157,26],[159,29,157,27,"environment"],[159,40,157,38],[160,8,158,6,"ip_address"],[160,18,158,16],[160,20,158,18,"session"],[160,27,158,25],[160,28,158,26,"ipAddress"],[160,37,158,35],[161,8,159,6,"user_agent"],[161,18,159,16],[161,20,159,18,"session"],[161,27,159,25],[161,28,159,26,"userAgent"],[162,6,160,4],[163,4,161,2],[163,5,161,3],[163,6,161,4],[164,2,162,0],[165,0,162,1],[165,3]],"functionMap":{"names":["<global>","makeSession","toJSON","updateSession","closeSession","sessionToJSON"],"mappings":"AAA;ACe;YCa,4BD;CDQ;AGc;CH2D;AIa;CJS;AKW;CLmB"}},"type":"js/module"}]}