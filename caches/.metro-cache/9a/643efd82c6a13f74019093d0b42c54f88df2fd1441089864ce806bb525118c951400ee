{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-gesture-handler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":66,"index":98}}],"key":"HJh61WuEUBv/Tn7fS9MiHoQcOfk=","exportNames":["*"]}},{"name":"react-native-reanimated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":68,"index":167}}],"key":"bo7uvEY9Xm8UmqPDTWhyayJ74mM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.usePanGesture = usePanGesture;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeGestureHandler = require(_dependencyMap[1], \"react-native-gesture-handler\");\n  var _reactNativeReanimated = require(_dependencyMap[2], \"react-native-reanimated\");\n  var _worklet_11531623981982_init_data = {\n    code: \"function reactNativeGraph_usePanGestureTs1(){const{isPanGestureActive}=this.__closure;isPanGestureActive.value=false;}\",\n    location: \"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeGraph_usePanGestureTs1\\\",\\\"isPanGestureActive\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\\\"],\\\"mappings\\\":\\\"AAiCe,SAAAA,iCAAMA,CAAA,QAAAC,kBAAA,OAAAC,SAAA,CACXD,kBAAkB,CAACE,KAAK,CAAG,KAAK,CAClC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _worklet_565755028022_init_data = {\n    code: \"function reactNativeGraph_usePanGestureTs2(){const{isPanGestureActive}=this.__closure;isPanGestureActive.value=true;}\",\n    location: \"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeGraph_usePanGestureTs2\\\",\\\"isPanGestureActive\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\\\"],\\\"mappings\\\":\\\"AA8BiB,SAAAA,iCAAMA,CAAA,QAAAC,kBAAA,OAAAC,SAAA,CACbD,kBAAkB,CAACE,KAAK,CAAG,IAAI,CACjC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var _worklet_190256860746_init_data = {\n    code: \"function reactNativeGraph_usePanGestureTs3(e){const{x,y}=this.__closure;x.value=e.x;y.value=e.y;}\",\n    location: \"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeGraph_usePanGestureTs3\\\",\\\"e\\\",\\\"x\\\",\\\"y\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/ilyastorun/Desktop/mobile/node_modules/react-native-graph/src/hooks/usePanGesture.ts\\\"],\\\"mappings\\\":\\\"AA0BmB,QAAC,CAAAA,iCAAKA,CAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,OAAAC,SAAA,CACfF,CAAC,CAACG,KAAK,CAAGJ,CAAC,CAACC,CAAC,CACbC,CAAC,CAACE,KAAK,CAAGJ,CAAC,CAACE,CAAC,CACf\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function usePanGesture(_ref) {\n    var enabled = _ref.enabled,\n      _ref$holdDuration = _ref.holdDuration,\n      holdDuration = _ref$holdDuration === void 0 ? 300 : _ref$holdDuration;\n    var x = (0, _reactNativeReanimated.useSharedValue)(0);\n    var y = (0, _reactNativeReanimated.useSharedValue)(0);\n    var isPanGestureActive = (0, _reactNativeReanimated.useSharedValue)(false);\n    var panGesture = (0, _react.useMemo)(() => _reactNativeGestureHandler.Gesture.Pan().enabled(enabled).activateAfterLongPress(holdDuration).onChange(function () {\n      var _e = [new global.Error(), -3, -27];\n      var reactNativeGraph_usePanGestureTs3 = function (e) {\n        x.value = e.x;\n        y.value = e.y;\n      };\n      reactNativeGraph_usePanGestureTs3.__closure = {\n        x,\n        y\n      };\n      reactNativeGraph_usePanGestureTs3.__workletHash = 190256860746;\n      reactNativeGraph_usePanGestureTs3.__initData = _worklet_190256860746_init_data;\n      reactNativeGraph_usePanGestureTs3.__stackDetails = _e;\n      return reactNativeGraph_usePanGestureTs3;\n    }()).onStart(function () {\n      var _e = [new global.Error(), -2, -27];\n      var reactNativeGraph_usePanGestureTs2 = function () {\n        isPanGestureActive.value = true;\n      };\n      reactNativeGraph_usePanGestureTs2.__closure = {\n        isPanGestureActive\n      };\n      reactNativeGraph_usePanGestureTs2.__workletHash = 565755028022;\n      reactNativeGraph_usePanGestureTs2.__initData = _worklet_565755028022_init_data;\n      reactNativeGraph_usePanGestureTs2.__stackDetails = _e;\n      return reactNativeGraph_usePanGestureTs2;\n    }()).onEnd(function () {\n      var _e = [new global.Error(), -2, -27];\n      var reactNativeGraph_usePanGestureTs1 = function () {\n        isPanGestureActive.value = false;\n      };\n      reactNativeGraph_usePanGestureTs1.__closure = {\n        isPanGestureActive\n      };\n      reactNativeGraph_usePanGestureTs1.__workletHash = 11531623981982;\n      reactNativeGraph_usePanGestureTs1.__initData = _worklet_11531623981982_init_data;\n      reactNativeGraph_usePanGestureTs1.__stackDetails = _e;\n      return reactNativeGraph_usePanGestureTs1;\n    }()), [enabled, holdDuration, isPanGestureActive, x, y]);\n    return (0, _react.useMemo)(() => ({\n      gesture: panGesture,\n      isActive: isPanGestureActive,\n      x: x,\n      y: y\n    }), [isPanGestureActive, panGesture, x, y]);\n  }\n});","lineCount":80,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_reactNativeGestureHandler"],[7,32,2,0],[7,35,2,0,"require"],[7,42,2,0],[7,43,2,0,"_dependencyMap"],[7,57,2,0],[8,2,3,0],[8,6,3,0,"_reactNativeReanimated"],[8,28,3,0],[8,31,3,0,"require"],[8,38,3,0],[8,39,3,0,"_dependencyMap"],[8,53,3,0],[9,2,3,68],[9,6,3,68,"_worklet_11531623981982_init_data"],[9,39,3,68],[10,4,3,68,"code"],[10,8,3,68],[11,4,3,68,"location"],[11,12,3,68],[12,4,3,68,"sourceMap"],[12,13,3,68],[13,4,3,68,"version"],[13,11,3,68],[14,2,3,68],[15,2,3,68],[15,6,3,68,"_worklet_565755028022_init_data"],[15,37,3,68],[16,4,3,68,"code"],[16,8,3,68],[17,4,3,68,"location"],[17,12,3,68],[18,4,3,68,"sourceMap"],[18,13,3,68],[19,4,3,68,"version"],[19,11,3,68],[20,2,3,68],[21,2,3,68],[21,6,3,68,"_worklet_190256860746_init_data"],[21,37,3,68],[22,4,3,68,"code"],[22,8,3,68],[23,4,3,68,"location"],[23,12,3,68],[24,4,3,68,"sourceMap"],[24,13,3,68],[25,4,3,68,"version"],[25,11,3,68],[26,2,3,68],[27,2,17,7],[27,11,17,16,"usePanGesture"],[27,24,17,29,"usePanGesture"],[27,25,17,29,"_ref"],[27,29,17,29],[27,31,17,79],[28,4,17,79],[28,8,17,32,"enabled"],[28,15,17,39],[28,18,17,39,"_ref"],[28,22,17,39],[28,23,17,32,"enabled"],[28,30,17,39],[29,6,17,39,"_ref$holdDuration"],[29,23,17,39],[29,26,17,39,"_ref"],[29,30,17,39],[29,31,17,41,"holdDuration"],[29,43,17,53],[30,6,17,41,"holdDuration"],[30,18,17,53],[30,21,17,53,"_ref$holdDuration"],[30,38,17,53],[30,52,17,56],[30,55,17,59],[30,58,17,59,"_ref$holdDuration"],[30,75,17,59],[31,4,18,2],[31,8,18,8,"x"],[31,9,18,9],[31,12,18,12],[31,16,18,12,"useSharedValue"],[31,53,18,26],[31,55,18,27],[31,56,18,28],[31,57,18,29],[32,4,19,2],[32,8,19,8,"y"],[32,9,19,9],[32,12,19,12],[32,16,19,12,"useSharedValue"],[32,53,19,26],[32,55,19,27],[32,56,19,28],[32,57,19,29],[33,4,20,2],[33,8,20,8,"isPanGestureActive"],[33,26,20,26],[33,29,20,29],[33,33,20,29,"useSharedValue"],[33,70,20,43],[33,72,20,44],[33,77,20,49],[33,78,20,50],[34,4,22,2],[34,8,22,8,"panGesture"],[34,18,22,18],[34,21,22,21],[34,25,22,21,"useMemo"],[34,39,22,28],[34,41,23,4],[34,47,24,6,"Gesture"],[34,81,24,13],[34,82,24,14,"Pan"],[34,85,24,17],[34,86,24,18],[34,87,24,19],[34,88,25,9,"enabled"],[34,95,25,16],[34,96,25,17,"enabled"],[34,103,25,24],[34,104,25,25],[34,105,26,9,"activateAfterLongPress"],[34,127,26,31],[34,128,26,32,"holdDuration"],[34,140,26,44],[34,141,26,45],[34,142,27,9,"onChange"],[34,150,27,17],[34,151,27,18],[35,6,27,18],[35,10,27,18,"_e"],[35,12,27,18],[35,20,27,18,"global"],[35,26,27,18],[35,27,27,18,"Error"],[35,32,27,18],[36,6,27,18],[36,10,27,18,"reactNativeGraph_usePanGestureTs3"],[36,43,27,18],[36,55,27,18,"reactNativeGraph_usePanGestureTs3"],[36,56,27,19,"e"],[36,57,27,20],[36,59,27,25],[37,8,28,10,"x"],[37,9,28,11],[37,10,28,12,"value"],[37,15,28,17],[37,18,28,20,"e"],[37,19,28,21],[37,20,28,22,"x"],[37,21,28,23],[38,8,29,10,"y"],[38,9,29,11],[38,10,29,12,"value"],[38,15,29,17],[38,18,29,20,"e"],[38,19,29,21],[38,20,29,22,"y"],[38,21,29,23],[39,6,30,8],[39,7,30,9],[40,6,30,9,"reactNativeGraph_usePanGestureTs3"],[40,39,30,9],[40,40,30,9,"__closure"],[40,49,30,9],[41,8,30,9,"x"],[41,9,30,9],[42,8,30,9,"y"],[43,6,30,9],[44,6,30,9,"reactNativeGraph_usePanGestureTs3"],[44,39,30,9],[44,40,30,9,"__workletHash"],[44,53,30,9],[45,6,30,9,"reactNativeGraph_usePanGestureTs3"],[45,39,30,9],[45,40,30,9,"__initData"],[45,50,30,9],[45,53,30,9,"_worklet_190256860746_init_data"],[45,84,30,9],[46,6,30,9,"reactNativeGraph_usePanGestureTs3"],[46,39,30,9],[46,40,30,9,"__stackDetails"],[46,54,30,9],[46,57,30,9,"_e"],[46,59,30,9],[47,6,30,9],[47,13,30,9,"reactNativeGraph_usePanGestureTs3"],[47,46,30,9],[48,4,30,9],[48,5,27,18],[48,7,30,9],[48,8,30,10],[48,9,31,9,"onStart"],[48,16,31,16],[48,17,31,17],[49,6,31,17],[49,10,31,17,"_e"],[49,12,31,17],[49,20,31,17,"global"],[49,26,31,17],[49,27,31,17,"Error"],[49,32,31,17],[50,6,31,17],[50,10,31,17,"reactNativeGraph_usePanGestureTs2"],[50,43,31,17],[50,55,31,17,"reactNativeGraph_usePanGestureTs2"],[50,56,31,17],[50,58,31,23],[51,8,32,10,"isPanGestureActive"],[51,26,32,28],[51,27,32,29,"value"],[51,32,32,34],[51,35,32,37],[51,39,32,41],[52,6,33,8],[52,7,33,9],[53,6,33,9,"reactNativeGraph_usePanGestureTs2"],[53,39,33,9],[53,40,33,9,"__closure"],[53,49,33,9],[54,8,33,9,"isPanGestureActive"],[55,6,33,9],[56,6,33,9,"reactNativeGraph_usePanGestureTs2"],[56,39,33,9],[56,40,33,9,"__workletHash"],[56,53,33,9],[57,6,33,9,"reactNativeGraph_usePanGestureTs2"],[57,39,33,9],[57,40,33,9,"__initData"],[57,50,33,9],[57,53,33,9,"_worklet_565755028022_init_data"],[57,84,33,9],[58,6,33,9,"reactNativeGraph_usePanGestureTs2"],[58,39,33,9],[58,40,33,9,"__stackDetails"],[58,54,33,9],[58,57,33,9,"_e"],[58,59,33,9],[59,6,33,9],[59,13,33,9,"reactNativeGraph_usePanGestureTs2"],[59,46,33,9],[60,4,33,9],[60,5,31,17],[60,7,33,9],[60,8,33,10],[60,9,34,9,"onEnd"],[60,14,34,14],[60,15,34,15],[61,6,34,15],[61,10,34,15,"_e"],[61,12,34,15],[61,20,34,15,"global"],[61,26,34,15],[61,27,34,15,"Error"],[61,32,34,15],[62,6,34,15],[62,10,34,15,"reactNativeGraph_usePanGestureTs1"],[62,43,34,15],[62,55,34,15,"reactNativeGraph_usePanGestureTs1"],[62,56,34,15],[62,58,34,21],[63,8,35,10,"isPanGestureActive"],[63,26,35,28],[63,27,35,29,"value"],[63,32,35,34],[63,35,35,37],[63,40,35,42],[64,6,36,8],[64,7,36,9],[65,6,36,9,"reactNativeGraph_usePanGestureTs1"],[65,39,36,9],[65,40,36,9,"__closure"],[65,49,36,9],[66,8,36,9,"isPanGestureActive"],[67,6,36,9],[68,6,36,9,"reactNativeGraph_usePanGestureTs1"],[68,39,36,9],[68,40,36,9,"__workletHash"],[68,53,36,9],[69,6,36,9,"reactNativeGraph_usePanGestureTs1"],[69,39,36,9],[69,40,36,9,"__initData"],[69,50,36,9],[69,53,36,9,"_worklet_11531623981982_init_data"],[69,86,36,9],[70,6,36,9,"reactNativeGraph_usePanGestureTs1"],[70,39,36,9],[70,40,36,9,"__stackDetails"],[70,54,36,9],[70,57,36,9,"_e"],[70,59,36,9],[71,6,36,9],[71,13,36,9,"reactNativeGraph_usePanGestureTs1"],[71,46,36,9],[72,4,36,9],[72,5,34,15],[72,7,36,9],[72,8,36,10],[72,10,37,4],[72,11,37,5,"enabled"],[72,18,37,12],[72,20,37,14,"holdDuration"],[72,32,37,26],[72,34,37,28,"isPanGestureActive"],[72,52,37,46],[72,54,37,48,"x"],[72,55,37,49],[72,57,37,51,"y"],[72,58,37,52],[72,59,38,2],[72,60,38,3],[73,4,40,2],[73,11,40,9],[73,15,40,9,"useMemo"],[73,29,40,16],[73,31,41,4],[73,38,41,11],[74,6,42,6,"gesture"],[74,13,42,13],[74,15,42,15,"panGesture"],[74,25,42,25],[75,6,43,6,"isActive"],[75,14,43,14],[75,16,43,16,"isPanGestureActive"],[75,34,43,34],[76,6,44,6,"x"],[76,7,44,7],[76,9,44,9,"x"],[76,10,44,10],[77,6,45,6,"y"],[77,7,45,7],[77,9,45,9,"y"],[78,4,46,4],[78,5,46,5],[78,6,46,6],[78,8,47,4],[78,9,47,5,"isPanGestureActive"],[78,27,47,23],[78,29,47,25,"panGesture"],[78,39,47,35],[78,41,47,37,"x"],[78,42,47,38],[78,44,47,40,"y"],[78,45,47,41],[78,46,48,2],[78,47,48,3],[79,2,49,0],[80,0,49,1],[80,3]],"functionMap":{"names":["<global>","usePanGesture","useMemo$argument_0","Gesture.Pan.enabled.activateAfterLongPress.onChange$argument_0","Gesture.Pan...onChange.onStart$argument_0","Gesture.Pan...onStart.onEnd$argument_0"],"mappings":"AAA;OCgB;ICM;kBCI;SDG;iBEC;SFE;eGC;SHE,CD;ICK;MDK;CDG"}},"type":"js/module"}]}