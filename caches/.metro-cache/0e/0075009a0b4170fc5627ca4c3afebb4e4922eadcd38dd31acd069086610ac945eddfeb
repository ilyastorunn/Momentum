{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@sentry/browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":71,"index":71}}],"key":"v/L5aEun9KHJcPUBAUY+UgyCfuU=","exportNames":["*"]}},{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":72},"end":{"line":2,"column":87,"index":159}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Alert","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"PEUC6jrQVoAGZ2qYkvimljMOyJI=","exportNames":["*"]}},{"name":"./integrations/debugsymbolicatorutils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":198},"end":{"line":4,"column":69,"index":267}}],"key":"sDcKbtqsAfZR1If6HZYPwcZL7q8=","exportNames":["*"]}},{"name":"./integrations/sdkinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":268},"end":{"line":5,"column":56,"index":324}}],"key":"kCw5s6mJ9REM8S+UjikUlMnuR2U=","exportNames":["*"]}},{"name":"./integrations/spotlight","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":325},"end":{"line":6,"column":64,"index":389}}],"key":"sBsCLlL0GaKMntXaO2X7oKJNzfM=","exportNames":["*"]}},{"name":"./replay/mobilereplay","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":71,"index":461}}],"key":"Ozi7o1LcZwzxYYq+jePudeFnoos=","exportNames":["*"]}},{"name":"./utils/envelope","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":462},"end":{"line":8,"column":69,"index":531}}],"key":"/EdP8uN6bU1aUWvgIidfK5xHzAs=","exportNames":["*"]}},{"name":"./utils/ignorerequirecyclelogs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":532},"end":{"line":9,"column":72,"index":604}}],"key":"5RIgbC4A3VlXCcfVEtQNKfH2yJk=","exportNames":["*"]}},{"name":"./utils/outcome","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":605},"end":{"line":10,"column":48,"index":653}}],"key":"UC7+wal7dmkR/hkN0Bcx8q/2pDw=","exportNames":["*"]}},{"name":"./utils/rnlibraries","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":654},"end":{"line":11,"column":59,"index":713}}],"key":"onI3so9cIIyESAzY9uSZUZyuJDQ=","exportNames":["*"]}},{"name":"./wrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":714},"end":{"line":12,"column":35,"index":749}}],"key":"uH5zH4V3wFIqFrFvN4UX99ueCCQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ReactNativeClient = void 0;\n  var _browser = require(_dependencyMap[1], \"@sentry/browser\");\n  var _core = require(_dependencyMap[2], \"@sentry/core\");\n  var _Alert = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Alert\"));\n  var _debugsymbolicatorutils = require(_dependencyMap[4], \"./integrations/debugsymbolicatorutils\");\n  var _sdkinfo = require(_dependencyMap[5], \"./integrations/sdkinfo\");\n  var _spotlight = require(_dependencyMap[6], \"./integrations/spotlight\");\n  var _mobilereplay = require(_dependencyMap[7], \"./replay/mobilereplay\");\n  var _envelope = require(_dependencyMap[8], \"./utils/envelope\");\n  var _ignorerequirecyclelogs = require(_dependencyMap[9], \"./utils/ignorerequirecyclelogs\");\n  var _outcome = require(_dependencyMap[10], \"./utils/outcome\");\n  var _rnlibraries = require(_dependencyMap[11], \"./utils/rnlibraries\");\n  var _wrapper = require(_dependencyMap[12], \"./wrapper\");\n  /**\n   * The Sentry React Native SDK Client.\n   *\n   * @see ReactNativeClientOptions for documentation on configuration options.\n   * @see SentryClient for usage documentation.\n   */\n  class ReactNativeClient extends _core.BaseClient {\n    /**\n     * Creates a new React Native SDK instance.\n     * @param options Configuration options for this SDK.\n     */\n    constructor(options) {\n      var _a;\n      (0, _ignorerequirecyclelogs.ignoreRequireCycleLogs)((_a = _rnlibraries.ReactNativeLibraries.ReactNativeVersion) === null || _a === void 0 ? void 0 : _a.version);\n      options._metadata = options._metadata || {};\n      options._metadata.sdk = options._metadata.sdk || _sdkinfo.defaultSdkInfo;\n      // We default this to true, as it is the safer scenario\n      options.parentSpanIsAlwaysRootSpan = options.parentSpanIsAlwaysRootSpan === undefined ? true : options.parentSpanIsAlwaysRootSpan;\n      super(options);\n      this._outcomesBuffer = [];\n    }\n    /**\n     * @inheritDoc\n     */\n    eventFromException(exception, hint = {}) {\n      return (0, _browser.eventFromException)(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n    }\n    /**\n     * @inheritDoc\n     */\n    eventFromMessage(message, level, hint) {\n      return (0, _browser.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n    }\n    /**\n     * If native client is available it will trigger a native crash.\n     * Use this only for testing purposes.\n     */\n    nativeCrash() {\n      _wrapper.NATIVE.nativeCrash();\n    }\n    /**\n     * @inheritDoc\n     */\n    close() {\n      // As super.close() flushes queued events, we wait for that to finish before closing the native SDK.\n      return super.close().then(result => {\n        return _wrapper.NATIVE.closeNativeSdk().then(() => result);\n      });\n    }\n    /**\n     * Sends user feedback to Sentry.\n     * @deprecated Use `Sentry.captureFeedback` instead.\n     */\n    captureUserFeedback(feedback) {\n      const envelope = (0, _envelope.createUserFeedbackEnvelope)(feedback, {\n        metadata: this._options._metadata,\n        dsn: this.getDsn(),\n        tunnel: undefined\n      });\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.sendEnvelope(envelope);\n    }\n    /**\n     * @inheritdoc\n     */\n    sendEnvelope(envelope) {\n      const outcomes = this._clearOutcomes();\n      this._outcomesBuffer = (0, _outcome.mergeOutcomes)(this._outcomesBuffer, outcomes);\n      if (this._options.sendClientReports) {\n        this._attachClientReportTo(this._outcomesBuffer, envelope);\n      }\n      let shouldClearOutcomesBuffer = true;\n      if (this._isEnabled() && this._transport && this._dsn) {\n        this.emit('beforeEnvelope', envelope);\n        this._transport.send(envelope).then(null, reason => {\n          if (reason instanceof _core.SentryError) {\n            // SentryError is thrown by SyncPromise\n            shouldClearOutcomesBuffer = false;\n            // If this is called asynchronously we want the _outcomesBuffer to be cleared\n            _core.logger.error('SentryError while sending event, keeping outcomes buffer:', reason);\n          } else {\n            _core.logger.error('Error while sending event:', reason);\n          }\n        });\n      } else {\n        _core.logger.error('Transport disabled');\n      }\n      if (shouldClearOutcomesBuffer) {\n        this._outcomesBuffer = []; // if send fails synchronously the _outcomesBuffer will stay intact\n      }\n      return Promise.resolve({});\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n      super.init();\n      this._initNativeSdk();\n    }\n    /**\n     * Register a hook on this client.\n     *\n     * (Generic method signature to allow for custom React Native Client events.)\n     */\n    on(hook, callback) {\n      // @ts-expect-error on from the base class doesn't support generic types\n      return super.on(hook, callback);\n    }\n    /**\n     * Emit a hook that was previously registered via `on()`.\n     *\n     * (Generic method signature to allow for custom React Native Client events.)\n     */\n    emit(hook, ...rest) {\n      // @ts-expect-error emit from the base class doesn't support generic types\n      super.emit(hook, ...rest);\n    }\n    /**\n     * Starts native client with dsn and options\n     */\n    _initNativeSdk() {\n      var _a;\n      _wrapper.NATIVE.initNativeSdk(Object.assign(Object.assign({}, this._options), {\n        defaultSidecarUrl: (0, _spotlight.getDefaultSidecarUrl)(),\n        devServerUrl: ((_a = (0, _debugsymbolicatorutils.getDevServer)()) === null || _a === void 0 ? void 0 : _a.url) || '',\n        mobileReplayOptions: this._integrations[_mobilereplay.MOBILE_REPLAY_INTEGRATION_NAME] && 'options' in this._integrations[_mobilereplay.MOBILE_REPLAY_INTEGRATION_NAME] ? this._integrations[_mobilereplay.MOBILE_REPLAY_INTEGRATION_NAME].options : undefined\n      })).then(result => {\n        return result;\n      }, () => {\n        this._showCannotConnectDialog();\n        return false;\n      }).then(didCallNativeInit => {\n        var _a, _b;\n        (_b = (_a = this._options).onReady) === null || _b === void 0 ? void 0 : _b.call(_a, {\n          didCallNativeInit\n        });\n        this.emit('afterInit');\n      }).then(undefined, error => {\n        _core.logger.error('The OnReady callback threw an error: ', error);\n      });\n    }\n    /**\n     * If the user is in development mode, and the native nagger is enabled then it will show an alert.\n     */\n    _showCannotConnectDialog() {\n      if (__DEV__ && this._options.enableNativeNagger) {\n        _Alert.default.alert('Sentry', 'Warning, could not connect to Sentry native SDK.\\nIf you do not want to use the native component please pass `enableNative: false` in the options.\\nVisit: https://docs.sentry.io/platforms/react-native/ for more details.');\n      }\n    }\n    /**\n     * Attaches a client report from outcomes to the envelope.\n     */\n    _attachClientReportTo(outcomes, envelope) {\n      if (outcomes.length > 0) {\n        const clientReportItem = [{\n          type: 'client_report'\n        }, {\n          timestamp: (0, _core.dateTimestampInSeconds)(),\n          discarded_events: outcomes\n        }];\n        envelope[_envelope.items].push(clientReportItem);\n      }\n    }\n  }\n  exports.ReactNativeClient = ReactNativeClient;\n});","lineCount":184,"map":[[7,2,1,0],[7,6,1,0,"_browser"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"_core"],[8,11,2,0],[8,14,2,0,"require"],[8,21,2,0],[8,22,2,0,"_dependencyMap"],[8,36,2,0],[9,2,2,87],[9,6,2,87,"_Alert"],[9,12,2,87],[9,15,2,87,"_interopRequireDefault"],[9,37,2,87],[9,38,2,87,"require"],[9,45,2,87],[9,46,2,87,"_dependencyMap"],[9,60,2,87],[10,2,4,0],[10,6,4,0,"_debugsymbolicatorutils"],[10,29,4,0],[10,32,4,0,"require"],[10,39,4,0],[10,40,4,0,"_dependencyMap"],[10,54,4,0],[11,2,5,0],[11,6,5,0,"_sdkinfo"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_spotlight"],[12,16,6,0],[12,19,6,0,"require"],[12,26,6,0],[12,27,6,0,"_dependencyMap"],[12,41,6,0],[13,2,7,0],[13,6,7,0,"_mobilereplay"],[13,19,7,0],[13,22,7,0,"require"],[13,29,7,0],[13,30,7,0,"_dependencyMap"],[13,44,7,0],[14,2,8,0],[14,6,8,0,"_envelope"],[14,15,8,0],[14,18,8,0,"require"],[14,25,8,0],[14,26,8,0,"_dependencyMap"],[14,40,8,0],[15,2,9,0],[15,6,9,0,"_ignorerequirecyclelogs"],[15,29,9,0],[15,32,9,0,"require"],[15,39,9,0],[15,40,9,0,"_dependencyMap"],[15,54,9,0],[16,2,10,0],[16,6,10,0,"_outcome"],[16,14,10,0],[16,17,10,0,"require"],[16,24,10,0],[16,25,10,0,"_dependencyMap"],[16,39,10,0],[17,2,11,0],[17,6,11,0,"_rnlibraries"],[17,18,11,0],[17,21,11,0,"require"],[17,28,11,0],[17,29,11,0,"_dependencyMap"],[17,43,11,0],[18,2,12,0],[18,6,12,0,"_wrapper"],[18,14,12,0],[18,17,12,0,"require"],[18,24,12,0],[18,25,12,0,"_dependencyMap"],[18,39,12,0],[19,2,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,2,19,7],[25,8,19,13,"ReactNativeClient"],[25,25,19,30],[25,34,19,39,"BaseClient"],[25,50,19,49],[25,51,19,50],[26,4,20,4],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,4,24,4,"constructor"],[30,15,24,15,"constructor"],[30,16,24,16,"options"],[30,23,24,23],[30,25,24,25],[31,6,25,8],[31,10,25,12,"_a"],[31,12,25,14],[32,6,26,8],[32,10,26,8,"ignoreRequireCycleLogs"],[32,56,26,30],[32,58,26,31],[32,59,26,32,"_a"],[32,61,26,34],[32,64,26,37,"ReactNativeLibraries"],[32,97,26,57],[32,98,26,58,"ReactNativeVersion"],[32,116,26,76],[32,122,26,82],[32,126,26,86],[32,130,26,90,"_a"],[32,132,26,92],[32,137,26,97],[32,142,26,102],[32,143,26,103],[32,146,26,106],[32,151,26,111],[32,152,26,112],[32,155,26,115,"_a"],[32,157,26,117],[32,158,26,118,"version"],[32,165,26,125],[32,166,26,126],[33,6,27,8,"options"],[33,13,27,15],[33,14,27,16,"_metadata"],[33,23,27,25],[33,26,27,28,"options"],[33,33,27,35],[33,34,27,36,"_metadata"],[33,43,27,45],[33,47,27,49],[33,48,27,50],[33,49,27,51],[34,6,28,8,"options"],[34,13,28,15],[34,14,28,16,"_metadata"],[34,23,28,25],[34,24,28,26,"sdk"],[34,27,28,29],[34,30,28,32,"options"],[34,37,28,39],[34,38,28,40,"_metadata"],[34,47,28,49],[34,48,28,50,"sdk"],[34,51,28,53],[34,55,28,57,"defaultSdkInfo"],[34,78,28,71],[35,6,29,8],[36,6,30,8,"options"],[36,13,30,15],[36,14,30,16,"parentSpanIsAlwaysRootSpan"],[36,40,30,42],[36,43,31,12,"options"],[36,50,31,19],[36,51,31,20,"parentSpanIsAlwaysRootSpan"],[36,77,31,46],[36,82,31,51,"undefined"],[36,91,31,60],[36,94,31,63],[36,98,31,67],[36,101,31,70,"options"],[36,108,31,77],[36,109,31,78,"parentSpanIsAlwaysRootSpan"],[36,135,31,104],[37,6,32,8],[37,11,32,13],[37,12,32,14,"options"],[37,19,32,21],[37,20,32,22],[38,6,33,8],[38,10,33,12],[38,11,33,13,"_outcomesBuffer"],[38,26,33,28],[38,29,33,31],[38,31,33,33],[39,4,34,4],[40,4,35,4],[41,0,36,0],[42,0,37,0],[43,4,38,4,"eventFromException"],[43,22,38,22,"eventFromException"],[43,23,38,23,"exception"],[43,32,38,32],[43,34,38,34,"hint"],[43,38,38,38],[43,41,38,41],[43,42,38,42],[43,43,38,43],[43,45,38,45],[44,6,39,8],[44,13,39,15],[44,17,39,15,"eventFromException"],[44,44,39,33],[44,46,39,34],[44,50,39,38],[44,51,39,39,"_options"],[44,59,39,47],[44,60,39,48,"stackParser"],[44,71,39,59],[44,73,39,61,"exception"],[44,82,39,70],[44,84,39,72,"hint"],[44,88,39,76],[44,90,39,78],[44,94,39,82],[44,95,39,83,"_options"],[44,103,39,91],[44,104,39,92,"attachStacktrace"],[44,120,39,108],[44,121,39,109],[45,4,40,4],[46,4,41,4],[47,0,42,0],[48,0,43,0],[49,4,44,4,"eventFromMessage"],[49,20,44,20,"eventFromMessage"],[49,21,44,21,"message"],[49,28,44,28],[49,30,44,30,"level"],[49,35,44,35],[49,37,44,37,"hint"],[49,41,44,41],[49,43,44,43],[50,6,45,8],[50,13,45,15],[50,17,45,15,"eventFromMessage"],[50,42,45,31],[50,44,45,32],[50,48,45,36],[50,49,45,37,"_options"],[50,57,45,45],[50,58,45,46,"stackParser"],[50,69,45,57],[50,71,45,59,"message"],[50,78,45,66],[50,80,45,68,"level"],[50,85,45,73],[50,87,45,75,"hint"],[50,91,45,79],[50,93,45,81],[50,97,45,85],[50,98,45,86,"_options"],[50,106,45,94],[50,107,45,95,"attachStacktrace"],[50,123,45,111],[50,124,45,112],[51,4,46,4],[52,4,47,4],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,4,51,4,"nativeCrash"],[56,15,51,15,"nativeCrash"],[56,16,51,15],[56,18,51,18],[57,6,52,8,"NATIVE"],[57,21,52,14],[57,22,52,15,"nativeCrash"],[57,33,52,26],[57,34,52,27],[57,35,52,28],[58,4,53,4],[59,4,54,4],[60,0,55,0],[61,0,56,0],[62,4,57,4,"close"],[62,9,57,9,"close"],[62,10,57,9],[62,12,57,12],[63,6,58,8],[64,6,59,8],[64,13,59,15],[64,18,59,20],[64,19,59,21,"close"],[64,24,59,26],[64,25,59,27],[64,26,59,28],[64,27,59,29,"then"],[64,31,59,33],[64,32,59,35,"result"],[64,38,59,41],[64,42,59,46],[65,8,60,12],[65,15,60,19,"NATIVE"],[65,30,60,25],[65,31,60,26,"closeNativeSdk"],[65,45,60,40],[65,46,60,41],[65,47,60,42],[65,48,60,43,"then"],[65,52,60,47],[65,53,60,48],[65,59,60,54,"result"],[65,65,60,60],[65,66,60,61],[66,6,61,8],[66,7,61,9],[66,8,61,10],[67,4,62,4],[68,4,63,4],[69,0,64,0],[70,0,65,0],[71,0,66,0],[72,4,67,4,"captureUserFeedback"],[72,23,67,23,"captureUserFeedback"],[72,24,67,24,"feedback"],[72,32,67,32],[72,34,67,34],[73,6,68,8],[73,12,68,14,"envelope"],[73,20,68,22],[73,23,68,25],[73,27,68,25,"createUserFeedbackEnvelope"],[73,63,68,51],[73,65,68,52,"feedback"],[73,73,68,60],[73,75,68,62],[74,8,69,12,"metadata"],[74,16,69,20],[74,18,69,22],[74,22,69,26],[74,23,69,27,"_options"],[74,31,69,35],[74,32,69,36,"_metadata"],[74,41,69,45],[75,8,70,12,"dsn"],[75,11,70,15],[75,13,70,17],[75,17,70,21],[75,18,70,22,"getDsn"],[75,24,70,28],[75,25,70,29],[75,26,70,30],[76,8,71,12,"tunnel"],[76,14,71,18],[76,16,71,20,"undefined"],[77,6,72,8],[77,7,72,9],[77,8,72,10],[78,6,73,8],[79,6,74,8],[79,10,74,12],[79,11,74,13,"sendEnvelope"],[79,23,74,25],[79,24,74,26,"envelope"],[79,32,74,34],[79,33,74,35],[80,4,75,4],[81,4,76,4],[82,0,77,0],[83,0,78,0],[84,4,79,4,"sendEnvelope"],[84,16,79,16,"sendEnvelope"],[84,17,79,17,"envelope"],[84,25,79,25],[84,27,79,27],[85,6,80,8],[85,12,80,14,"outcomes"],[85,20,80,22],[85,23,80,25],[85,27,80,29],[85,28,80,30,"_clearOutcomes"],[85,42,80,44],[85,43,80,45],[85,44,80,46],[86,6,81,8],[86,10,81,12],[86,11,81,13,"_outcomesBuffer"],[86,26,81,28],[86,29,81,31],[86,33,81,31,"mergeOutcomes"],[86,55,81,44],[86,57,81,45],[86,61,81,49],[86,62,81,50,"_outcomesBuffer"],[86,77,81,65],[86,79,81,67,"outcomes"],[86,87,81,75],[86,88,81,76],[87,6,82,8],[87,10,82,12],[87,14,82,16],[87,15,82,17,"_options"],[87,23,82,25],[87,24,82,26,"sendClientReports"],[87,41,82,43],[87,43,82,45],[88,8,83,12],[88,12,83,16],[88,13,83,17,"_attachClientReportTo"],[88,34,83,38],[88,35,83,39],[88,39,83,43],[88,40,83,44,"_outcomesBuffer"],[88,55,83,59],[88,57,83,61,"envelope"],[88,65,83,69],[88,66,83,70],[89,6,84,8],[90,6,85,8],[90,10,85,12,"shouldClearOutcomesBuffer"],[90,35,85,37],[90,38,85,40],[90,42,85,44],[91,6,86,8],[91,10,86,12],[91,14,86,16],[91,15,86,17,"_isEnabled"],[91,25,86,27],[91,26,86,28],[91,27,86,29],[91,31,86,33],[91,35,86,37],[91,36,86,38,"_transport"],[91,46,86,48],[91,50,86,52],[91,54,86,56],[91,55,86,57,"_dsn"],[91,59,86,61],[91,61,86,63],[92,8,87,12],[92,12,87,16],[92,13,87,17,"emit"],[92,17,87,21],[92,18,87,22],[92,34,87,38],[92,36,87,40,"envelope"],[92,44,87,48],[92,45,87,49],[93,8,88,12],[93,12,88,16],[93,13,88,17,"_transport"],[93,23,88,27],[93,24,88,28,"send"],[93,28,88,32],[93,29,88,33,"envelope"],[93,37,88,41],[93,38,88,42],[93,39,88,43,"then"],[93,43,88,47],[93,44,88,48],[93,48,88,52],[93,50,88,54,"reason"],[93,56,88,60],[93,60,88,64],[94,10,89,16],[94,14,89,20,"reason"],[94,20,89,26],[94,32,89,38,"SentryError"],[94,49,89,49],[94,51,89,51],[95,12,90,20],[96,12,91,20,"shouldClearOutcomesBuffer"],[96,37,91,45],[96,40,91,48],[96,45,91,53],[97,12,92,20],[98,12,93,20,"logger"],[98,24,93,26],[98,25,93,27,"error"],[98,30,93,32],[98,31,93,33],[98,90,93,92],[98,92,93,94,"reason"],[98,98,93,100],[98,99,93,101],[99,10,94,16],[99,11,94,17],[99,17,95,21],[100,12,96,20,"logger"],[100,24,96,26],[100,25,96,27,"error"],[100,30,96,32],[100,31,96,33],[100,59,96,61],[100,61,96,63,"reason"],[100,67,96,69],[100,68,96,70],[101,10,97,16],[102,8,98,12],[102,9,98,13],[102,10,98,14],[103,6,99,8],[103,7,99,9],[103,13,100,13],[104,8,101,12,"logger"],[104,20,101,18],[104,21,101,19,"error"],[104,26,101,24],[104,27,101,25],[104,47,101,45],[104,48,101,46],[105,6,102,8],[106,6,103,8],[106,10,103,12,"shouldClearOutcomesBuffer"],[106,35,103,37],[106,37,103,39],[107,8,104,12],[107,12,104,16],[107,13,104,17,"_outcomesBuffer"],[107,28,104,32],[107,31,104,35],[107,33,104,37],[107,34,104,38],[107,35,104,39],[108,6,105,8],[109,6,106,8],[109,13,106,15,"Promise"],[109,20,106,22],[109,21,106,23,"resolve"],[109,28,106,30],[109,29,106,31],[109,30,106,32],[109,31,106,33],[109,32,106,34],[110,4,107,4],[111,4,108,4],[112,0,109,0],[113,0,110,0],[114,4,111,4,"init"],[114,8,111,8,"init"],[114,9,111,8],[114,11,111,11],[115,6,112,8],[115,11,112,13],[115,12,112,14,"init"],[115,16,112,18],[115,17,112,19],[115,18,112,20],[116,6,113,8],[116,10,113,12],[116,11,113,13,"_initNativeSdk"],[116,25,113,27],[116,26,113,28],[116,27,113,29],[117,4,114,4],[118,4,115,4],[119,0,116,0],[120,0,117,0],[121,0,118,0],[122,0,119,0],[123,4,120,4,"on"],[123,6,120,6,"on"],[123,7,120,7,"hook"],[123,11,120,11],[123,13,120,13,"callback"],[123,21,120,21],[123,23,120,23],[124,6,121,8],[125,6,122,8],[125,13,122,15],[125,18,122,20],[125,19,122,21,"on"],[125,21,122,23],[125,22,122,24,"hook"],[125,26,122,28],[125,28,122,30,"callback"],[125,36,122,38],[125,37,122,39],[126,4,123,4],[127,4,124,4],[128,0,125,0],[129,0,126,0],[130,0,127,0],[131,0,128,0],[132,4,129,4,"emit"],[132,8,129,8,"emit"],[132,9,129,9,"hook"],[132,13,129,13],[132,15,129,15],[132,18,129,18,"rest"],[132,22,129,22],[132,24,129,24],[133,6,130,8],[134,6,131,8],[134,11,131,13],[134,12,131,14,"emit"],[134,16,131,18],[134,17,131,19,"hook"],[134,21,131,23],[134,23,131,25],[134,26,131,28,"rest"],[134,30,131,32],[134,31,131,33],[135,4,132,4],[136,4,133,4],[137,0,134,0],[138,0,135,0],[139,4,136,4,"_initNativeSdk"],[139,18,136,18,"_initNativeSdk"],[139,19,136,18],[139,21,136,21],[140,6,137,8],[140,10,137,12,"_a"],[140,12,137,14],[141,6,138,8,"NATIVE"],[141,21,138,14],[141,22,138,15,"initNativeSdk"],[141,35,138,28],[141,36,138,29,"Object"],[141,42,138,35],[141,43,138,36,"assign"],[141,49,138,42],[141,50,138,43,"Object"],[141,56,138,49],[141,57,138,50,"assign"],[141,63,138,56],[141,64,138,57],[141,65,138,58],[141,66,138,59],[141,68,138,61],[141,72,138,65],[141,73,138,66,"_options"],[141,81,138,74],[141,82,138,75],[141,84,138,77],[142,8,138,79,"defaultSidecarUrl"],[142,25,138,96],[142,27,138,98],[142,31,138,98,"getDefaultSidecarUrl"],[142,62,138,118],[142,64,138,119],[142,65,138,120],[143,8,138,122,"devServerUrl"],[143,20,138,134],[143,22,138,136],[143,23,138,137],[143,24,138,138,"_a"],[143,26,138,140],[143,29,138,143],[143,33,138,143,"getDevServer"],[143,69,138,155],[143,71,138,156],[143,72,138,157],[143,78,138,163],[143,82,138,167],[143,86,138,171,"_a"],[143,88,138,173],[143,93,138,178],[143,98,138,183],[143,99,138,184],[143,102,138,187],[143,107,138,192],[143,108,138,193],[143,111,138,196,"_a"],[143,113,138,198],[143,114,138,199,"url"],[143,117,138,202],[143,122,138,207],[143,124,138,209],[144,8,138,211,"mobileReplayOptions"],[144,27,138,230],[144,29,138,232],[144,33,138,236],[144,34,138,237,"_integrations"],[144,47,138,250],[144,48,138,251,"MOBILE_REPLAY_INTEGRATION_NAME"],[144,92,138,281],[144,93,138,282],[144,97,139,16],[144,106,139,25],[144,110,139,29],[144,114,139,33],[144,115,139,34,"_integrations"],[144,128,139,47],[144,129,139,48,"MOBILE_REPLAY_INTEGRATION_NAME"],[144,173,139,78],[144,174,139,79],[144,177,140,18],[144,181,140,22],[144,182,140,23,"_integrations"],[144,195,140,36],[144,196,140,37,"MOBILE_REPLAY_INTEGRATION_NAME"],[144,240,140,67],[144,241,140,68],[144,242,140,69,"options"],[144,249,140,76],[144,252,141,18,"undefined"],[145,6,141,28],[145,7,141,29],[145,8,141,30],[145,9,141,31],[145,10,142,13,"then"],[145,14,142,17],[145,15,142,19,"result"],[145,21,142,25],[145,25,142,30],[146,8,143,12],[146,15,143,19,"result"],[146,21,143,25],[147,6,144,8],[147,7,144,9],[147,9,144,11],[147,15,144,17],[148,8,145,12],[148,12,145,16],[148,13,145,17,"_showCannotConnectDialog"],[148,37,145,41],[148,38,145,42],[148,39,145,43],[149,8,146,12],[149,15,146,19],[149,20,146,24],[150,6,147,8],[150,7,147,9],[150,8,147,10],[150,9,148,13,"then"],[150,13,148,17],[150,14,148,19,"didCallNativeInit"],[150,31,148,36],[150,35,148,41],[151,8,149,12],[151,12,149,16,"_a"],[151,14,149,18],[151,16,149,20,"_b"],[151,18,149,22],[152,8,150,12],[152,9,150,13,"_b"],[152,11,150,15],[152,14,150,18],[152,15,150,19,"_a"],[152,17,150,21],[152,20,150,24],[152,24,150,28],[152,25,150,29,"_options"],[152,33,150,37],[152,35,150,39,"onReady"],[152,42,150,46],[152,48,150,52],[152,52,150,56],[152,56,150,60,"_b"],[152,58,150,62],[152,63,150,67],[152,68,150,72],[152,69,150,73],[152,72,150,76],[152,77,150,81],[152,78,150,82],[152,81,150,85,"_b"],[152,83,150,87],[152,84,150,88,"call"],[152,88,150,92],[152,89,150,93,"_a"],[152,91,150,95],[152,93,150,97],[153,10,150,99,"didCallNativeInit"],[154,8,150,117],[154,9,150,118],[154,10,150,119],[155,8,151,12],[155,12,151,16],[155,13,151,17,"emit"],[155,17,151,21],[155,18,151,22],[155,29,151,33],[155,30,151,34],[156,6,152,8],[156,7,152,9],[156,8,152,10],[156,9,153,13,"then"],[156,13,153,17],[156,14,153,18,"undefined"],[156,23,153,27],[156,25,153,29,"error"],[156,30,153,34],[156,34,153,38],[157,8,154,12,"logger"],[157,20,154,18],[157,21,154,19,"error"],[157,26,154,24],[157,27,154,25],[157,66,154,64],[157,68,154,66,"error"],[157,73,154,71],[157,74,154,72],[158,6,155,8],[158,7,155,9],[158,8,155,10],[159,4,156,4],[160,4,157,4],[161,0,158,0],[162,0,159,0],[163,4,160,4,"_showCannotConnectDialog"],[163,28,160,28,"_showCannotConnectDialog"],[163,29,160,28],[163,31,160,31],[164,6,161,8],[164,10,161,12,"__DEV__"],[164,17,161,19],[164,21,161,23],[164,25,161,27],[164,26,161,28,"_options"],[164,34,161,36],[164,35,161,37,"enableNativeNagger"],[164,53,161,55],[164,55,161,57],[165,8,162,12,"Alert"],[165,22,162,17],[165,23,162,18,"alert"],[165,28,162,23],[165,29,162,24],[165,37,162,32],[165,39,162,34],[165,260,162,255],[165,261,162,256],[166,6,163,8],[167,4,164,4],[168,4,165,4],[169,0,166,0],[170,0,167,0],[171,4,168,4,"_attachClientReportTo"],[171,25,168,25,"_attachClientReportTo"],[171,26,168,26,"outcomes"],[171,34,168,34],[171,36,168,36,"envelope"],[171,44,168,44],[171,46,168,46],[172,6,169,8],[172,10,169,12,"outcomes"],[172,18,169,20],[172,19,169,21,"length"],[172,25,169,27],[172,28,169,30],[172,29,169,31],[172,31,169,33],[173,8,170,12],[173,14,170,18,"clientReportItem"],[173,30,170,34],[173,33,170,37],[173,34,171,16],[174,10,171,18,"type"],[174,14,171,22],[174,16,171,24],[175,8,171,40],[175,9,171,41],[175,11,172,16],[176,10,173,20,"timestamp"],[176,19,173,29],[176,21,173,31],[176,25,173,31,"dateTimestampInSeconds"],[176,53,173,53],[176,55,173,54],[176,56,173,55],[177,10,174,20,"discarded_events"],[177,26,174,36],[177,28,174,38,"outcomes"],[178,8,175,16],[178,9,175,17],[178,10,176,13],[179,8,177,12,"envelope"],[179,16,177,20],[179,17,177,21,"items"],[179,32,177,26],[179,33,177,27],[179,34,177,28,"push"],[179,38,177,32],[179,39,177,33,"clientReportItem"],[179,55,177,49],[179,56,177,50],[180,6,178,8],[181,4,179,4],[182,2,180,0],[183,2,180,1,"exports"],[183,9,180,1],[183,10,180,1,"ReactNativeClient"],[183,27,180,1],[183,30,180,1,"ReactNativeClient"],[183,47,180,1],[184,0,180,1],[184,3]],"functionMap":{"names":["<global>","ReactNativeClient","ReactNativeClient#constructor","ReactNativeClient#eventFromException","ReactNativeClient#eventFromMessage","ReactNativeClient#nativeCrash","ReactNativeClient#close","close.then$argument_0","NATIVE.closeNativeSdk.then$argument_0","ReactNativeClient#captureUserFeedback","ReactNativeClient#sendEnvelope","_transport.send.then$argument_1","ReactNativeClient#init","ReactNativeClient#on","ReactNativeClient#emit","ReactNativeClient#_initNativeSdk","NATIVE.initNativeSdk.then$argument_0","NATIVE.initNativeSdk.then$argument_1","NATIVE.initNativeSdk.then.then$argument_0","NATIVE.initNativeSdk.then.then.then$argument_1","ReactNativeClient#_showCannotConnectDialog","ReactNativeClient#_attachClientReportTo"],"mappings":"AAA;OCkB;ICK;KDU;IEI;KFE;IGI;KHE;IIK;KJE;IKI;kCCE;gDCC,YD;SDC;KLC;IQK;KRQ;ISI;sDCS;aDU;KTS;IWI;KXG;IYM;KZG;IaM;KbG;IcI;kBCM;SDE,EE;SFG;kBGC;SHI;6BIC;SJE;KdC;ImBI;KnBI;IoBI;KpBW;CDC"}},"type":"js/module"}]}