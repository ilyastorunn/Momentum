{"dependencies":[{"name":"../integration.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"B8aKvpmafw58aWtupuC7GWTMiwo=","exportNames":["*"]}},{"name":"../utils-hoist/path.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":60,"index":115}}],"key":"Ah4mw2liOnoDgBt21McFU55uFuE=","exportNames":["*"]}},{"name":"../utils-hoist/worldwide.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":116},"end":{"line":3,"column":57,"index":173}}],"key":"3XwLTKWavtFq2Dntu5m8UVSo4Us=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.generateIteratee = generateIteratee;\n  exports.rewriteFramesIntegration = void 0;\n  var _integration = require(_dependencyMap[0], \"../integration.js\");\n  var _path = require(_dependencyMap[1], \"../utils-hoist/path.js\");\n  var _worldwide = require(_dependencyMap[2], \"../utils-hoist/worldwide.js\");\n  const INTEGRATION_NAME = 'RewriteFrames';\n\n  /**\n   * Rewrite event frames paths.\n   */\n  const rewriteFramesIntegration = exports.rewriteFramesIntegration = (0, _integration.defineIntegration)((options = {}) => {\n    const root = options.root;\n    const prefix = options.prefix || 'app:///';\n    const isBrowser = 'window' in _worldwide.GLOBAL_OBJ && _worldwide.GLOBAL_OBJ.window !== undefined;\n    const iteratee = options.iteratee || generateIteratee({\n      isBrowser,\n      root,\n      prefix\n    });\n\n    /** Process an exception event. */\n    function _processExceptionsEvent(event) {\n      try {\n        return {\n          ...event,\n          exception: {\n            ...event.exception,\n            // The check for this is performed inside `process` call itself, safe to skip here\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            values: event.exception.values.map(value => ({\n              ...value,\n              ...(value.stacktrace && {\n                stacktrace: _processStacktrace(value.stacktrace)\n              })\n            }))\n          }\n        };\n      } catch (_oO) {\n        return event;\n      }\n    }\n\n    /** Process a stack trace. */\n    function _processStacktrace(stacktrace) {\n      return {\n        ...stacktrace,\n        frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f))\n      };\n    }\n    return {\n      name: INTEGRATION_NAME,\n      processEvent(originalEvent) {\n        let processedEvent = originalEvent;\n        if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n          processedEvent = _processExceptionsEvent(processedEvent);\n        }\n        return processedEvent;\n      }\n    };\n  });\n\n  /**\n   * Exported only for tests.\n   */\n  function generateIteratee({\n    isBrowser,\n    root,\n    prefix\n  }) {\n    return frame => {\n      if (!frame.filename) {\n        return frame;\n      }\n\n      // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n      const isWindowsFrame = /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n      // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n      frame.filename.includes('\\\\') && !frame.filename.includes('/');\n\n      // Check if the frame filename begins with `/`\n      const startsWithSlash = /^\\//.test(frame.filename);\n      if (isBrowser) {\n        if (root) {\n          const oldFilename = frame.filename;\n          if (oldFilename.indexOf(root) === 0) {\n            frame.filename = oldFilename.replace(root, prefix);\n          }\n        }\n      } else {\n        if (isWindowsFrame || startsWithSlash) {\n          const filename = isWindowsFrame ? frame.filename.replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n          .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n          const base = root ? (0, _path.relative)(root, filename) : (0, _path.basename)(filename);\n          frame.filename = `${prefix}${base}`;\n        }\n      }\n      return frame;\n    };\n  }\n});","lineCount":105,"map":[[7,2,1,0],[7,6,1,0,"_integration"],[7,18,1,0],[7,21,1,0,"require"],[7,28,1,0],[7,29,1,0,"_dependencyMap"],[7,43,1,0],[8,2,2,0],[8,6,2,0,"_path"],[8,11,2,0],[8,14,2,0,"require"],[8,21,2,0],[8,22,2,0,"_dependencyMap"],[8,36,2,0],[9,2,3,0],[9,6,3,0,"_worldwide"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,5,0],[10,8,5,6,"INTEGRATION_NAME"],[10,24,5,22],[10,27,5,25],[10,42,5,40],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,2,10,0],[15,8,10,6,"rewriteFramesIntegration"],[15,32,10,30],[15,35,10,30,"exports"],[15,42,10,30],[15,43,10,30,"rewriteFramesIntegration"],[15,67,10,30],[15,70,10,33],[15,74,10,33,"defineIntegration"],[15,104,10,50],[15,106,10,51],[15,107,10,52,"options"],[15,114,10,59],[15,117,10,62],[15,118,10,63],[15,119,10,64],[15,124,10,69],[16,4,11,2],[16,10,11,8,"root"],[16,14,11,12],[16,17,11,15,"options"],[16,24,11,22],[16,25,11,23,"root"],[16,29,11,27],[17,4,12,2],[17,10,12,8,"prefix"],[17,16,12,14],[17,19,12,17,"options"],[17,26,12,24],[17,27,12,25,"prefix"],[17,33,12,31],[17,37,12,35],[17,46,12,44],[18,4,14,2],[18,10,14,8,"isBrowser"],[18,19,14,17],[18,22,14,20],[18,30,14,28],[18,34,14,32,"GLOBAL_OBJ"],[18,55,14,42],[18,59,14,46,"GLOBAL_OBJ"],[18,80,14,56],[18,81,14,57,"window"],[18,87,14,63],[18,92,14,68,"undefined"],[18,101,14,77],[19,4,16,2],[19,10,16,8,"iteratee"],[19,18,16,16],[19,21,16,19,"options"],[19,28,16,26],[19,29,16,27,"iteratee"],[19,37,16,35],[19,41,16,39,"generateIteratee"],[19,57,16,55],[19,58,16,56],[20,6,16,58,"isBrowser"],[20,15,16,67],[21,6,16,69,"root"],[21,10,16,73],[22,6,16,75,"prefix"],[23,4,16,82],[23,5,16,83],[23,6,16,84],[25,4,18,2],[26,4,19,2],[26,13,19,11,"_processExceptionsEvent"],[26,36,19,34,"_processExceptionsEvent"],[26,37,19,35,"event"],[26,42,19,40],[26,44,19,42],[27,6,20,4],[27,10,20,8],[28,8,21,6],[28,15,21,13],[29,10,22,8],[29,13,22,11,"event"],[29,18,22,16],[30,10,23,8,"exception"],[30,19,23,17],[30,21,23,19],[31,12,24,10],[31,15,24,13,"event"],[31,20,24,18],[31,21,24,19,"exception"],[31,30,24,28],[32,12,25,10],[33,12,26,10],[34,12,27,10,"values"],[34,18,27,16],[34,20,27,18,"event"],[34,25,27,23],[34,26,27,24,"exception"],[34,35,27,33],[34,36,27,34,"values"],[34,42,27,40],[34,43,27,41,"map"],[34,46,27,44],[34,47,27,45,"value"],[34,52,27,50],[34,57,27,55],[35,14,28,12],[35,17,28,15,"value"],[35,22,28,20],[36,14,29,12],[36,18,29,16,"value"],[36,23,29,21],[36,24,29,22,"stacktrace"],[36,34,29,32],[36,38,29,36],[37,16,29,38,"stacktrace"],[37,26,29,48],[37,28,29,50,"_processStacktrace"],[37,46,29,68],[37,47,29,69,"value"],[37,52,29,74],[37,53,29,75,"stacktrace"],[37,63,29,85],[38,14,29,87],[38,15,29,88],[39,12,30,10],[39,13,30,11],[39,14,30,12],[40,10,31,8],[41,8,32,6],[41,9,32,7],[42,6,33,4],[42,7,33,5],[42,8,33,6],[42,15,33,13,"_oO"],[42,18,33,16],[42,20,33,18],[43,8,34,6],[43,15,34,13,"event"],[43,20,34,18],[44,6,35,4],[45,4,36,2],[47,4,38,2],[48,4,39,2],[48,13,39,11,"_processStacktrace"],[48,31,39,29,"_processStacktrace"],[48,32,39,30,"stacktrace"],[48,42,39,40],[48,44,39,42],[49,6,40,4],[49,13,40,11],[50,8,41,6],[50,11,41,9,"stacktrace"],[50,21,41,19],[51,8,42,6,"frames"],[51,14,42,12],[51,16,42,14,"stacktrace"],[51,26,42,24],[51,30,42,28,"stacktrace"],[51,40,42,38],[51,41,42,39,"frames"],[51,47,42,45],[51,51,42,49,"stacktrace"],[51,61,42,59],[51,62,42,60,"frames"],[51,68,42,66],[51,69,42,67,"map"],[51,72,42,70],[51,73,42,71,"f"],[51,74,42,72],[51,78,42,76,"iteratee"],[51,86,42,84],[51,87,42,85,"f"],[51,88,42,86],[51,89,42,87],[52,6,43,4],[52,7,43,5],[53,4,44,2],[54,4,46,2],[54,11,46,9],[55,6,47,4,"name"],[55,10,47,8],[55,12,47,10,"INTEGRATION_NAME"],[55,28,47,26],[56,6,48,4,"processEvent"],[56,18,48,16,"processEvent"],[56,19,48,17,"originalEvent"],[56,32,48,30],[56,34,48,32],[57,8,49,6],[57,12,49,10,"processedEvent"],[57,26,49,24],[57,29,49,27,"originalEvent"],[57,42,49,40],[58,8,51,6],[58,12,51,10,"originalEvent"],[58,25,51,23],[58,26,51,24,"exception"],[58,35,51,33],[58,39,51,37,"Array"],[58,44,51,42],[58,45,51,43,"isArray"],[58,52,51,50],[58,53,51,51,"originalEvent"],[58,66,51,64],[58,67,51,65,"exception"],[58,76,51,74],[58,77,51,75,"values"],[58,83,51,81],[58,84,51,82],[58,86,51,84],[59,10,52,8,"processedEvent"],[59,24,52,22],[59,27,52,25,"_processExceptionsEvent"],[59,50,52,48],[59,51,52,49,"processedEvent"],[59,65,52,63],[59,66,52,64],[60,8,53,6],[61,8,55,6],[61,15,55,13,"processedEvent"],[61,29,55,27],[62,6,56,4],[63,4,57,2],[63,5,57,3],[64,2,58,0],[64,3,58,1],[64,4,58,2],[66,2,60,0],[67,0,61,0],[68,0,62,0],[69,2,63,0],[69,11,63,9,"generateIteratee"],[69,27,63,25,"generateIteratee"],[69,28,63,26],[70,4,64,2,"isBrowser"],[70,13,64,11],[71,4,65,2,"root"],[71,8,65,6],[72,4,66,2,"prefix"],[73,2,67,0],[73,3,67,1],[73,5,69,2],[74,4,70,2],[74,11,70,10,"frame"],[74,16,70,15],[74,20,70,20],[75,6,71,4],[75,10,71,8],[75,11,71,9,"frame"],[75,16,71,14],[75,17,71,15,"filename"],[75,25,71,23],[75,27,71,25],[76,8,72,6],[76,15,72,13,"frame"],[76,20,72,18],[77,6,73,4],[79,6,75,4],[80,6,76,4],[80,12,76,10,"isWindowsFrame"],[80,26,76,24],[80,29,77,6],[80,43,77,20],[80,44,77,21,"test"],[80,48,77,25],[80,49,77,26,"frame"],[80,54,77,31],[80,55,77,32,"filename"],[80,63,77,40],[80,64,77,41],[81,6,78,6],[82,6,79,7,"frame"],[82,11,79,12],[82,12,79,13,"filename"],[82,20,79,21],[82,21,79,22,"includes"],[82,29,79,30],[82,30,79,31],[82,34,79,35],[82,35,79,36],[82,39,79,40],[82,40,79,41,"frame"],[82,45,79,46],[82,46,79,47,"filename"],[82,54,79,55],[82,55,79,56,"includes"],[82,63,79,64],[82,64,79,65],[82,67,79,68],[82,68,79,70],[84,6,81,4],[85,6,82,4],[85,12,82,10,"startsWithSlash"],[85,27,82,25],[85,30,82,28],[85,35,82,33],[85,36,82,34,"test"],[85,40,82,38],[85,41,82,39,"frame"],[85,46,82,44],[85,47,82,45,"filename"],[85,55,82,53],[85,56,82,54],[86,6,84,4],[86,10,84,8,"isBrowser"],[86,19,84,17],[86,21,84,19],[87,8,85,6],[87,12,85,10,"root"],[87,16,85,14],[87,18,85,16],[88,10,86,8],[88,16,86,14,"oldFilename"],[88,27,86,25],[88,30,86,28,"frame"],[88,35,86,33],[88,36,86,34,"filename"],[88,44,86,42],[89,10,87,8],[89,14,87,12,"oldFilename"],[89,25,87,23],[89,26,87,24,"indexOf"],[89,33,87,31],[89,34,87,32,"root"],[89,38,87,36],[89,39,87,37],[89,44,87,42],[89,45,87,43],[89,47,87,45],[90,12,88,10,"frame"],[90,17,88,15],[90,18,88,16,"filename"],[90,26,88,24],[90,29,88,27,"oldFilename"],[90,40,88,38],[90,41,88,39,"replace"],[90,48,88,46],[90,49,88,47,"root"],[90,53,88,51],[90,55,88,53,"prefix"],[90,61,88,59],[90,62,88,60],[91,10,89,8],[92,8,90,6],[93,6,91,4],[93,7,91,5],[93,13,91,11],[94,8,92,6],[94,12,92,10,"isWindowsFrame"],[94,26,92,24],[94,30,92,28,"startsWithSlash"],[94,45,92,43],[94,47,92,45],[95,10,93,8],[95,16,93,14,"filename"],[95,24,93,22],[95,27,93,25,"isWindowsFrame"],[95,41,93,39],[95,44,94,12,"frame"],[95,49,94,17],[95,50,94,18,"filename"],[95,58,94,26],[95,59,95,15,"replace"],[95,66,95,22],[95,67,95,23],[95,79,95,35],[95,81,95,37],[95,83,95,39],[95,84,95,40],[95,85,95,41],[96,10,95,41],[96,11,96,15,"replace"],[96,18,96,22],[96,19,96,23],[96,24,96,28],[96,26,96,30],[96,29,96,33],[96,30,96,34],[96,31,96,35],[97,10,96,35],[97,12,97,12,"frame"],[97,17,97,17],[97,18,97,18,"filename"],[97,26,97,26],[98,10,98,8],[98,16,98,14,"base"],[98,20,98,18],[98,23,98,21,"root"],[98,27,98,25],[98,30,98,28],[98,34,98,28,"relative"],[98,48,98,36],[98,50,98,37,"root"],[98,54,98,41],[98,56,98,43,"filename"],[98,64,98,51],[98,65,98,52],[98,68,98,55],[98,72,98,55,"basename"],[98,86,98,63],[98,88,98,64,"filename"],[98,96,98,72],[98,97,98,73],[99,10,99,8,"frame"],[99,15,99,13],[99,16,99,14,"filename"],[99,24,99,22],[99,27,99,25],[99,30,99,28,"prefix"],[99,36,99,34],[99,39,99,37,"base"],[99,43,99,41],[99,45,99,43],[100,8,100,6],[101,6,101,4],[102,6,103,4],[102,13,103,11,"frame"],[102,18,103,16],[103,4,104,2],[103,5,104,3],[104,2,105,0],[105,0,105,1],[105,3]],"functionMap":{"names":["<global>","defineIntegration$argument_0","_processExceptionsEvent","event.exception.values.map$argument_0","_processStacktrace","stacktrace.frames.map$argument_0","processEvent","generateIteratee","<anonymous>"],"mappings":"AAA;mDCS;ECS;6CCQ;YDG;GDM;EGG;uECG,gBD;GHE;IKI;KLQ;CDE;AOK;SCO;GDkC;CPC"}},"type":"js/module"}]}