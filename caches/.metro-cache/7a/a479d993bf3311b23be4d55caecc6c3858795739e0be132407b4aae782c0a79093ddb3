{"dependencies":[{"name":"../../dom/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":146},"end":{"line":7,"column":43,"index":189}}],"key":"sExY87SNUbbJtOx4ghJnWxzXqE0=","exportNames":["*"]}},{"name":"../Node","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":290},"end":{"line":10,"column":68,"index":358}}],"key":"629oO5tQuU3DWlSfXJ8iqlt7cNE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.visit = exports.processPaint = void 0;\n  var _types = require(_dependencyMap[0], \"../../dom/types\");\n  var _Node = require(_dependencyMap[1], \"../Node\");\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n\n  var processPaint = _ref => {\n    var opacity = _ref.opacity,\n      color = _ref.color,\n      strokeWidth = _ref.strokeWidth,\n      blendMode = _ref.blendMode,\n      style = _ref.style,\n      strokeJoin = _ref.strokeJoin,\n      strokeCap = _ref.strokeCap,\n      strokeMiter = _ref.strokeMiter,\n      antiAlias = _ref.antiAlias,\n      dither = _ref.dither,\n      paintRef = _ref.paint;\n    var paint = {};\n    if (opacity !== undefined) {\n      paint.opacity = opacity;\n    }\n    if (color !== undefined) {\n      paint.color = color;\n    }\n    if (strokeWidth !== undefined) {\n      paint.strokeWidth = strokeWidth;\n    }\n    if (blendMode !== undefined) {\n      paint.blendMode = blendMode;\n    }\n    if (style !== undefined) {\n      paint.style = style;\n    }\n    if (strokeJoin !== undefined) {\n      paint.strokeJoin = strokeJoin;\n    }\n    if (strokeCap !== undefined) {\n      paint.strokeCap = strokeCap;\n    }\n    if (strokeMiter !== undefined) {\n      paint.strokeMiter = strokeMiter;\n    }\n    if (antiAlias !== undefined) {\n      paint.antiAlias = antiAlias;\n    }\n    if (dither !== undefined) {\n      paint.dither = dither;\n    }\n    if (paintRef !== undefined) {\n      paint.paint = paintRef;\n    }\n    if (opacity !== undefined || color !== undefined || strokeWidth !== undefined || blendMode !== undefined || style !== undefined || strokeJoin !== undefined || strokeCap !== undefined || strokeMiter !== undefined || antiAlias !== undefined || dither !== undefined || paintRef !== undefined) {\n      return paint;\n    }\n    return null;\n  };\n  exports.processPaint = processPaint;\n  var processCTM = _ref2 => {\n    var clip = _ref2.clip,\n      invertClip = _ref2.invertClip,\n      transform = _ref2.transform,\n      origin = _ref2.origin,\n      matrix = _ref2.matrix,\n      layer = _ref2.layer;\n    var ctm = {};\n    if (clip) {\n      ctm.clip = clip;\n    }\n    if (invertClip) {\n      ctm.invertClip = invertClip;\n    }\n    if (transform) {\n      ctm.transform = transform;\n    }\n    if (origin) {\n      ctm.origin = origin;\n    }\n    if (matrix) {\n      ctm.matrix = matrix;\n    }\n    if (layer) {\n      ctm.layer = layer;\n    }\n    if (clip !== undefined || invertClip !== undefined || transform !== undefined || origin !== undefined || matrix !== undefined || layer !== undefined) {\n      return ctm;\n    }\n    return null;\n  };\n  var pushColorFilters = (recorder, colorFilters) => {\n    colorFilters.forEach(colorFilter => {\n      if (colorFilter.children.length > 0) {\n        pushColorFilters(recorder, colorFilter.children);\n      }\n      recorder.pushColorFilter(colorFilter.type, colorFilter.props);\n      var needsComposition = colorFilter.type !== _types.NodeType.LerpColorFilter && colorFilter.children.length > 0;\n      if (needsComposition) {\n        recorder.composeColorFilter();\n      }\n    });\n  };\n  var pushPathEffects = (recorder, pathEffects) => {\n    pathEffects.forEach(pathEffect => {\n      if (pathEffect.children.length > 0) {\n        pushPathEffects(recorder, pathEffect.children);\n      }\n      recorder.pushPathEffect(pathEffect.type, pathEffect.props);\n      var needsComposition = pathEffect.type !== _types.NodeType.SumPathEffect && pathEffect.children.length > 0;\n      if (needsComposition) {\n        recorder.composePathEffect();\n      }\n    });\n  };\n  var pushImageFilters = (recorder, imageFilters) => {\n    imageFilters.forEach(imageFilter => {\n      if (imageFilter.children.length > 0) {\n        pushImageFilters(recorder, imageFilter.children);\n      }\n      if ((0, _Node.isImageFilter)(imageFilter.type)) {\n        recorder.pushImageFilter(imageFilter.type, imageFilter.props);\n      } else if ((0, _Node.isShader)(imageFilter.type)) {\n        recorder.pushShader(imageFilter.type, imageFilter.props);\n      }\n      var needsComposition = imageFilter.type !== _types.NodeType.BlendImageFilter && imageFilter.children.length > 0;\n      if (needsComposition) {\n        recorder.composeImageFilter();\n      }\n    });\n  };\n  var pushShaders = (recorder, shaders) => {\n    shaders.forEach(shader => {\n      if (shader.children.length > 0) {\n        pushShaders(recorder, shader.children);\n      }\n      recorder.pushShader(shader.type, shader.props);\n    });\n  };\n  var pushMaskFilters = (recorder, maskFilters) => {\n    if (maskFilters.length > 0) {\n      recorder.pushBlurMaskFilter(maskFilters[maskFilters.length - 1].props);\n    }\n  };\n  var pushPaints = (recorder, paints) => {\n    paints.forEach(paint => {\n      recorder.savePaint(paint.props);\n      var _sortNodeChildren = (0, _Node.sortNodeChildren)(paint),\n        colorFilters = _sortNodeChildren.colorFilters,\n        maskFilters = _sortNodeChildren.maskFilters,\n        shaders = _sortNodeChildren.shaders,\n        imageFilters = _sortNodeChildren.imageFilters,\n        pathEffects = _sortNodeChildren.pathEffects;\n      pushColorFilters(recorder, colorFilters);\n      pushImageFilters(recorder, imageFilters);\n      pushMaskFilters(recorder, maskFilters);\n      pushShaders(recorder, shaders);\n      pushPathEffects(recorder, pathEffects);\n      recorder.restorePaintDeclaration();\n    });\n  };\n  var visitNode = (recorder, node) => {\n    if (node.type === _types.NodeType.Group) {\n      recorder.saveGroup();\n    }\n    var props = node.props;\n    var _sortNodeChildren2 = (0, _Node.sortNodeChildren)(node),\n      colorFilters = _sortNodeChildren2.colorFilters,\n      maskFilters = _sortNodeChildren2.maskFilters,\n      drawings = _sortNodeChildren2.drawings,\n      shaders = _sortNodeChildren2.shaders,\n      imageFilters = _sortNodeChildren2.imageFilters,\n      pathEffects = _sortNodeChildren2.pathEffects,\n      paints = _sortNodeChildren2.paints;\n    var paint = processPaint(props);\n    var shouldPushPaint = paint || colorFilters.length > 0 || maskFilters.length > 0 || imageFilters.length > 0 || pathEffects.length > 0 || shaders.length > 0;\n    if (shouldPushPaint) {\n      recorder.savePaint(paint ?? {});\n      pushColorFilters(recorder, colorFilters);\n      pushImageFilters(recorder, imageFilters);\n      pushMaskFilters(recorder, maskFilters);\n      pushShaders(recorder, shaders);\n      pushPathEffects(recorder, pathEffects);\n      // For mixed nodes like BackdropFilters we don't materialize the paint\n      if (node.type === _types.NodeType.BackdropFilter) {\n        recorder.saveBackdropFilter();\n      } else {\n        recorder.materializePaint();\n      }\n    }\n    pushPaints(recorder, paints);\n    if (node.type === _types.NodeType.Layer) {\n      recorder.saveLayer();\n    }\n    var ctm = processCTM(props);\n    var shouldRestore = !!ctm || node.type === _types.NodeType.Layer;\n    if (ctm) {\n      recorder.saveCTM(ctm);\n    }\n    switch (node.type) {\n      case _types.NodeType.Box:\n        var shadows = node.children.filter(n => n.type === _types.NodeType.BoxShadow)\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        .map(_ref3 => {\n          var props = _ref3.props;\n          return {\n            props\n          };\n        });\n        recorder.drawBox(props, shadows);\n        break;\n      case _types.NodeType.Fill:\n        recorder.drawPaint();\n        break;\n      case _types.NodeType.Image:\n        recorder.drawImage(props);\n        break;\n      case _types.NodeType.Circle:\n        recorder.drawCircle(props);\n        break;\n      case _types.NodeType.Points:\n        recorder.drawPoints(props);\n        break;\n      case _types.NodeType.Path:\n        recorder.drawPath(props);\n        break;\n      case _types.NodeType.Rect:\n        recorder.drawRect(props);\n        break;\n      case _types.NodeType.RRect:\n        recorder.drawRRect(props);\n        break;\n      case _types.NodeType.Oval:\n        recorder.drawOval(props);\n        break;\n      case _types.NodeType.Line:\n        recorder.drawLine(props);\n        break;\n      case _types.NodeType.Patch:\n        recorder.drawPatch(props);\n        break;\n      case _types.NodeType.Vertices:\n        recorder.drawVertices(props);\n        break;\n      case _types.NodeType.DiffRect:\n        recorder.drawDiffRect(props);\n        break;\n      case _types.NodeType.Text:\n        recorder.drawText(props);\n        break;\n      case _types.NodeType.TextPath:\n        recorder.drawTextPath(props);\n        break;\n      case _types.NodeType.TextBlob:\n        recorder.drawTextBlob(props);\n        break;\n      case _types.NodeType.Glyphs:\n        recorder.drawGlyphs(props);\n        break;\n      case _types.NodeType.Picture:\n        recorder.drawPicture(props);\n        break;\n      case _types.NodeType.ImageSVG:\n        recorder.drawImageSVG(props);\n        break;\n      case _types.NodeType.Paragraph:\n        recorder.drawParagraph(props);\n        break;\n      case _types.NodeType.Atlas:\n        recorder.drawAtlas(props);\n        break;\n    }\n    drawings.forEach(drawing => {\n      visitNode(recorder, drawing);\n    });\n    if (shouldPushPaint) {\n      recorder.restorePaint();\n    }\n    if (shouldRestore) {\n      recorder.restoreCTM();\n    }\n    if (node.type === _types.NodeType.Group) {\n      recorder.restoreGroup();\n    }\n  };\n  var visit = (recorder, root) => {\n    root.forEach(node => {\n      visitNode(recorder, node);\n    });\n  };\n  exports.visit = visit;\n});","lineCount":293,"map":[[6,2,7,0],[6,6,7,0,"_types"],[6,12,7,0],[6,15,7,0,"require"],[6,22,7,0],[6,23,7,0,"_dependencyMap"],[6,37,7,0],[7,2,10,0],[7,6,10,0,"_Node"],[7,11,10,0],[7,14,10,0,"require"],[7,21,10,0],[7,22,10,0,"_dependencyMap"],[7,36,10,0],[8,2,1,0],[10,2,12,7],[10,6,12,13,"processPaint"],[10,18,12,25],[10,21,12,28,"_ref"],[10,25,12,28],[10,29,24,24],[11,4,24,24],[11,8,13,2,"opacity"],[11,15,13,9],[11,18,13,9,"_ref"],[11,22,13,9],[11,23,13,2,"opacity"],[11,30,13,9],[12,6,14,2,"color"],[12,11,14,7],[12,14,14,7,"_ref"],[12,18,14,7],[12,19,14,2,"color"],[12,24,14,7],[13,6,15,2,"strokeWidth"],[13,17,15,13],[13,20,15,13,"_ref"],[13,24,15,13],[13,25,15,2,"strokeWidth"],[13,36,15,13],[14,6,16,2,"blendMode"],[14,15,16,11],[14,18,16,11,"_ref"],[14,22,16,11],[14,23,16,2,"blendMode"],[14,32,16,11],[15,6,17,2,"style"],[15,11,17,7],[15,14,17,7,"_ref"],[15,18,17,7],[15,19,17,2,"style"],[15,24,17,7],[16,6,18,2,"strokeJoin"],[16,16,18,12],[16,19,18,12,"_ref"],[16,23,18,12],[16,24,18,2,"strokeJoin"],[16,34,18,12],[17,6,19,2,"strokeCap"],[17,15,19,11],[17,18,19,11,"_ref"],[17,22,19,11],[17,23,19,2,"strokeCap"],[17,32,19,11],[18,6,20,2,"strokeMiter"],[18,17,20,13],[18,20,20,13,"_ref"],[18,24,20,13],[18,25,20,2,"strokeMiter"],[18,36,20,13],[19,6,21,2,"antiAlias"],[19,15,21,11],[19,18,21,11,"_ref"],[19,22,21,11],[19,23,21,2,"antiAlias"],[19,32,21,11],[20,6,22,2,"dither"],[20,12,22,8],[20,15,22,8,"_ref"],[20,19,22,8],[20,20,22,2,"dither"],[20,26,22,8],[21,6,23,9,"paintRef"],[21,14,23,17],[21,17,23,17,"_ref"],[21,21,23,17],[21,22,23,2,"paint"],[21,27,23,7],[22,4,25,2],[22,8,25,8,"paint"],[22,13,25,31],[22,16,25,34],[22,17,25,35],[22,18,25,36],[23,4,26,2],[23,8,26,6,"opacity"],[23,15,26,13],[23,20,26,18,"undefined"],[23,29,26,27],[23,31,26,29],[24,6,27,4,"paint"],[24,11,27,9],[24,12,27,10,"opacity"],[24,19,27,17],[24,22,27,20,"opacity"],[24,29,27,27],[25,4,28,2],[26,4,29,2],[26,8,29,6,"color"],[26,13,29,11],[26,18,29,16,"undefined"],[26,27,29,25],[26,29,29,27],[27,6,30,4,"paint"],[27,11,30,9],[27,12,30,10,"color"],[27,17,30,15],[27,20,30,18,"color"],[27,25,30,23],[28,4,31,2],[29,4,32,2],[29,8,32,6,"strokeWidth"],[29,19,32,17],[29,24,32,22,"undefined"],[29,33,32,31],[29,35,32,33],[30,6,33,4,"paint"],[30,11,33,9],[30,12,33,10,"strokeWidth"],[30,23,33,21],[30,26,33,24,"strokeWidth"],[30,37,33,35],[31,4,34,2],[32,4,35,2],[32,8,35,6,"blendMode"],[32,17,35,15],[32,22,35,20,"undefined"],[32,31,35,29],[32,33,35,31],[33,6,36,4,"paint"],[33,11,36,9],[33,12,36,10,"blendMode"],[33,21,36,19],[33,24,36,22,"blendMode"],[33,33,36,31],[34,4,37,2],[35,4,38,2],[35,8,38,6,"style"],[35,13,38,11],[35,18,38,16,"undefined"],[35,27,38,25],[35,29,38,27],[36,6,39,4,"paint"],[36,11,39,9],[36,12,39,10,"style"],[36,17,39,15],[36,20,39,18,"style"],[36,25,39,23],[37,4,40,2],[38,4,41,2],[38,8,41,6,"strokeJoin"],[38,18,41,16],[38,23,41,21,"undefined"],[38,32,41,30],[38,34,41,32],[39,6,42,4,"paint"],[39,11,42,9],[39,12,42,10,"strokeJoin"],[39,22,42,20],[39,25,42,23,"strokeJoin"],[39,35,42,33],[40,4,43,2],[41,4,44,2],[41,8,44,6,"strokeCap"],[41,17,44,15],[41,22,44,20,"undefined"],[41,31,44,29],[41,33,44,31],[42,6,45,4,"paint"],[42,11,45,9],[42,12,45,10,"strokeCap"],[42,21,45,19],[42,24,45,22,"strokeCap"],[42,33,45,31],[43,4,46,2],[44,4,47,2],[44,8,47,6,"strokeMiter"],[44,19,47,17],[44,24,47,22,"undefined"],[44,33,47,31],[44,35,47,33],[45,6,48,4,"paint"],[45,11,48,9],[45,12,48,10,"strokeMiter"],[45,23,48,21],[45,26,48,24,"strokeMiter"],[45,37,48,35],[46,4,49,2],[47,4,50,2],[47,8,50,6,"antiAlias"],[47,17,50,15],[47,22,50,20,"undefined"],[47,31,50,29],[47,33,50,31],[48,6,51,4,"paint"],[48,11,51,9],[48,12,51,10,"antiAlias"],[48,21,51,19],[48,24,51,22,"antiAlias"],[48,33,51,31],[49,4,52,2],[50,4,53,2],[50,8,53,6,"dither"],[50,14,53,12],[50,19,53,17,"undefined"],[50,28,53,26],[50,30,53,28],[51,6,54,4,"paint"],[51,11,54,9],[51,12,54,10,"dither"],[51,18,54,16],[51,21,54,19,"dither"],[51,27,54,25],[52,4,55,2],[53,4,57,2],[53,8,57,6,"paintRef"],[53,16,57,14],[53,21,57,19,"undefined"],[53,30,57,28],[53,32,57,30],[54,6,58,4,"paint"],[54,11,58,9],[54,12,58,10,"paint"],[54,17,58,15],[54,20,58,18,"paintRef"],[54,28,58,26],[55,4,59,2],[56,4,61,2],[56,8,62,4,"opacity"],[56,15,62,11],[56,20,62,16,"undefined"],[56,29,62,25],[56,33,63,4,"color"],[56,38,63,9],[56,43,63,14,"undefined"],[56,52,63,23],[56,56,64,4,"strokeWidth"],[56,67,64,15],[56,72,64,20,"undefined"],[56,81,64,29],[56,85,65,4,"blendMode"],[56,94,65,13],[56,99,65,18,"undefined"],[56,108,65,27],[56,112,66,4,"style"],[56,117,66,9],[56,122,66,14,"undefined"],[56,131,66,23],[56,135,67,4,"strokeJoin"],[56,145,67,14],[56,150,67,19,"undefined"],[56,159,67,28],[56,163,68,4,"strokeCap"],[56,172,68,13],[56,177,68,18,"undefined"],[56,186,68,27],[56,190,69,4,"strokeMiter"],[56,201,69,15],[56,206,69,20,"undefined"],[56,215,69,29],[56,219,70,4,"antiAlias"],[56,228,70,13],[56,233,70,18,"undefined"],[56,242,70,27],[56,246,71,4,"dither"],[56,252,71,10],[56,257,71,15,"undefined"],[56,266,71,24],[56,270,72,4,"paintRef"],[56,278,72,12],[56,283,72,17,"undefined"],[56,292,72,26],[56,294,73,4],[57,6,74,4],[57,13,74,11,"paint"],[57,18,74,16],[58,4,75,2],[59,4,76,2],[59,11,76,9],[59,15,76,13],[60,2,77,0],[60,3,77,1],[61,2,77,2,"exports"],[61,9,77,2],[61,10,77,2,"processPaint"],[61,22,77,2],[61,25,77,2,"processPaint"],[61,37,77,2],[62,2,79,0],[62,6,79,6,"processCTM"],[62,16,79,16],[62,19,79,19,"_ref2"],[62,24,79,19],[62,28,86,16],[63,4,86,16],[63,8,80,2,"clip"],[63,12,80,6],[63,15,80,6,"_ref2"],[63,20,80,6],[63,21,80,2,"clip"],[63,25,80,6],[64,6,81,2,"invertClip"],[64,16,81,12],[64,19,81,12,"_ref2"],[64,24,81,12],[64,25,81,2,"invertClip"],[64,35,81,12],[65,6,82,2,"transform"],[65,15,82,11],[65,18,82,11,"_ref2"],[65,23,82,11],[65,24,82,2,"transform"],[65,33,82,11],[66,6,83,2,"origin"],[66,12,83,8],[66,15,83,8,"_ref2"],[66,20,83,8],[66,21,83,2,"origin"],[66,27,83,8],[67,6,84,2,"matrix"],[67,12,84,8],[67,15,84,8,"_ref2"],[67,20,84,8],[67,21,84,2,"matrix"],[67,27,84,8],[68,6,85,2,"layer"],[68,11,85,7],[68,14,85,7,"_ref2"],[68,19,85,7],[68,20,85,2,"layer"],[68,25,85,7],[69,4,87,2],[69,8,87,8,"ctm"],[69,11,87,21],[69,14,87,24],[69,15,87,25],[69,16,87,26],[70,4,88,2],[70,8,88,6,"clip"],[70,12,88,10],[70,14,88,12],[71,6,89,4,"ctm"],[71,9,89,7],[71,10,89,8,"clip"],[71,14,89,12],[71,17,89,15,"clip"],[71,21,89,19],[72,4,90,2],[73,4,91,2],[73,8,91,6,"invertClip"],[73,18,91,16],[73,20,91,18],[74,6,92,4,"ctm"],[74,9,92,7],[74,10,92,8,"invertClip"],[74,20,92,18],[74,23,92,21,"invertClip"],[74,33,92,31],[75,4,93,2],[76,4,94,2],[76,8,94,6,"transform"],[76,17,94,15],[76,19,94,17],[77,6,95,4,"ctm"],[77,9,95,7],[77,10,95,8,"transform"],[77,19,95,17],[77,22,95,20,"transform"],[77,31,95,29],[78,4,96,2],[79,4,97,2],[79,8,97,6,"origin"],[79,14,97,12],[79,16,97,14],[80,6,98,4,"ctm"],[80,9,98,7],[80,10,98,8,"origin"],[80,16,98,14],[80,19,98,17,"origin"],[80,25,98,23],[81,4,99,2],[82,4,100,2],[82,8,100,6,"matrix"],[82,14,100,12],[82,16,100,14],[83,6,101,4,"ctm"],[83,9,101,7],[83,10,101,8,"matrix"],[83,16,101,14],[83,19,101,17,"matrix"],[83,25,101,23],[84,4,102,2],[85,4,103,2],[85,8,103,6,"layer"],[85,13,103,11],[85,15,103,13],[86,6,104,4,"ctm"],[86,9,104,7],[86,10,104,8,"layer"],[86,15,104,13],[86,18,104,16,"layer"],[86,23,104,21],[87,4,105,2],[88,4,106,2],[88,8,107,4,"clip"],[88,12,107,8],[88,17,107,13,"undefined"],[88,26,107,22],[88,30,108,4,"invertClip"],[88,40,108,14],[88,45,108,19,"undefined"],[88,54,108,28],[88,58,109,4,"transform"],[88,67,109,13],[88,72,109,18,"undefined"],[88,81,109,27],[88,85,110,4,"origin"],[88,91,110,10],[88,96,110,15,"undefined"],[88,105,110,24],[88,109,111,4,"matrix"],[88,115,111,10],[88,120,111,15,"undefined"],[88,129,111,24],[88,133,112,4,"layer"],[88,138,112,9],[88,143,112,14,"undefined"],[88,152,112,23],[88,154,113,4],[89,6,114,4],[89,13,114,11,"ctm"],[89,16,114,14],[90,4,115,2],[91,4,116,2],[91,11,116,9],[91,15,116,13],[92,2,117,0],[92,3,117,1],[93,2,119,0],[93,6,119,6,"pushColorFilters"],[93,22,119,22],[93,25,119,25,"pushColorFilters"],[93,26,120,2,"recorder"],[93,34,120,24],[93,36,121,2,"colorFilters"],[93,48,121,27],[93,53,122,5],[94,4,123,2,"colorFilters"],[94,16,123,14],[94,17,123,15,"forEach"],[94,24,123,22],[94,25,123,24,"colorFilter"],[94,36,123,35],[94,40,123,40],[95,6,124,4],[95,10,124,8,"colorFilter"],[95,21,124,19],[95,22,124,20,"children"],[95,30,124,28],[95,31,124,29,"length"],[95,37,124,35],[95,40,124,38],[95,41,124,39],[95,43,124,41],[96,8,125,6,"pushColorFilters"],[96,24,125,22],[96,25,125,23,"recorder"],[96,33,125,31],[96,35,125,33,"colorFilter"],[96,46,125,44],[96,47,125,45,"children"],[96,55,125,53],[96,56,125,54],[97,6,126,4],[98,6,127,4,"recorder"],[98,14,127,12],[98,15,127,13,"pushColorFilter"],[98,30,127,28],[98,31,127,29,"colorFilter"],[98,42,127,40],[98,43,127,41,"type"],[98,47,127,45],[98,49,127,47,"colorFilter"],[98,60,127,58],[98,61,127,59,"props"],[98,66,127,64],[98,67,127,65],[99,6,128,4],[99,10,128,10,"needsComposition"],[99,26,128,26],[99,29,129,6,"colorFilter"],[99,40,129,17],[99,41,129,18,"type"],[99,45,129,22],[99,50,129,27,"NodeType"],[99,65,129,35],[99,66,129,36,"LerpColorFilter"],[99,81,129,51],[99,85,130,6,"colorFilter"],[99,96,130,17],[99,97,130,18,"children"],[99,105,130,26],[99,106,130,27,"length"],[99,112,130,33],[99,115,130,36],[99,116,130,37],[100,6,131,4],[100,10,131,8,"needsComposition"],[100,26,131,24],[100,28,131,26],[101,8,132,6,"recorder"],[101,16,132,14],[101,17,132,15,"composeColorFilter"],[101,35,132,33],[101,36,132,34],[101,37,132,35],[102,6,133,4],[103,4,134,2],[103,5,134,3],[103,6,134,4],[104,2,135,0],[104,3,135,1],[105,2,137,0],[105,6,137,6,"pushPathEffects"],[105,21,137,21],[105,24,137,24,"pushPathEffects"],[105,25,137,25,"recorder"],[105,33,137,47],[105,35,137,49,"pathEffects"],[105,46,137,73],[105,51,137,78],[106,4,138,2,"pathEffects"],[106,15,138,13],[106,16,138,14,"forEach"],[106,23,138,21],[106,24,138,23,"pathEffect"],[106,34,138,33],[106,38,138,38],[107,6,139,4],[107,10,139,8,"pathEffect"],[107,20,139,18],[107,21,139,19,"children"],[107,29,139,27],[107,30,139,28,"length"],[107,36,139,34],[107,39,139,37],[107,40,139,38],[107,42,139,40],[108,8,140,6,"pushPathEffects"],[108,23,140,21],[108,24,140,22,"recorder"],[108,32,140,30],[108,34,140,32,"pathEffect"],[108,44,140,42],[108,45,140,43,"children"],[108,53,140,51],[108,54,140,52],[109,6,141,4],[110,6,142,4,"recorder"],[110,14,142,12],[110,15,142,13,"pushPathEffect"],[110,29,142,27],[110,30,142,28,"pathEffect"],[110,40,142,38],[110,41,142,39,"type"],[110,45,142,43],[110,47,142,45,"pathEffect"],[110,57,142,55],[110,58,142,56,"props"],[110,63,142,61],[110,64,142,62],[111,6,143,4],[111,10,143,10,"needsComposition"],[111,26,143,26],[111,29,144,6,"pathEffect"],[111,39,144,16],[111,40,144,17,"type"],[111,44,144,21],[111,49,144,26,"NodeType"],[111,64,144,34],[111,65,144,35,"SumPathEffect"],[111,78,144,48],[111,82,145,6,"pathEffect"],[111,92,145,16],[111,93,145,17,"children"],[111,101,145,25],[111,102,145,26,"length"],[111,108,145,32],[111,111,145,35],[111,112,145,36],[112,6,146,4],[112,10,146,8,"needsComposition"],[112,26,146,24],[112,28,146,26],[113,8,147,6,"recorder"],[113,16,147,14],[113,17,147,15,"composePathEffect"],[113,34,147,32],[113,35,147,33],[113,36,147,34],[114,6,148,4],[115,4,149,2],[115,5,149,3],[115,6,149,4],[116,2,150,0],[116,3,150,1],[117,2,152,0],[117,6,152,6,"pushImageFilters"],[117,22,152,22],[117,25,152,25,"pushImageFilters"],[117,26,153,2,"recorder"],[117,34,153,24],[117,36,154,2,"imageFilters"],[117,48,154,27],[117,53,155,5],[118,4,156,2,"imageFilters"],[118,16,156,14],[118,17,156,15,"forEach"],[118,24,156,22],[118,25,156,24,"imageFilter"],[118,36,156,35],[118,40,156,40],[119,6,157,4],[119,10,157,8,"imageFilter"],[119,21,157,19],[119,22,157,20,"children"],[119,30,157,28],[119,31,157,29,"length"],[119,37,157,35],[119,40,157,38],[119,41,157,39],[119,43,157,41],[120,8,158,6,"pushImageFilters"],[120,24,158,22],[120,25,158,23,"recorder"],[120,33,158,31],[120,35,158,33,"imageFilter"],[120,46,158,44],[120,47,158,45,"children"],[120,55,158,53],[120,56,158,54],[121,6,159,4],[122,6,160,4],[122,10,160,8],[122,14,160,8,"isImageFilter"],[122,33,160,21],[122,35,160,22,"imageFilter"],[122,46,160,33],[122,47,160,34,"type"],[122,51,160,38],[122,52,160,39],[122,54,160,41],[123,8,161,6,"recorder"],[123,16,161,14],[123,17,161,15,"pushImageFilter"],[123,32,161,30],[123,33,161,31,"imageFilter"],[123,44,161,42],[123,45,161,43,"type"],[123,49,161,47],[123,51,161,49,"imageFilter"],[123,62,161,60],[123,63,161,61,"props"],[123,68,161,66],[123,69,161,67],[124,6,162,4],[124,7,162,5],[124,13,162,11],[124,17,162,15],[124,21,162,15,"isShader"],[124,35,162,23],[124,37,162,24,"imageFilter"],[124,48,162,35],[124,49,162,36,"type"],[124,53,162,40],[124,54,162,41],[124,56,162,43],[125,8,163,6,"recorder"],[125,16,163,14],[125,17,163,15,"pushShader"],[125,27,163,25],[125,28,163,26,"imageFilter"],[125,39,163,37],[125,40,163,38,"type"],[125,44,163,42],[125,46,163,44,"imageFilter"],[125,57,163,55],[125,58,163,56,"props"],[125,63,163,61],[125,64,163,62],[126,6,164,4],[127,6,165,4],[127,10,165,10,"needsComposition"],[127,26,165,26],[127,29,166,6,"imageFilter"],[127,40,166,17],[127,41,166,18,"type"],[127,45,166,22],[127,50,166,27,"NodeType"],[127,65,166,35],[127,66,166,36,"BlendImageFilter"],[127,82,166,52],[127,86,167,6,"imageFilter"],[127,97,167,17],[127,98,167,18,"children"],[127,106,167,26],[127,107,167,27,"length"],[127,113,167,33],[127,116,167,36],[127,117,167,37],[128,6,168,4],[128,10,168,8,"needsComposition"],[128,26,168,24],[128,28,168,26],[129,8,169,6,"recorder"],[129,16,169,14],[129,17,169,15,"composeImageFilter"],[129,35,169,33],[129,36,169,34],[129,37,169,35],[130,6,170,4],[131,4,171,2],[131,5,171,3],[131,6,171,4],[132,2,172,0],[132,3,172,1],[133,2,174,0],[133,6,174,6,"pushShaders"],[133,17,174,17],[133,20,174,20,"pushShaders"],[133,21,174,21,"recorder"],[133,29,174,43],[133,31,174,45,"shaders"],[133,38,174,65],[133,43,174,70],[134,4,175,2,"shaders"],[134,11,175,9],[134,12,175,10,"forEach"],[134,19,175,17],[134,20,175,19,"shader"],[134,26,175,25],[134,30,175,30],[135,6,176,4],[135,10,176,8,"shader"],[135,16,176,14],[135,17,176,15,"children"],[135,25,176,23],[135,26,176,24,"length"],[135,32,176,30],[135,35,176,33],[135,36,176,34],[135,38,176,36],[136,8,177,6,"pushShaders"],[136,19,177,17],[136,20,177,18,"recorder"],[136,28,177,26],[136,30,177,28,"shader"],[136,36,177,34],[136,37,177,35,"children"],[136,45,177,43],[136,46,177,44],[137,6,178,4],[138,6,179,4,"recorder"],[138,14,179,12],[138,15,179,13,"pushShader"],[138,25,179,23],[138,26,179,24,"shader"],[138,32,179,30],[138,33,179,31,"type"],[138,37,179,35],[138,39,179,37,"shader"],[138,45,179,43],[138,46,179,44,"props"],[138,51,179,49],[138,52,179,50],[139,4,180,2],[139,5,180,3],[139,6,180,4],[140,2,181,0],[140,3,181,1],[141,2,183,0],[141,6,183,6,"pushMaskFilters"],[141,21,183,21],[141,24,183,24,"pushMaskFilters"],[141,25,183,25,"recorder"],[141,33,183,47],[141,35,183,49,"maskFilters"],[141,46,183,73],[141,51,183,78],[142,4,184,2],[142,8,184,6,"maskFilters"],[142,19,184,17],[142,20,184,18,"length"],[142,26,184,24],[142,29,184,27],[142,30,184,28],[142,32,184,30],[143,6,185,4,"recorder"],[143,14,185,12],[143,15,185,13,"pushBlurMaskFilter"],[143,33,185,31],[143,34,185,32,"maskFilters"],[143,45,185,43],[143,46,185,44,"maskFilters"],[143,57,185,55],[143,58,185,56,"length"],[143,64,185,62],[143,67,185,65],[143,68,185,66],[143,69,185,67],[143,70,185,68,"props"],[143,75,185,73],[143,76,185,74],[144,4,186,2],[145,2,187,0],[145,3,187,1],[146,2,189,0],[146,6,189,6,"pushPaints"],[146,16,189,16],[146,19,189,19,"pushPaints"],[146,20,189,20,"recorder"],[146,28,189,42],[146,30,189,44,"paints"],[146,36,189,63],[146,41,189,68],[147,4,190,2,"paints"],[147,10,190,8],[147,11,190,9,"forEach"],[147,18,190,16],[147,19,190,18,"paint"],[147,24,190,23],[147,28,190,28],[148,6,191,4,"recorder"],[148,14,191,12],[148,15,191,13,"savePaint"],[148,24,191,22],[148,25,191,23,"paint"],[148,30,191,28],[148,31,191,29,"props"],[148,36,191,34],[148,37,191,35],[149,6,192,4],[149,10,192,4,"_sortNodeChildren"],[149,27,192,4],[149,30,193,6],[149,34,193,6,"sortNodeChildren"],[149,56,193,22],[149,58,193,23,"paint"],[149,63,193,28],[149,64,193,29],[150,8,192,12,"colorFilters"],[150,20,192,24],[150,23,192,24,"_sortNodeChildren"],[150,40,192,24],[150,41,192,12,"colorFilters"],[150,53,192,24],[151,8,192,26,"maskFilters"],[151,19,192,37],[151,22,192,37,"_sortNodeChildren"],[151,39,192,37],[151,40,192,26,"maskFilters"],[151,51,192,37],[152,8,192,39,"shaders"],[152,15,192,46],[152,18,192,46,"_sortNodeChildren"],[152,35,192,46],[152,36,192,39,"shaders"],[152,43,192,46],[153,8,192,48,"imageFilters"],[153,20,192,60],[153,23,192,60,"_sortNodeChildren"],[153,40,192,60],[153,41,192,48,"imageFilters"],[153,53,192,60],[154,8,192,62,"pathEffects"],[154,19,192,73],[154,22,192,73,"_sortNodeChildren"],[154,39,192,73],[154,40,192,62,"pathEffects"],[154,51,192,73],[155,6,194,4,"pushColorFilters"],[155,22,194,20],[155,23,194,21,"recorder"],[155,31,194,29],[155,33,194,31,"colorFilters"],[155,45,194,43],[155,46,194,44],[156,6,195,4,"pushImageFilters"],[156,22,195,20],[156,23,195,21,"recorder"],[156,31,195,29],[156,33,195,31,"imageFilters"],[156,45,195,43],[156,46,195,44],[157,6,196,4,"pushMaskFilters"],[157,21,196,19],[157,22,196,20,"recorder"],[157,30,196,28],[157,32,196,30,"maskFilters"],[157,43,196,41],[157,44,196,42],[158,6,197,4,"pushShaders"],[158,17,197,15],[158,18,197,16,"recorder"],[158,26,197,24],[158,28,197,26,"shaders"],[158,35,197,33],[158,36,197,34],[159,6,198,4,"pushPathEffects"],[159,21,198,19],[159,22,198,20,"recorder"],[159,30,198,28],[159,32,198,30,"pathEffects"],[159,43,198,41],[159,44,198,42],[160,6,199,4,"recorder"],[160,14,199,12],[160,15,199,13,"restorePaintDeclaration"],[160,38,199,36],[160,39,199,37],[160,40,199,38],[161,4,200,2],[161,5,200,3],[161,6,200,4],[162,2,201,0],[162,3,201,1],[163,2,203,0],[163,6,203,6,"visitNode"],[163,15,203,15],[163,18,203,18,"visitNode"],[163,19,203,19,"recorder"],[163,27,203,41],[163,29,203,43,"node"],[163,33,203,58],[163,38,203,63],[164,4,204,2],[164,8,204,6,"node"],[164,12,204,10],[164,13,204,11,"type"],[164,17,204,15],[164,22,204,20,"NodeType"],[164,37,204,28],[164,38,204,29,"Group"],[164,43,204,34],[164,45,204,36],[165,6,205,4,"recorder"],[165,14,205,12],[165,15,205,13,"saveGroup"],[165,24,205,22],[165,25,205,23],[165,26,205,24],[166,4,206,2],[167,4,207,2],[167,8,207,10,"props"],[167,13,207,15],[167,16,207,20,"node"],[167,20,207,24],[167,21,207,10,"props"],[167,26,207,15],[168,4,208,2],[168,8,208,2,"_sortNodeChildren2"],[168,26,208,2],[168,29,216,6],[168,33,216,6,"sortNodeChildren"],[168,55,216,22],[168,57,216,23,"node"],[168,61,216,27],[168,62,216,28],[169,6,209,4,"colorFilters"],[169,18,209,16],[169,21,209,16,"_sortNodeChildren2"],[169,39,209,16],[169,40,209,4,"colorFilters"],[169,52,209,16],[170,6,210,4,"maskFilters"],[170,17,210,15],[170,20,210,15,"_sortNodeChildren2"],[170,38,210,15],[170,39,210,4,"maskFilters"],[170,50,210,15],[171,6,211,4,"drawings"],[171,14,211,12],[171,17,211,12,"_sortNodeChildren2"],[171,35,211,12],[171,36,211,4,"drawings"],[171,44,211,12],[172,6,212,4,"shaders"],[172,13,212,11],[172,16,212,11,"_sortNodeChildren2"],[172,34,212,11],[172,35,212,4,"shaders"],[172,42,212,11],[173,6,213,4,"imageFilters"],[173,18,213,16],[173,21,213,16,"_sortNodeChildren2"],[173,39,213,16],[173,40,213,4,"imageFilters"],[173,52,213,16],[174,6,214,4,"pathEffects"],[174,17,214,15],[174,20,214,15,"_sortNodeChildren2"],[174,38,214,15],[174,39,214,4,"pathEffects"],[174,50,214,15],[175,6,215,4,"paints"],[175,12,215,10],[175,15,215,10,"_sortNodeChildren2"],[175,33,215,10],[175,34,215,4,"paints"],[175,40,215,10],[176,4,217,2],[176,8,217,8,"paint"],[176,13,217,13],[176,16,217,16,"processPaint"],[176,28,217,28],[176,29,217,29,"props"],[176,34,217,34],[176,35,217,35],[177,4,218,2],[177,8,218,8,"shouldPushPaint"],[177,23,218,23],[177,26,219,4,"paint"],[177,31,219,9],[177,35,220,4,"colorFilters"],[177,47,220,16],[177,48,220,17,"length"],[177,54,220,23],[177,57,220,26],[177,58,220,27],[177,62,221,4,"maskFilters"],[177,73,221,15],[177,74,221,16,"length"],[177,80,221,22],[177,83,221,25],[177,84,221,26],[177,88,222,4,"imageFilters"],[177,100,222,16],[177,101,222,17,"length"],[177,107,222,23],[177,110,222,26],[177,111,222,27],[177,115,223,4,"pathEffects"],[177,126,223,15],[177,127,223,16,"length"],[177,133,223,22],[177,136,223,25],[177,137,223,26],[177,141,224,4,"shaders"],[177,148,224,11],[177,149,224,12,"length"],[177,155,224,18],[177,158,224,21],[177,159,224,22],[178,4,225,2],[178,8,225,6,"shouldPushPaint"],[178,23,225,21],[178,25,225,23],[179,6,226,4,"recorder"],[179,14,226,12],[179,15,226,13,"savePaint"],[179,24,226,22],[179,25,226,23,"paint"],[179,30,226,28],[179,34,226,32],[179,35,226,33],[179,36,226,34],[179,37,226,35],[180,6,227,4,"pushColorFilters"],[180,22,227,20],[180,23,227,21,"recorder"],[180,31,227,29],[180,33,227,31,"colorFilters"],[180,45,227,43],[180,46,227,44],[181,6,228,4,"pushImageFilters"],[181,22,228,20],[181,23,228,21,"recorder"],[181,31,228,29],[181,33,228,31,"imageFilters"],[181,45,228,43],[181,46,228,44],[182,6,229,4,"pushMaskFilters"],[182,21,229,19],[182,22,229,20,"recorder"],[182,30,229,28],[182,32,229,30,"maskFilters"],[182,43,229,41],[182,44,229,42],[183,6,230,4,"pushShaders"],[183,17,230,15],[183,18,230,16,"recorder"],[183,26,230,24],[183,28,230,26,"shaders"],[183,35,230,33],[183,36,230,34],[184,6,231,4,"pushPathEffects"],[184,21,231,19],[184,22,231,20,"recorder"],[184,30,231,28],[184,32,231,30,"pathEffects"],[184,43,231,41],[184,44,231,42],[185,6,232,4],[186,6,233,4],[186,10,233,8,"node"],[186,14,233,12],[186,15,233,13,"type"],[186,19,233,17],[186,24,233,22,"NodeType"],[186,39,233,30],[186,40,233,31,"BackdropFilter"],[186,54,233,45],[186,56,233,47],[187,8,234,6,"recorder"],[187,16,234,14],[187,17,234,15,"saveBackdropFilter"],[187,35,234,33],[187,36,234,34],[187,37,234,35],[188,6,235,4],[188,7,235,5],[188,13,235,11],[189,8,236,6,"recorder"],[189,16,236,14],[189,17,236,15,"materializePaint"],[189,33,236,31],[189,34,236,32],[189,35,236,33],[190,6,237,4],[191,4,238,2],[192,4,239,2,"pushPaints"],[192,14,239,12],[192,15,239,13,"recorder"],[192,23,239,21],[192,25,239,23,"paints"],[192,31,239,29],[192,32,239,30],[193,4,240,2],[193,8,240,6,"node"],[193,12,240,10],[193,13,240,11,"type"],[193,17,240,15],[193,22,240,20,"NodeType"],[193,37,240,28],[193,38,240,29,"Layer"],[193,43,240,34],[193,45,240,36],[194,6,241,4,"recorder"],[194,14,241,12],[194,15,241,13,"saveLayer"],[194,24,241,22],[194,25,241,23],[194,26,241,24],[195,4,242,2],[196,4,243,2],[196,8,243,8,"ctm"],[196,11,243,11],[196,14,243,14,"processCTM"],[196,24,243,24],[196,25,243,25,"props"],[196,30,243,30],[196,31,243,31],[197,4,244,2],[197,8,244,8,"shouldRestore"],[197,21,244,21],[197,24,244,24],[197,25,244,25],[197,26,244,26,"ctm"],[197,29,244,29],[197,33,244,33,"node"],[197,37,244,37],[197,38,244,38,"type"],[197,42,244,42],[197,47,244,47,"NodeType"],[197,62,244,55],[197,63,244,56,"Layer"],[197,68,244,61],[198,4,245,2],[198,8,245,6,"ctm"],[198,11,245,9],[198,13,245,11],[199,6,246,4,"recorder"],[199,14,246,12],[199,15,246,13,"saveCTM"],[199,22,246,20],[199,23,246,21,"ctm"],[199,26,246,24],[199,27,246,25],[200,4,247,2],[201,4,248,2],[201,12,248,10,"node"],[201,16,248,14],[201,17,248,15,"type"],[201,21,248,19],[202,6,249,4],[202,11,249,9,"NodeType"],[202,26,249,17],[202,27,249,18,"Box"],[202,30,249,21],[203,8,250,6],[203,12,250,12,"shadows"],[203,19,250,19],[203,22,250,22,"node"],[203,26,250,26],[203,27,250,27,"children"],[203,35,250,35],[203,36,251,9,"filter"],[203,42,251,15],[203,43,251,17,"n"],[203,44,251,18],[203,48,251,23,"n"],[203,49,251,24],[203,50,251,25,"type"],[203,54,251,29],[203,59,251,34,"NodeType"],[203,74,251,42],[203,75,251,43,"BoxShadow"],[203,84,251,52],[204,8,252,8],[205,8,252,8],[205,9,253,9,"map"],[205,12,253,12],[205,13,253,13,"_ref3"],[205,18,253,13],[206,10,253,13],[206,14,253,16,"props"],[206,19,253,21],[206,22,253,21,"_ref3"],[206,27,253,21],[206,28,253,16,"props"],[206,33,253,21],[207,10,253,21],[207,17,253,29],[208,12,253,31,"props"],[209,10,253,37],[209,11,253,38],[210,8,253,38],[210,9,253,68],[210,10,253,69],[211,8,254,6,"recorder"],[211,16,254,14],[211,17,254,15,"drawBox"],[211,24,254,22],[211,25,254,23,"props"],[211,30,254,28],[211,32,254,30,"shadows"],[211,39,254,37],[211,40,254,38],[212,8,255,6],[213,6,256,4],[213,11,256,9,"NodeType"],[213,26,256,17],[213,27,256,18,"Fill"],[213,31,256,22],[214,8,257,6,"recorder"],[214,16,257,14],[214,17,257,15,"drawPaint"],[214,26,257,24],[214,27,257,25],[214,28,257,26],[215,8,258,6],[216,6,259,4],[216,11,259,9,"NodeType"],[216,26,259,17],[216,27,259,18,"Image"],[216,32,259,23],[217,8,260,6,"recorder"],[217,16,260,14],[217,17,260,15,"drawImage"],[217,26,260,24],[217,27,260,25,"props"],[217,32,260,30],[217,33,260,31],[218,8,261,6],[219,6,262,4],[219,11,262,9,"NodeType"],[219,26,262,17],[219,27,262,18,"Circle"],[219,33,262,24],[220,8,263,6,"recorder"],[220,16,263,14],[220,17,263,15,"drawCircle"],[220,27,263,25],[220,28,263,26,"props"],[220,33,263,31],[220,34,263,32],[221,8,264,6],[222,6,265,4],[222,11,265,9,"NodeType"],[222,26,265,17],[222,27,265,18,"Points"],[222,33,265,24],[223,8,266,6,"recorder"],[223,16,266,14],[223,17,266,15,"drawPoints"],[223,27,266,25],[223,28,266,26,"props"],[223,33,266,31],[223,34,266,32],[224,8,267,6],[225,6,268,4],[225,11,268,9,"NodeType"],[225,26,268,17],[225,27,268,18,"Path"],[225,31,268,22],[226,8,269,6,"recorder"],[226,16,269,14],[226,17,269,15,"drawPath"],[226,25,269,23],[226,26,269,24,"props"],[226,31,269,29],[226,32,269,30],[227,8,270,6],[228,6,271,4],[228,11,271,9,"NodeType"],[228,26,271,17],[228,27,271,18,"Rect"],[228,31,271,22],[229,8,272,6,"recorder"],[229,16,272,14],[229,17,272,15,"drawRect"],[229,25,272,23],[229,26,272,24,"props"],[229,31,272,29],[229,32,272,30],[230,8,273,6],[231,6,274,4],[231,11,274,9,"NodeType"],[231,26,274,17],[231,27,274,18,"RRect"],[231,32,274,23],[232,8,275,6,"recorder"],[232,16,275,14],[232,17,275,15,"drawRRect"],[232,26,275,24],[232,27,275,25,"props"],[232,32,275,30],[232,33,275,31],[233,8,276,6],[234,6,277,4],[234,11,277,9,"NodeType"],[234,26,277,17],[234,27,277,18,"Oval"],[234,31,277,22],[235,8,278,6,"recorder"],[235,16,278,14],[235,17,278,15,"drawOval"],[235,25,278,23],[235,26,278,24,"props"],[235,31,278,29],[235,32,278,30],[236,8,279,6],[237,6,280,4],[237,11,280,9,"NodeType"],[237,26,280,17],[237,27,280,18,"Line"],[237,31,280,22],[238,8,281,6,"recorder"],[238,16,281,14],[238,17,281,15,"drawLine"],[238,25,281,23],[238,26,281,24,"props"],[238,31,281,29],[238,32,281,30],[239,8,282,6],[240,6,283,4],[240,11,283,9,"NodeType"],[240,26,283,17],[240,27,283,18,"Patch"],[240,32,283,23],[241,8,284,6,"recorder"],[241,16,284,14],[241,17,284,15,"drawPatch"],[241,26,284,24],[241,27,284,25,"props"],[241,32,284,30],[241,33,284,31],[242,8,285,6],[243,6,286,4],[243,11,286,9,"NodeType"],[243,26,286,17],[243,27,286,18,"Vertices"],[243,35,286,26],[244,8,287,6,"recorder"],[244,16,287,14],[244,17,287,15,"drawVertices"],[244,29,287,27],[244,30,287,28,"props"],[244,35,287,33],[244,36,287,34],[245,8,288,6],[246,6,289,4],[246,11,289,9,"NodeType"],[246,26,289,17],[246,27,289,18,"DiffRect"],[246,35,289,26],[247,8,290,6,"recorder"],[247,16,290,14],[247,17,290,15,"drawDiffRect"],[247,29,290,27],[247,30,290,28,"props"],[247,35,290,33],[247,36,290,34],[248,8,291,6],[249,6,292,4],[249,11,292,9,"NodeType"],[249,26,292,17],[249,27,292,18,"Text"],[249,31,292,22],[250,8,293,6,"recorder"],[250,16,293,14],[250,17,293,15,"drawText"],[250,25,293,23],[250,26,293,24,"props"],[250,31,293,29],[250,32,293,30],[251,8,294,6],[252,6,295,4],[252,11,295,9,"NodeType"],[252,26,295,17],[252,27,295,18,"TextPath"],[252,35,295,26],[253,8,296,6,"recorder"],[253,16,296,14],[253,17,296,15,"drawTextPath"],[253,29,296,27],[253,30,296,28,"props"],[253,35,296,33],[253,36,296,34],[254,8,297,6],[255,6,298,4],[255,11,298,9,"NodeType"],[255,26,298,17],[255,27,298,18,"TextBlob"],[255,35,298,26],[256,8,299,6,"recorder"],[256,16,299,14],[256,17,299,15,"drawTextBlob"],[256,29,299,27],[256,30,299,28,"props"],[256,35,299,33],[256,36,299,34],[257,8,300,6],[258,6,301,4],[258,11,301,9,"NodeType"],[258,26,301,17],[258,27,301,18,"Glyphs"],[258,33,301,24],[259,8,302,6,"recorder"],[259,16,302,14],[259,17,302,15,"drawGlyphs"],[259,27,302,25],[259,28,302,26,"props"],[259,33,302,31],[259,34,302,32],[260,8,303,6],[261,6,304,4],[261,11,304,9,"NodeType"],[261,26,304,17],[261,27,304,18,"Picture"],[261,34,304,25],[262,8,305,6,"recorder"],[262,16,305,14],[262,17,305,15,"drawPicture"],[262,28,305,26],[262,29,305,27,"props"],[262,34,305,32],[262,35,305,33],[263,8,306,6],[264,6,307,4],[264,11,307,9,"NodeType"],[264,26,307,17],[264,27,307,18,"ImageSVG"],[264,35,307,26],[265,8,308,6,"recorder"],[265,16,308,14],[265,17,308,15,"drawImageSVG"],[265,29,308,27],[265,30,308,28,"props"],[265,35,308,33],[265,36,308,34],[266,8,309,6],[267,6,310,4],[267,11,310,9,"NodeType"],[267,26,310,17],[267,27,310,18,"Paragraph"],[267,36,310,27],[268,8,311,6,"recorder"],[268,16,311,14],[268,17,311,15,"drawParagraph"],[268,30,311,28],[268,31,311,29,"props"],[268,36,311,34],[268,37,311,35],[269,8,312,6],[270,6,313,4],[270,11,313,9,"NodeType"],[270,26,313,17],[270,27,313,18,"Atlas"],[270,32,313,23],[271,8,314,6,"recorder"],[271,16,314,14],[271,17,314,15,"drawAtlas"],[271,26,314,24],[271,27,314,25,"props"],[271,32,314,30],[271,33,314,31],[272,8,315,6],[273,4,316,2],[274,4,317,2,"drawings"],[274,12,317,10],[274,13,317,11,"forEach"],[274,20,317,18],[274,21,317,20,"drawing"],[274,28,317,27],[274,32,317,32],[275,6,318,4,"visitNode"],[275,15,318,13],[275,16,318,14,"recorder"],[275,24,318,22],[275,26,318,24,"drawing"],[275,33,318,31],[275,34,318,32],[276,4,319,2],[276,5,319,3],[276,6,319,4],[277,4,320,2],[277,8,320,6,"shouldPushPaint"],[277,23,320,21],[277,25,320,23],[278,6,321,4,"recorder"],[278,14,321,12],[278,15,321,13,"restorePaint"],[278,27,321,25],[278,28,321,26],[278,29,321,27],[279,4,322,2],[280,4,323,2],[280,8,323,6,"shouldRestore"],[280,21,323,19],[280,23,323,21],[281,6,324,4,"recorder"],[281,14,324,12],[281,15,324,13,"restoreCTM"],[281,25,324,23],[281,26,324,24],[281,27,324,25],[282,4,325,2],[283,4,326,2],[283,8,326,6,"node"],[283,12,326,10],[283,13,326,11,"type"],[283,17,326,15],[283,22,326,20,"NodeType"],[283,37,326,28],[283,38,326,29,"Group"],[283,43,326,34],[283,45,326,36],[284,6,327,4,"recorder"],[284,14,327,12],[284,15,327,13,"restoreGroup"],[284,27,327,25],[284,28,327,26],[284,29,327,27],[285,4,328,2],[286,2,329,0],[286,3,329,1],[287,2,331,7],[287,6,331,13,"visit"],[287,11,331,18],[287,14,331,21,"visit"],[287,15,331,22,"recorder"],[287,23,331,44],[287,25,331,46,"root"],[287,29,331,58],[287,34,331,63],[288,4,332,2,"root"],[288,8,332,6],[288,9,332,7,"forEach"],[288,16,332,14],[288,17,332,16,"node"],[288,21,332,20],[288,25,332,25],[289,6,333,4,"visitNode"],[289,15,333,13],[289,16,333,14,"recorder"],[289,24,333,22],[289,26,333,24,"node"],[289,30,333,28],[289,31,333,29],[290,4,334,2],[290,5,334,3],[290,6,334,4],[291,2,335,0],[291,3,335,1],[292,2,335,2,"exports"],[292,9,335,2],[292,10,335,2,"visit"],[292,15,335,2],[292,18,335,2,"visit"],[292,23,335,2],[293,0,335,2],[293,3]],"functionMap":{"names":["<global>","processPaint","processCTM","pushColorFilters","colorFilters.forEach$argument_0","pushPathEffects","pathEffects.forEach$argument_0","pushImageFilters","imageFilters.forEach$argument_0","pushShaders","shaders.forEach$argument_0","pushMaskFilters","pushPaints","paints.forEach$argument_0","visitNode","node.children.filter$argument_0","node.children.filter.map$argument_0","drawings.forEach$argument_0","visit","root.forEach$argument_0"],"mappings":"AAA;4BCW;CDiE;mBEE;CFsC;yBGE;uBCI;GDW;CHC;wBKE;sBCC;GDW;CLC;yBOE;uBCI;GDe;CPC;oBSE;kBCC;GDK;CTC;wBWE;CXI;mBYE;iBCC;GDU;CZC;kBcE;gBCgD,oCD;aEE,uDF;mBGgE;GHE;CdU;qBkBE;eCC;GDE;ClBC"}},"type":"js/module"}]}