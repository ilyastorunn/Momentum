{"dependencies":[{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":57,"index":738}}],"key":"bFF9i9v9PHzg4reSkp9Ix2vEb4A=","exportNames":["*"]}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":739},"end":{"line":11,"column":58,"index":797}}],"key":"9r31ILQlZN/EOl6yvuI3h2t2+dQ=","exportNames":["*"]}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":798},"end":{"line":12,"column":56,"index":854}}],"key":"kdH69C/RlxmAE/977A+Mvf+TYX0=","exportNames":["*"]}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":855},"end":{"line":13,"column":78,"index":933}}],"key":"a4VMVj+nnYNe9AEBUb88ORxNJj8=","exportNames":["*"]}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":934},"end":{"line":14,"column":126,"index":1060}}],"key":"heoF0ph3MRKcRke4Rxium863E4Y=","exportNames":["*"]}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":1061},"end":{"line":15,"column":44,"index":1105}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":1106},"end":{"line":16,"column":74,"index":1180}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"]}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1181},"end":{"line":17,"column":62,"index":1243}}],"key":"NO3M1VFczHHXVBxRcQ04Co3jeTA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _functionsJs = require(_dependencyMap[0], \"@supabase/functions-js\");\n  var _postgrestJs = require(_dependencyMap[1], \"@supabase/postgrest-js\");\n  var _realtimeJs = require(_dependencyMap[2], \"@supabase/realtime-js\");\n  var _storageJs = require(_dependencyMap[3], \"@supabase/storage-js\");\n  var _constants = require(_dependencyMap[4], \"./lib/constants\");\n  var _fetch = require(_dependencyMap[5], \"./lib/fetch\");\n  var _helpers = require(_dependencyMap[6], \"./lib/helpers\");\n  var _SupabaseAuthClient = require(_dependencyMap[7], \"./lib/SupabaseAuthClient\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      if (!supabaseUrl) throw new Error('supabaseUrl is required.');\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      const _supabaseUrl = (0, _helpers.ensureTrailingSlash)(supabaseUrl);\n      const baseUrl = new URL(_supabaseUrl);\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      const DEFAULTS = {\n        db: _constants.DEFAULT_DB_OPTIONS,\n        realtime: _constants.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, _constants.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: _constants.DEFAULT_GLOBAL_OPTIONS\n      };\n      const settings = (0, _helpers.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, _fetch.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new _postgrestJs.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new _storageJs.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n      return new _functionsJs.FunctionsClient(this.functionsUrl.href, {\n        headers: this.headers,\n        customFetch: this.fetch\n      });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n      return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n      return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n      return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = {\n      config: {}\n    }) {\n      return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n      return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n      return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n      return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n      var _a, _b;\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.accessToken) {\n          return yield this.accessToken();\n        }\n        const {\n          data\n        } = yield this.auth.getSession();\n        return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n      });\n    }\n    _initSupabaseAuthClient({\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      storageKey,\n      flowType,\n      lock,\n      debug\n    }, headers, fetch) {\n      const authHeaders = {\n        Authorization: `Bearer ${this.supabaseKey}`,\n        apikey: `${this.supabaseKey}`\n      };\n      return new _SupabaseAuthClient.SupabaseAuthClient({\n        url: this.authUrl.href,\n        headers: Object.assign(Object.assign({}, authHeaders), headers),\n        storageKey: storageKey,\n        autoRefreshToken,\n        persistSession,\n        detectSessionInUrl,\n        storage,\n        flowType,\n        lock,\n        debug,\n        fetch,\n        // auth checks if there is a custom authorizaiton header using this flag\n        // so it knows whether to return an error when getUser is called with no session\n        hasCustomAuthorizationHeader: 'Authorization' in this.headers\n      });\n    }\n    _initRealtimeClient(options) {\n      return new _realtimeJs.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n        params: Object.assign({\n          apikey: this.supabaseKey\n        }, options === null || options === void 0 ? void 0 : options.params)\n      }));\n    }\n    _listenForAuthEvents() {\n      let data = this.auth.onAuthStateChange((event, session) => {\n        this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n      });\n      return data;\n    }\n    _handleTokenChanged(event, source, token) {\n      if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n        this.changedAccessToken = token;\n      } else if (event === 'SIGNED_OUT') {\n        this.realtime.setAuth();\n        if (source == 'STORAGE') this.auth.signOut();\n        this.changedAccessToken = undefined;\n      }\n    }\n  }\n  exports.default = SupabaseClient;\n});","lineCount":266,"map":[[6,2,10,0],[6,6,10,0,"_functionsJs"],[6,18,10,0],[6,21,10,0,"require"],[6,28,10,0],[6,29,10,0,"_dependencyMap"],[6,43,10,0],[7,2,11,0],[7,6,11,0,"_postgrestJs"],[7,18,11,0],[7,21,11,0,"require"],[7,28,11,0],[7,29,11,0,"_dependencyMap"],[7,43,11,0],[8,2,12,0],[8,6,12,0,"_realtimeJs"],[8,17,12,0],[8,20,12,0,"require"],[8,27,12,0],[8,28,12,0,"_dependencyMap"],[8,42,12,0],[9,2,13,0],[9,6,13,0,"_storageJs"],[9,16,13,0],[9,19,13,0,"require"],[9,26,13,0],[9,27,13,0,"_dependencyMap"],[9,41,13,0],[10,2,14,0],[10,6,14,0,"_constants"],[10,16,14,0],[10,19,14,0,"require"],[10,26,14,0],[10,27,14,0,"_dependencyMap"],[10,41,14,0],[11,2,15,0],[11,6,15,0,"_fetch"],[11,12,15,0],[11,15,15,0,"require"],[11,22,15,0],[11,23,15,0,"_dependencyMap"],[11,37,15,0],[12,2,16,0],[12,6,16,0,"_helpers"],[12,14,16,0],[12,17,16,0,"require"],[12,24,16,0],[12,25,16,0,"_dependencyMap"],[12,39,16,0],[13,2,17,0],[13,6,17,0,"_SupabaseAuthClient"],[13,25,17,0],[13,28,17,0,"require"],[13,35,17,0],[13,36,17,0,"_dependencyMap"],[13,50,17,0],[14,2,1,0],[14,6,1,4,"__awaiter"],[14,15,1,13],[14,18,1,17],[14,22,1,21],[14,26,1,25],[14,30,1,29],[14,31,1,30,"__awaiter"],[14,40,1,39],[14,44,1,44],[14,54,1,54,"thisArg"],[14,61,1,61],[14,63,1,63,"_arguments"],[14,73,1,73],[14,75,1,75,"P"],[14,76,1,76],[14,78,1,78,"generator"],[14,87,1,87],[14,89,1,89],[15,4,2,4],[15,13,2,13,"adopt"],[15,18,2,18,"adopt"],[15,19,2,19,"value"],[15,24,2,24],[15,26,2,26],[16,6,2,28],[16,13,2,35,"value"],[16,18,2,40],[16,30,2,52,"P"],[16,31,2,53],[16,34,2,56,"value"],[16,39,2,61],[16,42,2,64],[16,46,2,68,"P"],[16,47,2,69],[16,48,2,70],[16,58,2,80,"resolve"],[16,65,2,87],[16,67,2,89],[17,8,2,91,"resolve"],[17,15,2,98],[17,16,2,99,"value"],[17,21,2,104],[17,22,2,105],[18,6,2,107],[18,7,2,108],[18,8,2,109],[19,4,2,111],[20,4,3,4],[20,11,3,11],[20,16,3,16,"P"],[20,17,3,17],[20,22,3,22,"P"],[20,23,3,23],[20,26,3,26,"Promise"],[20,33,3,33],[20,34,3,34],[20,36,3,36],[20,46,3,46,"resolve"],[20,53,3,53],[20,55,3,55,"reject"],[20,61,3,61],[20,63,3,63],[21,6,4,8],[21,15,4,17,"fulfilled"],[21,24,4,26,"fulfilled"],[21,25,4,27,"value"],[21,30,4,32],[21,32,4,34],[22,8,4,36],[22,12,4,40],[23,10,4,42,"step"],[23,14,4,46],[23,15,4,47,"generator"],[23,24,4,56],[23,25,4,57,"next"],[23,29,4,61],[23,30,4,62,"value"],[23,35,4,67],[23,36,4,68],[23,37,4,69],[24,8,4,71],[24,9,4,72],[24,10,4,73],[24,17,4,80,"e"],[24,18,4,81],[24,20,4,83],[25,10,4,85,"reject"],[25,16,4,91],[25,17,4,92,"e"],[25,18,4,93],[25,19,4,94],[26,8,4,96],[27,6,4,98],[28,6,5,8],[28,15,5,17,"rejected"],[28,23,5,25,"rejected"],[28,24,5,26,"value"],[28,29,5,31],[28,31,5,33],[29,8,5,35],[29,12,5,39],[30,10,5,41,"step"],[30,14,5,45],[30,15,5,46,"generator"],[30,24,5,55],[30,25,5,56],[30,32,5,63],[30,33,5,64],[30,34,5,65,"value"],[30,39,5,70],[30,40,5,71],[30,41,5,72],[31,8,5,74],[31,9,5,75],[31,10,5,76],[31,17,5,83,"e"],[31,18,5,84],[31,20,5,86],[32,10,5,88,"reject"],[32,16,5,94],[32,17,5,95,"e"],[32,18,5,96],[32,19,5,97],[33,8,5,99],[34,6,5,101],[35,6,6,8],[35,15,6,17,"step"],[35,19,6,21,"step"],[35,20,6,22,"result"],[35,26,6,28],[35,28,6,30],[36,8,6,32,"result"],[36,14,6,38],[36,15,6,39,"done"],[36,19,6,43],[36,22,6,46,"resolve"],[36,29,6,53],[36,30,6,54,"result"],[36,36,6,60],[36,37,6,61,"value"],[36,42,6,66],[36,43,6,67],[36,46,6,70,"adopt"],[36,51,6,75],[36,52,6,76,"result"],[36,58,6,82],[36,59,6,83,"value"],[36,64,6,88],[36,65,6,89],[36,66,6,90,"then"],[36,70,6,94],[36,71,6,95,"fulfilled"],[36,80,6,104],[36,82,6,106,"rejected"],[36,90,6,114],[36,91,6,115],[37,6,6,117],[38,6,7,8,"step"],[38,10,7,12],[38,11,7,13],[38,12,7,14,"generator"],[38,21,7,23],[38,24,7,26,"generator"],[38,33,7,35],[38,34,7,36,"apply"],[38,39,7,41],[38,40,7,42,"thisArg"],[38,47,7,49],[38,49,7,51,"_arguments"],[38,59,7,61],[38,63,7,65],[38,65,7,67],[38,66,7,68],[38,68,7,70,"next"],[38,72,7,74],[38,73,7,75],[38,74,7,76],[38,75,7,77],[39,4,8,4],[39,5,8,5],[39,6,8,6],[40,2,9,0],[40,3,9,1],[41,2,18,0],[42,0,19,0],[43,0,20,0],[44,0,21,0],[45,0,22,0],[46,2,23,15],[46,8,23,21,"SupabaseClient"],[46,22,23,35],[46,23,23,36],[47,4,24,4],[48,0,25,0],[49,0,26,0],[50,0,27,0],[51,0,28,0],[52,0,29,0],[53,0,30,0],[54,0,31,0],[55,0,32,0],[56,0,33,0],[57,0,34,0],[58,0,35,0],[59,0,36,0],[60,4,37,4,"constructor"],[60,15,37,15,"constructor"],[60,16,37,16,"supabaseUrl"],[60,27,37,27],[60,29,37,29,"supabaseKey"],[60,40,37,40],[60,42,37,42,"options"],[60,49,37,49],[60,51,37,51],[61,6,38,8],[61,10,38,12,"_a"],[61,12,38,14],[61,14,38,16,"_b"],[61,16,38,18],[61,18,38,20,"_c"],[61,20,38,22],[62,6,39,8],[62,10,39,12],[62,11,39,13,"supabaseUrl"],[62,22,39,24],[62,25,39,27,"supabaseUrl"],[62,36,39,38],[63,6,40,8],[63,10,40,12],[63,11,40,13,"supabaseKey"],[63,22,40,24],[63,25,40,27,"supabaseKey"],[63,36,40,38],[64,6,41,8],[64,10,41,12],[64,11,41,13,"supabaseUrl"],[64,22,41,24],[64,24,42,12],[64,30,42,18],[64,34,42,22,"Error"],[64,39,42,27],[64,40,42,28],[64,66,42,54],[64,67,42,55],[65,6,43,8],[65,10,43,12],[65,11,43,13,"supabaseKey"],[65,22,43,24],[65,24,44,12],[65,30,44,18],[65,34,44,22,"Error"],[65,39,44,27],[65,40,44,28],[65,66,44,54],[65,67,44,55],[66,6,45,8],[66,12,45,14,"_supabaseUrl"],[66,24,45,26],[66,27,45,29],[66,31,45,29,"ensureTrailingSlash"],[66,59,45,48],[66,61,45,49,"supabaseUrl"],[66,72,45,60],[66,73,45,61],[67,6,46,8],[67,12,46,14,"baseUrl"],[67,19,46,21],[67,22,46,24],[67,26,46,28,"URL"],[67,29,46,31],[67,30,46,32,"_supabaseUrl"],[67,42,46,44],[67,43,46,45],[68,6,47,8],[68,10,47,12],[68,11,47,13,"realtimeUrl"],[68,22,47,24],[68,25,47,27],[68,29,47,31,"URL"],[68,32,47,34],[68,33,47,35],[68,46,47,48],[68,48,47,50,"baseUrl"],[68,55,47,57],[68,56,47,58],[69,6,48,8],[69,10,48,12],[69,11,48,13,"realtimeUrl"],[69,22,48,24],[69,23,48,25,"protocol"],[69,31,48,33],[69,34,48,36],[69,38,48,40],[69,39,48,41,"realtimeUrl"],[69,50,48,52],[69,51,48,53,"protocol"],[69,59,48,61],[69,60,48,62,"replace"],[69,67,48,69],[69,68,48,70],[69,74,48,76],[69,76,48,78],[69,80,48,82],[69,81,48,83],[70,6,49,8],[70,10,49,12],[70,11,49,13,"authUrl"],[70,18,49,20],[70,21,49,23],[70,25,49,27,"URL"],[70,28,49,30],[70,29,49,31],[70,38,49,40],[70,40,49,42,"baseUrl"],[70,47,49,49],[70,48,49,50],[71,6,50,8],[71,10,50,12],[71,11,50,13,"storageUrl"],[71,21,50,23],[71,24,50,26],[71,28,50,30,"URL"],[71,31,50,33],[71,32,50,34],[71,44,50,46],[71,46,50,48,"baseUrl"],[71,53,50,55],[71,54,50,56],[72,6,51,8],[72,10,51,12],[72,11,51,13,"functionsUrl"],[72,23,51,25],[72,26,51,28],[72,30,51,32,"URL"],[72,33,51,35],[72,34,51,36],[72,48,51,50],[72,50,51,52,"baseUrl"],[72,57,51,59],[72,58,51,60],[73,6,52,8],[74,6,53,8],[74,12,53,14,"defaultStorageKey"],[74,29,53,31],[74,32,53,34],[74,38,53,40,"baseUrl"],[74,45,53,47],[74,46,53,48,"hostname"],[74,54,53,56],[74,55,53,57,"split"],[74,60,53,62],[74,61,53,63],[74,64,53,66],[74,65,53,67],[74,66,53,68],[74,67,53,69],[74,68,53,70],[74,81,53,83],[75,6,54,8],[75,12,54,14,"DEFAULTS"],[75,20,54,22],[75,23,54,25],[76,8,55,12,"db"],[76,10,55,14],[76,12,55,16,"DEFAULT_DB_OPTIONS"],[76,41,55,34],[77,8,56,12,"realtime"],[77,16,56,20],[77,18,56,22,"DEFAULT_REALTIME_OPTIONS"],[77,53,56,46],[78,8,57,12,"auth"],[78,12,57,16],[78,14,57,18,"Object"],[78,20,57,24],[78,21,57,25,"assign"],[78,27,57,31],[78,28,57,32,"Object"],[78,34,57,38],[78,35,57,39,"assign"],[78,41,57,45],[78,42,57,46],[78,43,57,47],[78,44,57,48],[78,46,57,50,"DEFAULT_AUTH_OPTIONS"],[78,77,57,70],[78,78,57,71],[78,80,57,73],[79,10,57,75,"storageKey"],[79,20,57,85],[79,22,57,87,"defaultStorageKey"],[80,8,57,105],[80,9,57,106],[80,10,57,107],[81,8,58,12,"global"],[81,14,58,18],[81,16,58,20,"DEFAULT_GLOBAL_OPTIONS"],[82,6,59,8],[82,7,59,9],[83,6,60,8],[83,12,60,14,"settings"],[83,20,60,22],[83,23,60,25],[83,27,60,25,"applySettingDefaults"],[83,56,60,45],[83,58,60,46,"options"],[83,65,60,53],[83,70,60,58],[83,74,60,62],[83,78,60,66,"options"],[83,85,60,73],[83,90,60,78],[83,95,60,83],[83,96,60,84],[83,99,60,87,"options"],[83,106,60,94],[83,109,60,97],[83,110,60,98],[83,111,60,99],[83,113,60,101,"DEFAULTS"],[83,121,60,109],[83,122,60,110],[84,6,61,8],[84,10,61,12],[84,11,61,13,"storageKey"],[84,21,61,23],[84,24,61,26],[84,25,61,27,"_a"],[84,27,61,29],[84,30,61,32,"settings"],[84,38,61,40],[84,39,61,41,"auth"],[84,43,61,45],[84,44,61,46,"storageKey"],[84,54,61,56],[84,60,61,62],[84,64,61,66],[84,68,61,70,"_a"],[84,70,61,72],[84,75,61,77],[84,80,61,82],[84,81,61,83],[84,84,61,86,"_a"],[84,86,61,88],[84,89,61,91],[84,91,61,93],[85,6,62,8],[85,10,62,12],[85,11,62,13,"headers"],[85,18,62,20],[85,21,62,23],[85,22,62,24,"_b"],[85,24,62,26],[85,27,62,29,"settings"],[85,35,62,37],[85,36,62,38,"global"],[85,42,62,44],[85,43,62,45,"headers"],[85,50,62,52],[85,56,62,58],[85,60,62,62],[85,64,62,66,"_b"],[85,66,62,68],[85,71,62,73],[85,76,62,78],[85,77,62,79],[85,80,62,82,"_b"],[85,82,62,84],[85,85,62,87],[85,86,62,88],[85,87,62,89],[86,6,63,8],[86,10,63,12],[86,11,63,13,"settings"],[86,19,63,21],[86,20,63,22,"accessToken"],[86,31,63,33],[86,33,63,35],[87,8,64,12],[87,12,64,16],[87,13,64,17,"auth"],[87,17,64,21],[87,20,64,24],[87,24,64,28],[87,25,64,29,"_initSupabaseAuthClient"],[87,48,64,52],[87,49,64,53],[87,50,64,54,"_c"],[87,52,64,56],[87,55,64,59,"settings"],[87,63,64,67],[87,64,64,68,"auth"],[87,68,64,72],[87,74,64,78],[87,78,64,82],[87,82,64,86,"_c"],[87,84,64,88],[87,89,64,93],[87,94,64,98],[87,95,64,99],[87,98,64,102,"_c"],[87,100,64,104],[87,103,64,107],[87,104,64,108],[87,105,64,109],[87,107,64,111],[87,111,64,115],[87,112,64,116,"headers"],[87,119,64,123],[87,121,64,125,"settings"],[87,129,64,133],[87,130,64,134,"global"],[87,136,64,140],[87,137,64,141,"fetch"],[87,142,64,146],[87,143,64,147],[88,6,65,8],[88,7,65,9],[88,13,66,13],[89,8,67,12],[89,12,67,16],[89,13,67,17,"accessToken"],[89,24,67,28],[89,27,67,31,"settings"],[89,35,67,39],[89,36,67,40,"accessToken"],[89,47,67,51],[90,8,68,12],[90,12,68,16],[90,13,68,17,"auth"],[90,17,68,21],[90,20,68,24],[90,24,68,28,"Proxy"],[90,29,68,33],[90,30,68,34],[90,31,68,35],[90,32,68,36],[90,34,68,38],[91,10,69,16,"get"],[91,13,69,19],[91,15,69,21,"get"],[91,16,69,22,"_"],[91,17,69,23],[91,19,69,25,"prop"],[91,23,69,29],[91,28,69,34],[92,12,70,20],[92,18,70,26],[92,22,70,30,"Error"],[92,27,70,35],[92,28,70,36],[92,137,70,145,"String"],[92,143,70,151],[92,144,70,152,"prop"],[92,148,70,156],[92,149,70,157],[92,167,70,175],[92,168,70,176],[93,10,71,16],[94,8,72,12],[94,9,72,13],[94,10,72,14],[95,6,73,8],[96,6,74,8],[96,10,74,12],[96,11,74,13,"fetch"],[96,16,74,18],[96,19,74,21],[96,23,74,21,"fetchWithAuth"],[96,43,74,34],[96,45,74,35,"supabaseKey"],[96,56,74,46],[96,58,74,48],[96,62,74,52],[96,63,74,53,"_getAccessToken"],[96,78,74,68],[96,79,74,69,"bind"],[96,83,74,73],[96,84,74,74],[96,88,74,78],[96,89,74,79],[96,91,74,81,"settings"],[96,99,74,89],[96,100,74,90,"global"],[96,106,74,96],[96,107,74,97,"fetch"],[96,112,74,102],[96,113,74,103],[97,6,75,8],[97,10,75,12],[97,11,75,13,"realtime"],[97,19,75,21],[97,22,75,24],[97,26,75,28],[97,27,75,29,"_initRealtimeClient"],[97,46,75,48],[97,47,75,49,"Object"],[97,53,75,55],[97,54,75,56,"assign"],[97,60,75,62],[97,61,75,63],[98,8,75,65,"headers"],[98,15,75,72],[98,17,75,74],[98,21,75,78],[98,22,75,79,"headers"],[98,29,75,86],[99,8,75,88,"accessToken"],[99,19,75,99],[99,21,75,101],[99,25,75,105],[99,26,75,106,"_getAccessToken"],[99,41,75,121],[99,42,75,122,"bind"],[99,46,75,126],[99,47,75,127],[99,51,75,131],[100,6,75,133],[100,7,75,134],[100,9,75,136,"settings"],[100,17,75,144],[100,18,75,145,"realtime"],[100,26,75,153],[100,27,75,154],[100,28,75,155],[101,6,76,8],[101,10,76,12],[101,11,76,13,"rest"],[101,15,76,17],[101,18,76,20],[101,22,76,24,"PostgrestClient"],[101,50,76,39],[101,51,76,40],[101,55,76,44,"URL"],[101,58,76,47],[101,59,76,48],[101,68,76,57],[101,70,76,59,"baseUrl"],[101,77,76,66],[101,78,76,67],[101,79,76,68,"href"],[101,83,76,72],[101,85,76,74],[102,8,77,12,"headers"],[102,15,77,19],[102,17,77,21],[102,21,77,25],[102,22,77,26,"headers"],[102,29,77,33],[103,8,78,12,"schema"],[103,14,78,18],[103,16,78,20,"settings"],[103,24,78,28],[103,25,78,29,"db"],[103,27,78,31],[103,28,78,32,"schema"],[103,34,78,38],[104,8,79,12,"fetch"],[104,13,79,17],[104,15,79,19],[104,19,79,23],[104,20,79,24,"fetch"],[105,6,80,8],[105,7,80,9],[105,8,80,10],[106,6,81,8],[106,10,81,12],[106,11,81,13,"storage"],[106,18,81,20],[106,21,81,23],[106,25,81,27,"SupabaseStorageClient"],[106,49,81,48],[106,50,81,49],[106,54,81,53],[106,55,81,54,"storageUrl"],[106,65,81,64],[106,66,81,65,"href"],[106,70,81,69],[106,72,81,71],[106,76,81,75],[106,77,81,76,"headers"],[106,84,81,83],[106,86,81,85],[106,90,81,89],[106,91,81,90,"fetch"],[106,96,81,95],[106,98,81,97,"options"],[106,105,81,104],[106,110,81,109],[106,114,81,113],[106,118,81,117,"options"],[106,125,81,124],[106,130,81,129],[106,135,81,134],[106,136,81,135],[106,139,81,138],[106,144,81,143],[106,145,81,144],[106,148,81,147,"options"],[106,155,81,154],[106,156,81,155,"storage"],[106,163,81,162],[106,164,81,163],[107,6,82,8],[107,10,82,12],[107,11,82,13,"settings"],[107,19,82,21],[107,20,82,22,"accessToken"],[107,31,82,33],[107,33,82,35],[108,8,83,12],[108,12,83,16],[108,13,83,17,"_listenForAuthEvents"],[108,33,83,37],[108,34,83,38],[108,35,83,39],[109,6,84,8],[110,4,85,4],[111,4,86,4],[112,0,87,0],[113,0,88,0],[114,4,89,4],[114,8,89,8,"functions"],[114,17,89,17,"functions"],[114,18,89,17],[114,20,89,20],[115,6,90,8],[115,13,90,15],[115,17,90,19,"FunctionsClient"],[115,45,90,34],[115,46,90,35],[115,50,90,39],[115,51,90,40,"functionsUrl"],[115,63,90,52],[115,64,90,53,"href"],[115,68,90,57],[115,70,90,59],[116,8,91,12,"headers"],[116,15,91,19],[116,17,91,21],[116,21,91,25],[116,22,91,26,"headers"],[116,29,91,33],[117,8,92,12,"customFetch"],[117,19,92,23],[117,21,92,25],[117,25,92,29],[117,26,92,30,"fetch"],[118,6,93,8],[118,7,93,9],[118,8,93,10],[119,4,94,4],[120,4,95,4],[121,0,96,0],[122,0,97,0],[123,0,98,0],[124,0,99,0],[125,4,100,4,"from"],[125,8,100,8,"from"],[125,9,100,9,"relation"],[125,17,100,17],[125,19,100,19],[126,6,101,8],[126,13,101,15],[126,17,101,19],[126,18,101,20,"rest"],[126,22,101,24],[126,23,101,25,"from"],[126,27,101,29],[126,28,101,30,"relation"],[126,36,101,38],[126,37,101,39],[127,4,102,4],[128,4,103,4],[129,4,104,4],[130,0,105,0],[131,0,106,0],[132,0,107,0],[133,0,108,0],[134,0,109,0],[135,0,110,0],[136,4,111,4,"schema"],[136,10,111,10,"schema"],[136,11,111,11,"schema"],[136,17,111,17],[136,19,111,19],[137,6,112,8],[137,13,112,15],[137,17,112,19],[137,18,112,20,"rest"],[137,22,112,24],[137,23,112,25,"schema"],[137,29,112,31],[137,30,112,32,"schema"],[137,36,112,38],[137,37,112,39],[138,4,113,4],[139,4,114,4],[140,4,115,4],[141,0,116,0],[142,0,117,0],[143,0,118,0],[144,0,119,0],[145,0,120,0],[146,0,121,0],[147,0,122,0],[148,0,123,0],[149,0,124,0],[150,0,125,0],[151,0,126,0],[152,0,127,0],[153,0,128,0],[154,0,129,0],[155,0,130,0],[156,0,131,0],[157,0,132,0],[158,0,133,0],[159,0,134,0],[160,0,135,0],[161,0,136,0],[162,0,137,0],[163,4,138,4,"rpc"],[163,7,138,7,"rpc"],[163,8,138,8,"fn"],[163,10,138,10],[163,12,138,12,"args"],[163,16,138,16],[163,19,138,19],[163,20,138,20],[163,21,138,21],[163,23,138,23,"options"],[163,30,138,30],[163,33,138,33],[163,34,138,34],[163,35,138,35],[163,37,138,37],[164,6,139,8],[164,13,139,15],[164,17,139,19],[164,18,139,20,"rest"],[164,22,139,24],[164,23,139,25,"rpc"],[164,26,139,28],[164,27,139,29,"fn"],[164,29,139,31],[164,31,139,33,"args"],[164,35,139,37],[164,37,139,39,"options"],[164,44,139,46],[164,45,139,47],[165,4,140,4],[166,4,141,4],[167,0,142,0],[168,0,143,0],[169,0,144,0],[170,0,145,0],[171,0,146,0],[172,0,147,0],[173,4,148,4,"channel"],[173,11,148,11,"channel"],[173,12,148,12,"name"],[173,16,148,16],[173,18,148,18,"opts"],[173,22,148,22],[173,25,148,25],[174,6,148,27,"config"],[174,12,148,33],[174,14,148,35],[174,15,148,36],[175,4,148,38],[175,5,148,39],[175,7,148,41],[176,6,149,8],[176,13,149,15],[176,17,149,19],[176,18,149,20,"realtime"],[176,26,149,28],[176,27,149,29,"channel"],[176,34,149,36],[176,35,149,37,"name"],[176,39,149,41],[176,41,149,43,"opts"],[176,45,149,47],[176,46,149,48],[177,4,150,4],[178,4,151,4],[179,0,152,0],[180,0,153,0],[181,4,154,4,"getChannels"],[181,15,154,15,"getChannels"],[181,16,154,15],[181,18,154,18],[182,6,155,8],[182,13,155,15],[182,17,155,19],[182,18,155,20,"realtime"],[182,26,155,28],[182,27,155,29,"getChannels"],[182,38,155,40],[182,39,155,41],[182,40,155,42],[183,4,156,4],[184,4,157,4],[185,0,158,0],[186,0,159,0],[187,0,160,0],[188,0,161,0],[189,0,162,0],[190,4,163,4,"removeChannel"],[190,17,163,17,"removeChannel"],[190,18,163,18,"channel"],[190,25,163,25],[190,27,163,27],[191,6,164,8],[191,13,164,15],[191,17,164,19],[191,18,164,20,"realtime"],[191,26,164,28],[191,27,164,29,"removeChannel"],[191,40,164,42],[191,41,164,43,"channel"],[191,48,164,50],[191,49,164,51],[192,4,165,4],[193,4,166,4],[194,0,167,0],[195,0,168,0],[196,4,169,4,"removeAllChannels"],[196,21,169,21,"removeAllChannels"],[196,22,169,21],[196,24,169,24],[197,6,170,8],[197,13,170,15],[197,17,170,19],[197,18,170,20,"realtime"],[197,26,170,28],[197,27,170,29,"removeAllChannels"],[197,44,170,46],[197,45,170,47],[197,46,170,48],[198,4,171,4],[199,4,172,4,"_getAccessToken"],[199,19,172,19,"_getAccessToken"],[199,20,172,19],[199,22,172,22],[200,6,173,8],[200,10,173,12,"_a"],[200,12,173,14],[200,14,173,16,"_b"],[200,16,173,18],[201,6,174,8],[201,13,174,15,"__awaiter"],[201,22,174,24],[201,23,174,25],[201,27,174,29],[201,29,174,31],[201,34,174,36],[201,35,174,37],[201,37,174,39],[201,42,174,44],[201,43,174,45],[201,45,174,47],[201,58,174,60],[202,8,175,12],[202,12,175,16],[202,16,175,20],[202,17,175,21,"accessToken"],[202,28,175,32],[202,30,175,34],[203,10,176,16],[203,17,176,23],[203,23,176,29],[203,27,176,33],[203,28,176,34,"accessToken"],[203,39,176,45],[203,40,176,46],[203,41,176,47],[204,8,177,12],[205,8,178,12],[205,14,178,18],[206,10,178,20,"data"],[207,8,178,25],[207,9,178,26],[207,12,178,29],[207,18,178,35],[207,22,178,39],[207,23,178,40,"auth"],[207,27,178,44],[207,28,178,45,"getSession"],[207,38,178,55],[207,39,178,56],[207,40,178,57],[208,8,179,12],[208,15,179,19],[208,16,179,20,"_b"],[208,18,179,22],[208,21,179,25],[208,22,179,26,"_a"],[208,24,179,28],[208,27,179,31,"data"],[208,31,179,35],[208,32,179,36,"session"],[208,39,179,43],[208,45,179,49],[208,49,179,53],[208,53,179,57,"_a"],[208,55,179,59],[208,60,179,64],[208,65,179,69],[208,66,179,70],[208,69,179,73],[208,74,179,78],[208,75,179,79],[208,78,179,82,"_a"],[208,80,179,84],[208,81,179,85,"access_token"],[208,93,179,97],[208,99,179,103],[208,103,179,107],[208,107,179,111,"_b"],[208,109,179,113],[208,114,179,118],[208,119,179,123],[208,120,179,124],[208,123,179,127,"_b"],[208,125,179,129],[208,128,179,132],[208,132,179,136],[208,133,179,137,"supabaseKey"],[208,144,179,148],[209,6,180,8],[209,7,180,9],[209,8,180,10],[210,4,181,4],[211,4,182,4,"_initSupabaseAuthClient"],[211,27,182,27,"_initSupabaseAuthClient"],[211,28,182,28],[212,6,182,30,"autoRefreshToken"],[212,22,182,46],[213,6,182,48,"persistSession"],[213,20,182,62],[214,6,182,64,"detectSessionInUrl"],[214,24,182,82],[215,6,182,84,"storage"],[215,13,182,91],[216,6,182,93,"storageKey"],[216,16,182,103],[217,6,182,105,"flowType"],[217,14,182,113],[218,6,182,115,"lock"],[218,10,182,119],[219,6,182,121,"debug"],[220,4,182,128],[220,5,182,129],[220,7,182,131,"headers"],[220,14,182,138],[220,16,182,140,"fetch"],[220,21,182,145],[220,23,182,147],[221,6,183,8],[221,12,183,14,"authHeaders"],[221,23,183,25],[221,26,183,28],[222,8,184,12,"Authorization"],[222,21,184,25],[222,23,184,27],[222,33,184,37],[222,37,184,41],[222,38,184,42,"supabaseKey"],[222,49,184,53],[222,51,184,55],[223,8,185,12,"apikey"],[223,14,185,18],[223,16,185,20],[223,19,185,23],[223,23,185,27],[223,24,185,28,"supabaseKey"],[223,35,185,39],[224,6,186,8],[224,7,186,9],[225,6,187,8],[225,13,187,15],[225,17,187,19,"SupabaseAuthClient"],[225,55,187,37],[225,56,187,38],[226,8,188,12,"url"],[226,11,188,15],[226,13,188,17],[226,17,188,21],[226,18,188,22,"authUrl"],[226,25,188,29],[226,26,188,30,"href"],[226,30,188,34],[227,8,189,12,"headers"],[227,15,189,19],[227,17,189,21,"Object"],[227,23,189,27],[227,24,189,28,"assign"],[227,30,189,34],[227,31,189,35,"Object"],[227,37,189,41],[227,38,189,42,"assign"],[227,44,189,48],[227,45,189,49],[227,46,189,50],[227,47,189,51],[227,49,189,53,"authHeaders"],[227,60,189,64],[227,61,189,65],[227,63,189,67,"headers"],[227,70,189,74],[227,71,189,75],[228,8,190,12,"storageKey"],[228,18,190,22],[228,20,190,24,"storageKey"],[228,30,190,34],[229,8,191,12,"autoRefreshToken"],[229,24,191,28],[230,8,192,12,"persistSession"],[230,22,192,26],[231,8,193,12,"detectSessionInUrl"],[231,26,193,30],[232,8,194,12,"storage"],[232,15,194,19],[233,8,195,12,"flowType"],[233,16,195,20],[234,8,196,12,"lock"],[234,12,196,16],[235,8,197,12,"debug"],[235,13,197,17],[236,8,198,12,"fetch"],[236,13,198,17],[237,8,199,12],[238,8,200,12],[239,8,201,12,"hasCustomAuthorizationHeader"],[239,36,201,40],[239,38,201,42],[239,53,201,57],[239,57,201,61],[239,61,201,65],[239,62,201,66,"headers"],[240,6,202,8],[240,7,202,9],[240,8,202,10],[241,4,203,4],[242,4,204,4,"_initRealtimeClient"],[242,23,204,23,"_initRealtimeClient"],[242,24,204,24,"options"],[242,31,204,31],[242,33,204,33],[243,6,205,8],[243,13,205,15],[243,17,205,19,"RealtimeClient"],[243,43,205,33],[243,44,205,34],[243,48,205,38],[243,49,205,39,"realtimeUrl"],[243,60,205,50],[243,61,205,51,"href"],[243,65,205,55],[243,67,205,57,"Object"],[243,73,205,63],[243,74,205,64,"assign"],[243,80,205,70],[243,81,205,71,"Object"],[243,87,205,77],[243,88,205,78,"assign"],[243,94,205,84],[243,95,205,85],[243,96,205,86],[243,97,205,87],[243,99,205,89,"options"],[243,106,205,96],[243,107,205,97],[243,109,205,99],[244,8,205,101,"params"],[244,14,205,107],[244,16,205,109,"Object"],[244,22,205,115],[244,23,205,116,"assign"],[244,29,205,122],[244,30,205,123],[245,10,205,125,"apikey"],[245,16,205,131],[245,18,205,133],[245,22,205,137],[245,23,205,138,"supabaseKey"],[246,8,205,150],[246,9,205,151],[246,11,205,153,"options"],[246,18,205,160],[246,23,205,165],[246,27,205,169],[246,31,205,173,"options"],[246,38,205,180],[246,43,205,185],[246,48,205,190],[246,49,205,191],[246,52,205,194],[246,57,205,199],[246,58,205,200],[246,61,205,203,"options"],[246,68,205,210],[246,69,205,211,"params"],[246,75,205,217],[247,6,205,219],[247,7,205,220],[247,8,205,221],[247,9,205,222],[248,4,206,4],[249,4,207,4,"_listenForAuthEvents"],[249,24,207,24,"_listenForAuthEvents"],[249,25,207,24],[249,27,207,27],[250,6,208,8],[250,10,208,12,"data"],[250,14,208,16],[250,17,208,19],[250,21,208,23],[250,22,208,24,"auth"],[250,26,208,28],[250,27,208,29,"onAuthStateChange"],[250,44,208,46],[250,45,208,47],[250,46,208,48,"event"],[250,51,208,53],[250,53,208,55,"session"],[250,60,208,62],[250,65,208,67],[251,8,209,12],[251,12,209,16],[251,13,209,17,"_handleTokenChanged"],[251,32,209,36],[251,33,209,37,"event"],[251,38,209,42],[251,40,209,44],[251,48,209,52],[251,50,209,54,"session"],[251,57,209,61],[251,62,209,66],[251,66,209,70],[251,70,209,74,"session"],[251,77,209,81],[251,82,209,86],[251,87,209,91],[251,88,209,92],[251,91,209,95],[251,96,209,100],[251,97,209,101],[251,100,209,104,"session"],[251,107,209,111],[251,108,209,112,"access_token"],[251,120,209,124],[251,121,209,125],[252,6,210,8],[252,7,210,9],[252,8,210,10],[253,6,211,8],[253,13,211,15,"data"],[253,17,211,19],[254,4,212,4],[255,4,213,4,"_handleTokenChanged"],[255,23,213,23,"_handleTokenChanged"],[255,24,213,24,"event"],[255,29,213,29],[255,31,213,31,"source"],[255,37,213,37],[255,39,213,39,"token"],[255,44,213,44],[255,46,213,46],[256,6,214,8],[256,10,214,12],[256,11,214,13,"event"],[256,16,214,18],[256,21,214,23],[256,38,214,40],[256,42,214,44,"event"],[256,47,214,49],[256,52,214,54],[256,63,214,65],[256,68,215,12],[256,72,215,16],[256,73,215,17,"changedAccessToken"],[256,91,215,35],[256,96,215,40,"token"],[256,101,215,45],[256,103,215,47],[257,8,216,12],[257,12,216,16],[257,13,216,17,"changedAccessToken"],[257,31,216,35],[257,34,216,38,"token"],[257,39,216,43],[258,6,217,8],[258,7,217,9],[258,13,218,13],[258,17,218,17,"event"],[258,22,218,22],[258,27,218,27],[258,39,218,39],[258,41,218,41],[259,8,219,12],[259,12,219,16],[259,13,219,17,"realtime"],[259,21,219,25],[259,22,219,26,"setAuth"],[259,29,219,33],[259,30,219,34],[259,31,219,35],[260,8,220,12],[260,12,220,16,"source"],[260,18,220,22],[260,22,220,26],[260,31,220,35],[260,33,221,16],[260,37,221,20],[260,38,221,21,"auth"],[260,42,221,25],[260,43,221,26,"signOut"],[260,50,221,33],[260,51,221,34],[260,52,221,35],[261,8,222,12],[261,12,222,16],[261,13,222,17,"changedAccessToken"],[261,31,222,35],[261,34,222,38,"undefined"],[261,43,222,47],[262,6,223,8],[263,4,224,4],[264,2,225,0],[265,2,225,1,"exports"],[265,9,225,1],[265,10,225,1,"default"],[265,17,225,1],[265,20,225,1,"SupabaseClient"],[265,34,225,1],[266,0,225,1],[266,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","__awaiter$argument_3","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;eOc;ICc;qBCgC;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNE;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;+CCE;SDM;KXC;IaC;KbqB;IcC;KdE;IeC;+CCC;SDE;KfE;IiBC;KjBW;CPC"}},"type":"js/module"}]}