{"dependencies":[{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":491},"end":{"line":12,"column":102,"index":593}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"]}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":594},"end":{"line":13,"column":59,"index":653}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"]}},{"name":"./lib/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":654},"end":{"line":14,"column":47,"index":701}}],"key":"/AcZmnf3UE0mJ4XdwdiNNzammrg=","exportNames":["*"]}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":702},"end":{"line":15,"column":43,"index":745}}],"key":"NUE3c/K+JVzkrn4COE7BqSQ6w3g=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _fetch = require(_dependencyMap[0], \"./lib/fetch\");\n  var _helpers = require(_dependencyMap[1], \"./lib/helpers\");\n  var _types = require(_dependencyMap[2], \"./lib/types\");\n  var _errors = require(_dependencyMap[3], \"./lib/errors\");\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  class GoTrueAdminApi {\n    constructor({\n      url = '',\n      headers = {},\n      fetch\n    }) {\n      this.url = url;\n      this.headers = headers;\n      this.fetch = (0, _helpers.resolveFetch)(fetch);\n      this.mfa = {\n        listFactors: this._listFactors.bind(this),\n        deleteFactor: this._deleteFactor.bind(this)\n      };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = _types.SIGN_OUT_SCOPES[0]) {\n      if (_types.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n        throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_types.SIGN_OUT_SCOPES.join(', ')}`);\n      }\n      try {\n        await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n      try {\n        const {\n            options\n          } = params,\n          rest = __rest(params, [\"options\"]);\n        const body = Object.assign(Object.assign({}, rest), options);\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: _fetch._generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n      try {\n        return await (0, _fetch._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _fetch._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n      (0, _helpers.validateUUID)(uid);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n      (0, _helpers.validateUUID)(uid);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n      (0, _helpers.validateUUID)(id);\n      try {\n        return await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          body: {\n            should_soft_delete: shouldSoftDelete\n          },\n          xform: _fetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _listFactors(params) {\n      (0, _helpers.validateUUID)(params.userId);\n      try {\n        const {\n          data,\n          error\n        } = await (0, _fetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _deleteFactor(params) {\n      (0, _helpers.validateUUID)(params.userId);\n      (0, _helpers.validateUUID)(params.id);\n      try {\n        const data = await (0, _fetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  exports.default = GoTrueAdminApi;\n});","lineCount":340,"map":[[6,2,12,0],[6,6,12,0,"_fetch"],[6,12,12,0],[6,15,12,0,"require"],[6,22,12,0],[6,23,12,0,"_dependencyMap"],[6,37,12,0],[7,2,13,0],[7,6,13,0,"_helpers"],[7,14,13,0],[7,17,13,0,"require"],[7,24,13,0],[7,25,13,0,"_dependencyMap"],[7,39,13,0],[8,2,14,0],[8,6,14,0,"_types"],[8,12,14,0],[8,15,14,0,"require"],[8,22,14,0],[8,23,14,0,"_dependencyMap"],[8,37,14,0],[9,2,15,0],[9,6,15,0,"_errors"],[9,13,15,0],[9,16,15,0,"require"],[9,23,15,0],[9,24,15,0,"_dependencyMap"],[9,38,15,0],[10,2,1,0],[10,6,1,4,"__rest"],[10,12,1,10],[10,15,1,14],[10,19,1,18],[10,23,1,22],[10,27,1,26],[10,28,1,27,"__rest"],[10,34,1,33],[10,38,1,38],[10,48,1,48,"s"],[10,49,1,49],[10,51,1,51,"e"],[10,52,1,52],[10,54,1,54],[11,4,2,4],[11,8,2,8,"t"],[11,9,2,9],[11,12,2,12],[11,13,2,13],[11,14,2,14],[12,4,3,4],[12,9,3,9],[12,13,3,13,"p"],[12,14,3,14],[12,18,3,18,"s"],[12,19,3,19],[12,21,3,21],[12,25,3,25,"Object"],[12,31,3,31],[12,32,3,32,"prototype"],[12,41,3,41],[12,42,3,42,"hasOwnProperty"],[12,56,3,56],[12,57,3,57,"call"],[12,61,3,61],[12,62,3,62,"s"],[12,63,3,63],[12,65,3,65,"p"],[12,66,3,66],[12,67,3,67],[12,71,3,71,"e"],[12,72,3,72],[12,73,3,73,"indexOf"],[12,80,3,80],[12,81,3,81,"p"],[12,82,3,82],[12,83,3,83],[12,86,3,86],[12,87,3,87],[12,89,4,8,"t"],[12,90,4,9],[12,91,4,10,"p"],[12,92,4,11],[12,93,4,12],[12,96,4,15,"s"],[12,97,4,16],[12,98,4,17,"p"],[12,99,4,18],[12,100,4,19],[13,4,5,4],[13,8,5,8,"s"],[13,9,5,9],[13,13,5,13],[13,17,5,17],[13,21,5,21],[13,28,5,28,"Object"],[13,34,5,34],[13,35,5,35,"getOwnPropertySymbols"],[13,56,5,56],[13,61,5,61],[13,71,5,71],[13,73,6,8],[13,78,6,13],[13,82,6,17,"i"],[13,83,6,18],[13,86,6,21],[13,87,6,22],[13,89,6,24,"p"],[13,90,6,25],[13,93,6,28,"Object"],[13,99,6,34],[13,100,6,35,"getOwnPropertySymbols"],[13,121,6,56],[13,122,6,57,"s"],[13,123,6,58],[13,124,6,59],[13,126,6,61,"i"],[13,127,6,62],[13,130,6,65,"p"],[13,131,6,66],[13,132,6,67,"length"],[13,138,6,73],[13,140,6,75,"i"],[13,141,6,76],[13,143,6,78],[13,145,6,80],[14,6,7,12],[14,10,7,16,"e"],[14,11,7,17],[14,12,7,18,"indexOf"],[14,19,7,25],[14,20,7,26,"p"],[14,21,7,27],[14,22,7,28,"i"],[14,23,7,29],[14,24,7,30],[14,25,7,31],[14,28,7,34],[14,29,7,35],[14,33,7,39,"Object"],[14,39,7,45],[14,40,7,46,"prototype"],[14,49,7,55],[14,50,7,56,"propertyIsEnumerable"],[14,70,7,76],[14,71,7,77,"call"],[14,75,7,81],[14,76,7,82,"s"],[14,77,7,83],[14,79,7,85,"p"],[14,80,7,86],[14,81,7,87,"i"],[14,82,7,88],[14,83,7,89],[14,84,7,90],[14,86,8,16,"t"],[14,87,8,17],[14,88,8,18,"p"],[14,89,8,19],[14,90,8,20,"i"],[14,91,8,21],[14,92,8,22],[14,93,8,23],[14,96,8,26,"s"],[14,97,8,27],[14,98,8,28,"p"],[14,99,8,29],[14,100,8,30,"i"],[14,101,8,31],[14,102,8,32],[14,103,8,33],[15,4,9,8],[16,4,10,4],[16,11,10,11,"t"],[16,12,10,12],[17,2,11,0],[17,3,11,1],[18,2,16,15],[18,8,16,21,"GoTrueAdminApi"],[18,22,16,35],[18,23,16,36],[19,4,17,4,"constructor"],[19,15,17,15,"constructor"],[19,16,17,16],[20,6,17,18,"url"],[20,9,17,21],[20,12,17,24],[20,14,17,26],[21,6,17,28,"headers"],[21,13,17,35],[21,16,17,38],[21,17,17,39],[21,18,17,40],[22,6,17,42,"fetch"],[23,4,17,49],[23,5,17,50],[23,7,17,52],[24,6,18,8],[24,10,18,12],[24,11,18,13,"url"],[24,14,18,16],[24,17,18,19,"url"],[24,20,18,22],[25,6,19,8],[25,10,19,12],[25,11,19,13,"headers"],[25,18,19,20],[25,21,19,23,"headers"],[25,28,19,30],[26,6,20,8],[26,10,20,12],[26,11,20,13,"fetch"],[26,16,20,18],[26,19,20,21],[26,23,20,21,"resolveFetch"],[26,44,20,33],[26,46,20,34,"fetch"],[26,51,20,39],[26,52,20,40],[27,6,21,8],[27,10,21,12],[27,11,21,13,"mfa"],[27,14,21,16],[27,17,21,19],[28,8,22,12,"listFactors"],[28,19,22,23],[28,21,22,25],[28,25,22,29],[28,26,22,30,"_listFactors"],[28,38,22,42],[28,39,22,43,"bind"],[28,43,22,47],[28,44,22,48],[28,48,22,52],[28,49,22,53],[29,8,23,12,"deleteFactor"],[29,20,23,24],[29,22,23,26],[29,26,23,30],[29,27,23,31,"_deleteFactor"],[29,40,23,44],[29,41,23,45,"bind"],[29,45,23,49],[29,46,23,50],[29,50,23,54],[30,6,24,8],[30,7,24,9],[31,4,25,4],[32,4,26,4],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,4,31,4],[37,10,31,10,"signOut"],[37,17,31,17,"signOut"],[37,18,31,18,"jwt"],[37,21,31,21],[37,23,31,23,"scope"],[37,28,31,28],[37,31,31,31,"SIGN_OUT_SCOPES"],[37,53,31,46],[37,54,31,47],[37,55,31,48],[37,56,31,49],[37,58,31,51],[38,6,32,8],[38,10,32,12,"SIGN_OUT_SCOPES"],[38,32,32,27],[38,33,32,28,"indexOf"],[38,40,32,35],[38,41,32,36,"scope"],[38,46,32,41],[38,47,32,42],[38,50,32,45],[38,51,32,46],[38,53,32,48],[39,8,33,12],[39,14,33,18],[39,18,33,22,"Error"],[39,23,33,27],[39,24,33,28],[39,77,33,81,"SIGN_OUT_SCOPES"],[39,99,33,96],[39,100,33,97,"join"],[39,104,33,101],[39,105,33,102],[39,109,33,106],[39,110,33,107],[39,112,33,109],[39,113,33,110],[40,6,34,8],[41,6,35,8],[41,10,35,12],[42,8,36,12],[42,14,36,18],[42,18,36,18,"_request"],[42,33,36,26],[42,35,36,27],[42,39,36,31],[42,40,36,32,"fetch"],[42,45,36,37],[42,47,36,39],[42,53,36,45],[42,55,36,47],[42,58,36,50],[42,62,36,54],[42,63,36,55,"url"],[42,66,36,58],[42,83,36,75,"scope"],[42,88,36,80],[42,90,36,82],[42,92,36,84],[43,10,37,16,"headers"],[43,17,37,23],[43,19,37,25],[43,23,37,29],[43,24,37,30,"headers"],[43,31,37,37],[44,10,38,16,"jwt"],[44,13,38,19],[45,10,39,16,"noResolveJson"],[45,23,39,29],[45,25,39,31],[46,8,40,12],[46,9,40,13],[46,10,40,14],[47,8,41,12],[47,15,41,19],[48,10,41,21,"data"],[48,14,41,25],[48,16,41,27],[48,20,41,31],[49,10,41,33,"error"],[49,15,41,38],[49,17,41,40],[50,8,41,45],[50,9,41,46],[51,6,42,8],[51,7,42,9],[51,8,43,8],[51,15,43,15,"error"],[51,20,43,20],[51,22,43,22],[52,8,44,12],[52,12,44,16],[52,16,44,16,"isAuthError"],[52,35,44,27],[52,37,44,28,"error"],[52,42,44,33],[52,43,44,34],[52,45,44,36],[53,10,45,16],[53,17,45,23],[54,12,45,25,"data"],[54,16,45,29],[54,18,45,31],[54,22,45,35],[55,12,45,37,"error"],[56,10,45,43],[56,11,45,44],[57,8,46,12],[58,8,47,12],[58,14,47,18,"error"],[58,19,47,23],[59,6,48,8],[60,4,49,4],[61,4,50,4],[62,0,51,0],[63,0,52,0],[64,0,53,0],[65,0,54,0],[66,4,55,4],[66,10,55,10,"inviteUserByEmail"],[66,27,55,27,"inviteUserByEmail"],[66,28,55,28,"email"],[66,33,55,33],[66,35,55,35,"options"],[66,42,55,42],[66,45,55,45],[66,46,55,46],[66,47,55,47],[66,49,55,49],[67,6,56,8],[67,10,56,12],[68,8,57,12],[68,15,57,19],[68,21,57,25],[68,25,57,25,"_request"],[68,40,57,33],[68,42,57,34],[68,46,57,38],[68,47,57,39,"fetch"],[68,52,57,44],[68,54,57,46],[68,60,57,52],[68,62,57,54],[68,65,57,57],[68,69,57,61],[68,70,57,62,"url"],[68,73,57,65],[68,82,57,74],[68,84,57,76],[69,10,58,16,"body"],[69,14,58,20],[69,16,58,22],[70,12,58,24,"email"],[70,17,58,29],[71,12,58,31,"data"],[71,16,58,35],[71,18,58,37,"options"],[71,25,58,44],[71,26,58,45,"data"],[72,10,58,50],[72,11,58,51],[73,10,59,16,"headers"],[73,17,59,23],[73,19,59,25],[73,23,59,29],[73,24,59,30,"headers"],[73,31,59,37],[74,10,60,16,"redirectTo"],[74,20,60,26],[74,22,60,28,"options"],[74,29,60,35],[74,30,60,36,"redirectTo"],[74,40,60,46],[75,10,61,16,"xform"],[75,15,61,21],[75,17,61,23,"_userResponse"],[76,8,62,12],[76,9,62,13],[76,10,62,14],[77,6,63,8],[77,7,63,9],[77,8,64,8],[77,15,64,15,"error"],[77,20,64,20],[77,22,64,22],[78,8,65,12],[78,12,65,16],[78,16,65,16,"isAuthError"],[78,35,65,27],[78,37,65,28,"error"],[78,42,65,33],[78,43,65,34],[78,45,65,36],[79,10,66,16],[79,17,66,23],[80,12,66,25,"data"],[80,16,66,29],[80,18,66,31],[81,14,66,33,"user"],[81,18,66,37],[81,20,66,39],[82,12,66,44],[82,13,66,45],[83,12,66,47,"error"],[84,10,66,53],[84,11,66,54],[85,8,67,12],[86,8,68,12],[86,14,68,18,"error"],[86,19,68,23],[87,6,69,8],[88,4,70,4],[89,4,71,4],[90,0,72,0],[91,0,73,0],[92,0,74,0],[93,0,75,0],[94,0,76,0],[95,0,77,0],[96,4,78,4],[96,10,78,10,"generateLink"],[96,22,78,22,"generateLink"],[96,23,78,23,"params"],[96,29,78,29],[96,31,78,31],[97,6,79,8],[97,10,79,12],[98,8,80,12],[98,14,80,18],[99,12,80,20,"options"],[100,10,80,28],[100,11,80,29],[100,14,80,32,"params"],[100,20,80,38],[101,10,80,40,"rest"],[101,14,80,44],[101,17,80,47,"__rest"],[101,23,80,53],[101,24,80,54,"params"],[101,30,80,60],[101,32,80,62],[101,33,80,63],[101,42,80,72],[101,43,80,73],[101,44,80,74],[102,8,81,12],[102,14,81,18,"body"],[102,18,81,22],[102,21,81,25,"Object"],[102,27,81,31],[102,28,81,32,"assign"],[102,34,81,38],[102,35,81,39,"Object"],[102,41,81,45],[102,42,81,46,"assign"],[102,48,81,52],[102,49,81,53],[102,50,81,54],[102,51,81,55],[102,53,81,57,"rest"],[102,57,81,61],[102,58,81,62],[102,60,81,64,"options"],[102,67,81,71],[102,68,81,72],[103,8,82,12],[103,12,82,16],[103,22,82,26],[103,26,82,30,"rest"],[103,30,82,34],[103,32,82,36],[104,10,83,16],[105,10,84,16,"body"],[105,14,84,20],[105,15,84,21,"new_email"],[105,24,84,30],[105,27,84,33,"rest"],[105,31,84,37],[105,36,84,42],[105,40,84,46],[105,44,84,50,"rest"],[105,48,84,54],[105,53,84,59],[105,58,84,64],[105,59,84,65],[105,62,84,68],[105,67,84,73],[105,68,84,74],[105,71,84,77,"rest"],[105,75,84,81],[105,76,84,82,"newEmail"],[105,84,84,90],[106,10,85,16],[106,17,85,23,"body"],[106,21,85,27],[106,22,85,28],[106,32,85,38],[106,33,85,39],[107,8,86,12],[108,8,87,12],[108,15,87,19],[108,21,87,25],[108,25,87,25,"_request"],[108,40,87,33],[108,42,87,34],[108,46,87,38],[108,47,87,39,"fetch"],[108,52,87,44],[108,54,87,46],[108,60,87,52],[108,62,87,54],[108,65,87,57],[108,69,87,61],[108,70,87,62,"url"],[108,73,87,65],[108,95,87,87],[108,97,87,89],[109,10,88,16,"body"],[109,14,88,20],[109,16,88,22,"body"],[109,20,88,26],[110,10,89,16,"headers"],[110,17,89,23],[110,19,89,25],[110,23,89,29],[110,24,89,30,"headers"],[110,31,89,37],[111,10,90,16,"xform"],[111,15,90,21],[111,17,90,23,"_generateLinkResponse"],[111,45,90,44],[112,10,91,16,"redirectTo"],[112,20,91,26],[112,22,91,28,"options"],[112,29,91,35],[112,34,91,40],[112,38,91,44],[112,42,91,48,"options"],[112,49,91,55],[112,54,91,60],[112,59,91,65],[112,60,91,66],[112,63,91,69],[112,68,91,74],[112,69,91,75],[112,72,91,78,"options"],[112,79,91,85],[112,80,91,86,"redirectTo"],[113,8,92,12],[113,9,92,13],[113,10,92,14],[114,6,93,8],[114,7,93,9],[114,8,94,8],[114,15,94,15,"error"],[114,20,94,20],[114,22,94,22],[115,8,95,12],[115,12,95,16],[115,16,95,16,"isAuthError"],[115,35,95,27],[115,37,95,28,"error"],[115,42,95,33],[115,43,95,34],[115,45,95,36],[116,10,96,16],[116,17,96,23],[117,12,97,20,"data"],[117,16,97,24],[117,18,97,26],[118,14,98,24,"properties"],[118,24,98,34],[118,26,98,36],[118,30,98,40],[119,14,99,24,"user"],[119,18,99,28],[119,20,99,30],[120,12,100,20],[120,13,100,21],[121,12,101,20,"error"],[122,10,102,16],[122,11,102,17],[123,8,103,12],[124,8,104,12],[124,14,104,18,"error"],[124,19,104,23],[125,6,105,8],[126,4,106,4],[127,4,107,4],[128,4,108,4],[129,0,109,0],[130,0,110,0],[131,0,111,0],[132,4,112,4],[132,10,112,10,"createUser"],[132,20,112,20,"createUser"],[132,21,112,21,"attributes"],[132,31,112,31],[132,33,112,33],[133,6,113,8],[133,10,113,12],[134,8,114,12],[134,15,114,19],[134,21,114,25],[134,25,114,25,"_request"],[134,40,114,33],[134,42,114,34],[134,46,114,38],[134,47,114,39,"fetch"],[134,52,114,44],[134,54,114,46],[134,60,114,52],[134,62,114,54],[134,65,114,57],[134,69,114,61],[134,70,114,62,"url"],[134,73,114,65],[134,87,114,79],[134,89,114,81],[135,10,115,16,"body"],[135,14,115,20],[135,16,115,22,"attributes"],[135,26,115,32],[136,10,116,16,"headers"],[136,17,116,23],[136,19,116,25],[136,23,116,29],[136,24,116,30,"headers"],[136,31,116,37],[137,10,117,16,"xform"],[137,15,117,21],[137,17,117,23,"_userResponse"],[138,8,118,12],[138,9,118,13],[138,10,118,14],[139,6,119,8],[139,7,119,9],[139,8,120,8],[139,15,120,15,"error"],[139,20,120,20],[139,22,120,22],[140,8,121,12],[140,12,121,16],[140,16,121,16,"isAuthError"],[140,35,121,27],[140,37,121,28,"error"],[140,42,121,33],[140,43,121,34],[140,45,121,36],[141,10,122,16],[141,17,122,23],[142,12,122,25,"data"],[142,16,122,29],[142,18,122,31],[143,14,122,33,"user"],[143,18,122,37],[143,20,122,39],[144,12,122,44],[144,13,122,45],[145,12,122,47,"error"],[146,10,122,53],[146,11,122,54],[147,8,123,12],[148,8,124,12],[148,14,124,18,"error"],[148,19,124,23],[149,6,125,8],[150,4,126,4],[151,4,127,4],[152,0,128,0],[153,0,129,0],[154,0,130,0],[155,0,131,0],[156,0,132,0],[157,4,133,4],[157,10,133,10,"listUsers"],[157,19,133,19,"listUsers"],[157,20,133,20,"params"],[157,26,133,26],[157,28,133,28],[158,6,134,8],[158,10,134,12,"_a"],[158,12,134,14],[158,14,134,16,"_b"],[158,16,134,18],[158,18,134,20,"_c"],[158,20,134,22],[158,22,134,24,"_d"],[158,24,134,26],[158,26,134,28,"_e"],[158,28,134,30],[158,30,134,32,"_f"],[158,32,134,34],[158,34,134,36,"_g"],[158,36,134,38],[159,6,135,8],[159,10,135,12],[160,8,136,12],[160,14,136,18,"pagination"],[160,24,136,28],[160,27,136,31],[161,10,136,33,"nextPage"],[161,18,136,41],[161,20,136,43],[161,24,136,47],[162,10,136,49,"lastPage"],[162,18,136,57],[162,20,136,59],[162,21,136,60],[163,10,136,62,"total"],[163,15,136,67],[163,17,136,69],[164,8,136,71],[164,9,136,72],[165,8,137,12],[165,14,137,18,"response"],[165,22,137,26],[165,25,137,29],[165,31,137,35],[165,35,137,35,"_request"],[165,50,137,43],[165,52,137,44],[165,56,137,48],[165,57,137,49,"fetch"],[165,62,137,54],[165,64,137,56],[165,69,137,61],[165,71,137,63],[165,74,137,66],[165,78,137,70],[165,79,137,71,"url"],[165,82,137,74],[165,96,137,88],[165,98,137,90],[166,10,138,16,"headers"],[166,17,138,23],[166,19,138,25],[166,23,138,29],[166,24,138,30,"headers"],[166,31,138,37],[167,10,139,16,"noResolveJson"],[167,23,139,29],[167,25,139,31],[167,29,139,35],[168,10,140,16,"query"],[168,15,140,21],[168,17,140,23],[169,12,141,20,"page"],[169,16,141,24],[169,18,141,26],[169,19,141,27,"_b"],[169,21,141,29],[169,24,141,32],[169,25,141,33,"_a"],[169,27,141,35],[169,30,141,38,"params"],[169,36,141,44],[169,41,141,49],[169,45,141,53],[169,49,141,57,"params"],[169,55,141,63],[169,60,141,68],[169,65,141,73],[169,66,141,74],[169,69,141,77],[169,74,141,82],[169,75,141,83],[169,78,141,86,"params"],[169,84,141,92],[169,85,141,93,"page"],[169,89,141,97],[169,95,141,103],[169,99,141,107],[169,103,141,111,"_a"],[169,105,141,113],[169,110,141,118],[169,115,141,123],[169,116,141,124],[169,119,141,127],[169,124,141,132],[169,125,141,133],[169,128,141,136,"_a"],[169,130,141,138],[169,131,141,139,"toString"],[169,139,141,147],[169,140,141,148],[169,141,141,149],[169,147,141,155],[169,151,141,159],[169,155,141,163,"_b"],[169,157,141,165],[169,162,141,170],[169,167,141,175],[169,168,141,176],[169,171,141,179,"_b"],[169,173,141,181],[169,176,141,184],[169,178,141,186],[170,12,142,20,"per_page"],[170,20,142,28],[170,22,142,30],[170,23,142,31,"_d"],[170,25,142,33],[170,28,142,36],[170,29,142,37,"_c"],[170,31,142,39],[170,34,142,42,"params"],[170,40,142,48],[170,45,142,53],[170,49,142,57],[170,53,142,61,"params"],[170,59,142,67],[170,64,142,72],[170,69,142,77],[170,70,142,78],[170,73,142,81],[170,78,142,86],[170,79,142,87],[170,82,142,90,"params"],[170,88,142,96],[170,89,142,97,"perPage"],[170,96,142,104],[170,102,142,110],[170,106,142,114],[170,110,142,118,"_c"],[170,112,142,120],[170,117,142,125],[170,122,142,130],[170,123,142,131],[170,126,142,134],[170,131,142,139],[170,132,142,140],[170,135,142,143,"_c"],[170,137,142,145],[170,138,142,146,"toString"],[170,146,142,154],[170,147,142,155],[170,148,142,156],[170,154,142,162],[170,158,142,166],[170,162,142,170,"_d"],[170,164,142,172],[170,169,142,177],[170,174,142,182],[170,175,142,183],[170,178,142,186,"_d"],[170,180,142,188],[170,183,142,191],[171,10,143,16],[171,11,143,17],[172,10,144,16,"xform"],[172,15,144,21],[172,17,144,23,"_noResolveJsonResponse"],[173,8,145,12],[173,9,145,13],[173,10,145,14],[174,8,146,12],[174,12,146,16,"response"],[174,20,146,24],[174,21,146,25,"error"],[174,26,146,30],[174,28,147,16],[174,34,147,22,"response"],[174,42,147,30],[174,43,147,31,"error"],[174,48,147,36],[175,8,148,12],[175,14,148,18,"users"],[175,19,148,23],[175,22,148,26],[175,28,148,32,"response"],[175,36,148,40],[175,37,148,41,"json"],[175,41,148,45],[175,42,148,46],[175,43,148,47],[176,8,149,12],[176,14,149,18,"total"],[176,19,149,23],[176,22,149,26],[176,23,149,27,"_e"],[176,25,149,29],[176,28,149,32,"response"],[176,36,149,40],[176,37,149,41,"headers"],[176,44,149,48],[176,45,149,49,"get"],[176,48,149,52],[176,49,149,53],[176,64,149,68],[176,65,149,69],[176,71,149,75],[176,75,149,79],[176,79,149,83,"_e"],[176,81,149,85],[176,86,149,90],[176,91,149,95],[176,92,149,96],[176,95,149,99,"_e"],[176,97,149,101],[176,100,149,104],[176,101,149,105],[177,8,150,12],[177,14,150,18,"links"],[177,19,150,23],[177,22,150,26],[177,23,150,27,"_g"],[177,25,150,29],[177,28,150,32],[177,29,150,33,"_f"],[177,31,150,35],[177,34,150,38,"response"],[177,42,150,46],[177,43,150,47,"headers"],[177,50,150,54],[177,51,150,55,"get"],[177,54,150,58],[177,55,150,59],[177,61,150,65],[177,62,150,66],[177,68,150,72],[177,72,150,76],[177,76,150,80,"_f"],[177,78,150,82],[177,83,150,87],[177,88,150,92],[177,89,150,93],[177,92,150,96],[177,97,150,101],[177,98,150,102],[177,101,150,105,"_f"],[177,103,150,107],[177,104,150,108,"split"],[177,109,150,113],[177,110,150,114],[177,113,150,117],[177,114,150,118],[177,120,150,124],[177,124,150,128],[177,128,150,132,"_g"],[177,130,150,134],[177,135,150,139],[177,140,150,144],[177,141,150,145],[177,144,150,148,"_g"],[177,146,150,150],[177,149,150,153],[177,151,150,155],[178,8,151,12],[178,12,151,16,"links"],[178,17,151,21],[178,18,151,22,"length"],[178,24,151,28],[178,27,151,31],[178,28,151,32],[178,30,151,34],[179,10,152,16,"links"],[179,15,152,21],[179,16,152,22,"forEach"],[179,23,152,29],[179,24,152,31,"link"],[179,28,152,35],[179,32,152,40],[180,12,153,20],[180,18,153,26,"page"],[180,22,153,30],[180,25,153,33,"parseInt"],[180,33,153,41],[180,34,153,42,"link"],[180,38,153,46],[180,39,153,47,"split"],[180,44,153,52],[180,45,153,53],[180,48,153,56],[180,49,153,57],[180,50,153,58],[180,51,153,59],[180,52,153,60],[180,53,153,61,"split"],[180,58,153,66],[180,59,153,67],[180,62,153,70],[180,63,153,71],[180,64,153,72],[180,65,153,73],[180,66,153,74],[180,67,153,75,"substring"],[180,76,153,84],[180,77,153,85],[180,78,153,86],[180,80,153,88],[180,81,153,89],[180,82,153,90],[180,83,153,91],[181,12,154,20],[181,18,154,26,"rel"],[181,21,154,29],[181,24,154,32,"JSON"],[181,28,154,36],[181,29,154,37,"parse"],[181,34,154,42],[181,35,154,43,"link"],[181,39,154,47],[181,40,154,48,"split"],[181,45,154,53],[181,46,154,54],[181,49,154,57],[181,50,154,58],[181,51,154,59],[181,52,154,60],[181,53,154,61],[181,54,154,62,"split"],[181,59,154,67],[181,60,154,68],[181,63,154,71],[181,64,154,72],[181,65,154,73],[181,66,154,74],[181,67,154,75],[181,68,154,76],[182,12,155,20,"pagination"],[182,22,155,30],[182,23,155,31],[182,26,155,34,"rel"],[182,29,155,37],[182,35,155,43],[182,36,155,44],[182,39,155,47,"page"],[182,43,155,51],[183,10,156,16],[183,11,156,17],[183,12,156,18],[184,10,157,16,"pagination"],[184,20,157,26],[184,21,157,27,"total"],[184,26,157,32],[184,29,157,35,"parseInt"],[184,37,157,43],[184,38,157,44,"total"],[184,43,157,49],[184,44,157,50],[185,8,158,12],[186,8,159,12],[186,15,159,19],[187,10,159,21,"data"],[187,14,159,25],[187,16,159,27,"Object"],[187,22,159,33],[187,23,159,34,"assign"],[187,29,159,40],[187,30,159,41,"Object"],[187,36,159,47],[187,37,159,48,"assign"],[187,43,159,54],[187,44,159,55],[187,45,159,56],[187,46,159,57],[187,48,159,59,"users"],[187,53,159,64],[187,54,159,65],[187,56,159,67,"pagination"],[187,66,159,77],[187,67,159,78],[188,10,159,80,"error"],[188,15,159,85],[188,17,159,87],[189,8,159,92],[189,9,159,93],[190,6,160,8],[190,7,160,9],[190,8,161,8],[190,15,161,15,"error"],[190,20,161,20],[190,22,161,22],[191,8,162,12],[191,12,162,16],[191,16,162,16,"isAuthError"],[191,35,162,27],[191,37,162,28,"error"],[191,42,162,33],[191,43,162,34],[191,45,162,36],[192,10,163,16],[192,17,163,23],[193,12,163,25,"data"],[193,16,163,29],[193,18,163,31],[194,14,163,33,"users"],[194,19,163,38],[194,21,163,40],[195,12,163,43],[195,13,163,44],[196,12,163,46,"error"],[197,10,163,52],[197,11,163,53],[198,8,164,12],[199,8,165,12],[199,14,165,18,"error"],[199,19,165,23],[200,6,166,8],[201,4,167,4],[202,4,168,4],[203,0,169,0],[204,0,170,0],[205,0,171,0],[206,0,172,0],[207,0,173,0],[208,0,174,0],[209,4,175,4],[209,10,175,10,"getUserById"],[209,21,175,21,"getUserById"],[209,22,175,22,"uid"],[209,25,175,25],[209,27,175,27],[210,6,176,8],[210,10,176,8,"validateUUID"],[210,31,176,20],[210,33,176,21,"uid"],[210,36,176,24],[210,37,176,25],[211,6,177,8],[211,10,177,12],[212,8,178,12],[212,15,178,19],[212,21,178,25],[212,25,178,25,"_request"],[212,40,178,33],[212,42,178,34],[212,46,178,38],[212,47,178,39,"fetch"],[212,52,178,44],[212,54,178,46],[212,59,178,51],[212,61,178,53],[212,64,178,56],[212,68,178,60],[212,69,178,61,"url"],[212,72,178,64],[212,88,178,80,"uid"],[212,91,178,83],[212,93,178,85],[212,95,178,87],[213,10,179,16,"headers"],[213,17,179,23],[213,19,179,25],[213,23,179,29],[213,24,179,30,"headers"],[213,31,179,37],[214,10,180,16,"xform"],[214,15,180,21],[214,17,180,23,"_userResponse"],[215,8,181,12],[215,9,181,13],[215,10,181,14],[216,6,182,8],[216,7,182,9],[216,8,183,8],[216,15,183,15,"error"],[216,20,183,20],[216,22,183,22],[217,8,184,12],[217,12,184,16],[217,16,184,16,"isAuthError"],[217,35,184,27],[217,37,184,28,"error"],[217,42,184,33],[217,43,184,34],[217,45,184,36],[218,10,185,16],[218,17,185,23],[219,12,185,25,"data"],[219,16,185,29],[219,18,185,31],[220,14,185,33,"user"],[220,18,185,37],[220,20,185,39],[221,12,185,44],[221,13,185,45],[222,12,185,47,"error"],[223,10,185,53],[223,11,185,54],[224,8,186,12],[225,8,187,12],[225,14,187,18,"error"],[225,19,187,23],[226,6,188,8],[227,4,189,4],[228,4,190,4],[229,0,191,0],[230,0,192,0],[231,0,193,0],[232,0,194,0],[233,0,195,0],[234,0,196,0],[235,4,197,4],[235,10,197,10,"updateUserById"],[235,24,197,24,"updateUserById"],[235,25,197,25,"uid"],[235,28,197,28],[235,30,197,30,"attributes"],[235,40,197,40],[235,42,197,42],[236,6,198,8],[236,10,198,8,"validateUUID"],[236,31,198,20],[236,33,198,21,"uid"],[236,36,198,24],[236,37,198,25],[237,6,199,8],[237,10,199,12],[238,8,200,12],[238,15,200,19],[238,21,200,25],[238,25,200,25,"_request"],[238,40,200,33],[238,42,200,34],[238,46,200,38],[238,47,200,39,"fetch"],[238,52,200,44],[238,54,200,46],[238,59,200,51],[238,61,200,53],[238,64,200,56],[238,68,200,60],[238,69,200,61,"url"],[238,72,200,64],[238,88,200,80,"uid"],[238,91,200,83],[238,93,200,85],[238,95,200,87],[239,10,201,16,"body"],[239,14,201,20],[239,16,201,22,"attributes"],[239,26,201,32],[240,10,202,16,"headers"],[240,17,202,23],[240,19,202,25],[240,23,202,29],[240,24,202,30,"headers"],[240,31,202,37],[241,10,203,16,"xform"],[241,15,203,21],[241,17,203,23,"_userResponse"],[242,8,204,12],[242,9,204,13],[242,10,204,14],[243,6,205,8],[243,7,205,9],[243,8,206,8],[243,15,206,15,"error"],[243,20,206,20],[243,22,206,22],[244,8,207,12],[244,12,207,16],[244,16,207,16,"isAuthError"],[244,35,207,27],[244,37,207,28,"error"],[244,42,207,33],[244,43,207,34],[244,45,207,36],[245,10,208,16],[245,17,208,23],[246,12,208,25,"data"],[246,16,208,29],[246,18,208,31],[247,14,208,33,"user"],[247,18,208,37],[247,20,208,39],[248,12,208,44],[248,13,208,45],[249,12,208,47,"error"],[250,10,208,53],[250,11,208,54],[251,8,209,12],[252,8,210,12],[252,14,210,18,"error"],[252,19,210,23],[253,6,211,8],[254,4,212,4],[255,4,213,4],[256,0,214,0],[257,0,215,0],[258,0,216,0],[259,0,217,0],[260,0,218,0],[261,0,219,0],[262,0,220,0],[263,0,221,0],[264,4,222,4],[264,10,222,10,"deleteUser"],[264,20,222,20,"deleteUser"],[264,21,222,21,"id"],[264,23,222,23],[264,25,222,25,"shouldSoftDelete"],[264,41,222,41],[264,44,222,44],[264,49,222,49],[264,51,222,51],[265,6,223,8],[265,10,223,8,"validateUUID"],[265,31,223,20],[265,33,223,21,"id"],[265,35,223,23],[265,36,223,24],[266,6,224,8],[266,10,224,12],[267,8,225,12],[267,15,225,19],[267,21,225,25],[267,25,225,25,"_request"],[267,40,225,33],[267,42,225,34],[267,46,225,38],[267,47,225,39,"fetch"],[267,52,225,44],[267,54,225,46],[267,62,225,54],[267,64,225,56],[267,67,225,59],[267,71,225,63],[267,72,225,64,"url"],[267,75,225,67],[267,91,225,83,"id"],[267,93,225,85],[267,95,225,87],[267,97,225,89],[268,10,226,16,"headers"],[268,17,226,23],[268,19,226,25],[268,23,226,29],[268,24,226,30,"headers"],[268,31,226,37],[269,10,227,16,"body"],[269,14,227,20],[269,16,227,22],[270,12,228,20,"should_soft_delete"],[270,30,228,38],[270,32,228,40,"shouldSoftDelete"],[271,10,229,16],[271,11,229,17],[272,10,230,16,"xform"],[272,15,230,21],[272,17,230,23,"_userResponse"],[273,8,231,12],[273,9,231,13],[273,10,231,14],[274,6,232,8],[274,7,232,9],[274,8,233,8],[274,15,233,15,"error"],[274,20,233,20],[274,22,233,22],[275,8,234,12],[275,12,234,16],[275,16,234,16,"isAuthError"],[275,35,234,27],[275,37,234,28,"error"],[275,42,234,33],[275,43,234,34],[275,45,234,36],[276,10,235,16],[276,17,235,23],[277,12,235,25,"data"],[277,16,235,29],[277,18,235,31],[278,14,235,33,"user"],[278,18,235,37],[278,20,235,39],[279,12,235,44],[279,13,235,45],[280,12,235,47,"error"],[281,10,235,53],[281,11,235,54],[282,8,236,12],[283,8,237,12],[283,14,237,18,"error"],[283,19,237,23],[284,6,238,8],[285,4,239,4],[286,4,240,4],[286,10,240,10,"_listFactors"],[286,22,240,22,"_listFactors"],[286,23,240,23,"params"],[286,29,240,29],[286,31,240,31],[287,6,241,8],[287,10,241,8,"validateUUID"],[287,31,241,20],[287,33,241,21,"params"],[287,39,241,27],[287,40,241,28,"userId"],[287,46,241,34],[287,47,241,35],[288,6,242,8],[288,10,242,12],[289,8,243,12],[289,14,243,18],[290,10,243,20,"data"],[290,14,243,24],[291,10,243,26,"error"],[292,8,243,32],[292,9,243,33],[292,12,243,36],[292,18,243,42],[292,22,243,42,"_request"],[292,37,243,50],[292,39,243,51],[292,43,243,55],[292,44,243,56,"fetch"],[292,49,243,61],[292,51,243,63],[292,56,243,68],[292,58,243,70],[292,61,243,73],[292,65,243,77],[292,66,243,78,"url"],[292,69,243,81],[292,85,243,97,"params"],[292,91,243,103],[292,92,243,104,"userId"],[292,98,243,110],[292,108,243,120],[292,110,243,122],[293,10,244,16,"headers"],[293,17,244,23],[293,19,244,25],[293,23,244,29],[293,24,244,30,"headers"],[293,31,244,37],[294,10,245,16,"xform"],[294,15,245,21],[294,17,245,24,"factors"],[294,24,245,31],[294,28,245,36],[295,12,246,20],[295,19,246,27],[296,14,246,29,"data"],[296,18,246,33],[296,20,246,35],[297,16,246,37,"factors"],[298,14,246,45],[298,15,246,46],[299,14,246,48,"error"],[299,19,246,53],[299,21,246,55],[300,12,246,60],[300,13,246,61],[301,10,247,16],[302,8,248,12],[302,9,248,13],[302,10,248,14],[303,8,249,12],[303,15,249,19],[304,10,249,21,"data"],[304,14,249,25],[305,10,249,27,"error"],[306,8,249,33],[306,9,249,34],[307,6,250,8],[307,7,250,9],[307,8,251,8],[307,15,251,15,"error"],[307,20,251,20],[307,22,251,22],[308,8,252,12],[308,12,252,16],[308,16,252,16,"isAuthError"],[308,35,252,27],[308,37,252,28,"error"],[308,42,252,33],[308,43,252,34],[308,45,252,36],[309,10,253,16],[309,17,253,23],[310,12,253,25,"data"],[310,16,253,29],[310,18,253,31],[310,22,253,35],[311,12,253,37,"error"],[312,10,253,43],[312,11,253,44],[313,8,254,12],[314,8,255,12],[314,14,255,18,"error"],[314,19,255,23],[315,6,256,8],[316,4,257,4],[317,4,258,4],[317,10,258,10,"_deleteFactor"],[317,23,258,23,"_deleteFactor"],[317,24,258,24,"params"],[317,30,258,30],[317,32,258,32],[318,6,259,8],[318,10,259,8,"validateUUID"],[318,31,259,20],[318,33,259,21,"params"],[318,39,259,27],[318,40,259,28,"userId"],[318,46,259,34],[318,47,259,35],[319,6,260,8],[319,10,260,8,"validateUUID"],[319,31,260,20],[319,33,260,21,"params"],[319,39,260,27],[319,40,260,28,"id"],[319,42,260,30],[319,43,260,31],[320,6,261,8],[320,10,261,12],[321,8,262,12],[321,14,262,18,"data"],[321,18,262,22],[321,21,262,25],[321,27,262,31],[321,31,262,31,"_request"],[321,46,262,39],[321,48,262,40],[321,52,262,44],[321,53,262,45,"fetch"],[321,58,262,50],[321,60,262,52],[321,68,262,60],[321,70,262,62],[321,73,262,65],[321,77,262,69],[321,78,262,70,"url"],[321,81,262,73],[321,97,262,89,"params"],[321,103,262,95],[321,104,262,96,"userId"],[321,110,262,102],[321,122,262,114,"params"],[321,128,262,120],[321,129,262,121,"id"],[321,131,262,123],[321,133,262,125],[321,135,262,127],[322,10,263,16,"headers"],[322,17,263,23],[322,19,263,25],[322,23,263,29],[322,24,263,30,"headers"],[323,8,264,12],[323,9,264,13],[323,10,264,14],[324,8,265,12],[324,15,265,19],[325,10,265,21,"data"],[325,14,265,25],[326,10,265,27,"error"],[326,15,265,32],[326,17,265,34],[327,8,265,39],[327,9,265,40],[328,6,266,8],[328,7,266,9],[328,8,267,8],[328,15,267,15,"error"],[328,20,267,20],[328,22,267,22],[329,8,268,12],[329,12,268,16],[329,16,268,16,"isAuthError"],[329,35,268,27],[329,37,268,28,"error"],[329,42,268,33],[329,43,268,34],[329,45,268,36],[330,10,269,16],[330,17,269,23],[331,12,269,25,"data"],[331,16,269,29],[331,18,269,31],[331,22,269,35],[332,12,269,37,"error"],[333,10,269,43],[333,11,269,44],[334,8,270,12],[335,8,271,12],[335,14,271,18,"error"],[335,19,271,23],[336,6,272,8],[337,4,273,4],[338,2,274,0],[339,2,274,1,"exports"],[339,9,274,1],[339,10,274,1,"default"],[339,17,274,1],[339,20,274,1,"GoTrueAdminApi"],[339,34,274,1],[340,0,274,1],[340,3]],"functionMap":{"names":["<global>","<anonymous>","GoTrueAdminApi","constructor","signOut","inviteUserByEmail","generateLink","createUser","listUsers","links.forEach$argument_0","getUserById","updateUserById","deleteUser","_listFactors","_request$argument_3.xform","_deleteFactor"],"mappings":"AAA,sCC;CDU;eEK;ICC;KDQ;IEM;KFkB;IGM;KHe;IIQ;KJ4B;IKM;KLc;IMO;8BCmB;iBDI;KNW;IQQ;KRc;ISQ;KTe;IUU;KViB;IWC;uBCK;iBDE;KXU;IaC;Kbe;CFC"}},"type":"js/module"}]}