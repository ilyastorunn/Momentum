{"dependencies":[{"name":"@sentry/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":93,"index":93}}],"key":"/o+dASQcHF2bB25icdsM0E4TExc=","exportNames":["*"]}},{"name":"../helpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":94},"end":{"line":2,"column":45,"index":139}}],"key":"xGB1RU1bemGAHq3E44EIR7oSA2c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.browserApiErrorsIntegration = void 0;\n  var _core = require(_dependencyMap[0], \"@sentry/core\");\n  var _helpers = require(_dependencyMap[1], \"../helpers.js\");\n  const DEFAULT_EVENT_TARGET = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'BroadcastChannel', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'SharedWorker', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n  const INTEGRATION_NAME = 'BrowserApiErrors';\n  const _browserApiErrorsIntegration = (options = {}) => {\n    const _options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options\n    };\n    return {\n      name: INTEGRATION_NAME,\n      // TODO: This currently only works for the first client this is setup\n      // We may want to adjust this to check for client etc.\n      setupOnce() {\n        if (_options.setTimeout) {\n          (0, _core.fill)(_helpers.WINDOW, 'setTimeout', _wrapTimeFunction);\n        }\n        if (_options.setInterval) {\n          (0, _core.fill)(_helpers.WINDOW, 'setInterval', _wrapTimeFunction);\n        }\n        if (_options.requestAnimationFrame) {\n          (0, _core.fill)(_helpers.WINDOW, 'requestAnimationFrame', _wrapRAF);\n        }\n        if (_options.XMLHttpRequest && 'XMLHttpRequest' in _helpers.WINDOW) {\n          (0, _core.fill)(XMLHttpRequest.prototype, 'send', _wrapXHR);\n        }\n        const eventTargetOption = _options.eventTarget;\n        if (eventTargetOption) {\n          const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n          eventTarget.forEach(_wrapEventTarget);\n        }\n      }\n    };\n  };\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide better meta data.\n   */\n  const browserApiErrorsIntegration = exports.browserApiErrorsIntegration = (0, _core.defineIntegration)(_browserApiErrorsIntegration);\n  function _wrapTimeFunction(original) {\n    return function (...args) {\n      const originalCallback = args[0];\n      args[0] = (0, _helpers.wrap)(originalCallback, {\n        mechanism: {\n          data: {\n            function: (0, _core.getFunctionName)(original)\n          },\n          handled: false,\n          type: 'instrument'\n        }\n      });\n      return original.apply(this, args);\n    };\n  }\n  function _wrapRAF(original) {\n    return function (callback) {\n      return original.apply(this, [(0, _helpers.wrap)(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: (0, _core.getFunctionName)(original)\n          },\n          handled: false,\n          type: 'instrument'\n        }\n      })]);\n    };\n  }\n  function _wrapXHR(originalSend) {\n    return function (...args) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in xhr && typeof xhr[prop] === 'function') {\n          (0, _core.fill)(xhr, prop, function (original) {\n            const wrapOptions = {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: (0, _core.getFunctionName)(original)\n                },\n                handled: false,\n                type: 'instrument'\n              }\n            };\n\n            // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n            const originalFunction = (0, _core.getOriginalFunction)(original);\n            if (originalFunction) {\n              wrapOptions.mechanism.data.handler = (0, _core.getFunctionName)(originalFunction);\n            }\n\n            // Otherwise wrap directly\n            return (0, _helpers.wrap)(original, wrapOptions);\n          });\n        }\n      });\n      return originalSend.apply(this, args);\n    };\n  }\n  function _wrapEventTarget(target) {\n    const globalObject = _helpers.WINDOW;\n    const targetObj = globalObject[target];\n    const proto = targetObj && targetObj.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n    (0, _core.fill)(proto, 'addEventListener', function (original) {\n      return function (eventName, fn, options) {\n        try {\n          if (isEventListenerObject(fn)) {\n            // ESlint disable explanation:\n            //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n            //  introduce a bug here, because bind returns a new function that doesn't have our\n            //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n            //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            fn.handleEvent = (0, _helpers.wrap)(fn.handleEvent, {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: (0, _core.getFunctionName)(fn),\n                  target\n                },\n                handled: false,\n                type: 'instrument'\n              }\n            });\n          }\n        } catch (e2) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n        return original.apply(this, [eventName, (0, _helpers.wrap)(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: (0, _core.getFunctionName)(fn),\n              target\n            },\n            handled: false,\n            type: 'instrument'\n          }\n        }), options]);\n      };\n    });\n    (0, _core.fill)(proto, 'removeEventListener', function (originalRemoveEventListener) {\n      return function (eventName, fn, options) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        try {\n          const originalEventHandler = fn.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, fn, options);\n      };\n    });\n  }\n  function isEventListenerObject(obj) {\n    return typeof obj.handleEvent === 'function';\n  }\n});","lineCount":192,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"require"],[6,21,1,0],[6,22,1,0,"_dependencyMap"],[6,36,1,0],[7,2,2,0],[7,6,2,0,"_helpers"],[7,14,2,0],[7,17,2,0,"require"],[7,24,2,0],[7,25,2,0,"_dependencyMap"],[7,39,2,0],[8,2,4,0],[8,8,4,6,"DEFAULT_EVENT_TARGET"],[8,28,4,26],[8,31,4,29],[8,32,5,2],[8,45,5,15],[8,47,6,2],[8,55,6,10],[8,57,7,2],[8,63,7,8],[8,65,8,2],[8,83,8,20],[8,85,9,2],[8,101,9,18],[8,103,10,2],[8,121,10,20],[8,123,11,2],[8,142,11,21],[8,144,12,2],[8,161,12,19],[8,163,13,2],[8,176,13,15],[8,178,14,2],[8,190,14,14],[8,192,15,2],[8,212,15,22],[8,214,16,2],[8,227,16,15],[8,229,17,2],[8,241,17,14],[8,243,18,2],[8,259,18,18],[8,261,19,2],[8,275,19,16],[8,277,20,2],[8,294,20,19],[8,296,21,2],[8,309,21,15],[8,311,22,2],[8,324,22,15],[8,326,23,2],[8,340,23,16],[8,342,24,2],[8,362,24,22],[8,364,25,2],[8,372,25,10],[8,374,26,2],[8,388,26,16],[8,390,27,2],[8,401,27,13],[8,403,28,2],[8,417,28,16],[8,419,29,2],[8,434,29,17],[8,436,30,2],[8,447,30,13],[8,449,31,2],[8,466,31,19],[8,468,32,2],[8,476,32,10],[8,478,33,2],[8,494,33,18],[8,496,34,2],[8,523,34,29],[8,525,35,2],[8,547,35,24],[8,548,36,1],[9,2,38,0],[9,8,38,6,"INTEGRATION_NAME"],[9,24,38,22],[9,27,38,25],[9,45,38,43],[10,2,40,0],[10,8,40,6,"_browserApiErrorsIntegration"],[10,36,40,34],[10,39,40,38,"_browserApiErrorsIntegration"],[10,40,40,39,"options"],[10,47,40,46],[10,50,40,49],[10,51,40,50],[10,52,40,51],[10,57,40,56],[11,4,41,2],[11,10,41,8,"_options"],[11,18,41,16],[11,21,41,19],[12,6,42,4,"XMLHttpRequest"],[12,20,42,18],[12,22,42,20],[12,26,42,24],[13,6,43,4,"eventTarget"],[13,17,43,15],[13,19,43,17],[13,23,43,21],[14,6,44,4,"requestAnimationFrame"],[14,27,44,25],[14,29,44,27],[14,33,44,31],[15,6,45,4,"setInterval"],[15,17,45,15],[15,19,45,17],[15,23,45,21],[16,6,46,4,"setTimeout"],[16,16,46,14],[16,18,46,16],[16,22,46,20],[17,6,47,4],[17,9,47,7,"options"],[18,4,48,2],[18,5,48,3],[19,4,50,2],[19,11,50,9],[20,6,51,4,"name"],[20,10,51,8],[20,12,51,10,"INTEGRATION_NAME"],[20,28,51,26],[21,6,52,4],[22,6,53,4],[23,6,54,4,"setupOnce"],[23,15,54,13,"setupOnce"],[23,16,54,13],[23,18,54,16],[24,8,55,6],[24,12,55,10,"_options"],[24,20,55,18],[24,21,55,19,"setTimeout"],[24,31,55,29],[24,33,55,31],[25,10,56,8],[25,14,56,8,"fill"],[25,24,56,12],[25,26,56,13,"WINDOW"],[25,41,56,19],[25,43,56,21],[25,55,56,33],[25,57,56,35,"_wrapTimeFunction"],[25,74,56,52],[25,75,56,53],[26,8,57,6],[27,8,59,6],[27,12,59,10,"_options"],[27,20,59,18],[27,21,59,19,"setInterval"],[27,32,59,30],[27,34,59,32],[28,10,60,8],[28,14,60,8,"fill"],[28,24,60,12],[28,26,60,13,"WINDOW"],[28,41,60,19],[28,43,60,21],[28,56,60,34],[28,58,60,36,"_wrapTimeFunction"],[28,75,60,53],[28,76,60,54],[29,8,61,6],[30,8,63,6],[30,12,63,10,"_options"],[30,20,63,18],[30,21,63,19,"requestAnimationFrame"],[30,42,63,40],[30,44,63,42],[31,10,64,8],[31,14,64,8,"fill"],[31,24,64,12],[31,26,64,13,"WINDOW"],[31,41,64,19],[31,43,64,21],[31,66,64,44],[31,68,64,46,"_wrapRAF"],[31,76,64,54],[31,77,64,55],[32,8,65,6],[33,8,67,6],[33,12,67,10,"_options"],[33,20,67,18],[33,21,67,19,"XMLHttpRequest"],[33,35,67,33],[33,39,67,37],[33,55,67,53],[33,59,67,57,"WINDOW"],[33,74,67,63],[33,76,67,65],[34,10,68,8],[34,14,68,8,"fill"],[34,24,68,12],[34,26,68,13,"XMLHttpRequest"],[34,40,68,27],[34,41,68,28,"prototype"],[34,50,68,37],[34,52,68,39],[34,58,68,45],[34,60,68,47,"_wrapXHR"],[34,68,68,55],[34,69,68,56],[35,8,69,6],[36,8,71,6],[36,14,71,12,"eventTargetOption"],[36,31,71,29],[36,34,71,32,"_options"],[36,42,71,40],[36,43,71,41,"eventTarget"],[36,54,71,52],[37,8,72,6],[37,12,72,10,"eventTargetOption"],[37,29,72,27],[37,31,72,29],[38,10,73,8],[38,16,73,14,"eventTarget"],[38,27,73,25],[38,30,73,28,"Array"],[38,35,73,33],[38,36,73,34,"isArray"],[38,43,73,41],[38,44,73,42,"eventTargetOption"],[38,61,73,59],[38,62,73,60],[38,65,73,63,"eventTargetOption"],[38,82,73,80],[38,85,73,83,"DEFAULT_EVENT_TARGET"],[38,105,73,103],[39,10,74,8,"eventTarget"],[39,21,74,19],[39,22,74,20,"forEach"],[39,29,74,27],[39,30,74,28,"_wrapEventTarget"],[39,46,74,44],[39,47,74,45],[40,8,75,6],[41,6,76,4],[42,4,77,2],[42,5,77,3],[43,2,78,0],[43,3,78,2],[45,2,80,0],[46,0,81,0],[47,0,82,0],[48,2,83,0],[48,8,83,6,"browserApiErrorsIntegration"],[48,35,83,33],[48,38,83,33,"exports"],[48,45,83,33],[48,46,83,33,"browserApiErrorsIntegration"],[48,73,83,33],[48,76,83,36],[48,80,83,36,"defineIntegration"],[48,103,83,53],[48,105,83,54,"_browserApiErrorsIntegration"],[48,133,83,82],[48,134,83,83],[49,2,85,0],[49,11,85,9,"_wrapTimeFunction"],[49,28,85,26,"_wrapTimeFunction"],[49,29,85,27,"original"],[49,37,85,35],[49,39,85,37],[50,4,86,2],[50,11,86,9],[50,21,86,20],[50,24,86,23,"args"],[50,28,86,27],[50,30,86,29],[51,6,87,4],[51,12,87,10,"originalCallback"],[51,28,87,26],[51,31,87,29,"args"],[51,35,87,33],[51,36,87,34],[51,37,87,35],[51,38,87,36],[52,6,88,4,"args"],[52,10,88,8],[52,11,88,9],[52,12,88,10],[52,13,88,11],[52,16,88,14],[52,20,88,14,"wrap"],[52,33,88,18],[52,35,88,19,"originalCallback"],[52,51,88,35],[52,53,88,37],[53,8,89,6,"mechanism"],[53,17,89,15],[53,19,89,17],[54,10,90,8,"data"],[54,14,90,12],[54,16,90,14],[55,12,90,16,"function"],[55,20,90,24],[55,22,90,26],[55,26,90,26,"getFunctionName"],[55,47,90,41],[55,49,90,42,"original"],[55,57,90,50],[56,10,90,52],[56,11,90,53],[57,10,91,8,"handled"],[57,17,91,15],[57,19,91,17],[57,24,91,22],[58,10,92,8,"type"],[58,14,92,12],[58,16,92,14],[59,8,93,6],[60,6,94,4],[60,7,94,5],[60,8,94,6],[61,6,95,4],[61,13,95,11,"original"],[61,21,95,19],[61,22,95,20,"apply"],[61,27,95,25],[61,28,95,26],[61,32,95,30],[61,34,95,32,"args"],[61,38,95,36],[61,39,95,37],[62,4,96,2],[62,5,96,3],[63,2,97,0],[64,2,99,0],[64,11,99,9,"_wrapRAF"],[64,19,99,17,"_wrapRAF"],[64,20,99,18,"original"],[64,28,99,26],[64,30,99,28],[65,4,100,2],[65,11,100,9],[65,21,100,20,"callback"],[65,29,100,28],[65,31,100,30],[66,6,101,4],[66,13,101,11,"original"],[66,21,101,19],[66,22,101,20,"apply"],[66,27,101,25],[66,28,101,26],[66,32,101,30],[66,34,101,32],[66,35,102,6],[66,39,102,6,"wrap"],[66,52,102,10],[66,54,102,11,"callback"],[66,62,102,19],[66,64,102,21],[67,8,103,8,"mechanism"],[67,17,103,17],[67,19,103,19],[68,10,104,10,"data"],[68,14,104,14],[68,16,104,16],[69,12,105,12,"function"],[69,20,105,20],[69,22,105,22],[69,45,105,45],[70,12,106,12,"handler"],[70,19,106,19],[70,21,106,21],[70,25,106,21,"getFunctionName"],[70,46,106,36],[70,48,106,37,"original"],[70,56,106,45],[71,10,107,10],[71,11,107,11],[72,10,108,10,"handled"],[72,17,108,17],[72,19,108,19],[72,24,108,24],[73,10,109,10,"type"],[73,14,109,14],[73,16,109,16],[74,8,110,8],[75,6,111,6],[75,7,111,7],[75,8,111,8],[75,9,112,5],[75,10,112,6],[76,4,113,2],[76,5,113,3],[77,2,114,0],[78,2,116,0],[78,11,116,9,"_wrapXHR"],[78,19,116,17,"_wrapXHR"],[78,20,116,18,"originalSend"],[78,32,116,30],[78,34,116,32],[79,4,117,2],[79,11,117,9],[79,21,117,20],[79,24,117,23,"args"],[79,28,117,27],[79,30,117,29],[80,6,118,4],[81,6,119,4],[81,12,119,10,"xhr"],[81,15,119,13],[81,18,119,16],[81,22,119,20],[82,6,120,4],[82,12,120,10,"xmlHttpRequestProps"],[82,31,120,29],[82,34,120,32],[82,35,120,33],[82,43,120,41],[82,45,120,43],[82,54,120,52],[82,56,120,54],[82,68,120,66],[82,70,120,68],[82,90,120,88],[82,91,120,89],[83,6,122,4,"xmlHttpRequestProps"],[83,25,122,23],[83,26,122,24,"forEach"],[83,33,122,31],[83,34,122,32,"prop"],[83,38,122,36],[83,42,122,40],[84,8,123,6],[84,12,123,10,"prop"],[84,16,123,14],[84,20,123,18,"xhr"],[84,23,123,21],[84,27,123,25],[84,34,123,32,"xhr"],[84,37,123,35],[84,38,123,36,"prop"],[84,42,123,40],[84,43,123,41],[84,48,123,46],[84,58,123,56],[84,60,123,58],[85,10,124,8],[85,14,124,8,"fill"],[85,24,124,12],[85,26,124,13,"xhr"],[85,29,124,16],[85,31,124,18,"prop"],[85,35,124,22],[85,37,124,24],[85,47,124,34,"original"],[85,55,124,42],[85,57,124,44],[86,12,125,10],[86,18,125,16,"wrapOptions"],[86,29,125,27],[86,32,125,30],[87,14,126,12,"mechanism"],[87,23,126,21],[87,25,126,23],[88,16,127,14,"data"],[88,20,127,18],[88,22,127,20],[89,18,128,16,"function"],[89,26,128,24],[89,28,128,26,"prop"],[89,32,128,30],[90,18,129,16,"handler"],[90,25,129,23],[90,27,129,25],[90,31,129,25,"getFunctionName"],[90,52,129,40],[90,54,129,41,"original"],[90,62,129,49],[91,16,130,14],[91,17,130,15],[92,16,131,14,"handled"],[92,23,131,21],[92,25,131,23],[92,30,131,28],[93,16,132,14,"type"],[93,20,132,18],[93,22,132,20],[94,14,133,12],[95,12,134,10],[95,13,134,11],[97,12,136,10],[98,12,137,10],[98,18,137,16,"originalFunction"],[98,34,137,32],[98,37,137,35],[98,41,137,35,"getOriginalFunction"],[98,66,137,54],[98,68,137,55,"original"],[98,76,137,63],[98,77,137,64],[99,12,138,10],[99,16,138,14,"originalFunction"],[99,32,138,30],[99,34,138,32],[100,14,139,12,"wrapOptions"],[100,25,139,23],[100,26,139,24,"mechanism"],[100,35,139,33],[100,36,139,34,"data"],[100,40,139,38],[100,41,139,39,"handler"],[100,48,139,46],[100,51,139,49],[100,55,139,49,"getFunctionName"],[100,76,139,64],[100,78,139,65,"originalFunction"],[100,94,139,81],[100,95,139,82],[101,12,140,10],[103,12,142,10],[104,12,143,10],[104,19,143,17],[104,23,143,17,"wrap"],[104,36,143,21],[104,38,143,22,"original"],[104,46,143,30],[104,48,143,32,"wrapOptions"],[104,59,143,43],[104,60,143,44],[105,10,144,8],[105,11,144,9],[105,12,144,10],[106,8,145,6],[107,6,146,4],[107,7,146,5],[107,8,146,6],[108,6,148,4],[108,13,148,11,"originalSend"],[108,25,148,23],[108,26,148,24,"apply"],[108,31,148,29],[108,32,148,30],[108,36,148,34],[108,38,148,36,"args"],[108,42,148,40],[108,43,148,41],[109,4,149,2],[109,5,149,3],[110,2,150,0],[111,2,152,0],[111,11,152,9,"_wrapEventTarget"],[111,27,152,25,"_wrapEventTarget"],[111,28,152,26,"target"],[111,34,152,32],[111,36,152,34],[112,4,153,2],[112,10,153,8,"globalObject"],[112,22,153,20],[112,25,153,23,"WINDOW"],[112,40,153,29],[113,4,154,2],[113,10,154,8,"targetObj"],[113,19,154,17],[113,22,154,20,"globalObject"],[113,34,154,32],[113,35,154,33,"target"],[113,41,154,39],[113,42,154,40],[114,4,155,2],[114,10,155,8,"proto"],[114,15,155,13],[114,18,155,16,"targetObj"],[114,27,155,25],[114,31,155,29,"targetObj"],[114,40,155,38],[114,41,155,39,"prototype"],[114,50,155,48],[116,4,157,2],[117,4,158,2],[117,8,158,6],[117,9,158,7,"proto"],[117,14,158,12],[117,18,158,16],[117,19,158,17,"proto"],[117,24,158,22],[117,25,158,23,"hasOwnProperty"],[117,39,158,37],[117,43,158,41],[117,44,158,42,"proto"],[117,49,158,47],[117,50,158,48,"hasOwnProperty"],[117,64,158,62],[117,65,158,63],[117,83,158,81],[117,84,158,82],[117,86,158,84],[118,6,159,4],[119,4,160,2],[120,4,162,2],[120,8,162,2,"fill"],[120,18,162,6],[120,20,162,7,"proto"],[120,25,162,12],[120,27,162,14],[120,45,162,32],[120,47,162,34],[120,57,162,44,"original"],[120,65,162,52],[120,67,164,1],[121,6,165,4],[121,13,165,11],[121,23,165,22,"eventName"],[121,32,165,31],[121,34,165,33,"fn"],[121,36,165,35],[121,38,165,37,"options"],[121,45,165,44],[121,47,165,46],[122,8,166,6],[122,12,166,10],[123,10,167,8],[123,14,167,12,"isEventListenerObject"],[123,35,167,33],[123,36,167,34,"fn"],[123,38,167,36],[123,39,167,37],[123,41,167,39],[124,12,168,10],[125,12,169,10],[126,12,170,10],[127,12,171,10],[128,12,172,10],[129,12,173,10],[130,12,174,10,"fn"],[130,14,174,12],[130,15,174,13,"handleEvent"],[130,26,174,24],[130,29,174,27],[130,33,174,27,"wrap"],[130,46,174,31],[130,48,174,32,"fn"],[130,50,174,34],[130,51,174,35,"handleEvent"],[130,62,174,46],[130,64,174,48],[131,14,175,12,"mechanism"],[131,23,175,21],[131,25,175,23],[132,16,176,14,"data"],[132,20,176,18],[132,22,176,20],[133,18,177,16,"function"],[133,26,177,24],[133,28,177,26],[133,41,177,39],[134,18,178,16,"handler"],[134,25,178,23],[134,27,178,25],[134,31,178,25,"getFunctionName"],[134,52,178,40],[134,54,178,41,"fn"],[134,56,178,43],[134,57,178,44],[135,18,179,16,"target"],[136,16,180,14],[136,17,180,15],[137,16,181,14,"handled"],[137,23,181,21],[137,25,181,23],[137,30,181,28],[138,16,182,14,"type"],[138,20,182,18],[138,22,182,20],[139,14,183,12],[140,12,184,10],[140,13,184,11],[140,14,184,12],[141,10,185,8],[142,8,186,6],[142,9,186,7],[142,10,186,8],[142,17,186,15,"e2"],[142,19,186,17],[142,21,186,19],[143,10,187,8],[144,8,187,8],[145,8,190,6],[145,15,190,13,"original"],[145,23,190,21],[145,24,190,22,"apply"],[145,29,190,27],[145,30,190,28],[145,34,190,32],[145,36,190,34],[145,37,191,8,"eventName"],[145,46,191,17],[145,48,192,8],[145,52,192,8,"wrap"],[145,65,192,12],[145,67,192,13,"fn"],[145,69,192,15],[145,71,192,17],[146,10,193,10,"mechanism"],[146,19,193,19],[146,21,193,21],[147,12,194,12,"data"],[147,16,194,16],[147,18,194,18],[148,14,195,14,"function"],[148,22,195,22],[148,24,195,24],[148,42,195,42],[149,14,196,14,"handler"],[149,21,196,21],[149,23,196,23],[149,27,196,23,"getFunctionName"],[149,48,196,38],[149,50,196,39,"fn"],[149,52,196,41],[149,53,196,42],[150,14,197,14,"target"],[151,12,198,12],[151,13,198,13],[152,12,199,12,"handled"],[152,19,199,19],[152,21,199,21],[152,26,199,26],[153,12,200,12,"type"],[153,16,200,16],[153,18,200,18],[154,10,201,10],[155,8,202,8],[155,9,202,9],[155,10,202,10],[155,12,203,8,"options"],[155,19,203,15],[155,20,204,7],[155,21,204,8],[156,6,205,4],[156,7,205,5],[157,4,206,2],[157,5,206,3],[157,6,206,4],[158,4,208,2],[158,8,208,2,"fill"],[158,18,208,6],[158,20,208,7,"proto"],[158,25,208,12],[158,27,208,14],[158,48,208,35],[158,50,208,37],[158,60,208,47,"originalRemoveEventListener"],[158,87,208,74],[158,89,210,1],[159,6,211,4],[159,13,211,11],[159,23,211,22,"eventName"],[159,32,211,31],[159,34,211,33,"fn"],[159,36,211,35],[159,38,211,37,"options"],[159,45,211,44],[159,47,211,46],[160,8,212,6],[161,0,213,0],[162,0,214,0],[163,0,215,0],[164,0,216,0],[165,0,217,0],[166,0,218,0],[167,0,219,0],[168,0,220,0],[169,0,221,0],[170,0,222,0],[171,0,223,0],[172,0,224,0],[173,0,225,0],[174,0,226,0],[175,0,227,0],[176,0,228,0],[177,8,229,6],[177,12,229,10],[178,10,230,8],[178,16,230,14,"originalEventHandler"],[178,36,230,34],[178,39,230,38,"fn"],[178,41,230,40],[178,42,230,43,"__sentry_wrapped__"],[178,60,230,61],[179,10,231,8],[179,14,231,12,"originalEventHandler"],[179,34,231,32],[179,36,231,34],[180,12,232,10,"originalRemoveEventListener"],[180,39,232,37],[180,40,232,38,"call"],[180,44,232,42],[180,45,232,43],[180,49,232,47],[180,51,232,49,"eventName"],[180,60,232,58],[180,62,232,60,"originalEventHandler"],[180,82,232,80],[180,84,232,82,"options"],[180,91,232,89],[180,92,232,90],[181,10,233,8],[182,8,234,6],[182,9,234,7],[182,10,234,8],[182,17,234,15,"e"],[182,18,234,16],[182,20,234,18],[183,10,235,8],[184,8,235,8],[185,8,237,6],[185,15,237,13,"originalRemoveEventListener"],[185,42,237,40],[185,43,237,41,"call"],[185,47,237,45],[185,48,237,46],[185,52,237,50],[185,54,237,52,"eventName"],[185,63,237,61],[185,65,237,63,"fn"],[185,67,237,65],[185,69,237,67,"options"],[185,76,237,74],[185,77,237,75],[186,6,238,4],[186,7,238,5],[187,4,239,2],[187,5,239,3],[187,6,239,4],[188,2,240,0],[189,2,242,0],[189,11,242,9,"isEventListenerObject"],[189,32,242,30,"isEventListenerObject"],[189,33,242,31,"obj"],[189,36,242,34],[189,38,242,36],[190,4,243,2],[190,11,243,9],[190,18,243,17,"obj"],[190,21,243,20],[190,22,243,23,"handleEvent"],[190,33,243,34],[190,38,243,39],[190,48,243,49],[191,2,244,0],[192,0,244,1],[192,3]],"functionMap":{"names":["<global>","_browserApiErrorsIntegration","setupOnce","_wrapTimeFunction","<anonymous>","_wrapRAF","_wrapXHR","xmlHttpRequestProps.forEach$argument_0","fill$argument_2","_wrapEventTarget","isEventListenerObject"],"mappings":"AAA;sCCuC;ICc;KDsB;CDE;AGO;SCC;GDU;CHC;AKE;SDC;GCa;CLC;AME;SFC;gCGK;wBCE;SDoB;KHE;GEG;CNC;ASE;kCDU;WJG;KIwC;GCC;qCDE;WJG;KI2B;GCC;CTC;AUE;CVE"}},"type":"js/module"}]}